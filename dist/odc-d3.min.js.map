{"version":3,"sources":["node_modules/browser-pack/_prelude.js","odc-d3.js","bower_components/d3-legend/no-extend.js","bower_components/d3-legend/src/color.js","bower_components/d3-legend/src/legend.js","bower_components/d3-legend/src/size.js","bower_components/d3-legend/src/symbol.js","bower_components/simple-statistics/src/error_function.js","bower_components/simple-statistics/src/linear_regression.js","bower_components/simple-statistics/src/linear_regression_line.js","bower_components/simple-statistics/src/mean.js","bower_components/simple-statistics/src/sample_correlation.js","bower_components/simple-statistics/src/sample_covariance.js","bower_components/simple-statistics/src/sample_standard_deviation.js","bower_components/simple-statistics/src/sample_variance.js","bower_components/simple-statistics/src/standard_deviation.js","bower_components/simple-statistics/src/sum.js","bower_components/simple-statistics/src/sum_nth_power_deviations.js","bower_components/simple-statistics/src/variance.js","bower_components/simple-statistics/src/z_score.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/heatmap.js","src/index.js","src/legend.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ODCD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","color","size","symbol","./src/color","./src/size","./src/symbol","2","helper","legend","svg","type","d3_calcType","scale","ascending","cells","labels","labelFormat","labelDelimiter","legendG","selectAll","data","enter","append","attr","classPrefix","cell","cellEnter","style","shapes","shape","select","d3_addEvents","legendDispatcher","exit","transition","remove","d3_drawShapes","shapeHeight","shapeWidth","shapeRadius","path","d3_addText","text","shapeSize","map","d","getBBox","useClass","feature","cellTrans","textTrans","textAlign","labelAlign","orient","height","shapePadding","width","x","labelOffset","y","d3_placement","d3_title","title","d3","linear","format","dispatch","_","arguments","toLowerCase","rebind","./legend","3","d3_identity","d3_mergeLabels","gen","push","d3_linearLegend","domain","increment","d3_quantLegend","range","invert","invertExtent","d3_ordinalLegend","ticks","d3_reverse","arr","mirror","dispatcher","on","d3_cellOver","d3_cellOut","d3_cellClick","cellDispatcher","obj","cellover","cellout","cellclick","cellsSvg","titleText","yOffset","xOffset","4","bbox","stroke","maxH","max","maxW","sum","slice","5","6","errorFunction","Math","abs","tau","exp","pow","7","linearRegression","m","b","dataLength","point","sumX","sumY","sumXX","sumXY","8","linearRegressionLine","mb","9","mean","NaN","./sum","10","sampleCorrelation","cov","sampleCovariance","xstd","sampleStandardDeviation","ystd","./sample_covariance","./sample_standard_deviation","11","xmean","ymean","besselsCorrection","./mean","12","sampleVarianceX","sampleVariance","isNaN","sqrt","./sample_variance","13","sumSquaredDeviationsValue","sumNthPowerDeviations","./sum_nth_power_deviations","14","standardDeviation","v","variance","./variance","15","correctedCurrentValue","nextSum","errorCompensation","16","meanValue","17","18","zScore","19","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Chart","ChartConfig","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","custom","cssClassPrefix","svgClass","margin","left","right","top","bottom","showTooltip","Utils","deepExtend","base","config","utils","plot","_attached","_layers","_events","_isInitialized","_isAttached","baseContainer","setConfig","setData","init","postInit","initPlot","initSvg","initTooltip","draw","svgG","selectOrAppend","tooltip","attachmentData","attachmentName","update","chart","name","callback","context","events","_chart","once","off","apply","names","event","j","keys","splice","ev","args","Array","getBaseContainer","node","clazz","addDot","availableWidth","availableHeight","./utils","20","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","CorrelationMatrix","CorrelationMatrixConfig","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_statisticsUtils","_legend","_scatterplot","_ChartConfig","_this","guides","showLegend","highlightLabels","variables","variableKey","correlation","xValues","yValues","StatisticsUtils","sizeMin","sizeMax","padding","_Chart","placeholderSelector","conf","matrix","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","getBoundingClientRect","cellSize","min","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","rangeBands","corrConf","cellConf","radiusMax","radiusScale","radius","c","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","groups","includeInPlot","labelByVariable","forEach","index","extent","label","matrixCells","variableToValues","v1","row","v2","corr","rowVar","colVar","col","newData","updateCells","updateVariableLabels","updateLegend","labelClass","prefixClass","labelXClass","labelYClass","labelsX","labelsY","cellClass","cellShape","classed","scatterPlot","selector","wrongShapes","mouseoverCallbacks","mouseoutCallbacks","duration","html","pageX","pageY","highlightClass","xLabelClass","yLabelClass","trigger","legendX","legendY","barWidth","barHeight","Legend","linearGradientBar","containerSelector","_this3","scatterPlotConfig","ScatterPlot","attach","./chart","./scatterplot","./statistics-utils","21","D3Extensions","selection","insertSelector","before","appendSelector","selectOrInsert","22","Heatmap","HeatmapConfig","noDataText","decimalPlaces","formatter","Number","toFixed","rotateLabels","sortLabels","sortComparator","isNumber","localeCompare","overlap","z","notAvailableValue","noDataColor","matrixes","setupValues","titleRectWidth","groupByX","depth","allTitlesWidth","groupByY","_depth","_allTitlesWidth","computePlotSize","setupZScale","uniqueValues","values","children","level","lastIndex","valueMap","minZ","maxZ","xVal","yVal","zValRaw","zVal","parseFloat","indexOf","groupY","updateGroups","groupX","gaps","totalValuesCount","allValuesList","sortGroups","buildCells","group","val","axisVal","rootGroup","axisGroupsConfig","currentGroup","groupKey","groupKeyIndex","groupingValue","hasOwnProperty","axis","axisConfig","allValuesCount","allValuesBeforeCount","gapsBefore","gapsSize","computeGapsSize","gapsBeforeSize","sort","childrenList","childrenCount","childProp","child","gapsInside","gapsInsideSize","xGapsSize","computedCellWidth","cellWidth","yGapsSize","computedCellHeight","cellHeight","unshift","drawGroupsY","drawGroupsX","updateAxisTitles","offsetX","gapSize","computeGapSize","formatValueX","offsetY","_overlap","_gapSize","formatValueY","parentGroup","container","groupClass","groupYClass","valuesBeforeCount","groupsEnterG","titleGroupEnter","trnaslateVAl","groupWidth","titleGroups","tileRects","setGroupMouseCallbacks","each","groupXClass","titleRectHeight","groupHeight","parentNode","cellContainerClass","paddingX","paddingY","cellContainer","formatValueZ","formatLegendValue","gapLevel","gapsNumber","gapsLevel","23","RegressionConfig","Regression","ScatterPlotMatrixConfig","ScatterPlotMatrix","ScatterPlotConfig","_scatterplotMatrix","_correlationMatrix","_regression","_heatmap","_d3Extensions","extend","./correlation-matrix","./d3-extensions","./heatmap","./regression","./scatterplot-matrix","24","_noExtend","legendParent","legendClass","guid","gradientId","linearGradient","ticksNumber","../bower_components/d3-legend/no-extend","25","_ScatterPlotConfig","mainRegression","groupRegression","confidence","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","_ScatterPlot","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","dataByGroup","groupVal","points","extentX","linePoints","line","interpolate","dot","defaultColor","isFunction","computeConfidence","alpha","meanX","xMySum","xSum","xPowSum","ySum","yPowSum","p","Sa2","Sy2","errorFn","computeConfidenceAreaPoint","moe","confDown","confUp","y0","y1","centerX","confidenceAreaPoints","fitInPlot","confidenceArea","area","updateRegressionLines","regressionContainerClass","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionContainerClip","regressionClass","confidenceAreaClass","regressionSelector","26","brush","boundingClientRect","maxWidth","setupX","setupY","d3ColorCategory","colorCategory","colorValue","String","subplots","variable","tickSize","plotSubplot","frameClass","subplot","dots","axisClass","axisXClass","axisYClass","xAxisSelector","yAxisSelector","noGuidesClass","cross","drawBrush","filter","brushstart","brushCell","clear","brushmove","brushend","empty","legendLinear","27","drawAxisX","drawAxisY","axisConf","updateDots","dotClass","dotsContainer","dotsT","28","tdistr","$n","$p","integer","precision_string","_subt","_subu","$y","log","$x","$u","$u2","$a","$b","$c","$d","$e","log10","$round","$p1","_subtprob","$n1","$delta","PI","round_to_precision","$w","atan2","$z","cos","$i","sin","$max","precision","SIGNIFICANT","round","floor","ceil","29","_statisticsDistributions","su","standardError","../bower_components/simple-statistics/src/error_function","../bower_components/simple-statistics/src/linear_regression","../bower_components/simple-statistics/src/linear_regression_line","../bower_components/simple-statistics/src/mean","../bower_components/simple-statistics/src/sample_correlation","../bower_components/simple-statistics/src/sample_standard_deviation","../bower_components/simple-statistics/src/standard_deviation","../bower_components/simple-statistics/src/variance","../bower_components/simple-statistics/src/z_score","./statistics-distributions","30","_defineProperty","_typeof","Symbol","iterator","out","isArray","source","isObject","srcObj","output","assign","isObjectNotArray","mergeDeep","includeGroup","res","prop","item","operation","selectorParts","split","element","shift","selectorModifier","selectorItem","insertOrAppendSelector","x1","x2","y2","defs","stops","s4","random","toString","substring","sanitizeHeight","parseInt","sanitizeWidth"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ODCD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  color: require('./src/color'),\n  size: require('./src/size'),\n  symbol: require('./src/symbol')\n};\n\n},{\"./src/color\":2,\"./src/size\":4,\"./src/symbol\":5}],2:[function(require,module,exports){\n\"use strict\";\n\nvar helper = require('./legend');\n\nmodule.exports = function () {\n\n  var scale = d3.scale.linear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      labelFormat = d3.format(\".01f\"),\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = \"to\",\n      orient = \"vertical\",\n      ascending = false,\n      path,\n      legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n\n    var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\n        legendG = svg.selectAll('g').data([scale]);\n\n    legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\n\n    var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n\n    helper.d3_addText(legendG, cellEnter, type.labels, classPrefix);\n\n    // sets placement\n    var text = cell.select(\"text\"),\n        shapeSize = shapes[0].map(function (d) {\n      return d.getBBox();\n    });\n\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans,\n        textTrans,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(0, \" + i * (shapeSize[i].height + shapePadding) + \")\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n      };\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, legendG, title, classPrefix);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === 'string') {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return labelFormat;\n    labelFormat = _;\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  d3.rebind(legend, legendDispatcher, \"on\");\n\n  return legend;\n};\n\n},{\"./legend\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n\n  d3_identity: function d3_identity(d) {\n    return d;\n  },\n\n  d3_mergeLabels: function d3_mergeLabels(gen, labels) {\n\n    if (labels.length === 0) return gen;\n\n    gen = gen ? gen : [];\n\n    var i = labels.length;\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n    return labels;\n  },\n\n  d3_linearLegend: function d3_linearLegend(scale, cells, labelFormat) {\n    var data = [];\n\n    if (cells.length > 1) {\n      data = cells;\n    } else {\n      var domain = scale.domain(),\n          increment = (domain[domain.length - 1] - domain[0]) / (cells - 1),\n          i = 0;\n\n      for (; i < cells; i++) {\n        data.push(domain[0] + i * increment);\n      }\n    }\n\n    var labels = data.map(labelFormat);\n\n    return { data: data,\n      labels: labels,\n      feature: function feature(d) {\n        return scale(d);\n      } };\n  },\n\n  d3_quantLegend: function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n    var labels = scale.range().map(function (d) {\n      var invert = scale.invertExtent(d),\n          a = labelFormat(invert[0]),\n          b = labelFormat(invert[1]);\n\n      // if (( (a) && (a.isNan()) && b){\n      //   console.log(\"in initial statement\")\n      return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n      // } else if (a || b) {\n      //   console.log('in else statement')\n      //   return (a) ? a : b;\n      // }\n    });\n\n    return { data: scale.range(),\n      labels: labels,\n      feature: this.d3_identity\n    };\n  },\n\n  d3_ordinalLegend: function d3_ordinalLegend(scale) {\n    return { data: scale.domain(),\n      labels: scale.domain(),\n      feature: function feature(d) {\n        return scale(d);\n      } };\n  },\n\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius); //.attr(\"cx\", shapeRadius).attr(\"cy\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    svg.selectAll(\"g.\" + classPrefix + \"cell text\").data(labels).text(this.d3_identity);\n  },\n\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.ticks ? this.d3_linearLegend(scale, cells, labelFormat) : scale.invertExtent ? this.d3_quantLegend(scale, labelFormat, labelDelimiter) : this.d3_ordinalLegend(scale);\n\n    type.labels = this.d3_mergeLabels(type.labels, labels);\n\n    if (ascending) {\n      type.labels = this.d3_reverse(type.labels);\n      type.data = this.d3_reverse(type.data);\n    }\n\n    return type;\n  },\n\n  d3_reverse: function d3_reverse(arr) {\n    var mirror = [];\n    for (var i = 0, l = arr.length; i < l; i++) {\n      mirror[i] = arr[l - i - 1];\n    }\n    return mirror;\n  },\n\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    var _ = this;\n\n    cells.on(\"mouseover.legend\", function (d) {\n      _.d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      _.d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      _.d3_cellClick(dispatcher, d, this);\n    });\n  },\n\n  d3_cellOver: function d3_cellOver(cellDispatcher, d, obj) {\n    cellDispatcher.cellover.call(obj, d);\n  },\n\n  d3_cellOut: function d3_cellOut(cellDispatcher, d, obj) {\n    cellDispatcher.cellout.call(obj, d);\n  },\n\n  d3_cellClick: function d3_cellClick(cellDispatcher, d, obj) {\n    cellDispatcher.cellclick.call(obj, d);\n  },\n\n  d3_title: function d3_title(svg, cellsSvg, title, classPrefix) {\n    if (title !== \"\") {\n\n      var titleText = svg.selectAll('text.' + classPrefix + 'legendTitle');\n\n      titleText.data([title]).enter().append('text').attr('class', classPrefix + 'legendTitle');\n\n      svg.selectAll('text.' + classPrefix + 'legendTitle').text(title);\n\n      var yOffset = svg.select('.' + classPrefix + 'legendTitle').map(function (d) {\n        return d[0].getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.map(function (d) {\n        return d[0].getBBox().x;\n      })[0];\n\n      cellsSvg.attr('transform', 'translate(' + xOffset + ',' + (yOffset + 10) + ')');\n    }\n  }\n};\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar helper = require('./legend');\n\nmodule.exports = function () {\n\n  var scale = d3.scale.linear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      labels = [],\n      useStroke = false,\n      classPrefix = \"\",\n      title = \"\",\n      labelFormat = d3.format(\".01f\"),\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = \"to\",\n      orient = \"vertical\",\n      ascending = false,\n      path,\n      legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n\n    var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\n        legendG = svg.selectAll('g').data([scale]);\n\n    legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\n\n    var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    helper.d3_addText(legendG, cellEnter, type.labels, classPrefix);\n\n    //sets placement\n    var text = cell.select(\"text\"),\n        shapeSize = shapes[0].map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n\n      return bbox;\n    });\n\n    var maxH = d3.max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = d3.max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n\n    var cellTrans,\n        textTrans,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n\n      cellTrans = function cellTrans(d, i) {\n        var height = d3.sum(shapeSize.slice(0, i + 1), function (d) {\n          return d.height;\n        });\n        return \"translate(0, \" + (height + i * shapePadding) + \")\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (maxW + labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n      };\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        var width = d3.sum(shapeSize.slice(0, i + 1), function (d) {\n          return d.width;\n        });\n        return \"translate(\" + (width + i * shapePadding) + \",0)\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, legendG, title, classPrefix);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return labelFormat;\n    labelFormat = _;\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  d3.rebind(legend, legendDispatcher, \"on\");\n\n  return legend;\n};\n\n},{\"./legend\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nvar helper = require('./legend');\n\nmodule.exports = function () {\n\n  var scale = d3.scale.linear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      labelFormat = d3.format(\".01f\"),\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = \"to\",\n      orient = \"vertical\",\n      ascending = false,\n      legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n\n    var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\n        legendG = svg.selectAll('g').data([scale]);\n\n    legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\n\n    var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    //remove old shapes\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    helper.d3_addText(legendG, cellEnter, type.labels, classPrefix);\n\n    // sets placement\n    var text = cell.select(\"text\"),\n        shapeSize = shapes[0].map(function (d) {\n      return d.getBBox();\n    });\n\n    var maxH = d3.max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = d3.max(shapeSize, function (d) {\n      return d.width;\n    });\n\n    var cellTrans,\n        textTrans,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(0, \" + i * (maxH + shapePadding) + \")\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (maxW + labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n      };\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (maxW + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, legendG, title, classPrefix);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return labelFormat;\n    labelFormat = _;\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  d3.rebind(legend, legendDispatcher, \"on\");\n\n  return legend;\n};\n\n},{\"./legend\":3}],6:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\r\n *\r\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\r\n * normal distribution with standard deviation sd is within x of the mean.\r\n *\r\n * This function returns a numerical approximation to the exact value.\r\n *\r\n * @param {number} x input\r\n * @return {number} error estimation\r\n * @example\r\n * errorFunction(1); //= 0.8427\r\n */\n\nfunction errorFunction(x /*: number */) /*: number */{\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) - 1.26551223 + 1.00002368 * t + 0.37409196 * Math.pow(t, 2) + 0.09678418 * Math.pow(t, 3) - 0.18628806 * Math.pow(t, 4) + 0.27886807 * Math.pow(t, 5) - 1.13520398 * Math.pow(t, 6) + 1.48851587 * Math.pow(t, 7) - 0.82215223 * Math.pow(t, 8) + 0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\r\n * is a simple way to find a fitted line\r\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\r\n * using the least sum of squares.\r\n *\r\n * @param {Array<Array<number>>} data an array of two-element of arrays,\r\n * like `[[0, 1], [2, 3]]`\r\n * @returns {Object} object containing slope and intersect of regression line\r\n * @example\r\n * linearRegression([[0, 0], [1, 1]]); // { m: 1, b: 0 }\r\n */\n\nfunction linearRegression(data /*: Array<Array<number>> */) /*: { m: number, b: number } */{\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = (dataLength * sumXY - sumX * sumY) / (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - m * sumX / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\nmodule.exports = linearRegression;\n\n},{}],8:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Given the output of `linearRegression`: an object\r\n * with `m` and `b` values indicating slope and intercept,\r\n * respectively, generate a line function that translates\r\n * x values into y values.\r\n *\r\n * @param {Object} mb object with `m` and `b` members, representing\r\n * slope and intersect of desired line\r\n * @returns {Function} method that computes y-value at any given\r\n * x-value on the line.\r\n * @example\r\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\r\n * l(0) //= 0\r\n * l(2) //= 2\r\n */\n\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) /*: Function */{\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nmodule.exports = linearRegressionLine;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\nfunction mean(x /*: Array<number> */) /*:number*/{\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n\n},{\"./sum\":15}],10:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\nfunction sampleCorrelation(x /*: Array<number> */, y /*: Array<number> */) /*:number*/{\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n\n},{\"./sample_covariance\":11,\"./sample_standard_deviation\":12}],11:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/) /*:number*/{\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length <= 1 || x.length !== y.length) {\n        return NaN;\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n\n},{\"./mean\":9}],12:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\nfunction sampleStandardDeviation(x /*:Array<number>*/) /*:number*/{\n  // The standard deviation of no numbers is null\n  var sampleVarianceX = sampleVariance(x);\n  if (isNaN(sampleVarianceX)) {\n    return NaN;\n  }\n  return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n\n},{\"./sample_variance\":13}],13:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\nfunction sampleVariance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length <= 1) {\n        return NaN;\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n\n},{\"./sum_nth_power_deviations\":16}],14:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance. It's useful for measuring the amount\r\n * of variation or dispersion in a set of values.\r\n *\r\n * Standard deviation is only appropriate for full-population knowledge: for\r\n * samples of a population, {@link sampleStandardDeviation} is\r\n * more appropriate.\r\n *\r\n * @param {Array<number>} x input\r\n * @returns {number} standard deviation\r\n * @example\r\n * var scores = [2, 4, 4, 4, 5, 5, 7, 9];\r\n * variance(scores); //= 4\r\n * standardDeviation(scores); //= 2\r\n */\nfunction standardDeviation(x /*: Array<number> */) /*:number*/{\n  // The standard deviation of no numbers is null\n  var v = variance(x);\n  if (isNaN(v)) {\n    return 0;\n  }\n  return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n\n},{\"./variance\":17}],15:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\n\nfunction sum(x /*: Array<number> */) /*: number */{\n\n    // like the traditional sum algorithm, we keep a running\n    // count of the current sum.\n    var sum = 0;\n\n    // but we also keep three extra variables as bookkeeping:\n    // most importantly, an error correction value. This will be a very\n    // small number that is the opposite of the floating point precision loss.\n    var errorCompensation = 0;\n\n    // this will be each number in the list corrected with the compensation value.\n    var correctedCurrentValue;\n\n    // and this will be the next sum\n    var nextSum;\n\n    for (var i = 0; i < x.length; i++) {\n        // first correct the value that we're going to add to the sum\n        correctedCurrentValue = x[i] - errorCompensation;\n\n        // compute the next sum. sum is likely a much larger number\n        // than correctedCurrentValue, so we'll lose precision here,\n        // and measure how much precision is lost in the next step\n        nextSum = sum + correctedCurrentValue;\n\n        // we intentionally didn't assign sum immediately, but stored\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\n        // not equal to 0? ideally it would be, but in practice it won't:\n        // it will be some very small number. that's what we record\n        // as errorCompensation.\n        errorCompensation = nextSum - sum - correctedCurrentValue;\n\n        // now that we've computed how much we'll correct for in the next\n        // loop, start treating the nextSum as the current sum.\n        sum = nextSum;\n    }\n\n    return sum;\n}\n\nmodule.exports = sum;\n\n},{}],16:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\nfunction sumNthPowerDeviations(x /*: Array<number> */, n /*: number */) /*:number*/{\n    var meanValue = mean(x),\n        sum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        sum += Math.pow(x[i] - meanValue, n);\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n\n},{\"./mean\":9}],17:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\r\n * The [variance](http://en.wikipedia.org/wiki/Variance)\r\n * is the sum of squared deviations from the mean.\r\n *\r\n * This is an implementation of variance, not sample variance:\r\n * see the `sampleVariance` method if you want a sample measure.\r\n *\r\n * @param {Array<number>} x a population\r\n * @returns {number} variance: a value greater than or equal to zero.\r\n * zero indicates that all values are identical.\r\n * @example\r\n * ss.variance([1, 2, 3, 4, 5, 6]); //= 2.917\r\n */\nfunction variance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n\n},{\"./sum_nth_power_deviations\":16}],18:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\r\n *\r\n * The standard score is the number of standard deviations an observation\r\n * or datum is above or below the mean. Thus, a positive standard score\r\n * represents a datum above the mean, while a negative standard score\r\n * represents a datum below the mean. It is a dimensionless quantity\r\n * obtained by subtracting the population mean from an individual raw\r\n * score and then dividing the difference by the population standard\r\n * deviation.\r\n *\r\n * The z-score is only defined if one knows the population parameters;\r\n * if one only has a sample set, then the analogous computation with\r\n * sample mean and sample standard deviation yields the\r\n * Student's t-statistic.\r\n *\r\n * @param {number} x\r\n * @param {number} mean\r\n * @param {number} standardDeviation\r\n * @return {number} z score\r\n * @example\r\n * ss.zScore(78, 80, 5); //= -0.4\r\n */\n\nfunction zScore(x /*:number*/, mean /*:number*/, standardDeviation /*:number*/) /*:number*/{\n  return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chart = exports.ChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChartConfig = exports.ChartConfig = function ChartConfig(custom) {\n    _classCallCheck(this, ChartConfig);\n\n    this.cssClassPrefix = \"odc-\";\n    this.svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    this.showTooltip = false;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar Chart = exports.Chart = function () {\n    function Chart(base, data, config) {\n        _classCallCheck(this, Chart);\n\n        this.utils = _utils.Utils;\n        this.plot = {\n            margin: {}\n        };\n        this._attached = {};\n        this._layers = {};\n        this._events = {};\n        this._isInitialized = false;\n\n\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n\n        this.init();\n        this.postInit();\n    }\n\n    _createClass(Chart, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new ChartConfig();\n            } else {\n                this.config = config;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setData',\n        value: function setData(data) {\n            this.data = data;\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n\n            self.initPlot();\n            self.initSvg();\n\n            self.initTooltip();\n            self.draw();\n            this._isInitialized = true;\n            return this;\n        }\n    }, {\n        key: 'postInit',\n        value: function postInit() {}\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            var config = this.config;\n            void 0;\n\n            var margin = self.plot.margin;\n            var width = self.plot.width + margin.left + margin.right;\n            var height = self.plot.height + margin.top + margin.bottom;\n            var aspect = width / height;\n            if (!self._isAttached) {\n                if (!this._isInitialized) {\n                    d3.select(self.baseContainer).select(\"svg\").remove();\n                }\n                self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\n\n                self.svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height).attr(\"preserveAspectRatio\", \"xMidYMid meet\").attr(\"class\", config.svgClass);\n                self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n            } else {\n                void 0;\n                self.svg = self.baseContainer.svg;\n                self.svgG = self.svg.selectOrAppend(\"g.main-group.\" + config.svgClass);\n            }\n\n            self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            if (!config.width || config.height) {\n                d3.select(window).on(\"resize\", function () {\n                    //TODO add responsiveness if width/height not specified\n                });\n            }\n        }\n    }, {\n        key: 'initTooltip',\n        value: function initTooltip() {\n            var self = this;\n            if (self.config.showTooltip) {\n                if (!self._isAttached) {\n                    self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.' + self.config.cssClassPrefix + 'tooltip').style(\"opacity\", 0);\n                } else {\n                    self.plot.tooltip = self.baseContainer.plot.tooltip;\n                }\n            }\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var margin = this.config.margin;\n            this.plot = {\n                margin: {\n                    top: margin.top,\n                    bottom: margin.bottom,\n                    left: margin.left,\n                    right: margin.right\n                }\n            };\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            if (data) {\n                this.setData(data);\n            }\n            var layerName, attachmentData;\n            for (var attachmentName in this._attached) {\n\n                attachmentData = data;\n\n                this._attached[attachmentName].update(attachmentData);\n            }\n            void 0;\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw(data) {\n            this.update(data);\n\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n         * method will be invoked whenever the containing chart's `draw` method is\r\n         * invoked.\r\n         *\r\n         * @externalExample chart-attach\r\n         *\r\n         * @param {String} attachmentName Name of the attachment\r\n         * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n         *        unspecified, this method will return the attachment previously\r\n         *        registered with the specified `attachmentName` (if any).\r\n         *\r\n         * @returns {Chart} Reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'attach',\n        value: function attach(attachmentName, chart) {\n            if (arguments.length === 1) {\n                return this._attached[attachmentName];\n            }\n\n            this._attached[attachmentName] = chart;\n            return chart;\n        }\n    }, {\n        key: 'on',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Subscribe a callback function to an event triggered on the chart. See {@link\r\n            * Chart#once} to subscribe a callback function to an event for one occurence.\r\n         *\r\n         * @externalExample {runnable} chart-on\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function on(name, callback, context) {\n            var events = this._events[name] || (this._events[name] = []);\n            events.push({\n                callback: callback,\n                context: context || this,\n                _chart: this\n            });\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         *\r\n         * Subscribe a callback function to an event triggered on the chart. This\r\n         * function will be invoked at the next occurance of the event and immediately\r\n         * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n         * event indefinitely.\r\n         *\r\n         * @externalExample {runnable} chart-once\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable)\r\n         */\n\n    }, {\n        key: 'once',\n        value: function once(name, callback, context) {\n            var self = this;\n            var once = function once() {\n                self.off(name, once);\n                callback.apply(this, arguments);\n            };\n            return this.on(name, once, context);\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Unsubscribe one or more callback functions from an event triggered on the\r\n         * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n         * When only a `name` is specified, all handlers subscribed to that event will\r\n         * be unsubscribed. When a `name` and `callback` are specified, only that\r\n         * function will be unsubscribed from that event. When a `name` and `context`\r\n         * are specified (but `callback` is omitted), all events bound to the given\r\n         * event with the given context will be unsubscribed.\r\n         *\r\n         * @externalExample {runnable} chart-off\r\n         *\r\n         * @param {String} [name] Name of the event to be unsubscribed\r\n         * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n         * @param {Object} [context] Contexts to be unsubscribe\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'off',\n        value: function off(name, callback, context) {\n            var names, n, events, event, i, j;\n\n            // remove all events\n            if (arguments.length === 0) {\n                for (name in this._events) {\n                    this._events[name].length = 0;\n                }\n                return this;\n            }\n\n            // remove all events for a specific name\n            if (arguments.length === 1) {\n                events = this._events[name];\n                if (events) {\n                    events.length = 0;\n                }\n                return this;\n            }\n\n            // remove all events that match whatever combination of name, context\n            // and callback.\n            names = name ? [name] : Object.keys(this._events);\n            for (i = 0; i < names.length; i++) {\n                n = names[i];\n                events = this._events[n];\n                j = events.length;\n                while (j--) {\n                    event = events[j];\n                    if (callback && callback === event.callback || context && context === event.context) {\n                        events.splice(j, 1);\n                    }\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'trigger',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Publish an event on this chart with the given `name`.\r\n         *\r\n         * @externalExample {runnable} chart-trigger\r\n         *\r\n         * @param {String} name Name of the event to publish\r\n         * @param {...*} arguments Values with which to invoke the registered\r\n         *        callbacks.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function trigger(name) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var events = this._events[name];\n            var i, ev;\n\n            if (events !== undefined) {\n                for (i = 0; i < events.length; i++) {\n                    ev = events[i];\n                    ev.callback.apply(ev.context, args);\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'getBaseContainer',\n        value: function getBaseContainer() {\n            if (this._isAttached) {\n                return this.baseContainer.svg;\n            }\n            return d3.select(this.baseContainer);\n        }\n    }, {\n        key: 'getBaseContainerNode',\n        value: function getBaseContainerNode() {\n\n            return this.getBaseContainer().node();\n        }\n    }, {\n        key: 'prefixClass',\n        value: function prefixClass(clazz, addDot) {\n            return addDot ? '.' : '' + this.config.cssClassPrefix + clazz;\n        }\n    }, {\n        key: 'computePlotSize',\n        value: function computePlotSize() {\n            this.plot.width = _utils.Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n            this.plot.height = _utils.Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n        }\n    }]);\n\n    return Chart;\n}();\n\n},{\"./utils\":30}],20:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CorrelationMatrix = exports.CorrelationMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _statisticsUtils = require('./statistics-utils');\n\nvar _legend = require('./legend');\n\nvar _scatterplot = require('./scatterplot');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CorrelationMatrixConfig = exports.CorrelationMatrixConfig = function (_ChartConfig) {\n    _inherits(CorrelationMatrixConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function CorrelationMatrixConfig(custom) {\n        _classCallCheck(this, CorrelationMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrixConfig).call(this));\n\n        _this.svgClass = 'odc-correlation-matrix';\n        _this.guides = false;\n        _this.showTooltip = true;\n        _this.showLegend = true;\n        _this.highlightLabels = true;\n        _this.variables = {\n            labels: undefined,\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            }, // variable value accessor\n            scale: \"ordinal\"\n        };\n        _this.correlation = {\n            scale: \"linear\",\n            domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n            range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n            value: function value(xValues, yValues) {\n                return _statisticsUtils.StatisticsUtils.sampleCorrelation(xValues, yValues);\n            }\n\n        };\n        _this.cell = {\n            shape: \"ellipse\", //possible values: rect, circle, ellipse\n            size: undefined,\n            sizeMin: 15,\n            sizeMax: 250,\n            padding: 1\n        };\n        _this.margin = {\n            left: 60,\n            right: 50,\n            top: 30,\n            bottom: 60\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    } //show axis guides\n\n\n    return CorrelationMatrixConfig;\n}(_chart.ChartConfig);\n\nvar CorrelationMatrix = exports.CorrelationMatrix = function (_Chart) {\n    _inherits(CorrelationMatrix, _Chart);\n\n    function CorrelationMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, CorrelationMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrix).call(this, placeholderSelector, data, new CorrelationMatrixConfig(config)));\n    }\n\n    _createClass(CorrelationMatrix, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'setConfig', this).call(this, new CorrelationMatrixConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'initPlot', this).call(this);\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.correlation = {\n                matrix: undefined,\n                cells: undefined,\n                color: {},\n                shape: {}\n            };\n\n            this.setupVariables();\n            var width = conf.width;\n            var placeholderNode = this.getBaseContainerNode();\n            this.plot.placeholderNode = placeholderNode;\n\n            var parentWidth = placeholderNode.getBoundingClientRect().width;\n            if (width) {\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n                }\n            } else {\n                this.plot.cellSize = this.config.cell.size;\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n                }\n\n                width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n            }\n\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = this.plot.width;\n\n            this.setupVariablesScales();\n            this.setupCorrelationScales();\n            this.setupCorrelationMatrix();\n\n            return this;\n        }\n    }, {\n        key: 'setupVariablesScales',\n        value: function setupVariablesScales() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.variables;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = conf.value;\n            x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n        }\n    }, {\n        key: 'setupCorrelationScales',\n        value: function setupCorrelationScales() {\n            var plot = this.plot;\n            var corrConf = this.config.correlation;\n\n            plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\n            var shape = plot.correlation.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = cellConf.shape;\n\n            var shapeSize = plot.cellSize - cellConf.padding * 2;\n            if (shape.type == 'circle') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\n                shape.radius = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n            } else if (shape.type == 'ellipse') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\n                shape.radiusX = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n                shape.radiusY = radiusMax;\n\n                shape.rotateVal = function (v) {\n                    if (v == 0) return \"0\";\n                    if (v < 0) return \"-45\";\n                    return \"45\";\n                };\n            } else if (shape.type == 'rect') {\n                shape.size = shapeSize;\n            }\n        }\n    }, {\n        key: 'setupVariables',\n        value: function setupVariables() {\n\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n        }\n    }, {\n        key: 'setupCorrelationMatrix',\n        value: function setupCorrelationMatrix() {\n            var self = this;\n            var data = this.data;\n            var matrix = this.plot.correlation.matrix = [];\n            var matrixCells = this.plot.correlation.matrix.cells = [];\n            var plot = this.plot;\n\n            var variableToValues = {};\n            plot.variables.forEach(function (v, i) {\n\n                variableToValues[v] = data.map(function (d) {\n                    return plot.x.value(d, v);\n                });\n            });\n\n            plot.variables.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                plot.variables.forEach(function (v2, j) {\n                    var corr = 1;\n                    if (v1 != v2) {\n                        corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                    }\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: corr\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'update', this).call(this, newData);\n            // this.update\n            this.updateCells();\n            this.updateVariableLabels();\n\n            if (this.config.showLegend) {\n                this.updateLegend();\n            }\n        }\n    }, {\n        key: 'updateVariableLabels',\n        value: function updateVariableLabels() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = self.prefixClass(\"label\");\n            var labelXClass = labelClass + \"-x\";\n            var labelYClass = labelClass + \"-y\";\n            plot.labelClass = labelClass;\n\n            var labelsX = self.svgG.selectAll(\"text.\" + labelXClass).data(plot.variables, function (d, i) {\n                return i;\n            });\n\n            labelsX.enter().append(\"text\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i;\n            });\n\n            labelsX.attr(\"x\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"y\", plot.height).attr(\"dx\", -2).attr(\"dy\", 5).attr(\"transform\", function (d, i) {\n                return \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2) + \", \" + plot.height + \")\";\n            }).attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            labelsX.exit().remove();\n\n            //////\n\n            var labelsY = self.svgG.selectAll(\"text.\" + labelYClass).data(plot.variables);\n\n            labelsY.enter().append(\"text\");\n\n            labelsY.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"dx\", -2).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i;\n            })\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            labelsY.exit().remove();\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellClass = self.prefixClass(\"cell\");\n            var cellShape = plot.correlation.shape.type;\n\n            var cells = self.svgG.selectAll(\"g.\" + cellClass).data(plot.correlation.matrix.cells);\n\n            var cellEnterG = cells.enter().append(\"g\").classed(cellClass, true);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\";\n            });\n\n            cells.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n            var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n            var wrongShapes = cells.selectAll(selector);\n            wrongShapes.remove();\n\n            var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n            if (plot.correlation.shape.type == 'circle') {\n\n                shapes.attr(\"r\", plot.correlation.shape.radius).attr(\"cx\", 0).attr(\"cy\", 0);\n            }\n\n            if (plot.correlation.shape.type == 'ellipse') {\n                // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n                shapes.attr(\"rx\", plot.correlation.shape.radiusX).attr(\"ry\", plot.correlation.shape.radiusY).attr(\"cx\", 0).attr(\"cy\", 0).attr(\"transform\", function (c) {\n                    return \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\";\n                });\n            }\n\n            if (plot.correlation.shape.type == 'rect') {\n                shapes.attr(\"width\", plot.correlation.shape.size).attr(\"height\", plot.correlation.shape.size).attr(\"x\", -plot.cellSize / 2).attr(\"y\", -plot.cellSize / 2);\n            }\n            shapes.style(\"fill\", function (c) {\n                return plot.correlation.color.scale(c.value);\n            });\n\n            var mouseoverCallbacks = [];\n            var mouseoutCallbacks = [];\n\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value;\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (self.config.highlightLabels) {\n                var highlightClass = self.config.cssClassPrefix + \"highlight\";\n                var xLabelClass = function xLabelClass(c) {\n                    return plot.labelClass + \"-x-\" + c.col;\n                };\n                var yLabelClass = function yLabelClass(c) {\n                    return plot.labelClass + \"-y-\" + c.row;\n                };\n\n                mouseoverCallbacks.push(function (c) {\n\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n                });\n                mouseoutCallbacks.push(function (c) {\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n                });\n            }\n\n            cells.on(\"mouseover\", function (c) {\n                mouseoverCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            }).on(\"mouseout\", function (c) {\n                mouseoutCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            });\n\n            cells.on(\"click\", function (c) {\n                self.trigger(\"cell-selected\", c);\n            });\n\n            cells.exit().remove();\n        }\n    }, {\n        key: 'updateLegend',\n        value: function updateLegend() {\n\n            var plot = this.plot;\n            var legendX = this.plot.width + 10;\n            var legendY = 0;\n            var barWidth = 10;\n            var barHeight = this.plot.height - 2;\n            var scale = plot.correlation.color.scale;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        }\n    }, {\n        key: 'attachScatterPlot',\n        value: function attachScatterPlot(containerSelector, config) {\n            var _this3 = this;\n\n            var self = this;\n\n            config = config || {};\n\n            var scatterPlotConfig = {\n                height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                groups: {\n                    key: self.config.groups.key,\n                    label: self.config.groups.label\n                },\n                guides: true,\n                showLegend: false\n            };\n\n            self.scatterPlot = true;\n\n            scatterPlotConfig = _utils.Utils.deepExtend(scatterPlotConfig, config);\n            this.update();\n\n            this.on(\"cell-selected\", function (c) {\n\n                scatterPlotConfig.x = {\n                    key: c.rowVar,\n                    label: self.plot.labelByVariable[c.rowVar]\n                };\n                scatterPlotConfig.y = {\n                    key: c.colVar,\n                    label: self.plot.labelByVariable[c.colVar]\n                };\n                if (self.scatterPlot && self.scatterPlot !== true) {\n                    self.scatterPlot.setConfig(scatterPlotConfig).init();\n                } else {\n                    self.scatterPlot = new _scatterplot.ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                    _this3.attach(\"ScatterPlot\", self.scatterPlot);\n                }\n            });\n        }\n    }]);\n\n    return CorrelationMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":19,\"./legend\":24,\"./scatterplot\":27,\"./statistics-utils\":29,\"./utils\":30}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.D3Extensions = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar D3Extensions = exports.D3Extensions = function () {\n    function D3Extensions() {\n        _classCallCheck(this, D3Extensions);\n    }\n\n    _createClass(D3Extensions, null, [{\n        key: 'extend',\n        value: function extend() {\n\n            d3.selection.enter.prototype.insertSelector = d3.selection.prototype.insertSelector = function (selector, before) {\n                return _utils.Utils.insertSelector(this, selector, before);\n            };\n\n            d3.selection.enter.prototype.appendSelector = d3.selection.prototype.appendSelector = function (selector) {\n                return _utils.Utils.appendSelector(this, selector);\n            };\n\n            d3.selection.enter.prototype.selectOrAppend = d3.selection.prototype.selectOrAppend = function (selector) {\n                return _utils.Utils.selectOrAppend(this, selector);\n            };\n\n            d3.selection.enter.prototype.selectOrInsert = d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return _utils.Utils.selectOrInsert(this, selector, before);\n            };\n        }\n    }]);\n\n    return D3Extensions;\n}();\n\n},{\"./utils\":30}],22:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Heatmap = exports.HeatmapConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _legend = require('./legend');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HeatmapConfig = exports.HeatmapConfig = function (_ChartConfig) {\n    _inherits(HeatmapConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function HeatmapConfig(custom) {\n        _classCallCheck(this, HeatmapConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HeatmapConfig).call(this));\n\n        _this.svgClass = 'odc-heatmap';\n        _this.showTooltip = true;\n        _this.tooltip = {\n            noDataText: \"N/A\"\n        };\n        _this.showLegend = true;\n        _this.legend = {\n            width: 30,\n\n            decimalPlaces: undefined,\n            formatter: function formatter(v) {\n                return _this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(_this.legend.decimalPlaces);\n            }\n        };\n        _this.highlightLabels = true;\n        _this.x = { // X axis config\n            title: '', // axis title\n            key: 0,\n            value: function value(d) {\n                return d[_this.x.key];\n            }, // x value accessor\n            rotateLabels: true,\n            sortLabels: false,\n            sortComparator: function sortComparator(a, b) {\n                return _utils.Utils.isNumber(a) ? a - b : a.localeCompare(b);\n            },\n            groups: {\n                keys: [],\n                labels: [],\n                value: function value(d, key) {\n                    return d[key];\n                },\n                overlap: {\n                    top: 20,\n                    bottom: 20\n                }\n            },\n            formatter: undefined // value formatter function\n\n        };\n        _this.y = { // Y axis config\n            title: '', // axis title,\n            rotateLabels: true,\n            key: 1,\n            value: function value(d) {\n                return d[_this.y.key];\n            }, // y value accessor\n            sortLabels: false,\n            sortComparator: function sortComparator(a, b) {\n                return _utils.Utils.isNumber(b) ? b - a : b.localeCompare(a);\n            },\n            groups: {\n                keys: [],\n                labels: [],\n                value: function value(d, key) {\n                    return d[key];\n                },\n                overlap: {\n                    left: 20,\n                    right: 20\n                }\n            },\n            formatter: undefined // value formatter function\n        };\n        _this.z = {\n            key: 2,\n            value: function value(d) {\n                return d[_this.z.key];\n            },\n            notAvailableValue: function notAvailableValue(v) {\n                return v === null || v === undefined;\n            },\n\n            decimalPlaces: undefined,\n            formatter: function formatter(v) {\n                return _this.z.decimalPlaces === undefined ? v : Number(v).toFixed(_this.z.decimalPlaces);\n            } // value formatter function\n\n        };\n        _this.color = {\n            noDataColor: \"white\",\n            scale: \"linear\",\n            range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\n        };\n        _this.cell = {\n            width: undefined,\n            height: undefined,\n            sizeMin: 15,\n            sizeMax: 250,\n            padding: 0\n        };\n        _this.margin = {\n            left: 60,\n            right: 50,\n            top: 30,\n            bottom: 80\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return HeatmapConfig;\n}(_chart.ChartConfig);\n\n//TODO refactor\n\n\nvar Heatmap = exports.Heatmap = function (_Chart) {\n    _inherits(Heatmap, _Chart);\n\n    function Heatmap(placeholderSelector, data, config) {\n        _classCallCheck(this, Heatmap);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Heatmap).call(this, placeholderSelector, data, new HeatmapConfig(config)));\n    }\n\n    _createClass(Heatmap, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(Heatmap.prototype), 'setConfig', this).call(this, new HeatmapConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(Heatmap.prototype), 'initPlot', this).call(this);\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.y = {};\n            this.plot.z = {\n                matrixes: undefined,\n                cells: undefined,\n                color: {},\n                shape: {}\n            };\n\n            this.setupValues();\n\n            var titleRectWidth = 6;\n            this.plot.x.overlap = {\n                top: 0,\n                bottom: 0\n            };\n            if (this.plot.groupByX) {\n                var depth = self.config.x.groups.keys.length;\n                var allTitlesWidth = depth * titleRectWidth;\n\n                this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\n                this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\n                this.plot.margin.top = conf.margin.right + conf.x.groups.overlap.top;\n                this.plot.margin.bottom = conf.margin.bottom + conf.x.groups.overlap.bottom;\n            }\n\n            this.plot.y.overlap = {\n                left: 0,\n                right: 0\n            };\n\n            if (this.plot.groupByY) {\n                var _depth = self.config.y.groups.keys.length;\n                var _allTitlesWidth = _depth * titleRectWidth;\n                this.plot.y.overlap.right = self.config.y.groups.overlap.left + _allTitlesWidth;\n                this.plot.y.overlap.left = self.config.y.groups.overlap.left;\n                this.plot.margin.left = conf.margin.left + this.plot.y.overlap.left;\n                this.plot.margin.right = conf.margin.right + this.plot.y.overlap.right;\n            }\n            this.plot.showLegend = conf.showLegend;\n            if (this.plot.showLegend) {\n                this.plot.margin.right += conf.legend.width;\n            }\n            this.computePlotSize();\n            this.setupZScale();\n\n            return this;\n        }\n    }, {\n        key: 'setupValues',\n        value: function setupValues() {\n            var _this3 = this;\n\n            var self = this;\n            var config = self.config;\n            var x = self.plot.x;\n            var y = self.plot.y;\n            var z = self.plot.z;\n\n            x.value = function (d) {\n                return config.x.value.call(config, d);\n            };\n            y.value = function (d) {\n                return config.y.value.call(config, d);\n            };\n            z.value = function (d) {\n                return config.z.value.call(config, d);\n            };\n\n            x.uniqueValues = [];\n            y.uniqueValues = [];\n\n            self.plot.groupByY = !!config.y.groups.keys.length;\n            self.plot.groupByX = !!config.x.groups.keys.length;\n\n            y.groups = {\n                key: undefined,\n                label: '',\n                values: [],\n                children: null,\n                level: 0,\n                index: 0,\n                lastIndex: 0\n            };\n            x.groups = {\n                key: undefined,\n                label: '',\n                values: [],\n                children: null,\n                level: 0,\n                index: 0,\n                lastIndex: 0\n            };\n\n            var valueMap = {};\n            var minZ = undefined;\n            var maxZ = undefined;\n            this.data.forEach(function (d) {\n\n                var xVal = x.value(d);\n                var yVal = y.value(d);\n                var zValRaw = z.value(d);\n                var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\n\n                if (x.uniqueValues.indexOf(xVal) === -1) {\n                    x.uniqueValues.push(xVal);\n                }\n\n                if (y.uniqueValues.indexOf(yVal) === -1) {\n                    y.uniqueValues.push(yVal);\n                }\n\n                var groupY = y.groups;\n                if (self.plot.groupByY) {\n                    groupY = _this3.updateGroups(d, yVal, y.groups, config.y.groups);\n                }\n                var groupX = x.groups;\n                if (self.plot.groupByX) {\n\n                    groupX = _this3.updateGroups(d, xVal, x.groups, config.x.groups);\n                }\n\n                if (!valueMap[groupY.index]) {\n                    valueMap[groupY.index] = {};\n                }\n\n                if (!valueMap[groupY.index][groupX.index]) {\n                    valueMap[groupY.index][groupX.index] = {};\n                }\n                if (!valueMap[groupY.index][groupX.index][yVal]) {\n                    valueMap[groupY.index][groupX.index][yVal] = {};\n                }\n                valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\n\n                if (minZ === undefined || zVal < minZ) {\n                    minZ = zVal;\n                }\n                if (maxZ === undefined || zVal > maxZ) {\n                    maxZ = zVal;\n                }\n            });\n            self.plot.valueMap = valueMap;\n\n            if (!self.plot.groupByX) {\n                x.groups.values = x.uniqueValues;\n            }\n\n            if (!self.plot.groupByY) {\n                y.groups.values = y.uniqueValues;\n            }\n\n            x.gaps = [];\n            x.totalValuesCount = 0;\n            x.allValuesList = [];\n            this.sortGroups(x, x.groups, config.x);\n\n            y.gaps = [];\n            y.totalValuesCount = 0;\n            y.allValuesList = [];\n            this.sortGroups(y, y.groups, config.y);\n\n            z.min = minZ;\n            z.max = maxZ;\n\n            this.buildCells();\n        }\n    }, {\n        key: 'buildCells',\n        value: function buildCells() {\n            var self = this;\n            var config = self.config;\n            var x = self.plot.x;\n            var y = self.plot.y;\n            var z = self.plot.z;\n            var valueMap = self.plot.valueMap;\n\n            var matrixCells = self.plot.cells = [];\n            var matrix = self.plot.matrix = [];\n\n            y.allValuesList.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                x.allValuesList.forEach(function (v2, j) {\n                    var zVal = undefined;\n                    try {\n                        zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val];\n                    } catch (e) {\n                        // console.log(e);\n\n                    }\n\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: zVal\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'updateGroups',\n        value: function updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\n\n            var config = this.config;\n            var currentGroup = rootGroup;\n            axisGroupsConfig.keys.forEach(function (groupKey, groupKeyIndex) {\n                currentGroup.key = groupKey;\n\n                if (!currentGroup.children) {\n                    currentGroup.children = {};\n                }\n\n                var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\n\n                if (!currentGroup.children.hasOwnProperty(groupingValue)) {\n                    rootGroup.lastIndex++;\n                    currentGroup.children[groupingValue] = {\n                        values: [],\n                        children: null,\n                        groupingValue: groupingValue,\n                        level: currentGroup.level + 1,\n                        index: rootGroup.lastIndex,\n                        key: groupKey\n                    };\n                }\n\n                currentGroup = currentGroup.children[groupingValue];\n            });\n\n            if (currentGroup.values.indexOf(axisVal) === -1) {\n                currentGroup.values.push(axisVal);\n            }\n\n            return currentGroup;\n        }\n    }, {\n        key: 'sortGroups',\n        value: function sortGroups(axis, group, axisConfig, gaps) {\n            if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\n                group.label = axisConfig.groups.labels[group.level];\n            } else {\n                group.label = group.key;\n            }\n\n            if (!gaps) {\n                gaps = [0];\n            }\n            if (gaps.length <= group.level) {\n                gaps.push(0);\n            }\n\n            group.allValuesCount = group.allValuesCount || 0;\n            group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\n\n            group.gaps = gaps.slice();\n            group.gapsBefore = gaps.slice();\n\n            group.gapsSize = Heatmap.computeGapsSize(group.gaps);\n            group.gapsBeforeSize = group.gapsSize;\n            if (group.values) {\n                if (axisConfig.sortLabels) {\n                    group.values.sort(axisConfig.sortComparator);\n                }\n                group.values.forEach(function (v) {\n                    return axis.allValuesList.push({ val: v, group: group });\n                });\n                group.allValuesBeforeCount = axis.totalValuesCount;\n                axis.totalValuesCount += group.values.length;\n                group.allValuesCount += group.values.length;\n            }\n\n            group.childrenList = [];\n            if (group.children) {\n                var childrenCount = 0;\n\n                for (var childProp in group.children) {\n                    if (group.children.hasOwnProperty(childProp)) {\n                        var child = group.children[childProp];\n                        group.childrenList.push(child);\n                        childrenCount++;\n\n                        this.sortGroups(axis, child, axisConfig, gaps);\n                        group.allValuesCount += child.allValuesCount;\n                        gaps[group.level] += 1;\n                    }\n                }\n\n                if (gaps && childrenCount > 1) {\n                    gaps[group.level] -= 1;\n                }\n\n                group.gapsInside = [];\n                gaps.forEach(function (d, i) {\n                    group.gapsInside.push(d - (group.gapsBefore[i] || 0));\n                });\n                group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\n\n                if (axis.gaps.length < gaps.length) {\n                    axis.gaps = gaps;\n                }\n            }\n        }\n    }, {\n        key: 'computePlotSize',\n        value: function computePlotSize() {\n\n            var plot = this.plot;\n            var conf = this.config;\n            var margin = plot.margin;\n            var availableWidth = _utils.Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n            var availableHeight = _utils.Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n            var width = availableWidth;\n            var height = availableHeight;\n\n            var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\n\n            var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\n            if (this.config.width) {\n\n                if (!this.config.cell.width) {\n                    this.plot.cellWidth = computedCellWidth;\n                }\n            } else {\n                this.plot.cellWidth = this.config.cell.width;\n\n                if (!this.plot.cellWidth) {\n                    this.plot.cellWidth = computedCellWidth;\n                }\n            }\n            width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\n\n            var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\n            var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\n            if (this.config.height) {\n                if (!this.config.cell.height) {\n                    this.plot.cellHeight = computedCellHeight;\n                }\n            } else {\n                this.plot.cellHeight = this.config.cell.height;\n\n                if (!this.plot.cellHeight) {\n                    this.plot.cellHeight = computedCellHeight;\n                }\n            }\n\n            height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n        }\n    }, {\n        key: 'setupZScale',\n        value: function setupZScale() {\n\n            var self = this;\n            var config = self.config;\n            var z = self.plot.z;\n            var range = config.color.range;\n            var extent = z.max - z.min;\n            if (config.color.scale == \"log\") {\n                z.domain = [];\n                range.forEach(function (c, i) {\n                    var v = z.min + extent / Math.pow(10, i);\n                    z.domain.unshift(v);\n                });\n            } else {\n                z.domain = [];\n                range.forEach(function (c, i) {\n                    var v = z.min + extent * (i / (range.length - 1));\n                    z.domain.push(v);\n                });\n            }\n            z.domain[0] = z.min; //removing unnecessary floating points\n            z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\n            void 0;\n\n            var plot = this.plot;\n\n            void 0;\n            plot.z.color.scale = d3.scale[config.color.scale]().domain(z.domain).range(range);\n            var shape = plot.z.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = \"rect\";\n\n            plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\n            plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(Heatmap.prototype), 'update', this).call(this, newData);\n            if (this.plot.groupByY) {\n                this.drawGroupsY(this.plot.y.groups, this.svgG);\n            }\n            if (this.plot.groupByX) {\n                this.drawGroupsX(this.plot.x.groups, this.svgG);\n            }\n\n            this.updateCells();\n\n            this.updateVariableLabels();\n\n            if (this.config.showLegend) {\n                this.updateLegend();\n            }\n\n            this.updateAxisTitles();\n        }\n    }, {\n        key: 'updateAxisTitles',\n        value: function updateAxisTitles() {\n            var self = this;\n            var plot = self.plot;\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + (plot.height + plot.margin.bottom) + \")\").selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(self.config.x.title);\n\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y')).selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\").attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(self.config.y.title);\n        }\n    }, {\n        key: 'updateVariableLabels',\n        value: function updateVariableLabels() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = self.prefixClass(\"label\");\n            var labelXClass = labelClass + \"-x\";\n            var labelYClass = labelClass + \"-y\";\n            plot.labelClass = labelClass;\n\n            var offsetX = {\n                x: 0,\n                y: 0\n            };\n            var gapSize = Heatmap.computeGapSize(0);\n            if (plot.groupByX) {\n                var overlap = self.config.x.groups.overlap;\n\n                offsetX.x = gapSize / 2;\n                offsetX.y = overlap.bottom + gapSize / 2 + 6;\n            } else if (plot.groupByY) {\n                offsetX.y = gapSize;\n            }\n\n            var labelsX = self.svgG.selectAll(\"text.\" + labelXClass).data(plot.x.allValuesList, function (d, i) {\n                return i;\n            });\n\n            labelsX.enter().append(\"text\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i;\n            });\n\n            labelsX.attr(\"x\", function (d, i) {\n                return i * plot.cellWidth + plot.cellWidth / 2 + d.group.gapsSize + offsetX.x;\n            }).attr(\"y\", plot.height + offsetX.y).attr(\"dy\", 10).attr(\"text-anchor\", \"middle\").text(function (d) {\n                return self.formatValueX(d.val);\n            });\n\n            if (self.config.x.rotateLabels) {\n                labelsX.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + (i * plot.cellWidth + plot.cellWidth / 2 + d.group.gapsSize + offsetX.x) + \", \" + (plot.height + offsetX.y) + \")\";\n                }).attr(\"dx\", -2).attr(\"dy\", 8).attr(\"text-anchor\", \"end\");\n            }\n\n            labelsX.exit().remove();\n\n            var labelsY = self.svgG.selectAll(\"text.\" + labelYClass).data(plot.y.allValuesList);\n\n            labelsY.enter().append(\"text\");\n\n            var offsetY = {\n                x: 0,\n                y: 0\n            };\n            if (plot.groupByY) {\n                var _overlap = self.config.y.groups.overlap;\n                var _gapSize = Heatmap.computeGapSize(0);\n                offsetY.x = -_overlap.left;\n\n                offsetY.y = _gapSize / 2;\n            }\n            labelsY.attr(\"x\", offsetY.x).attr(\"y\", function (d, i) {\n                return i * plot.cellHeight + plot.cellHeight / 2 + d.group.gapsSize + offsetY.y;\n            }).attr(\"dx\", -2).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i;\n            }).text(function (d) {\n                return self.formatValueY(d.val);\n            });\n\n            if (self.config.y.rotateLabels) {\n                labelsY.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + offsetY.x + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\";\n                }).attr(\"text-anchor\", \"end\");\n                // .attr(\"dx\", -7);\n            } else {\n                labelsY.attr(\"dominant-baseline\", \"middle\");\n            }\n\n            labelsY.exit().remove();\n        }\n    }, {\n        key: 'drawGroupsY',\n        value: function drawGroupsY(parentGroup, container, availableWidth) {\n\n            var self = this;\n            var plot = self.plot;\n\n            var groupClass = self.prefixClass(\"group\");\n            var groupYClass = groupClass + \"-y\";\n            var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass).data(parentGroup.childrenList);\n\n            var valuesBeforeCount = 0;\n            var gapsBeforeSize = 0;\n\n            var groupsEnterG = groups.enter().append(\"g\");\n            groupsEnterG.classed(groupClass, true).classed(groupYClass, true).append(\"rect\").classed(\"group-rect\", true);\n\n            var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\n            titleGroupEnter.append(\"rect\");\n            titleGroupEnter.append(\"text\");\n\n            var gapSize = Heatmap.computeGapSize(parentGroup.level);\n            var padding = gapSize / 4;\n\n            var titleRectWidth = 6;\n            var depth = self.config.y.groups.keys.length - parentGroup.level;\n            var overlap = {\n                left: 0,\n                right: 0\n            };\n\n            if (!availableWidth) {\n                overlap.right = plot.y.overlap.left;\n                overlap.left = plot.y.overlap.left;\n                availableWidth = plot.width + gapSize + overlap.left + overlap.right;\n            }\n\n            groups.attr(\"transform\", function (d, i) {\n\n                var trnaslateVAl = \"translate(\" + (padding - overlap.left) + \",\" + (plot.cellHeight * valuesBeforeCount + i * gapSize + gapsBeforeSize + padding) + \")\";\n                gapsBeforeSize += d.gapsInsideSize || 0;\n                valuesBeforeCount += d.allValuesCount || 0;\n                return trnaslateVAl;\n            });\n\n            var groupWidth = availableWidth - padding * 2;\n\n            var titleGroups = groups.selectAll(\"g.title\").attr(\"transform\", function (d, i) {\n                return \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\";\n            });\n\n            var tileRects = titleGroups.selectAll(\"rect\").attr(\"width\", titleRectWidth).attr(\"height\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n            this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n            groups.selectAll(\"rect.group-rect\").attr(\"class\", function (d) {\n                return \"group-rect group-rect-\" + d.index;\n            }).attr(\"width\", groupWidth).attr(\"height\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", \"white\").attr(\"fill-opacity\", 0).attr(\"stroke-width\", 0.5).attr(\"stroke\", \"black\");\n\n            groups.each(function (group) {\n\n                self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\n            });\n        }\n    }, {\n        key: 'drawGroupsX',\n        value: function drawGroupsX(parentGroup, container, availableHeight) {\n\n            var self = this;\n            var plot = self.plot;\n\n            var groupClass = self.prefixClass(\"group\");\n            var groupXClass = groupClass + \"-x\";\n            var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass).data(parentGroup.childrenList);\n\n            var valuesBeforeCount = 0;\n            var gapsBeforeSize = 0;\n\n            var groupsEnterG = groups.enter().append(\"g\");\n            groupsEnterG.classed(groupClass, true).classed(groupXClass, true).append(\"rect\").classed(\"group-rect\", true);\n\n            var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\n            titleGroupEnter.append(\"rect\");\n            titleGroupEnter.append(\"text\");\n\n            var gapSize = Heatmap.computeGapSize(parentGroup.level);\n            var padding = gapSize / 4;\n            var titleRectHeight = 6;\n\n            var depth = self.config.x.groups.keys.length - parentGroup.level;\n\n            var overlap = {\n                top: 0,\n                bottom: 0\n            };\n\n            if (!availableHeight) {\n                overlap.bottom = plot.x.overlap.bottom;\n                overlap.top = plot.x.overlap.top;\n\n                availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\n            } else {\n                overlap.top = -titleRectHeight;\n            }\n            // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\n\n            groups.attr(\"transform\", function (d, i) {\n\n                var trnaslateVAl = \"translate(\" + (plot.cellWidth * valuesBeforeCount + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\n                gapsBeforeSize += d.gapsInsideSize || 0;\n                valuesBeforeCount += d.allValuesCount || 0;\n                return trnaslateVAl;\n            });\n\n            var groupHeight = availableHeight - padding * 2;\n\n            var titleGroups = groups.selectAll(\"g.title\").attr(\"transform\", function (d, i) {\n                return \"translate(0, \" + 0 + \")\";\n            });\n\n            var tileRects = titleGroups.selectAll(\"rect\").attr(\"height\", titleRectHeight).attr(\"width\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n            this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n            groups.selectAll(\"rect.group-rect\").attr(\"class\", function (d) {\n                return \"group-rect group-rect-\" + d.index;\n            }).attr(\"height\", groupHeight).attr(\"width\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", \"white\").attr(\"fill-opacity\", 0).attr(\"stroke-width\", 0.5).attr(\"stroke\", \"black\");\n\n            groups.each(function (group) {\n                self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\n            });\n        }\n    }, {\n        key: 'setGroupMouseCallbacks',\n        value: function setGroupMouseCallbacks(parentGroup, tileRects) {\n            var plot = this.plot;\n            var self = this;\n            var mouseoverCallbacks = [];\n            mouseoverCallbacks.push(function (d) {\n                d3.select(this).classed('highlighted', true);\n                d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\n            });\n\n            var mouseoutCallbacks = [];\n            mouseoutCallbacks.push(function (d) {\n                d3.select(this).classed('highlighted', false);\n                d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\n            });\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = parentGroup.label + \": \" + d.groupingValue;\n\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n            tileRects.on(\"mouseover\", function (d) {\n                var self = this;\n                mouseoverCallbacks.forEach(function (callback) {\n                    callback.call(self, d);\n                });\n            });\n            tileRects.on(\"mouseout\", function (d) {\n                var self = this;\n                mouseoutCallbacks.forEach(function (callback) {\n                    callback.call(self, d);\n                });\n            });\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellContainerClass = self.prefixClass(\"cells\");\n            var gapSize = Heatmap.computeGapSize(0);\n            var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\n            var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\n            var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\n            cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\n\n            var cellClass = self.prefixClass(\"cell\");\n            var cellShape = plot.z.shape.type;\n\n            var cells = cellContainer.selectAll(\"g.\" + cellClass).data(self.plot.cells);\n\n            var cellEnterG = cells.enter().append(\"g\").classed(cellClass, true);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellWidth * c.col + plot.cellWidth / 2 + c.colVar.group.gapsSize) + \",\" + (plot.cellHeight * c.row + plot.cellHeight / 2 + c.rowVar.group.gapsSize) + \")\";\n            });\n\n            var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n            shapes.attr(\"width\", plot.z.shape.width).attr(\"height\", plot.z.shape.height).attr(\"x\", -plot.cellWidth / 2).attr(\"y\", -plot.cellHeight / 2);\n\n            shapes.style(\"fill\", function (c) {\n                return c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value);\n            });\n            shapes.attr(\"fill-opacity\", function (d) {\n                return d.value === undefined ? 0 : 1;\n            });\n\n            var mouseoverCallbacks = [];\n            var mouseoutCallbacks = [];\n\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\n\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (self.config.highlightLabels) {\n                var highlightClass = self.config.cssClassPrefix + \"highlight\";\n                var xLabelClass = function xLabelClass(c) {\n                    return plot.labelClass + \"-x-\" + c.col;\n                };\n                var yLabelClass = function yLabelClass(c) {\n                    return plot.labelClass + \"-y-\" + c.row;\n                };\n\n                mouseoverCallbacks.push(function (c) {\n\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n                });\n                mouseoutCallbacks.push(function (c) {\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n                });\n            }\n\n            cells.on(\"mouseover\", function (c) {\n                mouseoverCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            }).on(\"mouseout\", function (c) {\n                mouseoutCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            });\n\n            cells.on(\"click\", function (c) {\n                self.trigger(\"cell-selected\", c);\n            });\n\n            cells.exit().remove();\n        }\n    }, {\n        key: 'formatValueX',\n        value: function formatValueX(value) {\n            if (!this.config.x.formatter) return value;\n\n            return this.config.x.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'formatValueY',\n        value: function formatValueY(value) {\n            if (!this.config.y.formatter) return value;\n\n            return this.config.y.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'formatValueZ',\n        value: function formatValueZ(value) {\n            if (!this.config.z.formatter) return value;\n\n            return this.config.z.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'formatLegendValue',\n        value: function formatLegendValue(value) {\n            if (!this.config.legend.formatter) return value;\n\n            return this.config.legend.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'updateLegend',\n        value: function updateLegend() {\n            var self = this;\n            var plot = this.plot;\n            var legendX = this.plot.width + 10;\n            var gapSize = Heatmap.computeGapSize(0);\n            if (this.plot.groupByY) {\n                legendX += gapSize / 2 + plot.y.overlap.right;\n            } else if (this.plot.groupByX) {\n                legendX += gapSize;\n            }\n            var legendY = 0;\n            if (this.plot.groupByX || this.plot.groupByY) {\n                legendY += gapSize / 2;\n            }\n\n            var barWidth = 10;\n            var barHeight = this.plot.height - 2;\n            var scale = plot.z.color.scale;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY, function (v) {\n                return self.formatLegendValue(v);\n            }).linearGradientBar(barWidth, barHeight);\n        }\n    }], [{\n        key: 'computeGapSize',\n        value: function computeGapSize(gapLevel) {\n            return 24 / (gapLevel + 1);\n        }\n    }, {\n        key: 'computeGapsSize',\n        value: function computeGapsSize(gaps) {\n            var gapsSize = 0;\n            gaps.forEach(function (gapsNumber, gapsLevel) {\n                return gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel);\n            });\n            return gapsSize;\n        }\n    }]);\n\n    return Heatmap;\n}(_chart.Chart);\n\n},{\"./chart\":19,\"./legend\":24,\"./utils\":30}],23:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Legend = exports.StatisticsUtils = exports.HeatmapConfig = exports.Heatmap = exports.RegressionConfig = exports.Regression = exports.CorrelationMatrixConfig = exports.CorrelationMatrix = exports.ScatterPlotMatrixConfig = exports.ScatterPlotMatrix = exports.ScatterPlotConfig = exports.ScatterPlot = undefined;\n\nvar _scatterplot = require(\"./scatterplot\");\n\nObject.defineProperty(exports, \"ScatterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlot;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlotConfig;\n  }\n});\n\nvar _scatterplotMatrix = require(\"./scatterplot-matrix\");\n\nObject.defineProperty(exports, \"ScatterPlotMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrix;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrixConfig;\n  }\n});\n\nvar _correlationMatrix = require(\"./correlation-matrix\");\n\nObject.defineProperty(exports, \"CorrelationMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrix;\n  }\n});\nObject.defineProperty(exports, \"CorrelationMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrixConfig;\n  }\n});\n\nvar _regression = require(\"./regression\");\n\nObject.defineProperty(exports, \"Regression\", {\n  enumerable: true,\n  get: function get() {\n    return _regression.Regression;\n  }\n});\nObject.defineProperty(exports, \"RegressionConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _regression.RegressionConfig;\n  }\n});\n\nvar _heatmap = require(\"./heatmap\");\n\nObject.defineProperty(exports, \"Heatmap\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmap.Heatmap;\n  }\n});\nObject.defineProperty(exports, \"HeatmapConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmap.HeatmapConfig;\n  }\n});\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nObject.defineProperty(exports, \"StatisticsUtils\", {\n  enumerable: true,\n  get: function get() {\n    return _statisticsUtils.StatisticsUtils;\n  }\n});\n\nvar _legend = require(\"./legend\");\n\nObject.defineProperty(exports, \"Legend\", {\n  enumerable: true,\n  get: function get() {\n    return _legend.Legend;\n  }\n});\n\nvar _d3Extensions = require(\"./d3-extensions\");\n\n_d3Extensions.D3Extensions.extend();\n\n},{\"./correlation-matrix\":20,\"./d3-extensions\":21,\"./heatmap\":22,\"./legend\":24,\"./regression\":25,\"./scatterplot\":27,\"./scatterplot-matrix\":26,\"./statistics-utils\":29}],24:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Legend = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require(\"./utils\");\n\nvar _noExtend = require(\"../bower_components/d3-legend/no-extend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*var d3 = require('../bower_components/d3');\r\n*/\n// var legend = require('../bower_components/d3-legend/no-extend');\n//\n// module.exports.legend = legend;\n\nvar Legend = exports.Legend = function () {\n    function Legend(svg, legendParent, scale, legendX, legendY, labelFormat) {\n        _classCallCheck(this, Legend);\n\n        this.cssClassPrefix = \"odc-\";\n        this.legendClass = this.cssClassPrefix + \"legend\";\n        this.color = _noExtend.color;\n        this.size = _noExtend.size;\n        this.symbol = _noExtend.symbol;\n        this.labelFormat = undefined;\n\n        this.scale = scale;\n        this.svg = svg;\n        this.guid = _utils.Utils.guid();\n        this.container = _utils.Utils.selectOrAppend(legendParent, \"g.\" + this.legendClass, \"g\").attr(\"transform\", \"translate(\" + legendX + \",\" + legendY + \")\").classed(this.legendClass, true);\n\n        this.labelFormat = labelFormat;\n    }\n\n    _createClass(Legend, [{\n        key: \"linearGradientBar\",\n        value: function linearGradientBar(barWidth, barHeight, title) {\n            var gradientId = this.cssClassPrefix + \"linear-gradient\" + \"-\" + this.guid;\n            var scale = this.scale;\n            var self = this;\n\n            this.linearGradient = _utils.Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n            this.container.append(\"rect\").attr(\"width\", barWidth).attr(\"height\", barHeight).attr(\"x\", 0).attr(\"y\", 0).style(\"fill\", \"url(#\" + gradientId + \")\");\n\n            var ticks = this.container.selectAll(\"text\").data(scale.domain());\n            var ticksNumber = scale.domain().length - 1;\n            ticks.enter().append(\"text\").attr(\"x\", barWidth).attr(\"y\", function (d, i) {\n                return barHeight - i * barHeight / ticksNumber;\n            }).attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\").text(function (d) {\n                return self.labelFormat ? self.labelFormat(d) : d;\n            });\n\n            ticks.exit().remove();\n\n            return this;\n        }\n    }]);\n\n    return Legend;\n}();\n\n},{\"../bower_components/d3-legend/no-extend\":1,\"./utils\":30}],25:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Regression = exports.RegressionConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RegressionConfig = exports.RegressionConfig = function (_ScatterPlotConfig) {\n    _inherits(RegressionConfig, _ScatterPlotConfig);\n\n    function RegressionConfig(custom) {\n        _classCallCheck(this, RegressionConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RegressionConfig).call(this));\n\n        _this.mainRegression = true;\n        _this.groupRegression = true;\n        _this.confidence = {\n            level: 0.95,\n            criticalValue: function criticalValue(degreesOfFreedom, criticalProbability) {\n                return _statisticsUtils.StatisticsUtils.tValue(degreesOfFreedom, criticalProbability);\n            },\n            marginOfError: undefined //custom  margin Of Error function (x, points)\n        };\n\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    }\n\n    return RegressionConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar Regression = exports.Regression = function (_ScatterPlot) {\n    _inherits(Regression, _ScatterPlot);\n\n    function Regression(placeholderSelector, data, config) {\n        _classCallCheck(this, Regression);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Regression).call(this, placeholderSelector, data, new RegressionConfig(config)));\n    }\n\n    _createClass(Regression, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(Regression.prototype), \"setConfig\", this).call(this, new RegressionConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(Regression.prototype), \"initPlot\", this).call(this);\n            this.initRegressionLines();\n        }\n    }, {\n        key: \"initRegressionLines\",\n        value: function initRegressionLines() {\n\n            var self = this;\n            var groupsAvailable = self.config.groups && self.config.groups.value;\n\n            self.plot.regressions = [];\n\n            if (groupsAvailable && self.config.mainRegression) {\n                var regression = this.initRegression(this.data, false);\n                self.plot.regressions.push(regression);\n            }\n\n            if (self.config.groupRegression) {\n                this.initGroupRegression();\n            }\n        }\n    }, {\n        key: \"initGroupRegression\",\n        value: function initGroupRegression() {\n            var self = this;\n            var dataByGroup = {};\n            self.data.forEach(function (d) {\n                var groupVal = self.config.groups.value(d, self.config.groups.key);\n\n                if (!groupVal && groupVal !== 0) {\n                    return;\n                }\n\n                if (!dataByGroup[groupVal]) {\n                    dataByGroup[groupVal] = [];\n                }\n                dataByGroup[groupVal].push(d);\n            });\n\n            for (var key in dataByGroup) {\n                if (!dataByGroup.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                var regression = this.initRegression(dataByGroup[key], key);\n                self.plot.regressions.push(regression);\n            }\n        }\n    }, {\n        key: \"initRegression\",\n        value: function initRegression(values, groupVal) {\n            var self = this;\n\n            var points = values.map(function (d) {\n                return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n            });\n\n            // points.sort((a,b) => a[0]-b[0]);\n\n            var linearRegression = _statisticsUtils.StatisticsUtils.linearRegression(points);\n            var linearRegressionLine = _statisticsUtils.StatisticsUtils.linearRegressionLine(linearRegression);\n\n            var extentX = d3.extent(points, function (d) {\n                return d[0];\n            });\n\n            var linePoints = [{\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            }, {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }];\n\n            var line = d3.svg.line().interpolate(\"basis\").x(function (d) {\n                return self.plot.x.scale(d.x);\n            }).y(function (d) {\n                return self.plot.y.scale(d.y);\n            });\n\n            var color = self.plot.dot.color;\n\n            var defaultColor = \"black\";\n            if (_utils.Utils.isFunction(color)) {\n                if (values.length && groupVal !== false) {\n                    color = color(values[0]);\n                } else {\n                    color = defaultColor;\n                }\n            } else if (!color && groupVal === false) {\n                color = defaultColor;\n            }\n\n            var confidence = this.computeConfidence(points, extentX, linearRegression, linearRegressionLine);\n            return {\n                group: groupVal || false,\n                line: line,\n                linePoints: linePoints,\n                color: color,\n                confidence: confidence\n            };\n        }\n    }, {\n        key: \"computeConfidence\",\n        value: function computeConfidence(points, extentX, linearRegression, linearRegressionLine) {\n            var self = this;\n            var slope = linearRegression.m;\n            var n = points.length;\n            var degreesOfFreedom = Math.max(0, n - 2);\n\n            var alpha = 1 - self.config.confidence.level;\n            var criticalProbability = 1 - alpha / 2;\n            var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom, criticalProbability);\n\n            var xValues = points.map(function (d) {\n                return d[0];\n            });\n            var meanX = _statisticsUtils.StatisticsUtils.mean(xValues);\n            var xMySum = 0;\n            var xSum = 0;\n            var xPowSum = 0;\n            var ySum = 0;\n            var yPowSum = 0;\n            points.forEach(function (p) {\n                var x = p[0];\n                var y = p[1];\n\n                xMySum += x * y;\n                xSum += x;\n                ySum += y;\n                xPowSum += x * x;\n                yPowSum += y * y;\n            });\n            var a = linearRegression.m;\n            var b = linearRegression.b;\n\n            var Sa2 = n / (n + 2) * ((yPowSum - a * xMySum - b * ySum) / (n * xPowSum - xSum * xSum)); //Wariancja współczynnika kierunkowego regresji liniowej a\n            var Sy2 = (yPowSum - a * xMySum - b * ySum) / (n * (n - 2)); //Sa2 //Mean y value variance\n\n            var errorFn = function errorFn(x) {\n                return Math.sqrt(Sy2 + Math.pow(x - meanX, 2) * Sa2);\n            }; //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n            var marginOfError = function marginOfError(x) {\n                return criticalValue * errorFn(x);\n            };\n\n            // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n            // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n            // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n            var computeConfidenceAreaPoint = function computeConfidenceAreaPoint(x) {\n                var linearRegression = linearRegressionLine(x);\n                var moe = marginOfError(x);\n                var confDown = linearRegression - moe;\n                var confUp = linearRegression + moe;\n                return {\n                    x: x,\n                    y0: confDown,\n                    y1: confUp\n                };\n            };\n\n            var centerX = (extentX[1] + extentX[0]) / 2;\n\n            // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n            var confidenceAreaPoints = [extentX[0], centerX, extentX[1]].map(computeConfidenceAreaPoint);\n\n            var fitInPlot = function fitInPlot(y) {\n                return y;\n            };\n\n            var confidenceArea = d3.svg.area().interpolate(\"monotone\").x(function (d) {\n                return self.plot.x.scale(d.x);\n            }).y0(function (d) {\n                return fitInPlot(self.plot.y.scale(d.y0));\n            }).y1(function (d) {\n                return fitInPlot(self.plot.y.scale(d.y1));\n            });\n\n            return {\n                area: confidenceArea,\n                points: confidenceAreaPoints\n            };\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(Regression.prototype), \"update\", this).call(this, newData);\n            this.updateRegressionLines();\n        }\n    }, {\n        key: \"updateRegressionLines\",\n        value: function updateRegressionLines() {\n            var self = this;\n            var regressionContainerClass = this.prefixClass(\"regression-container\");\n            var regressionContainerSelector = \"g.\" + regressionContainerClass;\n\n            var clipPathId = self.prefixClass(\"clip\");\n\n            var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\" + self.dotsContainerClass);\n            var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n            regressionContainerClip.selectOrAppend('rect').attr('width', self.plot.width).attr('height', self.plot.height).attr('x', 0).attr('y', 0);\n\n            regressionContainer.attr(\"clip-path\", function (d, i) {\n                return \"url(#\" + clipPathId + \")\";\n            });\n\n            var regressionClass = this.prefixClass(\"regression\");\n            var confidenceAreaClass = self.prefixClass(\"confidence\");\n            var regressionSelector = \"g.\" + regressionClass;\n            var regression = regressionContainer.selectAll(regressionSelector).data(self.plot.regressions);\n\n            var line = regression.enter().insertSelector(regressionSelector).append(\"path\").attr(\"class\", self.prefixClass(\"line\")).attr(\"shape-rendering\", \"optimizeQuality\");\n            // .append(\"line\")\n            // .attr(\"class\", \"line\")\n            // .attr(\"shape-rendering\", \"optimizeQuality\");\n\n            line\n            // .attr(\"x1\", r=> self.plot.x.scale(r.linePoints[0].x))\n            // .attr(\"y1\", r=> self.plot.y.scale(r.linePoints[0].y))\n            // .attr(\"x2\", r=> self.plot.x.scale(r.linePoints[1].x))\n            // .attr(\"y2\", r=> self.plot.y.scale(r.linePoints[1].y))\n            .attr(\"d\", function (r) {\n                return r.line(r.linePoints);\n            }).style(\"stroke\", function (r) {\n                return r.color;\n            });\n\n            var area = regression.enter().appendSelector(regressionSelector).append(\"path\").attr(\"class\", confidenceAreaClass).attr(\"shape-rendering\", \"optimizeQuality\");\n\n            area.attr(\"d\", function (r) {\n                return r.confidence.area(r.confidence.points);\n            }).style(\"fill\", function (r) {\n                return r.color;\n            }).style(\"opacity\", \"0.4\");\n        }\n    }]);\n\n    return Regression;\n}(_scatterplot.ScatterPlot);\n\n},{\"./chart\":19,\"./scatterplot\":27,\"./statistics-utils\":29,\"./utils\":30}],26:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlotMatrix = exports.ScatterPlotMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nvar _legend = require(\"./legend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotMatrixConfig = exports.ScatterPlotMatrixConfig = function (_ScatterPlotConfig) {\n    _inherits(ScatterPlotMatrixConfig, _ScatterPlotConfig);\n\n    //ticks number, (default: computed using cell size)\n    //show axis guides\n    //scatter plot cell padding\n\n    function ScatterPlotMatrixConfig(custom) {\n        _classCallCheck(this, ScatterPlotMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrixConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'scatterplot-matrix';\n        _this.size = 200;\n        _this.padding = 20;\n        _this.brush = true;\n        _this.guides = true;\n        _this.showTooltip = true;\n        _this.ticks = undefined;\n        _this.x = { // X axis config\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: undefined, //object property name or array index with grouping variable\n            includeInPlot: false, //include group as variable in plot, boolean (default: false)\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.variables = {\n            labels: [], //optional array of variable labels (for the diagonal of the plot).\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            } // variable value accessor\n        };\n\n        _utils.Utils.deepExtend(_this, custom);\n        return _this;\n    } //show tooltip on dot hover\n    //scatter plot cell size\n\n\n    return ScatterPlotMatrixConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar ScatterPlotMatrix = exports.ScatterPlotMatrix = function (_Chart) {\n    _inherits(ScatterPlotMatrix, _Chart);\n\n    function ScatterPlotMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlotMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrix).call(this, placeholderSelector, data, new ScatterPlotMatrixConfig(config)));\n    }\n\n    _createClass(ScatterPlotMatrix, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"setConfig\", this).call(this, new ScatterPlotMatrixConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"initPlot\", this).call(this);\n\n            var self = this;\n            var margin = this.plot.margin;\n            var conf = this.config;\n            this.plot.x = {};\n            this.plot.y = {};\n            this.plot.dot = {\n                color: null //color scale mapping function\n            };\n\n            this.plot.showLegend = conf.showLegend;\n            if (this.plot.showLegend) {\n                margin.right = conf.margin.right + conf.legend.width + conf.legend.margin * 2;\n            }\n\n            this.setupVariables();\n\n            this.plot.size = conf.size;\n\n            var width = conf.width;\n            var boundingClientRect = this.getBaseContainerNode().getBoundingClientRect();\n            if (!width) {\n                var maxWidth = margin.left + margin.right + this.plot.variables.length * this.plot.size;\n                width = Math.min(boundingClientRect.width, maxWidth);\n            }\n            var height = width;\n            if (!height) {\n                height = boundingClientRect.height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            if (conf.ticks === undefined) {\n                conf.ticks = this.plot.size / 40;\n            }\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: \"setupVariables\",\n        value: function setupVariables() {\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n\n            plot.subplots = [];\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config;\n\n            x.value = conf.variables.value;\n            x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\n            x.map = function (d, variable) {\n                return x.scale(x.value(d, variable));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\n            x.axis.tickSize(plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config;\n\n            y.value = conf.variables.value;\n            y.scale = d3.scale[conf.y.scale]().range([plot.size - conf.padding / 2, conf.padding / 2]);\n            y.map = function (d, variable) {\n                return y.scale(y.value(d, variable));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\n            y.axis.tickSize(-plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            var self = this;\n            var n = self.plot.variables.length;\n            var conf = this.config;\n\n            var axisClass = self.prefixClass(\"axis\");\n            var axisXClass = axisClass + \"-x\";\n            var axisYClass = axisClass + \"-y\";\n\n            var xAxisSelector = \"g.\" + axisXClass + \".\" + axisClass;\n            var yAxisSelector = \"g.\" + axisYClass + \".\" + axisClass;\n\n            var noGuidesClass = self.prefixClass(\"no-guides\");\n            self.svgG.selectAll(xAxisSelector).data(self.plot.variables).enter().appendSelector(xAxisSelector).classed(noGuidesClass, !conf.guides).attr(\"transform\", function (d, i) {\n                return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\";\n            }).each(function (d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.x.axis);\n            });\n\n            self.svgG.selectAll(yAxisSelector).data(self.plot.variables).enter().appendSelector(yAxisSelector).classed(noGuidesClass, !conf.guides).attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * self.plot.size + \")\";\n            }).each(function (d) {\n                self.plot.y.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.y.axis);\n            });\n\n            var cellClass = self.prefixClass(\"cell\");\n            var cell = self.svgG.selectAll(\".\" + cellClass).data(self.utils.cross(self.plot.variables, self.plot.variables)).enter().appendSelector(\"g.\" + cellClass).attr(\"transform\", function (d) {\n                return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\";\n            });\n\n            if (conf.brush) {\n                this.drawBrush(cell);\n            }\n\n            cell.each(plotSubplot);\n\n            //Labels\n            cell.filter(function (d) {\n                return d.i === d.j;\n            }).append(\"text\").attr(\"x\", conf.padding).attr(\"y\", conf.padding).attr(\"dy\", \".71em\").text(function (d) {\n                return self.plot.labelByVariable[d.x];\n            });\n\n            function plotSubplot(p) {\n                var plot = self.plot;\n                plot.subplots.push(p);\n                var cell = d3.select(this);\n\n                plot.x.scale.domain(plot.domainByVariable[p.x]);\n                plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n                var frameClass = self.prefixClass(\"frame\");\n                cell.append(\"rect\").attr(\"class\", frameClass).attr(\"x\", conf.padding / 2).attr(\"y\", conf.padding / 2).attr(\"width\", conf.size - conf.padding).attr(\"height\", conf.size - conf.padding);\n\n                p.update = function () {\n                    var subplot = this;\n                    var dots = cell.selectAll(\"circle\").data(self.data);\n\n                    dots.enter().append(\"circle\");\n\n                    dots.attr(\"cx\", function (d) {\n                        return plot.x.map(d, subplot.x);\n                    }).attr(\"cy\", function (d) {\n                        return plot.y.map(d, subplot.y);\n                    }).attr(\"r\", self.config.dot.radius);\n\n                    if (plot.dot.color) {\n                        dots.style(\"fill\", plot.dot.color);\n                    }\n\n                    if (plot.tooltip) {\n                        dots.on(\"mouseover\", function (d) {\n                            plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                            var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\n                            var group = self.config.groups.value(d);\n                            if (group || group === 0) {\n                                html += \"<br/>\";\n                                var label = self.config.groups.label;\n                                if (label) {\n                                    html += label + \": \";\n                                }\n                                html += group;\n                            }\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                        }).on(\"mouseout\", function (d) {\n                            plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                        });\n                    }\n\n                    dots.exit().remove();\n                };\n                p.update();\n            }\n\n            this.updateLegend();\n        }\n    }, {\n        key: \"update\",\n        value: function update(data) {\n\n            _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"update\", this).call(this, data);\n            this.plot.subplots.forEach(function (p) {\n                return p.update();\n            });\n            this.updateLegend();\n        }\n    }, {\n        key: \"drawBrush\",\n        value: function drawBrush(cell) {\n            var self = this;\n            var brush = d3.svg.brush().x(self.plot.x.scale).y(self.plot.y.scale).on(\"brushstart\", brushstart).on(\"brush\", brushmove).on(\"brushend\", brushend);\n\n            cell.append(\"g\").call(brush);\n\n            var brushCell;\n\n            // Clear the previously-active brush, if any.\n            function brushstart(p) {\n                if (brushCell !== this) {\n                    d3.select(brushCell).call(brush.clear());\n                    self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                    self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                    brushCell = this;\n                }\n            }\n\n            // Highlight the selected circles.\n            function brushmove(p) {\n                var e = brush.extent();\n                self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\n                    return e[0][0] > d[p.x] || d[p.x] > e[1][0] || e[0][1] > d[p.y] || d[p.y] > e[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            }\n        }\n    }, {\n        key: \"updateLegend\",\n        value: function updateLegend() {\n\n            void 0;\n            var plot = this.plot;\n\n            var scale = plot.dot.colorCategory;\n            if (!scale.domain() || scale.domain().length < 2) {\n                plot.showLegend = false;\n            }\n\n            if (!plot.showLegend) {\n                if (plot.legend && plot.legend.container) {\n                    plot.legend.container.remove();\n                }\n                return;\n            }\n\n            var legendX = this.plot.width + this.config.legend.margin;\n            var legendY = this.config.legend.margin;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n            var legendLinear = plot.legend.color().shapeWidth(this.config.legend.shapeWidth).orient('vertical').scale(scale);\n\n            plot.legend.container.call(legendLinear);\n        }\n    }]);\n\n    return ScatterPlotMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":19,\"./legend\":24,\"./scatterplot\":27,\"./utils\":30}],27:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlot = exports.ScatterPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _utils = require(\"./utils\");\n\nvar _legend = require(\"./legend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotConfig = exports.ScatterPlotConfig = function (_ChartConfig) {\n    _inherits(ScatterPlotConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function ScatterPlotConfig(custom) {\n        _classCallCheck(this, ScatterPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'scatterplot';\n        _this.guides = false;\n        _this.showTooltip = true;\n        _this.showLegend = true;\n        _this.legend = {\n            width: 80,\n            margin: 10,\n            shapeWidth: 20\n        };\n        _this.x = { // X axis config\n            label: 'X', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return d[key];\n            }, // x value accessor\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            label: 'Y', // axis label,\n            key: 1,\n            value: function value(d, key) {\n                return d[key];\n            }, // y value accessor\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: 2,\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.transition = true;\n\n        var config = _this;\n        _this.dot = {\n            radius: 2,\n            color: function color(d) {\n                return config.groups.value(d, config.groups.key);\n            }, // string or function returning color's value for color scale\n            d3ColorCategory: 'category10'\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } //show axis guides\n\n\n    return ScatterPlotConfig;\n}(_chart.ChartConfig);\n\nvar ScatterPlot = exports.ScatterPlot = function (_Chart) {\n    _inherits(ScatterPlot, _Chart);\n\n    function ScatterPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlot).call(this, placeholderSelector, data, new ScatterPlotConfig(config)));\n    }\n\n    _createClass(ScatterPlot, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlot.prototype), \"setConfig\", this).call(this, new ScatterPlotConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(ScatterPlot.prototype), \"initPlot\", this).call(this);\n            var self = this;\n\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.y = {};\n            this.plot.dot = {\n                color: null //color scale mapping function\n            };\n\n            this.plot.showLegend = conf.showLegend;\n            if (this.plot.showLegend) {\n                this.plot.margin.right = conf.margin.right + conf.legend.width + conf.legend.margin * 2;\n            }\n\n            this.computePlotSize();\n\n            // var legendWidth = availableWidth;\n            // legend.width(legendWidth);\n            //\n            // wrap.select('.nv-legendWrap')\n            //     .datum(data)\n            //     .call(legend);\n            //\n            // if (legend.height() > margin.top) {\n            //     margin.top = legend.height();\n            //     availableHeight = nv.utils.availableHeight(height, container, margin);\n            // }\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            } else {}\n\n            return this;\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            var data = this.data;\n            plot.x.scale.domain([d3.min(data, plot.x.value) - 1, d3.max(data, plot.x.value) + 1]);\n            if (this.config.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n\n            /*\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             */\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n\n            if (this.config.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n\n            var data = this.data;\n            plot.y.scale.domain([d3.min(data, plot.y.value) - 1, d3.max(data, plot.y.value) + 1]);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            this.drawAxisX();\n            this.drawAxisY();\n            this.update();\n        }\n    }, {\n        key: \"drawAxisX\",\n        value: function drawAxisX() {\n\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).attr(\"transform\", \"translate(0,\" + plot.height + \")\").call(plot.x.axis).selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + plot.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: \"drawAxisY\",\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).call(plot.y.axis).selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(ScatterPlot.prototype), \"update\", this).call(this, newData);\n\n            this.updateDots();\n\n            this.updateLegend();\n        }\n    }, {\n        key: \"updateDots\",\n        value: function updateDots() {\n            var self = this;\n            var plot = self.plot;\n            var data = this.data;\n            var dotClass = self.prefixClass('dot');\n            self.dotsContainerClass = self.prefixClass('dots-container');\n\n            var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n            var dots = dotsContainer.selectAll('.' + dotClass).data(data);\n\n            dots.enter().append(\"circle\").attr(\"class\", dotClass);\n\n            var dotsT = dots;\n            if (self.config.transition) {\n                dotsT = dots.transition();\n            }\n\n            dotsT.attr(\"r\", self.config.dot.radius).attr(\"cx\", plot.x.map).attr(\"cy\", plot.y.map);\n\n            if (plot.tooltip) {\n                dots.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                    var group = self.config.groups.value(d, self.config.groups.key);\n                    if (group || group === 0) {\n                        html += \"<br/>\";\n                        var label = self.config.groups.label;\n                        if (label) {\n                            html += label + \": \";\n                        }\n                        html += group;\n                    }\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (plot.dot.color) {\n                dots.style(\"fill\", plot.dot.color);\n            }\n\n            dots.exit().remove();\n        }\n    }, {\n        key: \"updateLegend\",\n        value: function updateLegend() {\n\n            var plot = this.plot;\n\n            var scale = plot.dot.colorCategory;\n            if (!scale.domain() || scale.domain().length < 2) {\n                plot.showLegend = false;\n            }\n\n            if (!plot.showLegend) {\n                if (plot.legend && plot.legend.container) {\n                    plot.legend.container.remove();\n                }\n                return;\n            }\n\n            var legendX = this.plot.width + this.config.legend.margin;\n            var legendY = this.config.legend.margin;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n            var legendLinear = plot.legend.color().shapeWidth(this.config.legend.shapeWidth).orient('vertical').scale(scale);\n\n            plot.legend.container.call(legendLinear);\n        }\n    }]);\n\n    return ScatterPlot;\n}(_chart.Chart);\n\n},{\"./chart\":19,\"./legend\":24,\"./utils\":30}],28:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.tdistr = tdistr;\n/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subchisqr($n - 0, $p - 0));\n}\n\nfunction udistr($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subu($p - 0));\n}\n\nfunction tdistr($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\";\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subt($n - 0, $p - 0));\n}\n\nfunction fdistr($n, $m, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* first degree of freedom */\n\t}\n\tif ($m <= 0 || Math.abs($m) - Math.abs(integer($m)) != 0) {\n\t\tthrow \"Invalid m: $m\\n\"; /* second degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subf($n - 0, $m - 0, $p - 0));\n}\n\nfunction uprob($x) {\n\treturn precision_string(_subuprob($x - 0));\n}\n\nfunction chisqrprob($n, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n - 0, $x - 0));\n}\n\nfunction tprob($n, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n - 0, $x - 0));\n}\n\nfunction fprob($n, $m, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* first degree of freedom */\n\t}\n\tif ($m <= 0 || Math.abs($m) - Math.abs(integer($m)) != 0) {\n\t\tthrow \"Invalid m: $m\\n\"; /* second degree of freedom */\n\t}\n\treturn precision_string(_subfprob($n - 0, $m - 0, $x - 0));\n}\n\nfunction _subfprob($n, $m, $x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow(1 - $z, $n / 2 * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow(1 - $z, $m / 2) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = $n == 1 ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = $m == 1 ? 0 : 1;\n\t\tfor (var $i = $m - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI - 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\nfunction _subchisqrprob($n, $x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow($x / $n, 1 / 3) - (1 - 2 / 9 / $n)) / Math.sqrt(2 / 9 / $n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {\n\t\tvar $a;\n\t\tvar $i;\n\t\tvar $i1;\n\t\tif ($n % 2 != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2 / Math.PI) * Math.exp(-$x / 2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x / 2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= $n - 2; $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt($y * (1.570796288 + $y * (.03706987906 + $y * (-.8364353589E-3 + $y * (-.2250947176E-3 + $y * (.6841218299E-5 + $y * (0.5824238515E-5 + $y * (-.104527497E-5 + $y * (.8360937017E-7 + $y * (-.3231081277E-8 + $y * (.3657763036E-10 + $y * .6936233982E-12)))))))))));\n\tif ($p > .5) $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow(1 + $absx * (.049867347 + $absx * (.0211410061 + $absx * (.0032776263 + $absx * (.0000380036 + $absx * (.0000488906 + $absx * .000005383))))), -16) / 2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) / Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x < 0) $p = 1 - $p;\n\treturn $p;\n}\n\nfunction _subt($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn -_subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) / 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2 + 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo {\n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) / Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) + Math.log($n / $n1 / 2 / Math.PI) - 1 + (1 / $n1 - 1 / $n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x)) - 4)));\n\t\t} while ($x && $round != 0);\n\t}\n\treturn $x;\n}\n\nfunction _subtprob($n, $x) {\n\n\tvar $a;\n\tvar $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i - 1) / $i * $z * $y;\n\t}\n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w) / 2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = $n == 1 ? 0 : Math.sin($w) * Math.cos($w) / Math.PI;\n\t\t$b = .5 + $w / Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p / 2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 + (($u - $a) / 2 + (((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 + (((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u - $a * $a * (9 * $m - 6)) / 48 / $n) / $n) / $n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p);\n\t} else {\n\t\t$x = _subf2($n, $m, $p);\n\t}\n\treturn $x;\n}\n\nfunction _subf2($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * (1 + (($u - $n2) / 2 + (((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + (((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u - $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp((($n + $m) * Math.log(($n + $m) / ($n * $x + $m)) + ($n - 2) * Math.log($x) + Math.log($n * $m / ($n + $m)) - Math.log(4 * Math.PI) - (1 / $n + 1 / $m - 1 / ($n + $m)) / 6) / 2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta) > 3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr($n, $p) {\n\tvar $x;\n\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t} else if ($p == 1) {\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u + 2 / 3 * ($u2 - 1) + $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n) - 2 / 405 / $n * ($u2 * (3 * $u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n\t\t\tvar $p1;\n\t\t\tvar $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n > 100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow($x / $n, 1 / 3) - (1 - 2 / 9 / $n)) / Math.sqrt(2 / 9 / $n));\n\t\t\t\t} else if ($x > 400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0;\n\t\t\t\t\tvar $a;\n\t\t\t\t\tif ($n % 2 != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2 / Math.PI) * Math.exp(-$x / 2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x / 2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n - 2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n - 1) * Math.log($x / $n) - Math.log(4 * Math.PI * $x) + $n - $x - 1 / $n / 6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while ($n < 31 && Math.abs($x0 - $x) > 1e-4);\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n\nfunction max() {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n\t\tif ($max < arguments[$i]) $max = arguments[$i];\n\t}\n\treturn $max;\n}\n\nfunction min() {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n\t\tif ($min > arguments[$i]) $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision($x, $p) {\n\t$x = $x * Math.pow(10, $p);\n\t$x = Math.round($x);\n\treturn $x / Math.pow(10, $p);\n}\n\nfunction integer($i) {\n\tif ($i > 0) return Math.floor($i);else return Math.ceil($i);\n}\n\n},{}],29:[function(require,module,exports){\n'use strict';\n\nvar _statisticsDistributions = require('./statistics-distributions');\n\nvar su = module.exports.StatisticsUtils = {};\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\nsu.linearRegression = require('../bower_components/simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('../bower_components/simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('../bower_components/simple-statistics/src/error_function');\nsu.standardDeviation = require('../bower_components/simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('../bower_components/simple-statistics/src/sample_standard_deviation');\nsu.variance = require('../bower_components/simple-statistics/src/variance');\nsu.mean = require('../bower_components/simple-statistics/src/mean');\nsu.zScore = require('../bower_components/simple-statistics/src/z_score');\nsu.standardError = function (arr) {\n    return Math.sqrt(su.variance(arr) / (arr.length - 1));\n};\n\nsu.tValue = function (degreesOfFreedom, criticalProbability) {\n    //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return (0, _statisticsDistributions.tdistr)(degreesOfFreedom, criticalProbability);\n};\n\n},{\"../bower_components/simple-statistics/src/error_function\":6,\"../bower_components/simple-statistics/src/linear_regression\":7,\"../bower_components/simple-statistics/src/linear_regression_line\":8,\"../bower_components/simple-statistics/src/mean\":9,\"../bower_components/simple-statistics/src/sample_correlation\":10,\"../bower_components/simple-statistics/src/sample_standard_deviation\":12,\"../bower_components/simple-statistics/src/standard_deviation\":14,\"../bower_components/simple-statistics/src/variance\":17,\"../bower_components/simple-statistics/src/z_score\":18,\"./statistics-distributions\":28}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'inferVariables',\n        value: function inferVariables(data, groupKey, includeGroup) {\n            var res = [];\n            if (data.length) {\n                var d = data[0];\n                if (d instanceof Array) {\n                    res = d.map(function (v, i) {\n                        return i;\n                    });\n                } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object') {\n\n                    for (var prop in d) {\n                        if (!d.hasOwnProperty(prop)) continue;\n\n                        res.push(prop);\n                    }\n                }\n            }\n            if (!includeGroup) {\n                var index = res.indexOf(groupKey);\n                if (index > -1) {\n                    res.splice(index, 1);\n                }\n            }\n            return res;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'insertOrAppendSelector',\n        value: function insertOrAppendSelector(parent, selector, operation, before) {\n            var selectorParts = selector.split(/([\\.\\#])/);\n            var element = parent[operation](selectorParts.shift(), before); //\":first-child\"\n            while (selectorParts.length > 1) {\n                var selectorModifier = selectorParts.shift();\n                var selectorItem = selectorParts.shift();\n                if (selectorModifier === \".\") {\n                    element = element.classed(selectorItem, true);\n                } else if (selectorModifier === \"#\") {\n                    element = element.attr('id', selectorItem);\n                }\n            }\n            return element;\n        }\n    }, {\n        key: 'insertSelector',\n        value: function insertSelector(parent, selector, before) {\n            return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n        }\n    }, {\n        key: 'appendSelector',\n        value: function appendSelector(parent, selector) {\n            return Utils.insertOrAppendSelector(parent, selector, \"append\");\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                if (element) {\n                    return parent.append(element);\n                }\n                return Utils.appendSelector(parent, selector);\n            }\n            return selection;\n        }\n    }, {\n        key: 'selectOrInsert',\n        value: function selectOrInsert(parent, selector, before) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return Utils.insertSelector(parent, selector, before);\n            }\n            return selection;\n        }\n    }, {\n        key: 'linearGradient',\n        value: function linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n            var defs = Utils.selectOrAppend(svg, \"defs\");\n            var linearGradient = defs.append(\"linearGradient\").attr(\"id\", gradientId);\n\n            linearGradient.attr(\"x1\", x1 + \"%\").attr(\"y1\", y1 + \"%\").attr(\"x2\", x2 + \"%\").attr(\"y2\", y2 + \"%\");\n\n            //Append multiple color stops by using D3's data/enter step\n            var stops = linearGradient.selectAll(\"stop\").data(range);\n\n            stops.enter().append(\"stop\");\n\n            stops.attr(\"offset\", function (d, i) {\n                return i / (range.length - 1);\n            }).attr(\"stop-color\", function (d) {\n                return d;\n            });\n\n            stops.exit().remove();\n        }\n    }, {\n        key: 'guid',\n        value: function guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            }\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        }\n    }]);\n\n    return Utils;\n}();\n\nUtils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n};\n\nUtils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n};\n\nUtils.availableHeight = function (height, container, margin) {\n    return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\nUtils.availableWidth = function (width, container, margin) {\n    return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n},{}]},{},[23])(23)\n});\n\n","module.exports = {\r\n  color: require('./src/color'),\r\n  size: require('./src/size'),\r\n  symbol: require('./src/symbol')\r\n};\r\n","var helper = require('./legend');\r\n\r\nmodule.exports = function(){\r\n\r\n  var scale = d3.scale.linear(),\r\n    shape = \"rect\",\r\n    shapeWidth = 15,\r\n    shapeHeight = 15,\r\n    shapeRadius = 10,\r\n    shapePadding = 2,\r\n    cells = [5],\r\n    labels = [],\r\n    classPrefix = \"\",\r\n    useClass = false,\r\n    title = \"\",\r\n    labelFormat = d3.format(\".01f\"),\r\n    labelOffset = 10,\r\n    labelAlign = \"middle\",\r\n    labelDelimiter = \"to\",\r\n    orient = \"vertical\",\r\n    ascending = false,\r\n    path,\r\n    legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\r\n\r\n    function legend(svg){\r\n\r\n      var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\r\n        legendG = svg.selectAll('g').data([scale]);\r\n\r\n      legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\r\n\r\n\r\n      var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\r\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\r\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\r\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\r\n\r\n      //add event handlers\r\n      helper.d3_addEvents(cellEnter, legendDispatcher);\r\n\r\n      cell.exit().transition().style(\"opacity\", 0).remove();\r\n\r\n      helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\r\n\r\n      helper.d3_addText(legendG, cellEnter, type.labels, classPrefix)\r\n\r\n      // sets placement\r\n      var text = cell.select(\"text\"),\r\n        shapeSize = shapes[0].map( function(d){ return d.getBBox(); });\r\n\r\n      //sets scale\r\n      //everything is fill except for line which is stroke,\r\n      if (!useClass){\r\n        if (shape == \"line\"){\r\n          shapes.style(\"stroke\", type.feature);\r\n        } else {\r\n          shapes.style(\"fill\", type.feature);\r\n        }\r\n      } else {\r\n        shapes.attr(\"class\", function(d){ return classPrefix + \"swatch \" + type.feature(d); });\r\n      }\r\n\r\n      var cellTrans,\r\n      textTrans,\r\n      textAlign = (labelAlign == \"start\") ? 0 : (labelAlign == \"middle\") ? 0.5 : 1;\r\n\r\n      //positions cells and text\r\n      if (orient === \"vertical\"){\r\n        cellTrans = function(d,i) { return \"translate(0, \" + (i * (shapeSize[i].height + shapePadding)) + \")\"; };\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width + shapeSize[i].x +\r\n          labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height/2 + 5) + \")\"; };\r\n\r\n      } else if (orient === \"horizontal\"){\r\n        cellTrans = function(d,i) { return \"translate(\" + (i * (shapeSize[i].width + shapePadding)) + \",0)\"; }\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width*textAlign  + shapeSize[i].x) +\r\n          \",\" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\"; };\r\n      }\r\n\r\n      helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\r\n      helper.d3_title(svg, legendG, title, classPrefix);\r\n\r\n      cell.transition().style(\"opacity\", 1);\r\n\r\n    }\r\n\r\n\r\n\r\n  legend.scale = function(_) {\r\n    if (!arguments.length) return scale;\r\n    scale = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.cells = function(_) {\r\n    if (!arguments.length) return cells;\r\n    if (_.length > 1 || _ >= 2 ){\r\n      cells = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shape = function(_, d) {\r\n    if (!arguments.length) return shape;\r\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || (_ == \"path\" && (typeof d === 'string')) ){\r\n      shape = _;\r\n      path = d;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeWidth = function(_) {\r\n    if (!arguments.length) return shapeWidth;\r\n    shapeWidth = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeHeight = function(_) {\r\n    if (!arguments.length) return shapeHeight;\r\n    shapeHeight = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeRadius = function(_) {\r\n    if (!arguments.length) return shapeRadius;\r\n    shapeRadius = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapePadding = function(_) {\r\n    if (!arguments.length) return shapePadding;\r\n    shapePadding = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labels = function(_) {\r\n    if (!arguments.length) return labels;\r\n    labels = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelAlign = function(_) {\r\n    if (!arguments.length) return labelAlign;\r\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\r\n      labelAlign = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.labelFormat = function(_) {\r\n    if (!arguments.length) return labelFormat;\r\n    labelFormat = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelOffset = function(_) {\r\n    if (!arguments.length) return labelOffset;\r\n    labelOffset = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelDelimiter = function(_) {\r\n    if (!arguments.length) return labelDelimiter;\r\n    labelDelimiter = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.useClass = function(_) {\r\n    if (!arguments.length) return useClass;\r\n    if (_ === true || _ === false){\r\n      useClass = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.orient = function(_){\r\n    if (!arguments.length) return orient;\r\n    _ = _.toLowerCase();\r\n    if (_ == \"horizontal\" || _ == \"vertical\") {\r\n      orient = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.ascending = function(_) {\r\n    if (!arguments.length) return ascending;\r\n    ascending = !!_;\r\n    return legend;\r\n  };\r\n\r\n  legend.classPrefix = function(_) {\r\n    if (!arguments.length) return classPrefix;\r\n    classPrefix = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.title = function(_) {\r\n    if (!arguments.length) return title;\r\n    title = _;\r\n    return legend;\r\n  };\r\n\r\n  d3.rebind(legend, legendDispatcher, \"on\");\r\n\r\n  return legend;\r\n\r\n};\r\n","module.exports = {\r\n\r\n  d3_identity: function (d) {\r\n    return d;\r\n  },\r\n\r\n  d3_mergeLabels: function (gen, labels) {\r\n\r\n      if(labels.length === 0) return gen;\r\n\r\n      gen = (gen) ? gen : [];\r\n\r\n      var i = labels.length;\r\n      for (; i < gen.length; i++) {\r\n        labels.push(gen[i]);\r\n      }\r\n      return labels;\r\n    },\r\n\r\n  d3_linearLegend: function (scale, cells, labelFormat) {\r\n    var data = [];\r\n\r\n    if (cells.length > 1){\r\n      data = cells;\r\n\r\n    } else {\r\n      var domain = scale.domain(),\r\n      increment = (domain[domain.length - 1] - domain[0])/(cells - 1),\r\n      i = 0;\r\n\r\n      for (; i < cells; i++){\r\n        data.push(domain[0] + i*increment);\r\n      }\r\n    }\r\n\r\n    var labels = data.map(labelFormat);\r\n\r\n    return {data: data,\r\n            labels: labels,\r\n            feature: function(d){ return scale(d); }};\r\n  },\r\n\r\n  d3_quantLegend: function (scale, labelFormat, labelDelimiter) {\r\n    var labels = scale.range().map(function(d){\r\n      var invert = scale.invertExtent(d),\r\n      a = labelFormat(invert[0]),\r\n      b = labelFormat(invert[1]);\r\n\r\n      // if (( (a) && (a.isNan()) && b){\r\n      //   console.log(\"in initial statement\")\r\n        return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\r\n      // } else if (a || b) {\r\n      //   console.log('in else statement')\r\n      //   return (a) ? a : b;\r\n      // }\r\n\r\n    });\r\n\r\n    return {data: scale.range(),\r\n            labels: labels,\r\n            feature: this.d3_identity\r\n          };\r\n  },\r\n\r\n  d3_ordinalLegend: function (scale) {\r\n    return {data: scale.domain(),\r\n            labels: scale.domain(),\r\n            feature: function(d){ return scale(d); }};\r\n  },\r\n\r\n  d3_drawShapes: function (shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\r\n    if (shape === \"rect\"){\r\n        shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\r\n\r\n    } else if (shape === \"circle\") {\r\n        shapes.attr(\"r\", shapeRadius)//.attr(\"cx\", shapeRadius).attr(\"cy\", shapeRadius);\r\n\r\n    } else if (shape === \"line\") {\r\n        shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\r\n\r\n    } else if (shape === \"path\") {\r\n      shapes.attr(\"d\", path);\r\n    }\r\n  },\r\n\r\n  d3_addText: function (svg, enter, labels, classPrefix){\r\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\r\n    svg.selectAll(\"g.\" + classPrefix + \"cell text\").data(labels).text(this.d3_identity);\r\n  },\r\n\r\n  d3_calcType: function (scale, ascending, cells, labels, labelFormat, labelDelimiter){\r\n    var type = scale.ticks ?\r\n            this.d3_linearLegend(scale, cells, labelFormat) : scale.invertExtent ?\r\n            this.d3_quantLegend(scale, labelFormat, labelDelimiter) : this.d3_ordinalLegend(scale);\r\n\r\n    type.labels = this.d3_mergeLabels(type.labels, labels);\r\n\r\n    if (ascending) {\r\n      type.labels = this.d3_reverse(type.labels);\r\n      type.data = this.d3_reverse(type.data);\r\n    }\r\n\r\n    return type;\r\n  },\r\n\r\n  d3_reverse: function(arr) {\r\n    var mirror = [];\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      mirror[i] = arr[l-i-1];\r\n    }\r\n    return mirror;\r\n  },\r\n\r\n  d3_placement: function (orient, cell, cellTrans, text, textTrans, labelAlign) {\r\n    cell.attr(\"transform\", cellTrans);\r\n    text.attr(\"transform\", textTrans);\r\n    if (orient === \"horizontal\"){\r\n      text.style(\"text-anchor\", labelAlign);\r\n    }\r\n  },\r\n\r\n  d3_addEvents: function(cells, dispatcher){\r\n    var _ = this;\r\n\r\n      cells.on(\"mouseover.legend\", function (d) { _.d3_cellOver(dispatcher, d, this); })\r\n          .on(\"mouseout.legend\", function (d) { _.d3_cellOut(dispatcher, d, this); })\r\n          .on(\"click.legend\", function (d) { _.d3_cellClick(dispatcher, d, this); });\r\n  },\r\n\r\n  d3_cellOver: function(cellDispatcher, d, obj){\r\n    cellDispatcher.cellover.call(obj, d);\r\n  },\r\n\r\n  d3_cellOut: function(cellDispatcher, d, obj){\r\n    cellDispatcher.cellout.call(obj, d);\r\n  },\r\n\r\n  d3_cellClick: function(cellDispatcher, d, obj){\r\n    cellDispatcher.cellclick.call(obj, d);\r\n  },\r\n\r\n  d3_title: function(svg, cellsSvg, title, classPrefix){\r\n    if (title !== \"\"){\r\n\r\n      var titleText = svg.selectAll('text.' + classPrefix + 'legendTitle');\r\n\r\n      titleText.data([title])\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', classPrefix + 'legendTitle');\r\n\r\n        svg.selectAll('text.' + classPrefix + 'legendTitle')\r\n            .text(title)\r\n\r\n      var yOffset = svg.select('.' + classPrefix + 'legendTitle')\r\n          .map(function(d) { return d[0].getBBox().height})[0],\r\n      xOffset = -cellsSvg.map(function(d) { return d[0].getBBox().x})[0];\r\n\r\n      cellsSvg.attr('transform', 'translate(' + xOffset + ',' + (yOffset + 10) + ')');\r\n\r\n    }\r\n  }\r\n}\r\n","var helper = require('./legend');\r\n\r\nmodule.exports =  function(){\r\n\r\n  var scale = d3.scale.linear(),\r\n    shape = \"rect\",\r\n    shapeWidth = 15,\r\n    shapePadding = 2,\r\n    cells = [5],\r\n    labels = [],\r\n    useStroke = false,\r\n    classPrefix = \"\",\r\n    title = \"\",\r\n    labelFormat = d3.format(\".01f\"),\r\n    labelOffset = 10,\r\n    labelAlign = \"middle\",\r\n    labelDelimiter = \"to\",\r\n    orient = \"vertical\",\r\n    ascending = false,\r\n    path,\r\n    legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\r\n\r\n    function legend(svg){\r\n\r\n      var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\r\n        legendG = svg.selectAll('g').data([scale]);\r\n\r\n      legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\r\n\r\n\r\n      var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\r\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\r\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\r\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\r\n\r\n      //add event handlers\r\n      helper.d3_addEvents(cellEnter, legendDispatcher);\r\n\r\n      cell.exit().transition().style(\"opacity\", 0).remove();\r\n\r\n      //creates shape\r\n      if (shape === \"line\"){\r\n        helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\r\n        shapes.attr(\"stroke-width\", type.feature);\r\n      } else {\r\n        helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\r\n      }\r\n\r\n      helper.d3_addText(legendG, cellEnter, type.labels, classPrefix)\r\n\r\n      //sets placement\r\n      var text = cell.select(\"text\"),\r\n        shapeSize = shapes[0].map(\r\n          function(d, i){\r\n            var bbox = d.getBBox()\r\n            var stroke = scale(type.data[i]);\r\n\r\n            if (shape === \"line\" && orient === \"horizontal\") {\r\n              bbox.height = bbox.height + stroke;\r\n            } else if (shape === \"line\" && orient === \"vertical\"){\r\n              bbox.width = bbox.width;\r\n            }\r\n\r\n            return bbox;\r\n        });\r\n\r\n      var maxH = d3.max(shapeSize, function(d){ return d.height + d.y; }),\r\n      maxW = d3.max(shapeSize, function(d){ return d.width + d.x; });\r\n\r\n      var cellTrans,\r\n      textTrans,\r\n      textAlign = (labelAlign == \"start\") ? 0 : (labelAlign == \"middle\") ? 0.5 : 1;\r\n\r\n      //positions cells and text\r\n      if (orient === \"vertical\"){\r\n\r\n        cellTrans = function(d,i) {\r\n            var height = d3.sum(shapeSize.slice(0, i + 1 ), function(d){ return d.height; });\r\n            return \"translate(0, \" + (height + i*shapePadding) + \")\"; };\r\n\r\n        textTrans = function(d,i) { return \"translate(\" + (maxW + labelOffset) + \",\" +\r\n          (shapeSize[i].y + shapeSize[i].height/2 + 5) + \")\"; };\r\n\r\n      } else if (orient === \"horizontal\"){\r\n        cellTrans = function(d,i) {\r\n            var width = d3.sum(shapeSize.slice(0, i + 1 ), function(d){ return d.width; });\r\n            return \"translate(\" + (width + i*shapePadding) + \",0)\"; };\r\n\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width*textAlign  + shapeSize[i].x) + \",\" +\r\n              (maxH + labelOffset ) + \")\"; };\r\n      }\r\n\r\n      helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\r\n      helper.d3_title(svg, legendG, title, classPrefix);\r\n\r\n      cell.transition().style(\"opacity\", 1);\r\n\r\n    }\r\n\r\n  legend.scale = function(_) {\r\n    if (!arguments.length) return scale;\r\n    scale = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.cells = function(_) {\r\n    if (!arguments.length) return cells;\r\n    if (_.length > 1 || _ >= 2 ){\r\n      cells = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n\r\n  legend.shape = function(_, d) {\r\n    if (!arguments.length) return shape;\r\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" ){\r\n      shape = _;\r\n      path = d;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeWidth = function(_) {\r\n    if (!arguments.length) return shapeWidth;\r\n    shapeWidth = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapePadding = function(_) {\r\n    if (!arguments.length) return shapePadding;\r\n    shapePadding = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labels = function(_) {\r\n    if (!arguments.length) return labels;\r\n    labels = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelAlign = function(_) {\r\n    if (!arguments.length) return labelAlign;\r\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\r\n      labelAlign = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.labelFormat = function(_) {\r\n    if (!arguments.length) return labelFormat;\r\n    labelFormat = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelOffset = function(_) {\r\n    if (!arguments.length) return labelOffset;\r\n    labelOffset = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelDelimiter = function(_) {\r\n    if (!arguments.length) return labelDelimiter;\r\n    labelDelimiter = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.orient = function(_){\r\n    if (!arguments.length) return orient;\r\n    _ = _.toLowerCase();\r\n    if (_ == \"horizontal\" || _ == \"vertical\") {\r\n      orient = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.ascending = function(_) {\r\n    if (!arguments.length) return ascending;\r\n    ascending = !!_;\r\n    return legend;\r\n  };\r\n\r\n  legend.classPrefix = function(_) {\r\n    if (!arguments.length) return classPrefix;\r\n    classPrefix = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.title = function(_) {\r\n    if (!arguments.length) return title;\r\n    title = _;\r\n    return legend;\r\n  };\r\n\r\n  d3.rebind(legend, legendDispatcher, \"on\");\r\n\r\n  return legend;\r\n\r\n};\r\n","var helper = require('./legend');\r\n\r\nmodule.exports = function(){\r\n\r\n  var scale = d3.scale.linear(),\r\n    shape = \"path\",\r\n    shapeWidth = 15,\r\n    shapeHeight = 15,\r\n    shapeRadius = 10,\r\n    shapePadding = 5,\r\n    cells = [5],\r\n    labels = [],\r\n    classPrefix = \"\",\r\n    useClass = false,\r\n    title = \"\",\r\n    labelFormat = d3.format(\".01f\"),\r\n    labelAlign = \"middle\",\r\n    labelOffset = 10,\r\n    labelDelimiter = \"to\",\r\n    orient = \"vertical\",\r\n    ascending = false,\r\n    legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\r\n\r\n    function legend(svg){\r\n\r\n      var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\r\n        legendG = svg.selectAll('g').data([scale]);\r\n\r\n      legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\r\n\r\n      var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\r\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\r\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\r\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\r\n\r\n      //add event handlers\r\n      helper.d3_addEvents(cellEnter, legendDispatcher);\r\n\r\n      //remove old shapes\r\n      cell.exit().transition().style(\"opacity\", 0).remove();\r\n\r\n      helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\r\n      helper.d3_addText(legendG, cellEnter, type.labels, classPrefix)\r\n\r\n      // sets placement\r\n      var text = cell.select(\"text\"),\r\n        shapeSize = shapes[0].map( function(d){ return d.getBBox(); });\r\n\r\n      var maxH = d3.max(shapeSize, function(d){ return d.height; }),\r\n      maxW = d3.max(shapeSize, function(d){ return d.width; });\r\n\r\n      var cellTrans,\r\n      textTrans,\r\n      textAlign = (labelAlign == \"start\") ? 0 : (labelAlign == \"middle\") ? 0.5 : 1;\r\n\r\n      //positions cells and text\r\n      if (orient === \"vertical\"){\r\n        cellTrans = function(d,i) { return \"translate(0, \" + (i * (maxH + shapePadding)) + \")\"; };\r\n        textTrans = function(d,i) { return \"translate(\" + (maxW + labelOffset) + \",\" +\r\n              (shapeSize[i].y + shapeSize[i].height/2 + 5) + \")\"; };\r\n\r\n      } else if (orient === \"horizontal\"){\r\n        cellTrans = function(d,i) { return \"translate(\" + (i * (maxW + shapePadding)) + \",0)\"; };\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width*textAlign  + shapeSize[i].x) + \",\" +\r\n              (maxH + labelOffset ) + \")\"; };\r\n      }\r\n\r\n      helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\r\n      helper.d3_title(svg, legendG, title, classPrefix);\r\n      cell.transition().style(\"opacity\", 1);\r\n\r\n    }\r\n\r\n\r\n  legend.scale = function(_) {\r\n    if (!arguments.length) return scale;\r\n    scale = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.cells = function(_) {\r\n    if (!arguments.length) return cells;\r\n    if (_.length > 1 || _ >= 2 ){\r\n      cells = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shapePadding = function(_) {\r\n    if (!arguments.length) return shapePadding;\r\n    shapePadding = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labels = function(_) {\r\n    if (!arguments.length) return labels;\r\n    labels = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelAlign = function(_) {\r\n    if (!arguments.length) return labelAlign;\r\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\r\n      labelAlign = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.labelFormat = function(_) {\r\n    if (!arguments.length) return labelFormat;\r\n    labelFormat = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelOffset = function(_) {\r\n    if (!arguments.length) return labelOffset;\r\n    labelOffset = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelDelimiter = function(_) {\r\n    if (!arguments.length) return labelDelimiter;\r\n    labelDelimiter = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.orient = function(_){\r\n    if (!arguments.length) return orient;\r\n    _ = _.toLowerCase();\r\n    if (_ == \"horizontal\" || _ == \"vertical\") {\r\n      orient = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.ascending = function(_) {\r\n    if (!arguments.length) return ascending;\r\n    ascending = !!_;\r\n    return legend;\r\n  };\r\n\r\n  legend.classPrefix = function(_) {\r\n    if (!arguments.length) return classPrefix;\r\n    classPrefix = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.title = function(_) {\r\n    if (!arguments.length) return title;\r\n    title = _;\r\n    return legend;\r\n  };\r\n\r\n  d3.rebind(legend, legendDispatcher, \"on\");\r\n\r\n  return legend;\r\n\r\n};\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\r\n *\r\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\r\n * normal distribution with standard deviation sd is within x of the mean.\r\n *\r\n * This function returns a numerical approximation to the exact value.\r\n *\r\n * @param {number} x input\r\n * @return {number} error estimation\r\n * @example\r\n * errorFunction(1); //= 0.8427\r\n */\r\nfunction errorFunction(x/*: number */)/*: number */ {\r\n    var t = 1 / (1 + 0.5 * Math.abs(x));\r\n    var tau = t * Math.exp(-Math.pow(x, 2) -\r\n        1.26551223 +\r\n        1.00002368 * t +\r\n        0.37409196 * Math.pow(t, 2) +\r\n        0.09678418 * Math.pow(t, 3) -\r\n        0.18628806 * Math.pow(t, 4) +\r\n        0.27886807 * Math.pow(t, 5) -\r\n        1.13520398 * Math.pow(t, 6) +\r\n        1.48851587 * Math.pow(t, 7) -\r\n        0.82215223 * Math.pow(t, 8) +\r\n        0.17087277 * Math.pow(t, 9));\r\n    if (x >= 0) {\r\n        return 1 - tau;\r\n    } else {\r\n        return tau - 1;\r\n    }\r\n}\r\n\r\nmodule.exports = errorFunction;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\r\n * is a simple way to find a fitted line\r\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\r\n * using the least sum of squares.\r\n *\r\n * @param {Array<Array<number>>} data an array of two-element of arrays,\r\n * like `[[0, 1], [2, 3]]`\r\n * @returns {Object} object containing slope and intersect of regression line\r\n * @example\r\n * linearRegression([[0, 0], [1, 1]]); // { m: 1, b: 0 }\r\n */\r\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\r\n\r\n    var m, b;\r\n\r\n    // Store data length in a local variable to reduce\r\n    // repeated object property lookups\r\n    var dataLength = data.length;\r\n\r\n    //if there's only one point, arbitrarily choose a slope of 0\r\n    //and a y-intercept of whatever the y of the initial point is\r\n    if (dataLength === 1) {\r\n        m = 0;\r\n        b = data[0][1];\r\n    } else {\r\n        // Initialize our sums and scope the `m` and `b`\r\n        // variables that define the line.\r\n        var sumX = 0, sumY = 0,\r\n            sumXX = 0, sumXY = 0;\r\n\r\n        // Use local variables to grab point values\r\n        // with minimal object property lookups\r\n        var point, x, y;\r\n\r\n        // Gather the sum of all x values, the sum of all\r\n        // y values, and the sum of x^2 and (x*y) for each\r\n        // value.\r\n        //\r\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\r\n        for (var i = 0; i < dataLength; i++) {\r\n            point = data[i];\r\n            x = point[0];\r\n            y = point[1];\r\n\r\n            sumX += x;\r\n            sumY += y;\r\n\r\n            sumXX += x * x;\r\n            sumXY += x * y;\r\n        }\r\n\r\n        // `m` is the slope of the regression line\r\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\r\n            ((dataLength * sumXX) - (sumX * sumX));\r\n\r\n        // `b` is the y-intercept of the line.\r\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\r\n    }\r\n\r\n    // Return both values as an object.\r\n    return {\r\n        m: m,\r\n        b: b\r\n    };\r\n}\r\n\r\n\r\nmodule.exports = linearRegression;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Given the output of `linearRegression`: an object\r\n * with `m` and `b` values indicating slope and intercept,\r\n * respectively, generate a line function that translates\r\n * x values into y values.\r\n *\r\n * @param {Object} mb object with `m` and `b` members, representing\r\n * slope and intersect of desired line\r\n * @returns {Function} method that computes y-value at any given\r\n * x-value on the line.\r\n * @example\r\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\r\n * l(0) //= 0\r\n * l(2) //= 2\r\n */\r\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\r\n    // Return a function that computes a `y` value for each\r\n    // x value it is given, based on the values of `b` and `a`\r\n    // that we just computed.\r\n    return function(x) {\r\n        return mb.b + (mb.m * x);\r\n    };\r\n}\r\n\r\nmodule.exports = linearRegressionLine;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sum = require('./sum');\r\n\r\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\r\nfunction mean(x /*: Array<number> */)/*:number*/ {\r\n    // The mean of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    return sum(x) / x.length;\r\n}\r\n\r\nmodule.exports = mean;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleCovariance = require('./sample_covariance');\r\nvar sampleStandardDeviation = require('./sample_standard_deviation');\r\n\r\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\r\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\r\n    var cov = sampleCovariance(x, y),\r\n        xstd = sampleStandardDeviation(x),\r\n        ystd = sampleStandardDeviation(y);\r\n\r\n    return cov / xstd / ystd;\r\n}\r\n\r\nmodule.exports = sampleCorrelation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\r\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\r\n\r\n    // The two datasets must have the same length which must be more than 1\r\n    if (x.length <= 1 || x.length !== y.length) {\r\n        return NaN;\r\n    }\r\n\r\n    // determine the mean of each dataset so that we can judge each\r\n    // value of the dataset fairly as the difference from the mean. this\r\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\r\n    // does not suffer because of the difference in absolute values\r\n    var xmean = mean(x),\r\n        ymean = mean(y),\r\n        sum = 0;\r\n\r\n    // for each pair of values, the covariance increases when their\r\n    // difference from the mean is associated - if both are well above\r\n    // or if both are well below\r\n    // the mean, the covariance increases significantly.\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += (x[i] - xmean) * (y[i] - ymean);\r\n    }\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // the covariance is weighted by the length of the datasets.\r\n    return sum / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleCovariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleVariance = require('./sample_variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\r\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var sampleVarianceX = sampleVariance(x);\r\n    if (isNaN(sampleVarianceX)) { return NaN; }\r\n    return Math.sqrt(sampleVarianceX);\r\n}\r\n\r\nmodule.exports = sampleStandardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\r\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length <= 1) { return NaN; }\r\n\r\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // Find the mean value of that list\r\n    return sumSquaredDeviationsValue / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleVariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar variance = require('./variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance. It's useful for measuring the amount\r\n * of variation or dispersion in a set of values.\r\n *\r\n * Standard deviation is only appropriate for full-population knowledge: for\r\n * samples of a population, {@link sampleStandardDeviation} is\r\n * more appropriate.\r\n *\r\n * @param {Array<number>} x input\r\n * @returns {number} standard deviation\r\n * @example\r\n * var scores = [2, 4, 4, 4, 5, 5, 7, 9];\r\n * variance(scores); //= 4\r\n * standardDeviation(scores); //= 2\r\n */\r\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var v = variance(x);\r\n    if (isNaN(v)) { return 0; }\r\n    return Math.sqrt(v);\r\n}\r\n\r\nmodule.exports = standardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\r\nfunction sum(x/*: Array<number> */)/*: number */ {\r\n\r\n    // like the traditional sum algorithm, we keep a running\r\n    // count of the current sum.\r\n    var sum = 0;\r\n\r\n    // but we also keep three extra variables as bookkeeping:\r\n    // most importantly, an error correction value. This will be a very\r\n    // small number that is the opposite of the floating point precision loss.\r\n    var errorCompensation = 0;\r\n\r\n    // this will be each number in the list corrected with the compensation value.\r\n    var correctedCurrentValue;\r\n\r\n    // and this will be the next sum\r\n    var nextSum;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        // first correct the value that we're going to add to the sum\r\n        correctedCurrentValue = x[i] - errorCompensation;\r\n\r\n        // compute the next sum. sum is likely a much larger number\r\n        // than correctedCurrentValue, so we'll lose precision here,\r\n        // and measure how much precision is lost in the next step\r\n        nextSum = sum + correctedCurrentValue;\r\n\r\n        // we intentionally didn't assign sum immediately, but stored\r\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\r\n        // not equal to 0? ideally it would be, but in practice it won't:\r\n        // it will be some very small number. that's what we record\r\n        // as errorCompensation.\r\n        errorCompensation = nextSum - sum - correctedCurrentValue;\r\n\r\n        // now that we've computed how much we'll correct for in the next\r\n        // loop, start treating the nextSum as the current sum.\r\n        sum = nextSum;\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sum;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\r\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\r\n    var meanValue = mean(x),\r\n        sum = 0;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += Math.pow(x[i] - meanValue, n);\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sumNthPowerDeviations;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/**\r\n * The [variance](http://en.wikipedia.org/wiki/Variance)\r\n * is the sum of squared deviations from the mean.\r\n *\r\n * This is an implementation of variance, not sample variance:\r\n * see the `sampleVariance` method if you want a sample measure.\r\n *\r\n * @param {Array<number>} x a population\r\n * @returns {number} variance: a value greater than or equal to zero.\r\n * zero indicates that all values are identical.\r\n * @example\r\n * ss.variance([1, 2, 3, 4, 5, 6]); //= 2.917\r\n */\r\nfunction variance(x/*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    // Find the mean of squared deviations between the\r\n    // mean value and each value.\r\n    return sumNthPowerDeviations(x, 2) / x.length;\r\n}\r\n\r\nmodule.exports = variance;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\r\n *\r\n * The standard score is the number of standard deviations an observation\r\n * or datum is above or below the mean. Thus, a positive standard score\r\n * represents a datum above the mean, while a negative standard score\r\n * represents a datum below the mean. It is a dimensionless quantity\r\n * obtained by subtracting the population mean from an individual raw\r\n * score and then dividing the difference by the population standard\r\n * deviation.\r\n *\r\n * The z-score is only defined if one knows the population parameters;\r\n * if one only has a sample set, then the analogous computation with\r\n * sample mean and sample standard deviation yields the\r\n * Student's t-statistic.\r\n *\r\n * @param {number} x\r\n * @param {number} mean\r\n * @param {number} standardDeviation\r\n * @return {number} z score\r\n * @example\r\n * ss.zScore(78, 80, 5); //= -0.4\r\n */\r\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\r\n    return (x - mean) / standardDeviation;\r\n}\r\n\r\nmodule.exports = zScore;\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class ChartConfig {\r\n    cssClassPrefix = \"odc-\";\r\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\r\n    width = undefined;\r\n    height = undefined;\r\n    margin = {\r\n        left: 50,\r\n        right: 30,\r\n        top: 30,\r\n        bottom: 50\r\n    };\r\n    showTooltip = false;\r\n\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Chart {\r\n    utils = Utils;\r\n    baseContainer;\r\n    svg;\r\n    config;\r\n    plot = {\r\n        margin: {}\r\n    };\r\n    _attached = {};\r\n    _layers = {};\r\n    _events = {};\r\n    _isAttached;\r\n    _isInitialized=false;\r\n\r\n\r\n    constructor(base, data, config) {\r\n        \r\n        this._isAttached = base instanceof Chart;\r\n\r\n        this.baseContainer = base;\r\n\r\n        this.setConfig(config);\r\n\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n\r\n        this.init();\r\n        this.postInit();\r\n    }\r\n\r\n    setConfig(config) {\r\n        if (!config) {\r\n            this.config = new ChartConfig();\r\n        } else {\r\n            this.config = config;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setData(data) {\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n\r\n        self.initPlot();\r\n        self.initSvg();\r\n\r\n        self.initTooltip();\r\n        self.draw();\r\n        this._isInitialized=true;\r\n        return this;\r\n    }\r\n\r\n    postInit(){\r\n\r\n    }\r\n\r\n    initSvg() {\r\n        var self = this;\r\n        var config = this.config;\r\n        console.log(config.svgClass);\r\n\r\n        var margin = self.plot.margin;\r\n        var width = self.plot.width + margin.left + margin.right;\r\n        var height = self.plot.height + margin.top + margin.bottom;\r\n        var aspect = width / height;\r\n        if(!self._isAttached){\r\n            if(!this._isInitialized){\r\n                d3.select(self.baseContainer).select(\"svg\").remove();\r\n            }\r\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\r\n\r\n            self.svg\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\r\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n                .attr(\"class\", config.svgClass);\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\r\n        }else{\r\n            console.log(self.baseContainer);\r\n            self.svg = self.baseContainer.svg;\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\r\n        }\r\n\r\n        self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        if (!config.width || config.height) {\r\n            d3.select(window)\r\n                .on(\"resize\", function () {\r\n                    //TODO add responsiveness if width/height not specified\r\n                });\r\n        }\r\n    }\r\n\r\n    initTooltip(){\r\n        var self = this;\r\n        if (self.config.showTooltip) {\r\n            if(!self._isAttached ){\r\n                self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\r\n                    .style(\"opacity\", 0);\r\n            }else{\r\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    initPlot() {\r\n        var margin = this.config.margin;\r\n        this.plot={\r\n            margin:{\r\n                top: margin.top,\r\n                bottom: margin.bottom,\r\n                left: margin.left,\r\n                right: margin.right\r\n            }\r\n        };\r\n    }\r\n\r\n    update(data) {\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n        var layerName, attachmentData;\r\n        for (var attachmentName in this._attached) {\r\n\r\n            attachmentData = data;\r\n\r\n            this._attached[attachmentName].update(attachmentData);\r\n        }\r\n        console.log('base uppdate');\r\n        return this;\r\n    }\r\n\r\n    draw(data) {\r\n        this.update(data);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n     * method will be invoked whenever the containing chart's `draw` method is\r\n     * invoked.\r\n     *\r\n     * @externalExample chart-attach\r\n     *\r\n     * @param {String} attachmentName Name of the attachment\r\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n     *        unspecified, this method will return the attachment previously\r\n     *        registered with the specified `attachmentName` (if any).\r\n     *\r\n     * @returns {Chart} Reference to this chart (chainable).\r\n     */\r\n    attach(attachmentName, chart) {\r\n        if (arguments.length === 1) {\r\n            return this._attached[attachmentName];\r\n        }\r\n\r\n        this._attached[attachmentName] = chart;\r\n        return chart;\r\n    };\r\n\r\n    \r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Subscribe a callback function to an event triggered on the chart. See {@link\r\n        * Chart#once} to subscribe a callback function to an event for one occurence.\r\n     *\r\n     * @externalExample {runnable} chart-on\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    on(name, callback, context) {\r\n        var events = this._events[name] || (this._events[name] = []);\r\n        events.push({\r\n            callback: callback,\r\n            context: context || this,\r\n            _chart: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     *\r\n     * Subscribe a callback function to an event triggered on the chart. This\r\n     * function will be invoked at the next occurance of the event and immediately\r\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n     * event indefinitely.\r\n     *\r\n     * @externalExample {runnable} chart-once\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable)\r\n     */\r\n    once(name, callback, context) {\r\n        var self = this;\r\n        var once = function () {\r\n            self.off(name, once);\r\n            callback.apply(this, arguments);\r\n        };\r\n        return this.on(name, once, context);\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Unsubscribe one or more callback functions from an event triggered on the\r\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n     * When only a `name` is specified, all handlers subscribed to that event will\r\n     * be unsubscribed. When a `name` and `callback` are specified, only that\r\n     * function will be unsubscribed from that event. When a `name` and `context`\r\n     * are specified (but `callback` is omitted), all events bound to the given\r\n     * event with the given context will be unsubscribed.\r\n     *\r\n     * @externalExample {runnable} chart-off\r\n     *\r\n     * @param {String} [name] Name of the event to be unsubscribed\r\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n     * @param {Object} [context] Contexts to be unsubscribe\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n\r\n    off(name, callback, context) {\r\n        var names, n, events, event, i, j;\r\n\r\n        // remove all events\r\n        if (arguments.length === 0) {\r\n            for (name in this._events) {\r\n                this._events[name].length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events for a specific name\r\n        if (arguments.length === 1) {\r\n            events = this._events[name];\r\n            if (events) {\r\n                events.length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events that match whatever combination of name, context\r\n        // and callback.\r\n        names = name ? [name] : Object.keys(this._events);\r\n        for (i = 0; i < names.length; i++) {\r\n            n = names[i];\r\n            events = this._events[n];\r\n            j = events.length;\r\n            while (j--) {\r\n                event = events[j];\r\n                if ((callback && callback === event.callback) ||\r\n                    (context && context === event.context)) {\r\n                    events.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Publish an event on this chart with the given `name`.\r\n     *\r\n     * @externalExample {runnable} chart-trigger\r\n     *\r\n     * @param {String} name Name of the event to publish\r\n     * @param {...*} arguments Values with which to invoke the registered\r\n     *        callbacks.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    trigger(name) {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var events = this._events[name];\r\n        var i, ev;\r\n\r\n        if (events !== undefined) {\r\n            for (i = 0; i < events.length; i++) {\r\n                ev = events[i];\r\n                ev.callback.apply(ev.context, args);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n    getBaseContainer(){\r\n        if(this._isAttached){\r\n            return this.baseContainer.svg;\r\n        }\r\n        return d3.select(this.baseContainer);\r\n    }\r\n\r\n    getBaseContainerNode(){\r\n\r\n        return this.getBaseContainer().node();\r\n    }\r\n\r\n    prefixClass(clazz, addDot){\r\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\r\n    }\r\n    computePlotSize() {\r\n        this.plot.width = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\r\n        this.plot.height = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\nimport {Legend} from './legend'\r\nimport {ScatterPlot} from './scatterplot'\r\n\r\nexport class CorrelationMatrixConfig extends ChartConfig {\r\n\r\n    svgClass = 'odc-correlation-matrix';\r\n    guides = false; //show axis guides\r\n    showTooltip = true; //show tooltip on dot hover\r\n    showLegend = true;\r\n    highlightLabels = true;\r\n    variables = {\r\n        labels: undefined,\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey], // variable value accessor\r\n        scale: \"ordinal\"\r\n    };\r\n    correlation = {\r\n        scale: \"linear\",\r\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\r\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\r\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\r\n\r\n    };\r\n    cell = {\r\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\r\n        size: undefined,\r\n        sizeMin: 15,\r\n        sizeMax: 250,\r\n        padding: 1\r\n    };\r\n    margin = {\r\n        left: 60,\r\n        right: 50,\r\n        top: 30,\r\n        bottom: 60\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CorrelationMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new CorrelationMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n\r\n        this.plot.x={};\r\n        this.plot.correlation={\r\n            matrix: undefined,\r\n            cells: undefined,\r\n            color: {},\r\n            shape: {}\r\n        };\r\n\r\n\r\n\r\n\r\n\r\n        this.setupVariables();\r\n        var width = conf.width;\r\n        var placeholderNode = this.getBaseContainerNode();\r\n        this.plot.placeholderNode = placeholderNode;\r\n\r\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\r\n        if (width) {\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n        } else {\r\n            this.plot.cellSize = this.config.cell.size;\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth- margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\r\n\r\n        }\r\n\r\n        var height = width;\r\n        if (!height) {\r\n            height = placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = this.plot.width;\r\n\r\n        this.setupVariablesScales();\r\n        this.setupCorrelationScales();\r\n        this.setupCorrelationMatrix();\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    setupVariablesScales() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.variables;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = conf.value;\r\n        x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n    };\r\n\r\n    setupCorrelationScales() {\r\n        var plot = this.plot;\r\n        var corrConf = this.config.correlation;\r\n\r\n        plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\r\n        var shape = plot.correlation.shape = {};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = cellConf.shape;\r\n\r\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\r\n        if (shape.type == 'circle') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\r\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\r\n        } else if (shape.type == 'ellipse') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\r\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\r\n            shape.radiusY = radiusMax;\r\n\r\n            shape.rotateVal = v => {\r\n                if (v == 0) return \"0\";\r\n                if (v < 0) return \"-45\";\r\n                return \"45\"\r\n            }\r\n        } else if (shape.type == 'rect') {\r\n            shape.size = shapeSize;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupVariables() {\r\n\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if (!plot.variables || !plot.variables.length) {\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            plot.domainByVariable[variableKey] = d3.extent(data,  (d) => variablesConf.value(d, variableKey));\r\n            var label = variableKey;\r\n            if (variablesConf.labels && variablesConf.labels.length > index) {\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n    };\r\n\r\n\r\n    setupCorrelationMatrix() {\r\n        var self = this;\r\n        var data = this.data;\r\n        var matrix = this.plot.correlation.matrix = [];\r\n        var matrixCells = this.plot.correlation.matrix.cells = [];\r\n        var plot = this.plot;\r\n\r\n        var variableToValues = {};\r\n        plot.variables.forEach((v, i) => {\r\n\r\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\r\n        });\r\n\r\n        plot.variables.forEach((v1, i) => {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            plot.variables.forEach((v2, j) => {\r\n                var corr = 1;\r\n                if (v1 != v2) {\r\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\r\n                }\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: corr\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        // this.update\r\n        this.updateCells();\r\n        this.updateVariableLabels();\r\n\r\n        if (this.config.showLegend) {\r\n            this.updateLegend();\r\n        }\r\n    };\r\n\r\n    updateVariableLabels() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = self.prefixClass(\"label\");\r\n        var labelXClass = labelClass + \"-x\";\r\n        var labelYClass = labelClass + \"-y\";\r\n        plot.labelClass = labelClass;\r\n\r\n\r\n        var labelsX = self.svgG.selectAll(\"text.\"+labelXClass)\r\n            .data(plot.variables, (d, i)=>i);\r\n\r\n        labelsX.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" +labelXClass+\" \"+ labelXClass + \"-\" + i);\r\n\r\n\r\n        labelsX\r\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"y\", plot.height)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"dy\", 5)\r\n            .attr(\"transform\", (d, i) => \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\r\n            .attr(\"text-anchor\", \"end\")\r\n\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        labelsX.exit().remove();\r\n\r\n        //////\r\n\r\n        var labelsY = self.svgG.selectAll(\"text.\"+labelYClass)\r\n            .data(plot.variables);\r\n\r\n        labelsY.enter().append(\"text\");\r\n\r\n\r\n        labelsY\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass +\" \" + labelYClass + \"-\" + i)\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        labelsY.exit().remove();\r\n\r\n\r\n    }\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellClass = self.prefixClass(\"cell\");\r\n        var cellShape = plot.correlation.shape.type;\r\n\r\n        var cells = self.svgG.selectAll(\"g.\"+cellClass)\r\n            .data(plot.correlation.matrix.cells);\r\n\r\n        var cellEnterG = cells.enter().append(\"g\")\r\n            .classed(cellClass, true);\r\n        cells.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\r\n\r\n        cells.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\r\n\r\n        var selector = \"*:not(.cell-shape-\"+cellShape+\")\";\r\n       \r\n        var wrongShapes = cells.selectAll(selector);\r\n        wrongShapes.remove();\r\n        \r\n        var shapes = cells.selectOrAppend(cellShape+\".cell-shape-\"+cellShape);\r\n\r\n        if (plot.correlation.shape.type == 'circle') {\r\n\r\n            shapes\r\n                .attr(\"r\", plot.correlation.shape.radius)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0);\r\n        }\r\n\r\n        if (plot.correlation.shape.type == 'ellipse') {\r\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\r\n            shapes\r\n                .attr(\"rx\", plot.correlation.shape.radiusX)\r\n                .attr(\"ry\", plot.correlation.shape.radiusY)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0)\r\n\r\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\r\n        }\r\n\r\n\r\n        if (plot.correlation.shape.type == 'rect') {\r\n            shapes\r\n                .attr(\"width\", plot.correlation.shape.size)\r\n                .attr(\"height\", plot.correlation.shape.size)\r\n                .attr(\"x\", -plot.cellSize / 2)\r\n                .attr(\"y\", -plot.cellSize / 2);\r\n        }\r\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\r\n\r\n        var mouseoverCallbacks = [];\r\n        var mouseoutCallbacks = [];\r\n\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value;\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (self.config.highlightLabels) {\r\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\r\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\r\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\r\n\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\r\n            });\r\n            mouseoutCallbacks.push(c=> {\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\r\n            });\r\n        }\r\n\r\n\r\n        cells.on(\"mouseover\", c => {\r\n            mouseoverCallbacks.forEach(callback=>callback(c));\r\n        })\r\n            .on(\"mouseout\", c => {\r\n                mouseoutCallbacks.forEach(callback=>callback(c));\r\n            });\r\n\r\n        cells.on(\"click\", c=>{\r\n           self.trigger(\"cell-selected\", c);\r\n        });\r\n\r\n\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n\r\n    updateLegend() {\r\n\r\n        var plot = this.plot;\r\n        var legendX = this.plot.width + 10;\r\n        var legendY = 0;\r\n        var barWidth = 10;\r\n        var barHeight = this.plot.height - 2;\r\n        var scale = plot.correlation.color.scale;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\r\n\r\n\r\n    }\r\n\r\n    attachScatterPlot(containerSelector, config) {\r\n        var self = this;\r\n\r\n        config = config || {};\r\n\r\n\r\n        var scatterPlotConfig = {\r\n            height: self.plot.height+self.config.margin.top+ self.config.margin.bottom,\r\n            width: self.plot.height+self.config.margin.top+ self.config.margin.bottom,\r\n            groups:{\r\n                key: self.config.groups.key,\r\n                label: self.config.groups.label\r\n            },\r\n            guides: true,\r\n            showLegend: false\r\n        };\r\n\r\n        self.scatterPlot=true;\r\n\r\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\r\n        this.update();\r\n\r\n        this.on(\"cell-selected\", c=>{\r\n\r\n\r\n\r\n            scatterPlotConfig.x={\r\n                key: c.rowVar,\r\n                label: self.plot.labelByVariable[c.rowVar]\r\n            };\r\n            scatterPlotConfig.y={\r\n                key: c.colVar,\r\n                label: self.plot.labelByVariable[c.colVar]\r\n            };\r\n            if(self.scatterPlot && self.scatterPlot !==true){\r\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\r\n            }else{\r\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\r\n                this.attach(\"ScatterPlot\", self.scatterPlot);\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n}\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class D3Extensions{\r\n\r\n    static extend(){\r\n\r\n        d3.selection.enter.prototype.insertSelector =\r\n            d3.selection.prototype.insertSelector = function(selector, before) {\r\n                return Utils.insertSelector(this, selector, before);\r\n            };\r\n\r\n\r\n        d3.selection.enter.prototype.appendSelector =\r\n            d3.selection.prototype.appendSelector = function(selector) {\r\n                return Utils.appendSelector(this, selector);\r\n            };\r\n\r\n        d3.selection.enter.prototype.selectOrAppend =\r\n            d3.selection.prototype.selectOrAppend = function(selector) {\r\n                return Utils.selectOrAppend(this, selector);\r\n            };\r\n\r\n        d3.selection.enter.prototype.selectOrInsert =\r\n            d3.selection.prototype.selectOrInsert = function(selector, before) {\r\n                return Utils.selectOrInsert(this, selector, before);\r\n            };\r\n\r\n\r\n\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from './legend'\r\n\r\n\r\nexport class HeatmapConfig extends ChartConfig {\r\n\r\n    svgClass = 'odc-heatmap';\r\n    showTooltip = true; //show tooltip on dot hover\r\n    tooltip = {\r\n         noDataText: \"N/A\"\r\n    };\r\n    showLegend = true;\r\n    legend={\r\n        width: 30,\r\n\r\n        decimalPlaces: undefined,\r\n        formatter: v => this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(this.legend.decimalPlaces)\r\n    }\r\n    highlightLabels = true;\r\n    x={// X axis config\r\n        title: '', // axis title\r\n        key: 0,\r\n        value: (d) => d[this.x.key], // x value accessor\r\n        rotateLabels: true,\r\n        sortLabels: false,\r\n        sortComparator: (a, b)=> Utils.isNumber(a) ? a-b : a.localeCompare(b),\r\n        groups: {\r\n            keys: [],\r\n            labels: [],\r\n            value: (d, key) => d[key],\r\n            overlap: {\r\n                top: 20,\r\n                bottom: 20\r\n            }\r\n        },\r\n        formatter: undefined // value formatter function\r\n        \r\n    };\r\n    y={// Y axis config\r\n        title: '', // axis title,\r\n        rotateLabels: true,\r\n        key: 1,\r\n        value: (d) => d[this.y.key], // y value accessor\r\n        sortLabels: false,\r\n        sortComparator: (a, b)=> Utils.isNumber(b) ? b-a : b.localeCompare(a),\r\n        groups: {\r\n            keys: [],\r\n            labels: [],\r\n            value: (d, key) => d[key],\r\n            overlap: {\r\n                left: 20,\r\n                right: 20\r\n            }\r\n        },\r\n        formatter: undefined// value formatter function\r\n    };\r\n    z = {\r\n        key: 2,\r\n        value: (d) =>  d[this.z.key],\r\n        notAvailableValue: (v) =>  v === null || v===undefined,\r\n\r\n        decimalPlaces: undefined,\r\n        formatter: v => this.z.decimalPlaces === undefined ? v : Number(v).toFixed(this.z.decimalPlaces)// value formatter function\r\n\r\n    };\r\n    color = {\r\n        noDataColor: \"white\",\r\n        scale: \"linear\",\r\n        range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\r\n    };\r\n    cell = {\r\n        width: undefined,\r\n        height: undefined,\r\n        sizeMin: 15,\r\n        sizeMax: 250,\r\n        padding: 0\r\n    };\r\n    margin = {\r\n        left: 60,\r\n        right: 50,\r\n        top: 30,\r\n        bottom: 80\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\n//TODO refactor\r\nexport class Heatmap extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new HeatmapConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new HeatmapConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n\r\n        this.plot.x={};\r\n        this.plot.y={};\r\n        this.plot.z={\r\n            matrixes: undefined,\r\n            cells: undefined,\r\n            color: {},\r\n            shape: {}\r\n        };\r\n\r\n\r\n        this.setupValues();\r\n\r\n        var titleRectWidth = 6;\r\n        this.plot.x.overlap ={\r\n            top:0,\r\n            bottom: 0\r\n        };\r\n        if(this.plot.groupByX){\r\n            let depth = self.config.x.groups.keys.length;\r\n            let allTitlesWidth = depth*(titleRectWidth);\r\n\r\n            this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom ;\r\n            this.plot.x.overlap.top = self.config.x.groups.overlap.top+ allTitlesWidth;\r\n            this.plot.margin.top = conf.margin.right + conf.x.groups.overlap.top;\r\n            this.plot.margin.bottom = conf.margin.bottom + conf.x.groups.overlap.bottom;\r\n        }\r\n\r\n\r\n        this.plot.y.overlap ={\r\n            left:0,\r\n            right: 0\r\n        };\r\n\r\n\r\n        if(this.plot.groupByY){\r\n            let depth = self.config.y.groups.keys.length;\r\n            let allTitlesWidth = depth*(titleRectWidth);\r\n            this.plot.y.overlap.right = self.config.y.groups.overlap.left + allTitlesWidth;\r\n            this.plot.y.overlap.left = self.config.y.groups.overlap.left;\r\n            this.plot.margin.left = conf.margin.left + this.plot.y.overlap.left;\r\n            this.plot.margin.right = conf.margin.right + this.plot.y.overlap.right;\r\n        }\r\n        this.plot.showLegend = conf.showLegend;\r\n        if(this.plot.showLegend){\r\n            this.plot.margin.right += conf.legend.width;\r\n        }\r\n        this.computePlotSize();\r\n        this.setupZScale();\r\n\r\n        return this;\r\n    }\r\n\r\n    setupValues(){\r\n        var self = this;\r\n        var config = self.config;\r\n        var x = self.plot.x;\r\n        var y = self.plot.y;\r\n        var z = self.plot.z;\r\n\r\n\r\n        x.value = d => config.x.value.call(config, d);\r\n        y.value = d => config.y.value.call(config, d);\r\n        z.value = d => config.z.value.call(config, d);\r\n\r\n        x.uniqueValues = [];\r\n        y.uniqueValues = [];\r\n\r\n\r\n\r\n        self.plot.groupByY = !!config.y.groups.keys.length;\r\n        self.plot.groupByX = !!config.x.groups.keys.length;\r\n\r\n        y.groups = {\r\n            key: undefined,\r\n            label: '',\r\n            values: [],\r\n            children: null,\r\n            level:0,\r\n            index: 0,\r\n            lastIndex: 0\r\n        };\r\n        x.groups = {\r\n            key: undefined,\r\n            label: '',\r\n            values: [],\r\n            children: null,\r\n            level:0,\r\n            index: 0,\r\n            lastIndex: 0\r\n        };\r\n\r\n        var valueMap = {};\r\n        var minZ = undefined;\r\n        var maxZ = undefined;\r\n        this.data.forEach(d=>{\r\n\r\n            var xVal = x.value(d);\r\n            var yVal = y.value(d);\r\n            var zValRaw = z.value(d);\r\n            var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\r\n\r\n\r\n\r\n            if(x.uniqueValues.indexOf(xVal)===-1){\r\n                x.uniqueValues.push(xVal);\r\n            }\r\n\r\n            if(y.uniqueValues.indexOf(yVal)===-1){\r\n                y.uniqueValues.push(yVal);\r\n            }\r\n\r\n            var groupY = y.groups;\r\n            if(self.plot.groupByY){\r\n                groupY = this.updateGroups(d, yVal, y.groups, config.y.groups);\r\n            }\r\n            var groupX = x.groups;\r\n            if(self.plot.groupByX){\r\n\r\n                groupX = this.updateGroups(d, xVal, x.groups, config.x.groups);\r\n            }\r\n\r\n            if(!valueMap[groupY.index]){\r\n                valueMap[groupY.index]={};\r\n            }\r\n\r\n            if(!valueMap[groupY.index][groupX.index]){\r\n                valueMap[groupY.index][groupX.index] = {};\r\n            }\r\n            if(!valueMap[groupY.index][groupX.index][yVal]){\r\n                valueMap[groupY.index][groupX.index][yVal]={};\r\n            }\r\n            valueMap[groupY.index][groupX.index][yVal][xVal]=zVal;\r\n\r\n\r\n            if(minZ === undefined || zVal<minZ){\r\n                minZ = zVal;\r\n            }\r\n            if(maxZ === undefined || zVal>maxZ){\r\n                maxZ = zVal;\r\n            }\r\n        });\r\n        self.plot.valueMap = valueMap;\r\n\r\n\r\n        if(!self.plot.groupByX) {\r\n            x.groups.values = x.uniqueValues;\r\n        }\r\n\r\n        if(!self.plot.groupByY) {\r\n            y.groups.values = y.uniqueValues;\r\n        }\r\n\r\n        x.gaps=[];\r\n        x.totalValuesCount=0;\r\n        x.allValuesList=[];\r\n        this.sortGroups(x, x.groups, config.x);\r\n\r\n\r\n        y.gaps=[];\r\n        y.totalValuesCount=0;\r\n        y.allValuesList=[];\r\n        this.sortGroups(y, y.groups, config.y);\r\n\r\n        z.min = minZ;\r\n        z.max = maxZ;\r\n\r\n        this.buildCells();\r\n\r\n    }\r\n    buildCells(){\r\n        var self = this;\r\n        var config = self.config;\r\n        var x = self.plot.x;\r\n        var y = self.plot.y;\r\n        var z = self.plot.z;\r\n        var valueMap = self.plot.valueMap;\r\n\r\n        var matrixCells = self.plot.cells =[];\r\n        var matrix = self.plot.matrix = [];\r\n\r\n        y.allValuesList.forEach((v1, i)=> {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            x.allValuesList.forEach((v2, j) => {\r\n                var zVal = undefined;\r\n                try{\r\n                    zVal =valueMap[v1.group.index][v2.group.index][v1.val][v2.val]\r\n                }catch(e){\r\n                    // console.log(e);\r\n\r\n                }\r\n\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: zVal\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    updateGroups(d,axisVal, rootGroup, axisGroupsConfig){\r\n\r\n        var config = this.config;\r\n        var currentGroup = rootGroup;\r\n        axisGroupsConfig.keys.forEach((groupKey, groupKeyIndex) => {\r\n            currentGroup.key = groupKey;\r\n\r\n            if(!currentGroup.children){\r\n                currentGroup.children = {};\r\n            }\r\n\r\n            var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\r\n\r\n            if(!currentGroup.children.hasOwnProperty(groupingValue)){\r\n                rootGroup.lastIndex++;\r\n                currentGroup.children[groupingValue] = {\r\n                    values: [],\r\n                    children: null,\r\n                    groupingValue: groupingValue,\r\n                    level: currentGroup.level + 1,\r\n                    index: rootGroup.lastIndex,\r\n                    key: groupKey\r\n                }\r\n            }\r\n\r\n            currentGroup = currentGroup.children[groupingValue];\r\n        });\r\n\r\n        if(currentGroup.values.indexOf(axisVal)===-1){\r\n            currentGroup.values.push(axisVal);\r\n        }\r\n\r\n        return currentGroup;\r\n    }\r\n\r\n    sortGroups(axis, group, axisConfig, gaps){\r\n        if(axisConfig.groups.labels && axisConfig.groups.labels.length>group.level){\r\n            group.label = axisConfig.groups.labels[group.level];\r\n        }else{\r\n            group.label = group.key;\r\n        }\r\n\r\n        if(!gaps){\r\n            gaps = [0];\r\n        }\r\n        if(gaps.length<=group.level){\r\n            gaps.push(0);\r\n        }\r\n\r\n        group.allValuesCount = group.allValuesCount || 0;\r\n        group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\r\n\r\n        group.gaps = gaps.slice();\r\n        group.gapsBefore = gaps.slice();\r\n\r\n\r\n        group.gapsSize = Heatmap.computeGapsSize(group.gaps);\r\n        group.gapsBeforeSize = group.gapsSize;\r\n        if(group.values){\r\n            if(axisConfig.sortLabels){\r\n                group.values.sort(axisConfig.sortComparator);\r\n            }\r\n            group.values.forEach(v=>axis.allValuesList.push({val:v, group: group}));\r\n            group.allValuesBeforeCount = axis.totalValuesCount;\r\n            axis.totalValuesCount += group.values.length;\r\n            group.allValuesCount +=group.values.length;\r\n        }\r\n\r\n        group.childrenList = [];\r\n        if(group.children){\r\n            var childrenCount=0;\r\n\r\n            for(var childProp in group.children){\r\n                if(group.children.hasOwnProperty(childProp)){\r\n                    var child = group.children[childProp];\r\n                    group.childrenList.push(child);\r\n                    childrenCount++;\r\n\r\n                    this.sortGroups(axis, child, axisConfig, gaps);\r\n                    group.allValuesCount +=child.allValuesCount;\r\n                    gaps[group.level]+=1;\r\n                }\r\n            }\r\n\r\n            if(gaps && childrenCount>1){\r\n                gaps[group.level]-=1;\r\n            }\r\n\r\n            group.gapsInside = [];\r\n            gaps.forEach((d,i)=>{\r\n                group.gapsInside.push(d-(group.gapsBefore[i]|| 0));\r\n            });\r\n            group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\r\n\r\n            if(axis.gaps.length < gaps.length){\r\n                axis.gaps = gaps;\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    static computeGapSize(gapLevel){\r\n        return 24/(gapLevel + 1);\r\n    }\r\n\r\n    static computeGapsSize(gaps){\r\n        var gapsSize = 0;\r\n        gaps.forEach((gapsNumber, gapsLevel)=> gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel));\r\n        return gapsSize;\r\n    }\r\n\r\n    computePlotSize() {\r\n\r\n        var plot = this.plot;\r\n        var conf = this.config;\r\n        var margin = plot.margin;\r\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\r\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\r\n        var width = availableWidth;\r\n        var height = availableHeight;\r\n\r\n        var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\r\n\r\n\r\n        var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth-xGapsSize) / this.plot.x.totalValuesCount));\r\n        if (this.config.width) {\r\n\r\n            if (!this.config.cell.width) {\r\n                this.plot.cellWidth = computedCellWidth;\r\n            }\r\n\r\n        } else {\r\n            this.plot.cellWidth = this.config.cell.width;\r\n\r\n            if (!this.plot.cellWidth) {\r\n                this.plot.cellWidth = computedCellWidth;\r\n            }\r\n\r\n        }\r\n        width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right+xGapsSize;\r\n\r\n        var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\r\n        var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight-yGapsSize) / this.plot.y.totalValuesCount));\r\n        if(this.config.height){\r\n            if (!this.config.cell.height) {\r\n                this.plot.cellHeight = computedCellHeight;\r\n            }\r\n        }else {\r\n            this.plot.cellHeight = this.config.cell.height;\r\n\r\n            if (!this.plot.cellHeight) {\r\n                this.plot.cellHeight = computedCellHeight;\r\n            }\r\n\r\n        }\r\n\r\n        height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\r\n\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height =height -margin.top - margin.bottom;\r\n    }\r\n\r\n\r\n    setupZScale() {\r\n\r\n        var self = this;\r\n        var config = self.config;\r\n        var z = self.plot.z;\r\n        var range = config.color.range;\r\n        var extent = z.max - z.min;\r\n        if(config.color.scale==\"log\"){\r\n            z.domain = [];\r\n            range.forEach((c, i)=>{\r\n                var v = z.min + (extent/Math.pow(10, i));\r\n                z.domain.unshift(v)\r\n            });\r\n        }else{\r\n            z.domain = [];\r\n            range.forEach((c, i)=>{\r\n                var v = z.min + (extent * (i/(range.length-1)));\r\n                z.domain.push(v)\r\n            });\r\n        }\r\n        z.domain[0]=z.min; //removing unnecessary floating points\r\n        z.domain[z.domain.length-1]=z.max; //removing unnecessary floating points\r\n        console.log(z.domain);\r\n\r\n        var plot = this.plot;\r\n\r\n        console.log(range);\r\n        plot.z.color.scale = d3.scale[config.color.scale]().domain(z.domain).range(range);\r\n        var shape = plot.z.shape = {};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = \"rect\";\r\n\r\n        plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\r\n        plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\r\n    }\r\n\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        if(this.plot.groupByY){\r\n            this.drawGroupsY(this.plot.y.groups, this.svgG);\r\n        }\r\n        if(this.plot.groupByX){\r\n            this.drawGroupsX(this.plot.x.groups, this.svgG);\r\n        }\r\n\r\n        this.updateCells();\r\n\r\n        this.updateVariableLabels();\r\n\r\n        if (this.config.showLegend) {\r\n            this.updateLegend();\r\n        }\r\n\r\n        this.updateAxisTitles();\r\n    };\r\n\r\n    updateAxisTitles(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x'))\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.height + plot.margin.bottom) +\")\")\r\n            .selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(self.config.x.title);\r\n\r\n        self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y'))\r\n            .selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(self.config.y.title);\r\n    }\r\n\r\n\r\n\r\n    updateVariableLabels() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = self.prefixClass(\"label\");\r\n        var labelXClass = labelClass + \"-x\";\r\n        var labelYClass = labelClass + \"-y\";\r\n        plot.labelClass = labelClass;\r\n\r\n        var offsetX = {\r\n            x:0,\r\n            y:0\r\n        };\r\n        let gapSize = Heatmap.computeGapSize(0);\r\n        if(plot.groupByX){\r\n            let overlap = self.config.x.groups.overlap;\r\n\r\n            offsetX.x= gapSize/2;\r\n            offsetX.y= overlap.bottom+gapSize/2+6;\r\n        }else if(plot.groupByY){\r\n            offsetX.y= gapSize;\r\n        }\r\n\r\n\r\n        var labelsX = self.svgG.selectAll(\"text.\"+labelXClass)\r\n            .data(plot.x.allValuesList, (d, i)=>i);\r\n\r\n        labelsX.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" +labelXClass+\" \"+ labelXClass + \"-\" + i);\r\n\r\n        labelsX\r\n            .attr(\"x\", (d, i) => (i * plot.cellWidth + plot.cellWidth / 2) +(d.group.gapsSize)+offsetX.x)\r\n            .attr(\"y\", plot.height + offsetX.y)\r\n            .attr(\"dy\", 10)\r\n\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text(d=>self.formatValueX(d.val));\r\n\r\n        if(self.config.x.rotateLabels){\r\n            labelsX.attr(\"transform\", (d, i) => \"rotate(-45, \" + ((i * plot.cellWidth + plot.cellWidth / 2) +d.group.gapsSize +offsetX.x ) + \", \" + ( plot.height + offsetX.y) + \")\")\r\n                .attr(\"dx\", -2)\r\n                .attr(\"dy\", 8)\r\n                .attr(\"text-anchor\", \"end\");\r\n        }\r\n\r\n\r\n        labelsX.exit().remove();\r\n\r\n\r\n        var labelsY = self.svgG.selectAll(\"text.\"+labelYClass)\r\n            .data(plot.y.allValuesList);\r\n\r\n        labelsY.enter().append(\"text\");\r\n\r\n        var offsetY = {\r\n            x:0,\r\n            y:0\r\n        };\r\n        if(plot.groupByY){\r\n            let overlap = self.config.y.groups.overlap;\r\n            let gapSize = Heatmap.computeGapSize(0);\r\n            offsetY.x= -overlap.left;\r\n\r\n            offsetY.y= gapSize/2;\r\n        }\r\n        labelsY\r\n            .attr(\"x\", offsetY.x)\r\n            .attr(\"y\", (d, i) => (i * plot.cellHeight + plot.cellHeight / 2) + d.group.gapsSize +offsetY.y)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass +\" \" + labelYClass + \"-\" + i)\r\n\r\n            .text(d=>self.formatValueY(d.val));\r\n\r\n        if(self.config.y.rotateLabels){\r\n            labelsY\r\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + (offsetY.x  ) + \", \" + (d.group.gapsSize+(i * plot.cellHeight + plot.cellHeight / 2) +offsetY.y) + \")\")\r\n                .attr(\"text-anchor\", \"end\");\r\n                // .attr(\"dx\", -7);\r\n        }else{\r\n            labelsY.attr(\"dominant-baseline\", \"middle\")\r\n        }\r\n\r\n        labelsY.exit().remove();\r\n\r\n\r\n    }\r\n\r\n    drawGroupsY(parentGroup, container, availableWidth) {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n\r\n        var groupClass = self.prefixClass(\"group\");\r\n        var groupYClass = groupClass+\"-y\";\r\n        var groups = container.selectAll(\"g.\"+groupClass+\".\"+groupYClass)\r\n            .data(parentGroup.childrenList);\r\n\r\n        var valuesBeforeCount =0;\r\n        var gapsBeforeSize = 0;\r\n\r\n        var groupsEnterG = groups.enter().append(\"g\");\r\n        groupsEnterG\r\n            .classed(groupClass, true)\r\n            .classed(groupYClass, true)\r\n            .append(\"rect\").classed(\"group-rect\", true);\r\n\r\n        var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\r\n        titleGroupEnter.append(\"rect\");\r\n        titleGroupEnter.append(\"text\");\r\n\r\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\r\n        var padding = gapSize/4;\r\n\r\n        var titleRectWidth = 6;\r\n        var depth = self.config.y.groups.keys.length - parentGroup.level;\r\n        var overlap ={\r\n            left:0,\r\n            right: 0\r\n        };\r\n\r\n        if(!availableWidth){\r\n            overlap.right = plot.y.overlap.left;\r\n            overlap.left = plot.y.overlap.left;\r\n            availableWidth =plot.width + gapSize + overlap.left+overlap.right;\r\n        }\r\n\r\n\r\n        groups\r\n            .attr(\"transform\", (d, i) => {\r\n\r\n\r\n                var trnaslateVAl = \"translate(\" + (padding-overlap.left) + \",\" + ((plot.cellHeight * valuesBeforeCount) + i*gapSize + gapsBeforeSize + padding) + \")\";\r\n                gapsBeforeSize+=(d.gapsInsideSize||0);\r\n                valuesBeforeCount+=d.allValuesCount||0;\r\n                return trnaslateVAl\r\n            });\r\n\r\n\r\n\r\n        var groupWidth = availableWidth-padding*2;\r\n\r\n        var titleGroups = groups.selectAll(\"g.title\")\r\n            .attr(\"transform\", (d, i) => \"translate(\"+(groupWidth-titleRectWidth)+\", 0)\");\r\n\r\n        var tileRects = titleGroups.selectAll(\"rect\")\r\n            .attr(\"width\", titleRectWidth)\r\n            .attr(\"height\", d=> {\r\n                return (d.gapsInsideSize||0) + plot.cellHeight*d.allValuesCount +padding*2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            // .attr(\"fill\", \"lightgrey\")\r\n            .attr(\"stroke-width\", 0);\r\n\r\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\r\n\r\n\r\n        groups.selectAll(\"rect.group-rect\")\r\n            .attr(\"class\", d=> \"group-rect group-rect-\"+d.index)\r\n            .attr(\"width\", groupWidth)\r\n            .attr(\"height\", d=> {\r\n                return (d.gapsInsideSize||0) + plot.cellHeight*d.allValuesCount +padding*2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"fill-opacity\", 0)\r\n            .attr(\"stroke-width\", 0.5)\r\n            .attr(\"stroke\", \"black\")\r\n\r\n\r\n\r\n\r\n\r\n        groups.each(function(group){\r\n\r\n            self.drawGroupsY.call(self, group, d3.select(this), groupWidth-titleRectWidth);\r\n        });\r\n\r\n    }\r\n\r\n    drawGroupsX(parentGroup, container, availableHeight) {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n\r\n        var groupClass = self.prefixClass(\"group\");\r\n        var groupXClass = groupClass+\"-x\";\r\n        var groups = container.selectAll(\"g.\"+groupClass+\".\"+groupXClass)\r\n            .data(parentGroup.childrenList);\r\n\r\n        var valuesBeforeCount =0;\r\n        var gapsBeforeSize = 0;\r\n\r\n        var groupsEnterG = groups.enter().append(\"g\");\r\n        groupsEnterG\r\n            .classed(groupClass, true)\r\n            .classed(groupXClass, true)\r\n            .append(\"rect\").classed(\"group-rect\", true);\r\n\r\n        var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\r\n        titleGroupEnter.append(\"rect\");\r\n        titleGroupEnter.append(\"text\");\r\n\r\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\r\n        var padding = gapSize/4;\r\n        var titleRectHeight = 6;\r\n\r\n        var depth = self.config.x.groups.keys.length - parentGroup.level;\r\n\r\n        var overlap={\r\n            top:0,\r\n            bottom: 0\r\n        };\r\n\r\n        if(!availableHeight){\r\n            overlap.bottom = plot.x.overlap.bottom;\r\n            overlap.top = plot.x.overlap.top;\r\n\r\n            availableHeight =plot.height + gapSize + overlap.top+overlap.bottom;\r\n\r\n        }else{\r\n            overlap.top = -titleRectHeight;\r\n        }\r\n        // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\r\n\r\n        groups\r\n            .attr(\"transform\", (d, i) => {\r\n\r\n                var trnaslateVAl = \"translate(\" + ((plot.cellWidth * valuesBeforeCount) + i*gapSize + gapsBeforeSize + padding) + \", \"+(padding -overlap.top)+\")\";\r\n                gapsBeforeSize+=(d.gapsInsideSize||0);\r\n                valuesBeforeCount+=d.allValuesCount||0;\r\n                return trnaslateVAl\r\n            });\r\n\r\n        var groupHeight = availableHeight-padding*2;\r\n\r\n        var titleGroups = groups.selectAll(\"g.title\")\r\n            .attr(\"transform\", (d, i) => \"translate(0, \"+(0)+\")\");\r\n\r\n\r\n        var tileRects = titleGroups.selectAll(\"rect\")\r\n            .attr(\"height\", titleRectHeight)\r\n            .attr(\"width\", d=> {\r\n                return (d.gapsInsideSize||0) + plot.cellWidth*d.allValuesCount +padding*2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            // .attr(\"fill\", \"lightgrey\")\r\n            .attr(\"stroke-width\", 0);\r\n\r\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\r\n\r\n\r\n        groups.selectAll(\"rect.group-rect\")\r\n            .attr(\"class\", d=> \"group-rect group-rect-\"+d.index)\r\n            .attr(\"height\", groupHeight)\r\n            .attr(\"width\", d=> {\r\n                return (d.gapsInsideSize||0) + plot.cellWidth*d.allValuesCount +padding*2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"fill-opacity\", 0)\r\n            .attr(\"stroke-width\", 0.5)\r\n            .attr(\"stroke\", \"black\");\r\n\r\n        groups.each(function(group){\r\n            self.drawGroupsX.call(self, group, d3.select(this), groupHeight-titleRectHeight);\r\n        });\r\n\r\n    }\r\n\r\n    setGroupMouseCallbacks(parentGroup, tileRects) {\r\n        var plot = this.plot;\r\n        var self = this;\r\n        var mouseoverCallbacks = [];\r\n        mouseoverCallbacks.push(function (d) {\r\n            d3.select(this).classed('highlighted', true);\r\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\r\n        });\r\n\r\n        var mouseoutCallbacks = [];\r\n        mouseoutCallbacks.push(function (d) {\r\n            d3.select(this).classed('highlighted', false);\r\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\r\n        });\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(d=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = parentGroup.label + \": \" + d.groupingValue;\r\n\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(d=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n        tileRects.on(\"mouseover\", function (d) {\r\n            var self = this;\r\n            mouseoverCallbacks.forEach(function (callback) {\r\n                callback.call(self, d)\r\n            });\r\n        });\r\n        tileRects.on(\"mouseout\", function (d) {\r\n            var self = this;\r\n            mouseoutCallbacks.forEach(function (callback) {\r\n                callback.call(self, d)\r\n            });\r\n        });\r\n    }\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellContainerClass = self.prefixClass(\"cells\");\r\n        var gapSize = Heatmap.computeGapSize(0);\r\n        var paddingX = plot.x.groups.childrenList.length ? gapSize/2 : 0;\r\n        var paddingY = plot.y.groups.childrenList.length ? gapSize/2 : 0;\r\n        var cellContainer = self.svgG.selectOrAppend(\"g.\"+cellContainerClass);\r\n        cellContainer.attr(\"transform\" , \"translate(\"+paddingX+\", \"+paddingY+\")\");\r\n\r\n        var cellClass = self.prefixClass(\"cell\");\r\n        var cellShape = plot.z.shape.type;\r\n\r\n        var cells = cellContainer.selectAll(\"g.\"+cellClass)\r\n            .data(self.plot.cells);\r\n\r\n        var cellEnterG = cells.enter().append(\"g\")\r\n            .classed(cellClass, true);\r\n        cells.attr(\"transform\", c=> \"translate(\" + ((plot.cellWidth * c.col + plot.cellWidth / 2)+c.colVar.group.gapsSize) + \",\" + ((plot.cellHeight * c.row + plot.cellHeight / 2)+c.rowVar.group.gapsSize) + \")\");\r\n\r\n        var shapes = cells.selectOrAppend(cellShape+\".cell-shape-\"+cellShape);\r\n\r\n        shapes\r\n            .attr(\"width\", plot.z.shape.width)\r\n            .attr(\"height\", plot.z.shape.height)\r\n            .attr(\"x\", -plot.cellWidth / 2)\r\n            .attr(\"y\", -plot.cellHeight / 2);\r\n\r\n        shapes.style(\"fill\", c=> c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value));\r\n        shapes.attr(\"fill-opacity\", d=> d.value === undefined ? 0 : 1);\r\n\r\n        var mouseoverCallbacks = [];\r\n        var mouseoutCallbacks = [];\r\n\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\r\n\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (self.config.highlightLabels) {\r\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\r\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\r\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\r\n\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\r\n            });\r\n            mouseoutCallbacks.push(c=> {\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\r\n            });\r\n        }\r\n\r\n\r\n        cells.on(\"mouseover\", c => {\r\n            mouseoverCallbacks.forEach(callback=>callback(c));\r\n        })\r\n            .on(\"mouseout\", c => {\r\n                mouseoutCallbacks.forEach(callback=>callback(c));\r\n            });\r\n\r\n        cells.on(\"click\", c=>{\r\n           self.trigger(\"cell-selected\", c);\r\n        });\r\n\r\n\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n    formatValueX(value){\r\n        if(!this.config.x.formatter) return value;\r\n\r\n        return this.config.x.formatter.call(this.config, value);\r\n    }\r\n\r\n    formatValueY(value){\r\n        if(!this.config.y.formatter) return value;\r\n\r\n        return this.config.y.formatter.call(this.config, value);\r\n    }\r\n\r\n    formatValueZ(value){\r\n        if(!this.config.z.formatter) return value;\r\n\r\n        return this.config.z.formatter.call(this.config, value);\r\n    }\r\n\r\n    formatLegendValue(value){\r\n        if(!this.config.legend.formatter) return value;\r\n\r\n        return this.config.legend.formatter.call(this.config, value);\r\n    }\r\n\r\n    updateLegend() {\r\n        var self= this;\r\n        var plot = this.plot;\r\n        var legendX = this.plot.width + 10;\r\n        var gapSize = Heatmap.computeGapSize(0);\r\n        if(this.plot.groupByY){\r\n            legendX+= gapSize/2 +plot.y.overlap.right;\r\n        }else if(this.plot.groupByX){\r\n            legendX+= gapSize;\r\n        }\r\n        var legendY = 0;\r\n        if(this.plot.groupByX || this.plot.groupByY){\r\n            legendY+= gapSize/2;\r\n        }\r\n\r\n\r\n        var barWidth = 10;\r\n        var barHeight = this.plot.height - 2;\r\n        var scale = plot.z.color.scale;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY, v => self.formatLegendValue(v)).linearGradientBar(barWidth, barHeight);\r\n\r\n    }\r\n}\r\n","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\r\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\r\nexport {Regression, RegressionConfig} from './regression'\r\nexport {Heatmap, HeatmapConfig} from './heatmap'\r\nexport {StatisticsUtils} from './statistics-utils'\r\nexport {Legend} from './legend'\r\n\r\n\r\n\r\n\r\n\r\n","import {Utils} from \"./utils\";\r\nimport {color, size, symbol} from \"../bower_components/d3-legend/no-extend\";\r\n\r\n/*var d3 = require('../bower_components/d3');\r\n*/\r\n// var legend = require('../bower_components/d3-legend/no-extend');\r\n//\r\n// module.exports.legend = legend;\r\n\r\nexport class Legend {\r\n\r\n    cssClassPrefix=\"odc-\";\r\n    legendClass=this.cssClassPrefix+\"legend\";\r\n    container;\r\n    scale;\r\n    color= color;\r\n    size = size;\r\n    symbol= symbol;\r\n    guid;\r\n\r\n    labelFormat = undefined;\r\n\r\n    constructor(svg, legendParent, scale, legendX, legendY, labelFormat){\r\n        this.scale=scale;\r\n        this.svg = svg;\r\n        this.guid = Utils.guid();\r\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\r\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\r\n            .classed(this.legendClass, true);\r\n\r\n        this.labelFormat = labelFormat;\r\n    }\r\n\r\n\r\n\r\n    linearGradientBar(barWidth, barHeight, title){\r\n        var gradientId = this.cssClassPrefix+\"linear-gradient\"+\"-\"+this.guid;\r\n        var scale= this.scale;\r\n        var self = this;\r\n\r\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\r\n\r\n        this.container.append(\"rect\")\r\n            .attr(\"width\", barWidth)\r\n            .attr(\"height\", barHeight)\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\r\n\r\n\r\n        var ticks = this.container.selectAll(\"text\")\r\n            .data( scale.domain() );\r\n        var ticksNumber =scale.domain().length-1;\r\n        ticks.enter().append(\"text\")\r\n            .attr(\"x\", barWidth)\r\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\r\n            .attr(\"dx\", 3)\r\n            // .attr(\"dy\", 1)\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .text(d=> self.labelFormat ? self.labelFormat(d) : d);\r\n\r\n        ticks.exit().remove();\r\n\r\n        return this;\r\n    }\r\n\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\n\r\n\r\nexport class RegressionConfig extends ScatterPlotConfig{\r\n\r\n    mainRegression = true;\r\n    groupRegression = true;\r\n    confidence={\r\n        level: 0.95,\r\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\r\n        marginOfError: undefined //custom  margin Of Error function (x, points)\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class Regression extends ScatterPlot{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new RegressionConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new RegressionConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        this.initRegressionLines();\r\n    }\r\n\r\n    initRegressionLines(){\r\n\r\n        var self = this;\r\n        var groupsAvailable = self.config.groups && self.config.groups.value;\r\n\r\n        self.plot.regressions= [];\r\n\r\n\r\n        if(groupsAvailable && self.config.mainRegression){\r\n            var regression = this.initRegression(this.data, false);\r\n            self.plot.regressions.push(regression);\r\n        }\r\n\r\n        if(self.config.groupRegression){\r\n            this.initGroupRegression();\r\n        }\r\n\r\n    }\r\n\r\n    initGroupRegression() {\r\n        var self = this;\r\n        var dataByGroup = {};\r\n        self.data.forEach (d=>{\r\n            var groupVal = self.config.groups.value(d, self.config.groups.key);\r\n\r\n            if(!groupVal && groupVal!==0){\r\n                return;\r\n            }\r\n\r\n            if(!dataByGroup[groupVal]){\r\n                dataByGroup[groupVal] = [];\r\n            }\r\n            dataByGroup[groupVal].push(d);\r\n        });\r\n\r\n        for(var key in dataByGroup){\r\n            if (!dataByGroup.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            var regression = this.initRegression(dataByGroup[key], key);\r\n            self.plot.regressions.push(regression);\r\n        }\r\n    }\r\n\r\n    initRegression(values, groupVal){\r\n        var self = this;\r\n\r\n        var points = values.map(d=>{\r\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\r\n        });\r\n\r\n        // points.sort((a,b) => a[0]-b[0]);\r\n\r\n        var linearRegression =  StatisticsUtils.linearRegression(points);\r\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\r\n\r\n\r\n        var extentX = d3.extent(points, d=>d[0]);\r\n\r\n\r\n        var linePoints = [\r\n            {\r\n                x: extentX[0],\r\n                y: linearRegressionLine(extentX[0])\r\n            },\r\n            {\r\n                x: extentX[1],\r\n                y: linearRegressionLine(extentX[1])\r\n            }\r\n        ];\r\n\r\n        var line = d3.svg.line()\r\n            .interpolate(\"basis\")\r\n            .x(d => self.plot.x.scale(d.x))\r\n            .y(d => self.plot.y.scale(d.y));\r\n        \r\n\r\n        var color = self.plot.dot.color;\r\n\r\n        var defaultColor = \"black\";\r\n        if(Utils.isFunction(color)){\r\n            if(values.length && groupVal!==false){\r\n                color = color(values[0]);\r\n            }else{\r\n                color = defaultColor;\r\n            }\r\n        }else if(!color && groupVal===false){\r\n            color = defaultColor;\r\n        }\r\n\r\n\r\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\r\n        return {\r\n            group: groupVal || false,\r\n            line: line,\r\n            linePoints: linePoints,\r\n            color: color,\r\n            confidence: confidence\r\n        };\r\n    }\r\n\r\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\r\n        var self = this;\r\n        var slope = linearRegression.m;\r\n        var n = points.length;\r\n        var degreesOfFreedom = Math.max(0, n-2);\r\n\r\n        var alpha = 1 - self.config.confidence.level;\r\n        var criticalProbability  = 1 - alpha/2;\r\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\r\n\r\n        var xValues = points.map(d=>d[0]);\r\n        var meanX = StatisticsUtils.mean(xValues);\r\n        var xMySum=0;\r\n        var xSum=0;\r\n        var xPowSum=0;\r\n        var ySum=0;\r\n        var yPowSum=0;\r\n        points.forEach(p=>{\r\n            var x = p[0];\r\n            var y = p[1];\r\n\r\n            xMySum += x*y;\r\n            xSum+=x;\r\n            ySum+=y;\r\n            xPowSum+= x*x;\r\n            yPowSum+= y*y;\r\n        });\r\n        var a = linearRegression.m;\r\n        var b = linearRegression.b;\r\n\r\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\r\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\r\n\r\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\r\n        var marginOfError =  x=> criticalValue* errorFn(x);\r\n\r\n\r\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\r\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\r\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\r\n\r\n\r\n        var computeConfidenceAreaPoint = x=>{\r\n            var linearRegression = linearRegressionLine(x);\r\n            var moe = marginOfError(x);\r\n            var confDown = linearRegression - moe;\r\n            var confUp = linearRegression + moe;\r\n            return {\r\n                x: x,\r\n                y0: confDown,\r\n                y1: confUp\r\n            }\r\n\r\n        };\r\n\r\n        var centerX = (extentX[1]+extentX[0])/2;\r\n\r\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\r\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\r\n\r\n        var fitInPlot = y => y;\r\n\r\n        var confidenceArea =  d3.svg.area()\r\n        .interpolate(\"monotone\")\r\n            .x(d => self.plot.x.scale(d.x))\r\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\r\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\r\n\r\n        return {\r\n            area:confidenceArea,\r\n            points:confidenceAreaPoints\r\n        };\r\n    }\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.updateRegressionLines();\r\n\r\n    };\r\n\r\n    updateRegressionLines() {\r\n        var self = this;\r\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\r\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\r\n\r\n        var clipPathId = self.prefixClass(\"clip\");\r\n\r\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\r\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\r\n            .attr(\"id\", clipPathId);\r\n\r\n\r\n        regressionContainerClip.selectOrAppend('rect')\r\n            .attr('width', self.plot.width)\r\n            .attr('height', self.plot.height)\r\n            .attr('x', 0)\r\n            .attr('y', 0);\r\n\r\n        regressionContainer.attr(\"clip-path\", (d,i) => \"url(#\"+clipPathId+\")\");\r\n\r\n        var regressionClass = this.prefixClass(\"regression\");\r\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\r\n        var regressionSelector = \"g.\"+regressionClass;\r\n        var regression = regressionContainer.selectAll(regressionSelector)\r\n            .data(self.plot.regressions);\r\n\r\n        var line = regression.enter()\r\n            .insertSelector(regressionSelector)\r\n            .append(\"path\")\r\n            .attr(\"class\", self.prefixClass(\"line\"))\r\n            .attr(\"shape-rendering\", \"optimizeQuality\");\r\n            // .append(\"line\")\r\n            // .attr(\"class\", \"line\")\r\n            // .attr(\"shape-rendering\", \"optimizeQuality\");\r\n\r\n        line\r\n            // .attr(\"x1\", r=> self.plot.x.scale(r.linePoints[0].x))\r\n            // .attr(\"y1\", r=> self.plot.y.scale(r.linePoints[0].y))\r\n            // .attr(\"x2\", r=> self.plot.x.scale(r.linePoints[1].x))\r\n            // .attr(\"y2\", r=> self.plot.y.scale(r.linePoints[1].y))\r\n            .attr(\"d\", r => r.line(r.linePoints))\r\n            .style(\"stroke\", r => r.color);\r\n\r\n\r\n        var area = regression.enter()\r\n            .appendSelector(regressionSelector)\r\n            .append(\"path\")\r\n            .attr(\"class\", confidenceAreaClass)\r\n            .attr(\"shape-rendering\", \"optimizeQuality\");\r\n\r\n\r\n        area\r\n            .attr(\"d\", r => r.confidence.area(r.confidence.points))\r\n            .style(\"fill\", r => r.color)\r\n            .style(\"opacity\", \"0.4\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from \"./legend\";\r\n\r\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\r\n    size= 200; //scatter plot cell size\r\n    padding= 20; //scatter plot cell padding\r\n    brush= true;\r\n    guides= true; //show axis guides\r\n    showTooltip= true; //show tooltip on dot hover\r\n    ticks= undefined; //ticks number, (default: computed using cell size)\r\n    x={// X axis config\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: undefined, //object property name or array index with grouping variable\r\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\r\n        value: (d, key) => d[key], // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    variables= {\r\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey] // variable value accessor\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n        Utils.deepExtend(this, custom);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ScatterPlotMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n\r\n        var self = this;\r\n        var margin = this.plot.margin;\r\n        var conf = this.config;\r\n        this.plot.x={};\r\n        this.plot.y={};\r\n        this.plot.dot={\r\n            color: null//color scale mapping function\r\n        };\r\n\r\n\r\n        this.plot.showLegend = conf.showLegend;\r\n        if(this.plot.showLegend){\r\n            margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\r\n        }\r\n\r\n        this.setupVariables();\r\n\r\n        this.plot.size = conf.size;\r\n\r\n\r\n        var width = conf.width;\r\n        var boundingClientRect = this.getBaseContainerNode().getBoundingClientRect();\r\n        if (!width) {\r\n            var maxWidth = margin.left + margin.right + this.plot.variables.length*this.plot.size;\r\n            width = Math.min(boundingClientRect.width, maxWidth);\r\n\r\n        }\r\n        var height = width;\r\n        if (!height) {\r\n            height = boundingClientRect.height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n\r\n        if(conf.ticks===undefined){\r\n            conf.ticks = this.plot.size / 40;\r\n        }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if (conf.dot.d3ColorCategory) {\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if (colorValue) {\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String) {\r\n                this.plot.dot.color = colorValue;\r\n            } else if (this.plot.dot.colorCategory) {\r\n                this.plot.dot.color = d => self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    setupVariables() {\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function(d) { return variablesConf.value(d, variableKey) });\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n        plot.subplots = [];\r\n    };\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config;\r\n\r\n        x.value = conf.variables.value;\r\n        x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\r\n        x.map = (d, variable) => x.scale(x.value(d, variable));\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\r\n        x.axis.tickSize(plot.size * plot.variables.length);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config;\r\n\r\n        y.value = conf.variables.value;\r\n        y.scale = d3.scale[conf.y.scale]().range([ plot.size - conf.padding / 2, conf.padding / 2]);\r\n        y.map = (d, variable) => y.scale(y.value(d, variable));\r\n        y.axis= d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\r\n        y.axis.tickSize(-plot.size * plot.variables.length);\r\n    };\r\n\r\n    draw() {\r\n        var self =this;\r\n        var n = self.plot.variables.length;\r\n        var conf = this.config;\r\n\r\n        var axisClass = self.prefixClass(\"axis\");\r\n        var axisXClass = axisClass+\"-x\";\r\n        var axisYClass = axisClass+\"-y\";\r\n\r\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\r\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\r\n\r\n        var noGuidesClass = self.prefixClass(\"no-guides\");\r\n        self.svgG.selectAll(xAxisSelector)\r\n            .data(self.plot.variables)\r\n            .enter().appendSelector(xAxisSelector)\r\n            .classed(noGuidesClass, !conf.guides)\r\n            .attr(\"transform\", (d, i) => \"translate(\" + (n - i - 1) * self.plot.size + \",0)\")\r\n            .each(function(d) { self.plot.x.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.x.axis); });\r\n\r\n        self.svgG.selectAll(yAxisSelector)\r\n            .data(self.plot.variables)\r\n            .enter().appendSelector(yAxisSelector)\r\n            .classed(noGuidesClass, !conf.guides)\r\n            .attr(\"transform\", (d, i) => \"translate(0,\" + i * self.plot.size + \")\")\r\n            .each(function(d) { self.plot.y.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.y.axis); });\r\n\r\n        var cellClass =  self.prefixClass(\"cell\");\r\n        var cell = self.svgG.selectAll(\".\"+cellClass)\r\n            .data(self.utils.cross(self.plot.variables, self.plot.variables))\r\n            .enter().appendSelector(\"g.\"+cellClass)\r\n            .attr(\"transform\", d => \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\");\r\n\r\n        if(conf.brush){\r\n            this.drawBrush(cell);\r\n        }\r\n\r\n        cell.each(plotSubplot);\r\n\r\n\r\n\r\n        //Labels\r\n        cell.filter(d => d.i === d.j)\r\n            .append(\"text\")\r\n            .attr(\"x\", conf.padding)\r\n            .attr(\"y\", conf.padding)\r\n            .attr(\"dy\", \".71em\")\r\n            .text( d => self.plot.labelByVariable[d.x]);\r\n\r\n\r\n\r\n\r\n        function plotSubplot(p) {\r\n            var plot = self.plot;\r\n            plot.subplots.push(p);\r\n            var cell = d3.select(this);\r\n\r\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\r\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\r\n\r\n            var frameClass =  self.prefixClass(\"frame\");\r\n            cell.append(\"rect\")\r\n                .attr(\"class\", frameClass)\r\n                .attr(\"x\", conf.padding / 2)\r\n                .attr(\"y\", conf.padding / 2)\r\n                .attr(\"width\", conf.size - conf.padding)\r\n                .attr(\"height\", conf.size - conf.padding);\r\n\r\n\r\n            p.update = function() {\r\n                var subplot = this;\r\n                var dots = cell.selectAll(\"circle\")\r\n                    .data(self.data);\r\n\r\n                dots.enter().append(\"circle\");\r\n\r\n                dots.attr(\"cx\", (d) => plot.x.map(d, subplot.x))\r\n                    .attr(\"cy\", (d) => plot.y.map(d, subplot.y))\r\n                    .attr(\"r\", self.config.dot.radius);\r\n\r\n                if (plot.dot.color) {\r\n                    dots.style(\"fill\", plot.dot.color)\r\n                }\r\n\r\n                if(plot.tooltip){\r\n                    dots.on(\"mouseover\", (d) => {\r\n                        plot.tooltip.transition()\r\n                            .duration(200)\r\n                            .style(\"opacity\", .9);\r\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" +plot.y.value(d, subplot.y) + \")\";\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n                        var group = self.config.groups.value(d);\r\n                        if(group || group===0 ){\r\n                            html+=\"<br/>\";\r\n                            var label = self.config.groups.label;\r\n                            if(label){\r\n                                html+=label+\": \";\r\n                            }\r\n                            html+=group\r\n                        }\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                        .on(\"mouseout\", (d)=> {\r\n                            plot.tooltip.transition()\r\n                                .duration(500)\r\n                                .style(\"opacity\", 0);\r\n                        });\r\n                }\r\n\r\n                dots.exit().remove();\r\n            };\r\n            p.update();\r\n\r\n        }\r\n\r\n\r\n        this.updateLegend();\r\n    };\r\n\r\n    update(data) {\r\n\r\n        super.update(data);\r\n        this.plot.subplots.forEach(p => p.update());\r\n        this.updateLegend();\r\n    };\r\n\r\n    drawBrush(cell) {\r\n        var self = this;\r\n        var brush = d3.svg.brush()\r\n            .x(self.plot.x.scale)\r\n            .y(self.plot.y.scale)\r\n            .on(\"brushstart\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"brushend\", brushend);\r\n\r\n        cell.append(\"g\").call(brush);\r\n\r\n\r\n        var brushCell;\r\n\r\n        // Clear the previously-active brush, if any.\r\n        function brushstart(p) {\r\n            if (brushCell !== this) {\r\n                d3.select(brushCell).call(brush.clear());\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\r\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\r\n                brushCell = this;\r\n            }\r\n        }\r\n\r\n        // Highlight the selected circles.\r\n        function brushmove(p) {\r\n            var e = brush.extent();\r\n            self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\r\n                return e[0][0] > d[p.x] || d[p.x] > e[1][0]\r\n                    || e[0][1] > d[p.y] || d[p.y] > e[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        }\r\n    };\r\n\r\n    updateLegend() {\r\n\r\n        console.log('updateLegend');\r\n        var plot = this.plot;\r\n\r\n        var scale = plot.dot.colorCategory;\r\n        if(!scale.domain() || scale.domain().length<2){\r\n            plot.showLegend = false;\r\n        }\r\n\r\n        if(!plot.showLegend){\r\n            if(plot.legend && plot.legend.container){\r\n                plot.legend.container.remove();\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n        var legendX = this.plot.width + this.config.legend.margin;\r\n        var legendY = this.config.legend.margin;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\r\n\r\n        var legendLinear = plot.legend.color()\r\n            .shapeWidth(this.config.legend.shapeWidth)\r\n            .orient('vertical')\r\n            .scale(scale);\r\n\r\n        plot.legend.container\r\n            .call(legendLinear);\r\n    }\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from \"./legend\";\r\n\r\nexport class ScatterPlotConfig extends ChartConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'scatterplot';\r\n    guides= false; //show axis guides\r\n    showTooltip= true; //show tooltip on dot hover\r\n    showLegend=true;\r\n    legend={\r\n        width: 80,\r\n        margin: 10,\r\n        shapeWidth: 20\r\n    };\r\n\r\n    x={// X axis config\r\n        label: 'X', // axis label\r\n        key: 0,\r\n        value: (d, key) => d[key], // x value accessor\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        label: 'Y', // axis label,\r\n        key: 1,\r\n        value: (d, key) => d[key], // y value accessor\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: 2,\r\n        value: (d, key) => d[key] , // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    transition= true;\r\n\r\n    constructor(custom){\r\n        super();\r\n        var config = this;\r\n        this.dot={\r\n            radius: 2,\r\n            color: d => config.groups.value(d, config.groups.key), // string or function returning color's value for color scale\r\n            d3ColorCategory: 'category10'\r\n        };\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ScatterPlot extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ScatterPlotConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        var self=this;\r\n\r\n        var conf = this.config;\r\n\r\n        this.plot.x={};\r\n        this.plot.y={};\r\n        this.plot.dot={\r\n            color: null//color scale mapping function\r\n        };\r\n\r\n\r\n        this.plot.showLegend = conf.showLegend;\r\n        if(this.plot.showLegend){\r\n            this.plot.margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\r\n        }\r\n        \r\n\r\n        this.computePlotSize();\r\n        \r\n\r\n\r\n        // var legendWidth = availableWidth;\r\n        // legend.width(legendWidth);\r\n        //\r\n        // wrap.select('.nv-legendWrap')\r\n        //     .datum(data)\r\n        //     .call(legend);\r\n        //\r\n        // if (legend.height() > margin.top) {\r\n        //     margin.top = legend.height();\r\n        //     availableHeight = nv.utils.availableHeight(height, container, margin);\r\n        // }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if(conf.dot.d3ColorCategory){\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if(colorValue){\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String){\r\n                this.plot.dot.color = colorValue;\r\n            }else if(this.plot.dot.colorCategory){\r\n                this.plot.dot.color = d =>  self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n            }\r\n\r\n\r\n        }else{\r\n\r\n\r\n        }\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = d => x.scale(x.value(d));\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        var data = this.data;\r\n        plot.x.scale.domain([d3.min(data, plot.x.value)-1, d3.max(data, plot.x.value)+1]);\r\n        if(this.config.guides) {\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n\r\n        /*\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         */\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = d => y.scale(y.value(d));\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n\r\n        if(this.config.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n\r\n\r\n        var data = this.data;\r\n        plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\r\n    };\r\n\r\n    draw(){\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.update();\r\n    };\r\n\r\n    drawAxisX(){\r\n\r\n        \r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\")\r\n            .call(plot.x.axis)\r\n            .selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\r\n            .call(plot.y.axis)\r\n            .selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n\r\n        this.updateDots();\r\n\r\n        this.updateLegend();\r\n    };\r\n\r\n    updateDots() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var data = this.data;\r\n        var dotClass = self.prefixClass('dot');\r\n        self.dotsContainerClass = self.prefixClass('dots-container');\r\n\r\n\r\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\r\n\r\n        var dots = dotsContainer.selectAll('.' + dotClass)\r\n            .data(data);\r\n\r\n        dots.enter().append(\"circle\")\r\n            .attr(\"class\", dotClass);\r\n\r\n        var dotsT = dots;\r\n        if (self.config.transition) {\r\n            dotsT = dots.transition();\r\n        }\r\n\r\n        dotsT.attr(\"r\", self.config.dot.radius)\r\n            .attr(\"cx\", plot.x.map)\r\n            .attr(\"cy\", plot.y.map);\r\n\r\n        if (plot.tooltip) {\r\n            dots.on(\"mouseover\", d => {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\r\n                var group = self.config.groups.value(d, self.config.groups.key);\r\n                if (group || group === 0) {\r\n                    html += \"<br/>\";\r\n                    var label = self.config.groups.label;\r\n                    if (label) {\r\n                        html += label + \": \";\r\n                    }\r\n                    html += group\r\n                }\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", d => {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        if (plot.dot.color) {\r\n            dots.style(\"fill\", plot.dot.color)\r\n        }\r\n\r\n        dots.exit().remove();\r\n    }\r\n\r\n    updateLegend() {\r\n\r\n\r\n        var plot = this.plot;\r\n\r\n        var scale = plot.dot.colorCategory;\r\n        if(!scale.domain() || scale.domain().length<2){\r\n            plot.showLegend = false;\r\n        }\r\n\r\n        if(!plot.showLegend){\r\n            if(plot.legend && plot.legend.container){\r\n                plot.legend.container.remove();\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n        var legendX = this.plot.width + this.config.legend.margin;\r\n        var legendY = this.config.legend.margin;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\r\n\r\n        var legendLinear = plot.legend.color()\r\n            .shapeWidth(this.config.legend.shapeWidth)\r\n            .orient('vertical')\r\n            .scale(scale);\r\n        \r\n        plot.legend.container\r\n            .call(legendLinear);\r\n    }\r\n\r\n    \r\n}\r\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\r\n\r\nvar su = module.exports.StatisticsUtils ={};\r\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\r\nsu.linearRegression = require('../bower_components/simple-statistics/src/linear_regression');\r\nsu.linearRegressionLine = require('../bower_components/simple-statistics/src/linear_regression_line');\r\nsu.errorFunction = require('../bower_components/simple-statistics/src/error_function');\r\nsu.standardDeviation = require('../bower_components/simple-statistics/src/standard_deviation');\r\nsu.sampleStandardDeviation = require('../bower_components/simple-statistics/src/sample_standard_deviation');\r\nsu.variance = require('../bower_components/simple-statistics/src/variance');\r\nsu.mean = require('../bower_components/simple-statistics/src/mean');\r\nsu.zScore = require('../bower_components/simple-statistics/src/z_score');\r\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\r\n\r\n\r\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\r\n    return tdistr(degreesOfFreedom, criticalProbability);\r\n};","export class Utils {\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, {[key]: source[key]});\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, {[key]: source[key]});\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static inferVariables(data, groupKey, includeGroup) {\r\n        var res = [];\r\n        if (data.length) {\r\n            var d = data[0];\r\n            if (d instanceof Array) {\r\n                res = d.map(function (v, i) {\r\n                    return i;\r\n                });\r\n            } else if (typeof d === 'object') {\r\n\r\n                for (var prop in d) {\r\n                    if (!d.hasOwnProperty(prop)) continue;\r\n\r\n                    res.push(prop);\r\n                }\r\n            }\r\n        }\r\n        if (!includeGroup) {\r\n            var index = res.indexOf(groupKey);\r\n            if (index > -1) {\r\n                res.splice(index, 1);\r\n            }\r\n        }\r\n        return res\r\n    };\r\n\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static insertOrAppendSelector(parent, selector, operation, before) {\r\n        var selectorParts = selector.split(/([\\.\\#])/);\r\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\r\n        while (selectorParts.length > 1) {\r\n            var selectorModifier = selectorParts.shift();\r\n            var selectorItem = selectorParts.shift();\r\n            if (selectorModifier === \".\") {\r\n                element = element.classed(selectorItem, true);\r\n            } else if (selectorModifier === \"#\") {\r\n                element = element.attr('id', selectorItem);\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    static insertSelector(parent, selector, before) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\r\n    }\r\n\r\n    static appendSelector(parent, selector) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\r\n    }\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            if (element) {\r\n                return parent.append(element);\r\n            }\r\n            return Utils.appendSelector(parent, selector);\r\n\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static selectOrInsert(parent, selector, before) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            return Utils.insertSelector(parent, selector, before);\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\r\n        var defs = Utils.selectOrAppend(svg, \"defs\");\r\n        var linearGradient = defs.append(\"linearGradient\")\r\n            .attr(\"id\", gradientId);\r\n\r\n        linearGradient\r\n            .attr(\"x1\", x1 + \"%\")\r\n            .attr(\"y1\", y1 + \"%\")\r\n            .attr(\"x2\", x2 + \"%\")\r\n            .attr(\"y2\", y2 + \"%\");\r\n\r\n        //Append multiple color stops by using D3's data/enter step\r\n        var stops = linearGradient.selectAll(\"stop\")\r\n            .data(range);\r\n\r\n        stops.enter().append(\"stop\");\r\n\r\n        stops.attr(\"offset\", (d, i) => i / (range.length - 1))\r\n            .attr(\"stop-color\", d => d);\r\n\r\n        stops.exit().remove();\r\n    }\r\n\r\n    static sanitizeHeight = function (height, container) {\r\n        return (height || parseInt(container.style('height'), 10) || 400);\r\n    };\r\n    \r\n    static sanitizeWidth = function (width, container) {\r\n        return (width || parseInt(container.style('width'), 10) || 960);\r\n    };\r\n\r\n    static availableHeight = function (height, container, margin) {\r\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\r\n    };\r\n\r\n    static availableWidth = function (width, container, margin) {\r\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\r\n    };\r\n\r\n    static guid() {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n        s4() + '-' + s4() + s4() + s4();\r\n}\r\n}\r\n"],"sourceRoot":"/source/"}