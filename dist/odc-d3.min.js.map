{"version":3,"sources":["node_modules/browser-pack/_prelude.js","odc-d3.js","bower_components/d3-legend/no-extend.js","bower_components/d3-legend/src/color.js","bower_components/d3-legend/src/legend.js","bower_components/d3-legend/src/size.js","bower_components/d3-legend/src/symbol.js","bower_components/simple-statistics/src/error_function.js","bower_components/simple-statistics/src/linear_regression.js","bower_components/simple-statistics/src/linear_regression_line.js","bower_components/simple-statistics/src/mean.js","bower_components/simple-statistics/src/quantile.js","bower_components/simple-statistics/src/quantile_sorted.js","bower_components/simple-statistics/src/quickselect.js","bower_components/simple-statistics/src/sample_correlation.js","bower_components/simple-statistics/src/sample_covariance.js","bower_components/simple-statistics/src/sample_standard_deviation.js","bower_components/simple-statistics/src/sample_variance.js","bower_components/simple-statistics/src/standard_deviation.js","bower_components/simple-statistics/src/sum.js","bower_components/simple-statistics/src/sum_nth_power_deviations.js","bower_components/simple-statistics/src/variance.js","bower_components/simple-statistics/src/z_score.js","src/bar-chart.js","src/box-plot-base.js","src/box-plot.js","src/chart-with-color-groups.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/heatmap-timeseries.js","src/heatmap.js","src/histogram.js","src/index.js","src/legend.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ODCD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","color","size","symbol","./src/color","./src/size","./src/symbol","2","helper","legend","svg","type","d3_calcType","scale","ascending","cells","labels","labelFormat","labelDelimiter","legendG","selectAll","data","enter","append","attr","classPrefix","cell","cellEnter","style","shapes","shape","select","d3_addEvents","legendDispatcher","exit","transition","remove","d3_drawShapes","shapeHeight","shapeWidth","shapeRadius","path","d3_addText","text","shapeSize","map","d","getBBox","useClass","feature","cellTrans","textTrans","textAlign","labelAlign","orient","height","shapePadding","width","x","labelOffset","y","d3_placement","d3_title","title","d3","linear","format","dispatch","_","arguments","toLowerCase","rebind","./legend","3","d3_identity","d3_mergeLabels","gen","push","d3_linearLegend","domain","increment","d3_quantLegend","range","invert","invertExtent","d3_ordinalLegend","ticks","d3_reverse","arr","mirror","dispatcher","on","d3_cellOver","d3_cellOut","d3_cellClick","cellDispatcher","obj","cellover","cellout","cellclick","cellsSvg","titleText","yOffset","xOffset","4","bbox","stroke","maxH","max","maxW","sum","slice","5","6","errorFunction","Math","abs","tau","exp","pow","7","linearRegression","m","b","dataLength","point","sumX","sumY","sumXX","sumXY","8","linearRegressionLine","mb","9","mean","NaN","./sum","10","quantile","sample","p","copy","Array","isArray","multiQuantileSelect","results","quantileSorted","idx","quantileIndex","quantileSelect","k","left","right","quickselect","floor","indices","sort","compare","stack","ceil","pop","len","./quantile_sorted","./quickselect","11","12","z","log","sd","sqrt","newLeft","newRight","min","j","swap","tmp","13","sampleCorrelation","cov","sampleCovariance","xstd","sampleStandardDeviation","ystd","./sample_covariance","./sample_standard_deviation","14","xmean","ymean","besselsCorrection","./mean","15","sampleVarianceX","sampleVariance","isNaN","./sample_variance","16","sumSquaredDeviationsValue","sumNthPowerDeviations","./sum_nth_power_deviations","17","standardDeviation","v","variance","./variance","18","correctedCurrentValue","nextSum","errorCompensation","19","meanValue","20","21","zScore","22","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","BarChart","BarChartConfig","undefined","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_chartWithColorGroups","_utils","_ChartWithColorGroups","custom","_this","svgClass","cssClassPrefix","showLegend","showTooltip","label","Utils","isNumber","deepExtend","ChartWithColorGroupsConfig","_ChartWithColorGroups2","placeholderSelector","config","plot","computePlotSize","setupY","setupX","setupGroupStacks","setupYDomain","conf","ordinal","rangeRoundBands","axis","series","values","keys","yStackMax","layers","layer","points","y0","groupData","layout","groupedData","forEach","mapToPoint","parseFloat","axisConf","svgG","selectOrAppend","prefixClass","guides","axisT","ease","margin","bottom","layerClass","barClass","bar","barRect","barRectT","barT","layerT","transitionEnabled","yDomain","rangeBand","seriesColor","tooltip","duration","html","event","pageX","pageY","newData","drawAxisX","drawAxisY","drawBars","ChartWithColorGroups","./chart-with-color-groups","./utils","23","BoxPlotBase","BoxPlotBaseConfig","_chart","_ChartConfig","domainMargin","Q1","Q2","Q3","Wl","whiskerLow","Wh","whiskerHigh","outliers","outlierValue","outlierLabel","minBoxWidth","maxBoxWidth","d3ColorCategory","ChartConfig","_Chart","getDataToPlot","setupColor","tickSize","_this3","yMin","yMax","c","q1","q3","wl","wh","boxplotClass","boxplots","boxplotEnter","boxplotsT","delay","boxWidth","boxLeft","boxRight","boxClass","classed","hideTooltip","boxRects","boxRectsT","medianClass","whiskerClass","tickClass","whiskers","each","box","endpoint","outlierClass","outlierEnterCircle","outliersT","drawBoxPlots","_this4","colorCategory","colorValue","String","Chart","./chart","24","BoxPlot","BoxPlotConfig","_boxPlotBase","_statisticsUtils","_BoxPlotBaseConfig","groups","displayValue","_BoxPlotBase","groupingEnabled","isGroupingEnabled","groupValue","nest","entries","StatisticsUtils","./box-plot-base","./statistics-utils","25","_legend","setupGroups","getOwnPropertyNames","groupToLabel","computeGroupColorDomain","getLabel","isFunction","isObject","_this5","enabledGroups","filter","indexOf","updateLegend","container","legendX","legendY","Legend","legendColor","onLegendCellClick","updateLegendCellStatuses","cellValue","updateEnabledGroups","init","isDisabled","index","splice","26","top","base","utils","_attached","_layers","_events","_isInitialized","_isAttached","baseContainer","setConfig","setData","postInit","initPlot","initSvg","initTooltip","draw","attachmentData","attachmentName","update","chart","name","callback","context","events","once","off","apply","names","ev","args","getBaseContainer","node","clazz","addDot","availableWidth","availableHeight","27","CorrelationMatrix","CorrelationMatrixConfig","_scatterplot","highlightLabels","rotateLabelsX","rotateLabelsY","variables","variableKey","correlation","xValues","yValues","sizeMin","sizeMax","padding","matrix","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","getBoundingClientRect","cellSize","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","rangeBands","corrConf","cellConf","radiusMax","radiusScale","radius","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","includeInPlot","labelByVariable","extent","matrixCells","variableToValues","v1","row","v2","corr","rowVar","colVar","col","updateCells","updateVariableLabels","labelClass","updateAxisX","updateAxisY","labelXClass","maxWidth","computeXAxisLabelsWidth","placeTextWithEllipsisAndTooltip","labelYClass","computeYAxisLabelsWidth","SQRT_2","fontSize","offset","cellClass","cellShape","scatterPlot","selector","wrongShapes","mouseoverCallbacks","mouseoutCallbacks","highlightClass","xLabelClass","yLabelClass","trigger","barWidth","barHeight","linearGradientBar","containerSelector","scatterPlotConfig","ScatterPlot","attach","./scatterplot","28","D3Extensions","selection","insertSelector","before","appendSelector","selectOrInsert","29","HeatmapTimeSeries","HeatmapTimeSeriesConfig","_heatmap","_HeatmapConfig","fillMissing","interval","intervalStep","displayFormat","intervalToFormats","formats","sortComparator","isString","localeCompare","formatter","suffix","Number","toFixed","nf","Intl","NumberFormat","HeatmapConfig","_Heatmap","timeFormat","guessTimeFormat","initTimeFormatAndInterval","timeParser","getTimeParser","uniqueValues","prev","current","parseTime","next","nextTimeTickValue","missing","iteration","compareTimeValues","timeString","formatTime","updateGroups","parser","parse","date","time","isDate","rowIndex","prevRowValue","colIndex","guessInterval","intervalFormat","formatMatch","some","every","Heatmap","./heatmap","30","noDataText","rotateLabels","decimalPlaces","sortLabels","overlap","notAvailableValue","noDataColor","reverseScale","matrixes","setupValues","buildCells","titleRectWidth","groupByX","depth","allTitlesWidth","groupByY","_depth","_allTitlesWidth","setupZScale","children","level","lastIndex","valueMap","minZ","maxZ","xVal","yVal","zValRaw","zVal","groupY","groupX","setupValuesBeforeGroupsSort","gaps","totalValuesCount","allValuesList","sortGroups","group","val","axisVal","rootGroup","axisGroupsConfig","currentGroup","groupKey","groupKeyIndex","groupingValue","hasOwnProperty","axisConfig","allValuesCount","allValuesBeforeCount","gapsBefore","gapsSize","computeGapsSize","gapsBeforeSize","childrenList","childrenCount","childProp","child","gapsInside","gapsInsideSize","cellWidth","xGapsSize","computedCellWidth","yGapsSize","computedCellHeight","cellHeight","exponent","unshift","reverse","drawGroupsY","drawGroupsX","updateAxisTitles","offsetX","gapSize","computeGapSize","formatValueX","elem","offsetY","formatted","formatValueY","parentGroup","groupClass","groupYClass","valuesBeforeCount","groupsEnterG","titleGroupEnter","groupTitleRectHeight","translate","groupWidth","titleGroups","tileRects","setGroupMouseCallbacks","groupXClass","titleRectHeight","groupHeight","parentNode","cellContainerClass","paddingX","paddingY","cellContainer","formatValueZ","formatLegendValue","setRotateLabels","gapLevel","maxGroupGapSize","gapsNumber","gapsLevel","31","Histogram","HistogramConfig","frequency","setupHistogram","stackedHistograms","histogramBins","histogram","bins","dy","dx","drawHistogram","32","RegressionConfig","Regression","ScatterPlotMatrixConfig","ScatterPlotMatrix","ScatterPlotConfig","_scatterplotMatrix","_correlationMatrix","_regression","_heatmapTimeseries","_histogram","_barChart","_boxPlot","_d3Extensions","extend","./bar-chart","./box-plot","./correlation-matrix","./d3-extensions","./heatmap-timeseries","./histogram","./regression","./scatterplot-matrix","33","_noExtend","legendParent","legendClass","guid","gradientId","linearGradient","ticksNumber","../bower_components/d3-legend/no-extend","34","_ScatterPlotConfig","mainRegression","groupRegression","confidence","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","_ScatterPlot","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","groupVal","extentX","linePoints","line","interpolate","defaultColor","computeConfidence","alpha","meanX","xMySum","xSum","xPowSum","ySum","yPowSum","Sa2","Sy2","errorFn","computeConfidenceAreaPoint","moe","confDown","confUp","y1","centerX","confidenceAreaPoints","fitInPlot","confidenceArea","area","updateRegressionLines","regressionContainerClass","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionContainerClip","regressionClass","confidenceAreaClass","regressionSelector","regressionEnterG","lineClass","lineT","areaT","35","minCellSize","maxCellSize","brush","dot","subplots","variable","plotSubplot","frameClass","subplot","dots","dotsT","dotRadius","axisClass","axisXClass","axisYClass","xAxisSelector","yAxisSelector","noGuidesClass","xAxis","yAxis","cross","drawBrush","brushstart","brushCell","clearBrush","brushmove","brushend","empty","clear","36","updateDots","dotClass","dotsContainer","37","tdistr","$n","$p","integer","precision_string","_subt","_subu","$y","$x","$u","$u2","$a","$b","$c","$d","$e","log10","$round","$p1","_subtprob","$n1","$delta","PI","round_to_precision","$w","atan2","$z","cos","$i","sin","$max","precision","SIGNIFICANT","round","38","_statisticsDistributions","su","standardError","../bower_components/simple-statistics/src/error_function","../bower_components/simple-statistics/src/linear_regression","../bower_components/simple-statistics/src/linear_regression_line","../bower_components/simple-statistics/src/mean","../bower_components/simple-statistics/src/quantile","../bower_components/simple-statistics/src/sample_correlation","../bower_components/simple-statistics/src/sample_standard_deviation","../bower_components/simple-statistics/src/standard_deviation","../bower_components/simple-statistics/src/variance","../bower_components/simple-statistics/src/z_score","./statistics-distributions","39","_defineProperty","_typeof","Symbol","iterator","out","source","srcObj","output","assign","isObjectNotArray","mergeDeep","includeGroup","res","prop","item","toString","operation","selectorParts","split","element","shift","selectorModifier","selectorItem","insertOrAppendSelector","x1","x2","y2","defs","stops","s4","random","substring","textD3Obj","textString","textObj","textContent","ellipsisLength","getComputedTextLength","getSubStringLength","ellipsisPlaced","placeTextWithEllipsis","getComputedStyle","getPropertyValue","sanitizeHeight","parseInt","sanitizeWidth"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ODCD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  color: require('./src/color'),\n  size: require('./src/size'),\n  symbol: require('./src/symbol')\n};\n\n},{\"./src/color\":2,\"./src/size\":4,\"./src/symbol\":5}],2:[function(require,module,exports){\n\"use strict\";\n\nvar helper = require('./legend');\n\nmodule.exports = function () {\n\n  var scale = d3.scale.linear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      labelFormat = d3.format(\".01f\"),\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = \"to\",\n      orient = \"vertical\",\n      ascending = false,\n      path,\n      legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n\n    var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\n        legendG = svg.selectAll('g').data([scale]);\n\n    legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\n\n    var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n\n    helper.d3_addText(legendG, cellEnter, type.labels, classPrefix);\n\n    // sets placement\n    var text = cell.select(\"text\"),\n        shapeSize = shapes[0].map(function (d) {\n      return d.getBBox();\n    });\n\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans,\n        textTrans,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(0, \" + i * (shapeSize[i].height + shapePadding) + \")\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n      };\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, legendG, title, classPrefix);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === 'string') {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return labelFormat;\n    labelFormat = _;\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  d3.rebind(legend, legendDispatcher, \"on\");\n\n  return legend;\n};\n\n},{\"./legend\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n\n  d3_identity: function d3_identity(d) {\n    return d;\n  },\n\n  d3_mergeLabels: function d3_mergeLabels(gen, labels) {\n\n    if (labels.length === 0) return gen;\n\n    gen = gen ? gen : [];\n\n    var i = labels.length;\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n    return labels;\n  },\n\n  d3_linearLegend: function d3_linearLegend(scale, cells, labelFormat) {\n    var data = [];\n\n    if (cells.length > 1) {\n      data = cells;\n    } else {\n      var domain = scale.domain(),\n          increment = (domain[domain.length - 1] - domain[0]) / (cells - 1),\n          i = 0;\n\n      for (; i < cells; i++) {\n        data.push(domain[0] + i * increment);\n      }\n    }\n\n    var labels = data.map(labelFormat);\n\n    return { data: data,\n      labels: labels,\n      feature: function feature(d) {\n        return scale(d);\n      } };\n  },\n\n  d3_quantLegend: function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n    var labels = scale.range().map(function (d) {\n      var invert = scale.invertExtent(d),\n          a = labelFormat(invert[0]),\n          b = labelFormat(invert[1]);\n\n      // if (( (a) && (a.isNan()) && b){\n      //   console.log(\"in initial statement\")\n      return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n      // } else if (a || b) {\n      //   console.log('in else statement')\n      //   return (a) ? a : b;\n      // }\n    });\n\n    return { data: scale.range(),\n      labels: labels,\n      feature: this.d3_identity\n    };\n  },\n\n  d3_ordinalLegend: function d3_ordinalLegend(scale) {\n    return { data: scale.domain(),\n      labels: scale.domain(),\n      feature: function feature(d) {\n        return scale(d);\n      } };\n  },\n\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius); //.attr(\"cx\", shapeRadius).attr(\"cy\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    svg.selectAll(\"g.\" + classPrefix + \"cell text\").data(labels).text(this.d3_identity);\n  },\n\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.ticks ? this.d3_linearLegend(scale, cells, labelFormat) : scale.invertExtent ? this.d3_quantLegend(scale, labelFormat, labelDelimiter) : this.d3_ordinalLegend(scale);\n\n    type.labels = this.d3_mergeLabels(type.labels, labels);\n\n    if (ascending) {\n      type.labels = this.d3_reverse(type.labels);\n      type.data = this.d3_reverse(type.data);\n    }\n\n    return type;\n  },\n\n  d3_reverse: function d3_reverse(arr) {\n    var mirror = [];\n    for (var i = 0, l = arr.length; i < l; i++) {\n      mirror[i] = arr[l - i - 1];\n    }\n    return mirror;\n  },\n\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    var _ = this;\n\n    cells.on(\"mouseover.legend\", function (d) {\n      _.d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      _.d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      _.d3_cellClick(dispatcher, d, this);\n    });\n  },\n\n  d3_cellOver: function d3_cellOver(cellDispatcher, d, obj) {\n    cellDispatcher.cellover.call(obj, d);\n  },\n\n  d3_cellOut: function d3_cellOut(cellDispatcher, d, obj) {\n    cellDispatcher.cellout.call(obj, d);\n  },\n\n  d3_cellClick: function d3_cellClick(cellDispatcher, d, obj) {\n    cellDispatcher.cellclick.call(obj, d);\n  },\n\n  d3_title: function d3_title(svg, cellsSvg, title, classPrefix) {\n    if (title !== \"\") {\n\n      var titleText = svg.selectAll('text.' + classPrefix + 'legendTitle');\n\n      titleText.data([title]).enter().append('text').attr('class', classPrefix + 'legendTitle');\n\n      svg.selectAll('text.' + classPrefix + 'legendTitle').text(title);\n\n      var yOffset = svg.select('.' + classPrefix + 'legendTitle').map(function (d) {\n        return d[0].getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.map(function (d) {\n        return d[0].getBBox().x;\n      })[0];\n\n      cellsSvg.attr('transform', 'translate(' + xOffset + ',' + (yOffset + 10) + ')');\n    }\n  }\n};\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar helper = require('./legend');\n\nmodule.exports = function () {\n\n  var scale = d3.scale.linear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      labels = [],\n      useStroke = false,\n      classPrefix = \"\",\n      title = \"\",\n      labelFormat = d3.format(\".01f\"),\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = \"to\",\n      orient = \"vertical\",\n      ascending = false,\n      path,\n      legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n\n    var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\n        legendG = svg.selectAll('g').data([scale]);\n\n    legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\n\n    var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    helper.d3_addText(legendG, cellEnter, type.labels, classPrefix);\n\n    //sets placement\n    var text = cell.select(\"text\"),\n        shapeSize = shapes[0].map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n\n      return bbox;\n    });\n\n    var maxH = d3.max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = d3.max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n\n    var cellTrans,\n        textTrans,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n\n      cellTrans = function cellTrans(d, i) {\n        var height = d3.sum(shapeSize.slice(0, i + 1), function (d) {\n          return d.height;\n        });\n        return \"translate(0, \" + (height + i * shapePadding) + \")\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (maxW + labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n      };\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        var width = d3.sum(shapeSize.slice(0, i + 1), function (d) {\n          return d.width;\n        });\n        return \"translate(\" + (width + i * shapePadding) + \",0)\";\n      };\n\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, legendG, title, classPrefix);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return labelFormat;\n    labelFormat = _;\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  d3.rebind(legend, legendDispatcher, \"on\");\n\n  return legend;\n};\n\n},{\"./legend\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nvar helper = require('./legend');\n\nmodule.exports = function () {\n\n  var scale = d3.scale.linear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      labelFormat = d3.format(\".01f\"),\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = \"to\",\n      orient = \"vertical\",\n      ascending = false,\n      legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n\n    var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\n        legendG = svg.selectAll('g').data([scale]);\n\n    legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\n\n    var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    //remove old shapes\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    helper.d3_addText(legendG, cellEnter, type.labels, classPrefix);\n\n    // sets placement\n    var text = cell.select(\"text\"),\n        shapeSize = shapes[0].map(function (d) {\n      return d.getBBox();\n    });\n\n    var maxH = d3.max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = d3.max(shapeSize, function (d) {\n      return d.width;\n    });\n\n    var cellTrans,\n        textTrans,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(0, \" + i * (maxH + shapePadding) + \")\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (maxW + labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n      };\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (maxW + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, legendG, title, classPrefix);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return labelFormat;\n    labelFormat = _;\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  d3.rebind(legend, legendDispatcher, \"on\");\n\n  return legend;\n};\n\n},{\"./legend\":3}],6:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\r\n *\r\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\r\n * normal distribution with standard deviation sd is within x of the mean.\r\n *\r\n * This function returns a numerical approximation to the exact value.\r\n *\r\n * @param {number} x input\r\n * @return {number} error estimation\r\n * @example\r\n * errorFunction(1); //= 0.8427\r\n */\n\nfunction errorFunction(x /*: number */) /*: number */{\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) - 1.26551223 + 1.00002368 * t + 0.37409196 * Math.pow(t, 2) + 0.09678418 * Math.pow(t, 3) - 0.18628806 * Math.pow(t, 4) + 0.27886807 * Math.pow(t, 5) - 1.13520398 * Math.pow(t, 6) + 1.48851587 * Math.pow(t, 7) - 0.82215223 * Math.pow(t, 8) + 0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\r\n * is a simple way to find a fitted line\r\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\r\n * using the least sum of squares.\r\n *\r\n * @param {Array<Array<number>>} data an array of two-element of arrays,\r\n * like `[[0, 1], [2, 3]]`\r\n * @returns {Object} object containing slope and intersect of regression line\r\n * @example\r\n * linearRegression([[0, 0], [1, 1]]); // { m: 1, b: 0 }\r\n */\n\nfunction linearRegression(data /*: Array<Array<number>> */) /*: { m: number, b: number } */{\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = (dataLength * sumXY - sumX * sumY) / (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - m * sumX / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\nmodule.exports = linearRegression;\n\n},{}],8:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Given the output of `linearRegression`: an object\r\n * with `m` and `b` values indicating slope and intercept,\r\n * respectively, generate a line function that translates\r\n * x values into y values.\r\n *\r\n * @param {Object} mb object with `m` and `b` members, representing\r\n * slope and intersect of desired line\r\n * @returns {Function} method that computes y-value at any given\r\n * x-value on the line.\r\n * @example\r\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\r\n * l(0) //= 0\r\n * l(2) //= 2\r\n */\n\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) /*: Function */{\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nmodule.exports = linearRegressionLine;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\nfunction mean(x /*: Array<number> */) /*:number*/{\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n\n},{\"./sum\":18}],10:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\nvar quickselect = require('./quickselect');\n\n/**\r\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\r\n * this is a population quantile, since we assume to know the entire\r\n * dataset in this library. This is an implementation of the\r\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\r\n * algorithm from wikipedia.\r\n *\r\n * Sample is a one-dimensional array of numbers,\r\n * and p is either a decimal number from 0 to 1 or an array of decimal\r\n * numbers from 0 to 1.\r\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\r\n * with decimal values.\r\n * When p is an array, the result of the function is also an array containing the appropriate\r\n * quantiles in input order\r\n *\r\n * @param {Array<number>} sample a sample from the population\r\n * @param {number} p the desired quantile, as a number between 0 and 1\r\n * @returns {number} quantile\r\n * @example\r\n * var data = [3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20];\r\n * quantile(data, 1); //= max(data);\r\n * quantile(data, 0); //= min(data);\r\n * quantile(data, 0.5); //= 9\r\n */\nfunction quantile(sample /*: Array<number> */, p /*: Array<number> | number */) {\n    var copy = sample.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        var results = [];\n        // For each requested quantile\n        for (var i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        var idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    var indices = [0];\n    for (var i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    var stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        var r = Math.ceil(stack.pop());\n        var l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        var m = Math.floor((l + r) / 2);\n        quantileSelect(arr, indices[m], indices[l], indices[r]);\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len /*: number */, p /*: number */) /*:number*/{\n    var idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nmodule.exports = quantile;\n\n},{\"./quantile_sorted\":11,\"./quickselect\":12}],11:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * This is the internal implementation of quantiles: when you know\r\n * that the order is sorted, you don't need to re-sort it, and the computations\r\n * are faster.\r\n *\r\n * @param {Array<number>} sample input data\r\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\r\n * @returns {number} quantile value\r\n * @example\r\n * var data = [3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20];\r\n * quantileSorted(data, 1); //= max(data);\r\n * quantileSorted(data, 0); //= min(data);\r\n * quantileSorted(data, 0.5); //= 9\r\n */\n\nfunction quantileSorted(sample /*: Array<number> */, p /*: number */) /*:number*/{\n    var idx = sample.length * p;\n    if (p < 0 || p > 1) {\n        return NaN;\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return sample[sample.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return sample[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return sample[Math.ceil(idx) - 1];\n    } else if (sample.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (sample[idx - 1] + sample[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the sample value at the index.\n        return sample[idx];\n    }\n}\n\nmodule.exports = quantileSorted;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nmodule.exports = quickselect;\n\n/**\r\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\r\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\r\n *\r\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\r\n *\r\n * @private\r\n * @param {Array<number>} arr input array\r\n * @param {number} k pivot index\r\n * @param {number} left left index\r\n * @param {number} right right index\r\n * @returns {undefined}\r\n * @example\r\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\r\n * quickselect(arr, 8);\r\n * // [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\r\n */\nfunction quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {\n    left = left || 0;\n    right = right || arr.length - 1;\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) {\n                i++;\n            }while (arr[j] > t) {\n                j--;\n            }\n        }\n\n        if (arr[left] === t) swap(arr, left, j);else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n},{}],13:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\nfunction sampleCorrelation(x /*: Array<number> */, y /*: Array<number> */) /*:number*/{\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n\n},{\"./sample_covariance\":14,\"./sample_standard_deviation\":15}],14:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/) /*:number*/{\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length <= 1 || x.length !== y.length) {\n        return NaN;\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n\n},{\"./mean\":9}],15:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\nfunction sampleStandardDeviation(x /*:Array<number>*/) /*:number*/{\n  // The standard deviation of no numbers is null\n  var sampleVarianceX = sampleVariance(x);\n  if (isNaN(sampleVarianceX)) {\n    return NaN;\n  }\n  return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n\n},{\"./sample_variance\":16}],16:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\nfunction sampleVariance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length <= 1) {\n        return NaN;\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n\n},{\"./sum_nth_power_deviations\":19}],17:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance. It's useful for measuring the amount\r\n * of variation or dispersion in a set of values.\r\n *\r\n * Standard deviation is only appropriate for full-population knowledge: for\r\n * samples of a population, {@link sampleStandardDeviation} is\r\n * more appropriate.\r\n *\r\n * @param {Array<number>} x input\r\n * @returns {number} standard deviation\r\n * @example\r\n * var scores = [2, 4, 4, 4, 5, 5, 7, 9];\r\n * variance(scores); //= 4\r\n * standardDeviation(scores); //= 2\r\n */\nfunction standardDeviation(x /*: Array<number> */) /*:number*/{\n  // The standard deviation of no numbers is null\n  var v = variance(x);\n  if (isNaN(v)) {\n    return 0;\n  }\n  return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n\n},{\"./variance\":20}],18:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\n\nfunction sum(x /*: Array<number> */) /*: number */{\n\n    // like the traditional sum algorithm, we keep a running\n    // count of the current sum.\n    var sum = 0;\n\n    // but we also keep three extra variables as bookkeeping:\n    // most importantly, an error correction value. This will be a very\n    // small number that is the opposite of the floating point precision loss.\n    var errorCompensation = 0;\n\n    // this will be each number in the list corrected with the compensation value.\n    var correctedCurrentValue;\n\n    // and this will be the next sum\n    var nextSum;\n\n    for (var i = 0; i < x.length; i++) {\n        // first correct the value that we're going to add to the sum\n        correctedCurrentValue = x[i] - errorCompensation;\n\n        // compute the next sum. sum is likely a much larger number\n        // than correctedCurrentValue, so we'll lose precision here,\n        // and measure how much precision is lost in the next step\n        nextSum = sum + correctedCurrentValue;\n\n        // we intentionally didn't assign sum immediately, but stored\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\n        // not equal to 0? ideally it would be, but in practice it won't:\n        // it will be some very small number. that's what we record\n        // as errorCompensation.\n        errorCompensation = nextSum - sum - correctedCurrentValue;\n\n        // now that we've computed how much we'll correct for in the next\n        // loop, start treating the nextSum as the current sum.\n        sum = nextSum;\n    }\n\n    return sum;\n}\n\nmodule.exports = sum;\n\n},{}],19:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\nfunction sumNthPowerDeviations(x /*: Array<number> */, n /*: number */) /*:number*/{\n    var meanValue = mean(x),\n        sum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        sum += Math.pow(x[i] - meanValue, n);\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n\n},{\"./mean\":9}],20:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\r\n * The [variance](http://en.wikipedia.org/wiki/Variance)\r\n * is the sum of squared deviations from the mean.\r\n *\r\n * This is an implementation of variance, not sample variance:\r\n * see the `sampleVariance` method if you want a sample measure.\r\n *\r\n * @param {Array<number>} x a population\r\n * @returns {number} variance: a value greater than or equal to zero.\r\n * zero indicates that all values are identical.\r\n * @example\r\n * ss.variance([1, 2, 3, 4, 5, 6]); //= 2.917\r\n */\nfunction variance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n\n},{\"./sum_nth_power_deviations\":19}],21:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\r\n *\r\n * The standard score is the number of standard deviations an observation\r\n * or datum is above or below the mean. Thus, a positive standard score\r\n * represents a datum above the mean, while a negative standard score\r\n * represents a datum below the mean. It is a dimensionless quantity\r\n * obtained by subtracting the population mean from an individual raw\r\n * score and then dividing the difference by the population standard\r\n * deviation.\r\n *\r\n * The z-score is only defined if one knows the population parameters;\r\n * if one only has a sample set, then the analogous computation with\r\n * sample mean and sample standard deviation yields the\r\n * Student's t-statistic.\r\n *\r\n * @param {number} x\r\n * @param {number} mean\r\n * @param {number} standardDeviation\r\n * @return {number} z score\r\n * @example\r\n * ss.zScore(78, 80, 5); //= -0.4\r\n */\n\nfunction zScore(x /*:number*/, mean /*:number*/, standardDeviation /*:number*/) /*:number*/{\n  return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BarChart = exports.BarChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chartWithColorGroups = require(\"./chart-with-color-groups\");\n\nvar _utils = require(\"./utils\");\n\nvar _legend = require(\"./legend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BarChartConfig = exports.BarChartConfig = function (_ChartWithColorGroups) {\n    _inherits(BarChartConfig, _ChartWithColorGroups);\n\n    function BarChartConfig(custom) {\n        _classCallCheck(this, BarChartConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BarChartConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'bar-chart';\n        _this.showLegend = true;\n        _this.showTooltip = true;\n        _this.x = { // X axis config\n            label: '', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return _utils.Utils.isNumber(d) ? d : d[key];\n            }, // x value accessor\n            scale: \"ordinal\",\n            ticks: undefined\n        };\n        _this.y = { // Y axis config\n            key: 1,\n            value: function value(d, key) {\n                return _utils.Utils.isNumber(d) ? d : d[key];\n            }, // x value accessor\n            label: '', // axis label,\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.transition = true;\n\n        var config = _this;\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    }\n\n    return BarChartConfig;\n}(_chartWithColorGroups.ChartWithColorGroupsConfig);\n\nvar BarChart = exports.BarChart = function (_ChartWithColorGroups2) {\n    _inherits(BarChart, _ChartWithColorGroups2);\n\n    function BarChart(placeholderSelector, data, config) {\n        _classCallCheck(this, BarChart);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(BarChart).call(this, placeholderSelector, data, new BarChartConfig(config)));\n    }\n\n    _createClass(BarChart, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(BarChart.prototype), \"setConfig\", this).call(this, new BarChartConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(BarChart.prototype), \"initPlot\", this).call(this);\n            var self = this;\n\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.y = {};\n\n            this.computePlotSize();\n            this.setupY();\n            this.setupX();\n            this.setupGroupStacks();\n            this.setupYDomain();\n\n            return this;\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale.ordinal().rangeRoundBands([0, plot.width], .08);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n\n            var data = this.plot.data;\n            var domain;\n            if (!data || !data.length) {\n                domain = [];\n            } else if (!this.config.series) {\n                domain = d3.map(data, x.value).keys();\n            } else {\n                domain = d3.map(data[0].values, x.value).keys();\n            }\n\n            plot.x.scale.domain(domain);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n            if (conf.ticks) {\n                y.axis.ticks(conf.ticks);\n            }\n        }\n    }, {\n        key: \"setupYDomain\",\n        value: function setupYDomain() {\n            var plot = this.plot;\n            var data = this.plot.data;\n            var domain;\n            var yStackMax = d3.max(plot.layers, function (layer) {\n                return d3.max(layer.points, function (d) {\n                    return d.y0 + d.y;\n                });\n            });\n\n            // var min = d3.min(data, s=>d3.min(s.values, plot.y.value));\n            var max = yStackMax;\n            domain = [0, max];\n\n            plot.y.scale.domain(domain);\n            void 0;\n        }\n    }, {\n        key: \"setupGroupStacks\",\n        value: function setupGroupStacks() {\n            var self = this;\n            this.groupData();\n\n            this.plot.stack = d3.layout.stack().values(function (d) {\n                return d.points;\n            });\n            this.plot.groupedData.forEach(function (s) {\n                s.points = s.values.map(function (v) {\n                    return self.mapToPoint(v);\n                });\n            });\n            this.plot.layers = this.plot.stack(this.plot.groupedData);\n        }\n    }, {\n        key: \"mapToPoint\",\n        value: function mapToPoint(value) {\n            var plot = this.plot;\n            return {\n                x: plot.x.value(value),\n                y: parseFloat(plot.y.value(value))\n            };\n        }\n    }, {\n        key: \"drawAxisX\",\n        value: function drawAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n            var axisT = axis;\n            if (self.config.transition) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.x.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + plot.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: \"drawAxisY\",\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n            var axisT = axis;\n            if (self.config.transition) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.y.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: \"drawBars\",\n        value: function drawBars() {\n            var self = this;\n            var plot = self.plot;\n\n            void 0;\n\n            var layerClass = this.prefixClass(\"layer\");\n\n            var barClass = this.prefixClass(\"bar\");\n            var layer = self.svgG.selectAll(\".\" + layerClass).data(plot.layers);\n\n            layer.enter().append(\"g\").attr(\"class\", layerClass);\n\n            var bar = layer.selectAll(\".\" + barClass).data(function (d) {\n                return d.points;\n            });\n\n            bar.enter().append(\"g\").attr(\"class\", barClass).append(\"rect\").attr(\"x\", 1);\n\n            var barRect = bar.select(\"rect\");\n\n            var barRectT = barRect;\n            var barT = bar;\n            var layerT = layer;\n            if (this.transitionEnabled()) {\n                barRectT = barRect.transition();\n                barT = bar.transition();\n                layerT = layer.transition();\n            }\n\n            var yDomain = plot.y.scale.domain();\n            barT.attr(\"transform\", function (d) {\n                return \"translate(\" + plot.x.scale(d.x) + \",\" + plot.y.scale(d.y0 + d.y) + \")\";\n            });\n\n            barRectT.attr(\"width\", plot.x.scale.rangeBand()).attr(\"height\", function (d) {\n                return plot.y.scale(d.y0) - plot.y.scale(d.y0 + d.y - yDomain[0]);\n            });\n\n            if (this.plot.seriesColor) {\n                layerT.attr(\"fill\", this.plot.seriesColor);\n            }\n\n            if (plot.tooltip) {\n                bar.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    plot.tooltip.html(d.y).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n            layer.exit().remove();\n            bar.exit().remove();\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(BarChart.prototype), \"update\", this).call(this, newData);\n            this.drawAxisX();\n            this.drawAxisY();\n            this.drawBars();\n            return this;\n        }\n    }]);\n\n    return BarChart;\n}(_chartWithColorGroups.ChartWithColorGroups);\n\n},{\"./chart-with-color-groups\":25,\"./legend\":33,\"./utils\":39}],23:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BoxPlotBase = exports.BoxPlotBaseConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BoxPlotBaseConfig = exports.BoxPlotBaseConfig = function (_ChartConfig) {\n    _inherits(BoxPlotBaseConfig, _ChartConfig);\n\n    function BoxPlotBaseConfig(custom) {\n        _classCallCheck(this, BoxPlotBaseConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BoxPlotBaseConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'box-plot';\n        _this.showLegend = true;\n        _this.showTooltip = true;\n        _this.x = { // X axis config\n            title: '', // axis label\n            value: function value(s) {\n                return s.key;\n            }, // x value accessor\n            guides: false, //show axis guides\n            scale: \"ordinal\"\n\n        };\n        _this.y = { // Y axis config\n            title: '',\n            value: function value(d) {\n                return d;\n            }, // y value accessor\n            scale: \"linear\",\n            orient: 'left',\n            domainMargin: 0.1,\n            guides: true //show axis guides\n        };\n\n        _this.Q1 = function (d) {\n            return d.values.Q1;\n        };\n\n        _this.Q2 = function (d) {\n            return d.values.Q2;\n        };\n\n        _this.Q3 = function (d) {\n            return d.values.Q3;\n        };\n\n        _this.Wl = function (d) {\n            return d.values.whiskerLow;\n        };\n\n        _this.Wh = function (d) {\n            return d.values.whiskerHigh;\n        };\n\n        _this.outliers = function (d) {\n            return d.values.outliers;\n        };\n\n        _this.outlierValue = function (d, i) {\n            return d;\n        };\n\n        _this.outlierLabel = function (d, i) {\n            return d;\n        };\n\n        _this.minBoxWidth = 35;\n        _this.maxBoxWidth = 100;\n        _this.transition = true;\n        _this.color = undefined;\n        _this.d3ColorCategory = 'category10';\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } // string or function returning color's value for color scale\n\n\n    return BoxPlotBaseConfig;\n}(_chart.ChartConfig);\n\nvar BoxPlotBase = exports.BoxPlotBase = function (_Chart) {\n    _inherits(BoxPlotBase, _Chart);\n\n    function BoxPlotBase(placeholderSelector, data, config) {\n        _classCallCheck(this, BoxPlotBase);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(BoxPlotBase).call(this, placeholderSelector, data, new BoxPlotBaseConfig(config)));\n    }\n\n    _createClass(BoxPlotBase, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(BoxPlotBase.prototype), 'setConfig', this).call(this, new BoxPlotBaseConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(BoxPlotBase.prototype), 'initPlot', this).call(this);\n            _get(Object.getPrototypeOf(BoxPlotBase.prototype), 'computePlotSize', this).call(this);\n            this.plot.x = {};\n            this.plot.y = {};\n\n            this.plot.data = this.getDataToPlot();\n            this.setupY();\n            this.setupX();\n\n            this.setupColor();\n        }\n    }, {\n        key: 'getDataToPlot',\n        value: function getDataToPlot() {\n            return this.data;\n        }\n    }, {\n        key: 'setupX',\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            x.value = conf.value;\n            x.scale = d3.scale.ordinal().rangeRoundBands([0, plot.width], .08);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            if (conf.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n\n            var data = this.plot.data;\n            var domain;\n            if (!data || !data.length) {\n                domain = [];\n            } else {\n                domain = data.map(x.value);\n            }\n\n            plot.x.scale.domain(domain);\n        }\n    }, {\n        key: 'setupY',\n        value: function setupY() {\n            var _this3 = this;\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n            y.value = function (d) {\n                return conf.value.call(_this3.config, d);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n            if (conf.ticks) {\n                y.axis.ticks(conf.ticks);\n            }\n            if (conf.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n            this.setupYDomain();\n        }\n    }, {\n        key: 'setupYDomain',\n        value: function setupYDomain() {\n            var plot = this.plot;\n            var data = this.plot.data;\n            var c = this.config;\n\n            var values = [],\n                yMin,\n                yMax;\n            data.forEach(function (d, i) {\n                var q1 = c.Q1(d),\n                    q3 = c.Q3(d),\n                    wl = c.Wl(d),\n                    wh = c.Wh(d),\n                    outliers = c.outliers(d);\n\n                if (outliers) {\n                    outliers.forEach(function (o, i) {\n                        values.push(c.outlierValue(o, i));\n                    });\n                }\n                if (wl) {\n                    values.push(wl);\n                }\n                if (q1) {\n                    values.push(q1);\n                }\n                if (q3) {\n                    values.push(q3);\n                }\n                if (wh) {\n                    values.push(wh);\n                }\n            });\n            yMin = d3.min(values);\n            yMax = d3.max(values);\n            var margin = (yMax - yMin) * this.config.y.domainMargin;\n            yMin -= margin;\n            yMax += margin;\n            var domain = [yMin, yMax];\n\n            plot.y.scale.domain(domain);\n        }\n    }, {\n        key: 'drawAxisX',\n        value: function drawAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides'))).attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n            var axisT = axis;\n            if (self.config.transition) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.x.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + plot.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawAxisY',\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n            var axisT = axis;\n            if (self.config.transition) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.y.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.title);\n        }\n    }, {\n        key: 'drawBoxPlots',\n        value: function drawBoxPlots() {\n            var self = this,\n                plot = self.plot,\n                config = self.config,\n                boxplotClass = self.prefixClass(\"boxplot-item\");\n\n            var boxplots = self.svgG.selectAll('.' + boxplotClass).data(plot.data);\n            var boxplotEnter = boxplots.enter().append('g').attr('class', boxplotClass).style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n\n            var duration = 1000;\n            var boxplotsT = boxplots;\n            if (self.transitionEnabled()) {\n                boxplotsT = boxplots.transition();\n                boxplotsT.delay(function (d, i) {\n                    return i * duration / plot.data.length;\n                });\n            }\n\n            boxplotsT.style('fill', plot.color).style('stroke-opacity', 1).style('fill-opacity', 0.75).attr('transform', function (d, i) {\n                return 'translate(' + (plot.x.map(d, i) + plot.x.scale.rangeBand() * 0.05) + ', 0)';\n            });\n            boxplots.exit().remove();\n\n            var boxWidth = !config.maxBoxWidth ? plot.x.scale.rangeBand() * 0.9 : Math.min(config.maxBoxWidth, Math.max(config.minBoxWidth, plot.x.scale.rangeBand() * 0.9));\n            var boxLeft = plot.x.scale.rangeBand() * 0.45 - boxWidth / 2;\n            var boxRight = plot.x.scale.rangeBand() * 0.45 + boxWidth / 2;\n\n            var boxClass = self.prefixClass(\"box\");\n\n            boxplotEnter.append('rect').attr('class', boxClass)\n            // tooltip events\n            .on('mouseover', function (d, i) {\n                d3.select(this).classed('hover', true);\n                var html = 'Q3: ' + config.Q3(d, i) + '<br/>Q2: ' + config.Q2(d, i) + '<br/>Q1: ' + config.Q1(d, i);\n                self.showTooltip(html);\n            }).on('mouseout', function (d, i) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n            var boxRects = boxplots.select('rect.' + boxClass);\n\n            var boxRectsT = boxRects;\n            if (self.config.transition) {\n                boxRectsT = boxRects.transition();\n            }\n\n            boxRectsT.attr('y', function (d, i) {\n                return plot.y.scale(config.Q3(d));\n            }).attr('width', boxWidth).attr('x', boxLeft).attr('height', function (d, i) {\n                return Math.abs(plot.y.scale(config.Q3(d)) - plot.y.scale(config.Q1(d))) || 1;\n            }).style('stroke', plot.color);\n\n            // median line\n            var medianClass = self.prefixClass('median');\n            boxplotEnter.append('line').attr('class', medianClass);\n\n            boxplots.select('line.' + medianClass).attr('x1', boxLeft).attr('y1', function (d, i) {\n                return plot.y.scale(config.Q2(d));\n            }).attr('x2', boxRight).attr('y2', function (d, i) {\n                return plot.y.scale(config.Q2(d));\n            });\n\n            //whiskers\n\n            var whiskerClass = self.prefixClass(\"whisker\"),\n                tickClass = self.prefixClass(\"boxplot-tick\");\n\n            var whiskers = [{ key: 'low', value: config.Wl }, { key: 'high', value: config.Wh }];\n\n            boxplotEnter.each(function (d, i) {\n                var box = d3.select(this);\n\n                whiskers.forEach(function (f) {\n                    if (f.value(d)) {\n                        box.append('line').style('stroke', plot.color(d, i)).attr('class', whiskerClass + ' ' + boxplotClass + '-' + f.key);\n                        box.append('line').style('stroke', plot.color(d, i)).attr('class', tickClass + ' ' + boxplotClass + '-' + f.key);\n                    }\n                });\n            });\n\n            whiskers.forEach(function (f) {\n                var endpoint = f.key === 'low' ? config.Q1 : config.Q3;\n\n                boxplots.select('.' + whiskerClass + '.' + boxplotClass + '-' + f.key).attr('x1', plot.x.scale.rangeBand() * 0.45).attr('y1', function (d, i) {\n                    return plot.y.scale(f.value(d));\n                }).attr('x2', plot.x.scale.rangeBand() * 0.45).attr('y2', function (d, i) {\n                    return plot.y.scale(endpoint(d));\n                });\n                boxplots.select('.' + tickClass + '.' + boxplotClass + '-' + f.key).attr('x1', boxLeft).attr('y1', function (d, i) {\n                    return plot.y.scale(f.value(d));\n                }).attr('x2', boxRight).attr('y2', function (d, i) {\n                    return plot.y.scale(f.value(d));\n                });\n\n                boxplotEnter.selectAll('.' + boxplotClass + '-' + f.key).on('mouseover', function (d, i, j) {\n                    d3.select(this).classed('hover', true);\n                    self.showTooltip(f.value(d));\n                }).on('mouseout', function (d, i, j) {\n                    d3.select(this).classed('hover', false);\n                    self.hideTooltip();\n                });\n            });\n\n            // outliers\n            var outlierClass = self.prefixClass(\"outlier\");\n            var outliers = boxplots.selectAll('.' + outlierClass).data(function (d, i) {\n                return config.outliers(d, i) || [];\n            });\n\n            var outlierEnterCircle = outliers.enter().append('circle').attr('class', outlierClass).style('z-index', 9000);\n\n            outlierEnterCircle.on('mouseover', function (d, i, j) {\n                d3.select(this).classed('hover', true);\n                self.showTooltip(config.outlierLabel(d, i));\n            }).on('mouseout', function (d, i, j) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n            var outliersT = outliers;\n            if (self.config.transition) {\n                outliersT = outliers.transition();\n            }\n            outliersT.attr('cx', plot.x.scale.rangeBand() * 0.45).attr('cy', function (d, i) {\n                return plot.y.scale(config.outlierValue(d, i));\n            }).attr('r', '3');\n            outliers.exit().remove();\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(BoxPlotBase.prototype), 'update', this).call(this, newData);\n            this.drawAxisX();\n            this.drawAxisY();\n            this.drawBoxPlots();\n            return this;\n        }\n    }, {\n        key: 'setupColor',\n        value: function setupColor() {\n            var _this4 = this;\n\n            var self = this;\n            var conf = this.config;\n\n            if (conf.d3ColorCategory) {\n                this.plot.colorCategory = d3.scale[conf.d3ColorCategory]();\n            }\n            var colorValue = conf.color;\n            if (colorValue && typeof colorValue === 'string' || colorValue instanceof String) {\n                this.plot.color = colorValue;\n            } else if (this.plot.colorCategory) {\n                self.plot.colorValue = colorValue;\n                this.plot.color = function (d) {\n                    return self.plot.colorCategory(_this4.plot.x.value(d));\n                };\n            }\n        }\n    }]);\n\n    return BoxPlotBase;\n}(_chart.Chart);\n\n},{\"./chart\":26,\"./utils\":39}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BoxPlot = exports.BoxPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _boxPlotBase = require('./box-plot-base');\n\nvar _utils = require('./utils');\n\nvar _statisticsUtils = require('./statistics-utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BoxPlotConfig = exports.BoxPlotConfig = function (_BoxPlotBaseConfig) {\n    _inherits(BoxPlotConfig, _BoxPlotBaseConfig);\n\n    function BoxPlotConfig(custom) {\n        _classCallCheck(this, BoxPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BoxPlotConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'box-plot';\n        _this.showLegend = true;\n        _this.showTooltip = true;\n        _this.y = { // Y axis config\n            title: '',\n            key: undefined,\n            value: function value(d) {\n                return this.y.key === undefined ? d : d[this.y.key];\n            }, // y value accessor\n            scale: \"linear\",\n            orient: 'left',\n            domainMargin: 0.1,\n            guides: true //show axis guides\n        };\n        _this.series = false;\n        _this.groups = {\n            key: undefined,\n            value: function value(d) {\n                return this.groups.key === undefined ? null : d[this.groups.key];\n            }, // grouping value accessor,\n            label: \"\",\n            displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return BoxPlotConfig;\n}(_boxPlotBase.BoxPlotBaseConfig);\n\nvar BoxPlot = exports.BoxPlot = function (_BoxPlotBase) {\n    _inherits(BoxPlot, _BoxPlotBase);\n\n    function BoxPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, BoxPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(BoxPlot).call(this, placeholderSelector, data, new BoxPlotConfig(config)));\n    }\n\n    _createClass(BoxPlot, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(BoxPlot.prototype), 'setConfig', this).call(this, new BoxPlotConfig(config));\n        }\n    }, {\n        key: 'getDataToPlot',\n        value: function getDataToPlot() {\n            var self = this;\n            var conf = self.config;\n            self.plot.groupingEnabled = this.isGroupingEnabled();\n\n            var data = this.data;\n            if (!self.plot.groupingEnabled) {\n                self.plot.groupedData = [{\n                    key: null,\n                    label: '',\n                    values: data\n                }];\n                self.plot.dataLength = data.length;\n            } else {\n                if (self.config.series) {\n                    self.plot.groupedData = data.map(function (s) {\n                        return {\n                            key: s.key,\n                            label: s.label,\n                            values: s.values\n                        };\n                    });\n                } else {\n                    self.plot.groupValue = function (d) {\n                        return conf.groups.value.call(conf, d);\n                    };\n                    self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n                }\n\n                self.plot.dataLength = d3.sum(this.plot.groupedData, function (s) {\n                    return s.values.length;\n                });\n            }\n\n            self.plot.groupedData.forEach(function (s) {\n                if (!Array.isArray(s.values)) {\n                    return;\n                }\n\n                var values = s.values.map(function (d) {\n                    return parseFloat(self.config.y.value.call(self.config, d));\n                });\n                s.values.Q1 = _statisticsUtils.StatisticsUtils.quantile(values, 0.25);\n                s.values.Q2 = _statisticsUtils.StatisticsUtils.quantile(values, 0.5);\n                s.values.Q3 = _statisticsUtils.StatisticsUtils.quantile(values, 0.75);\n                s.values.whiskerLow = d3.min(values);\n                s.values.whiskerHigh = d3.max(values);\n            });\n\n            return self.plot.groupedData;\n        }\n    }, {\n        key: 'isGroupingEnabled',\n        value: function isGroupingEnabled() {\n            return this.config.series || !!(this.config.groups && this.config.groups.value);\n        }\n    }]);\n\n    return BoxPlot;\n}(_boxPlotBase.BoxPlotBase);\n\n},{\"./box-plot-base\":23,\"./statistics-utils\":38,\"./utils\":39}],25:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChartWithColorGroups = exports.ChartWithColorGroupsConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _utils = require(\"./utils\");\n\nvar _legend = require(\"./legend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ChartWithColorGroupsConfig = exports.ChartWithColorGroupsConfig = function (_ChartConfig) {\n    _inherits(ChartWithColorGroupsConfig, _ChartConfig);\n\n    function ChartWithColorGroupsConfig(custom) {\n        _classCallCheck(this, ChartWithColorGroupsConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ChartWithColorGroupsConfig).call(this));\n\n        _this.showLegend = true;\n        _this.legend = {\n            width: 80,\n            margin: 10,\n            shapeWidth: 20\n        };\n        _this.groups = {\n            key: 2,\n            value: function value(d) {\n                return d[this.groups.key];\n            }, // grouping value accessor,\n            label: \"\",\n            displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n        };\n        _this.series = false;\n        _this.color = undefined;\n        _this.d3ColorCategory = 'category10';\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } // string or function returning color's value for color scale\n\n\n    return ChartWithColorGroupsConfig;\n}(_chart.ChartConfig);\n\nvar ChartWithColorGroups = exports.ChartWithColorGroups = function (_Chart) {\n    _inherits(ChartWithColorGroups, _Chart);\n\n    function ChartWithColorGroups(placeholderSelector, data, config) {\n        _classCallCheck(this, ChartWithColorGroups);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ChartWithColorGroups).call(this, placeholderSelector, data, new ChartWithColorGroupsConfig(config)));\n    }\n\n    _createClass(ChartWithColorGroups, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ChartWithColorGroups.prototype), \"setConfig\", this).call(this, new ChartWithColorGroupsConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(ChartWithColorGroups.prototype), \"initPlot\", this).call(this);\n            var self = this;\n\n            var conf = this.config;\n\n            this.plot.showLegend = conf.showLegend;\n            if (this.plot.showLegend) {\n                this.plot.margin.right = conf.margin.right + conf.legend.width + conf.legend.margin * 2;\n            }\n            this.setupGroups();\n            this.plot.data = this.getDataToPlot();\n            this.groupData();\n            return this;\n        }\n    }, {\n        key: \"isGroupingEnabled\",\n        value: function isGroupingEnabled() {\n            return this.config.series || !!(this.config.groups && this.config.groups.value);\n        }\n    }, {\n        key: \"computeGroupColorDomain\",\n        value: function computeGroupColorDomain() {\n            var _this3 = this;\n\n            return Object.getOwnPropertyNames(d3.map(this.data, function (d) {\n                return _this3.plot.groupValue(d);\n            })['_']);\n        }\n    }, {\n        key: \"setupGroups\",\n        value: function setupGroups() {\n            var _this4 = this;\n\n            var self = this;\n            var conf = this.config;\n\n            this.plot.groupingEnabled = this.isGroupingEnabled();\n            var domain = [];\n            if (this.plot.groupingEnabled) {\n                self.plot.groupToLabel = {};\n                if (this.config.series) {\n                    this.plot.groupValue = function (s) {\n                        return s.key;\n                    };\n                    domain = this.computeGroupColorDomain();\n\n                    this.data.forEach(function (s) {\n                        self.plot.groupToLabel[s.key] = s.label || s.key;\n                    });\n                } else {\n                    this.plot.groupValue = function (d) {\n                        return conf.groups.value.call(conf, d);\n                    };\n                    domain = this.computeGroupColorDomain();\n                    var getLabel = function getLabel(k) {\n                        return k;\n                    };\n                    if (self.config.groups.displayValue) {\n                        if (_utils.Utils.isFunction(self.config.groups.displayValue)) {\n                            getLabel = function getLabel(k) {\n                                return self.config.groups.displayValue(k) || k;\n                            };\n                        } else if (_utils.Utils.isObject(self.config.groups.displayValue)) {\n                            getLabel = function getLabel(k) {\n                                return self.config.groups.displayValue[k] || k;\n                            };\n                        }\n                    }\n                    domain.forEach(function (k) {\n                        self.plot.groupToLabel[k] = getLabel(k);\n                    });\n                }\n            } else {\n                this.plot.groupValue = function (d) {\n                    return null;\n                };\n            }\n\n            if (conf.d3ColorCategory) {\n                this.plot.colorCategory = d3.scale[conf.d3ColorCategory]();\n            }\n            var colorValue = conf.color;\n            if (colorValue && typeof colorValue === 'string' || colorValue instanceof String) {\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n            } else if (this.plot.colorCategory) {\n                self.plot.colorValue = colorValue;\n                self.plot.colorCategory.domain(domain);\n\n                this.plot.seriesColor = function (s) {\n                    return self.plot.colorCategory(s.key);\n                };\n                this.plot.color = function (d) {\n                    return self.plot.colorCategory(_this4.plot.groupValue(d));\n                };\n            } else {\n                this.plot.color = this.plot.seriesColor = function (s) {\n                    return 'black';\n                };\n            }\n        }\n    }, {\n        key: \"groupData\",\n        value: function groupData() {\n            var self = this;\n            var data = this.plot.data;\n            if (!self.plot.groupingEnabled) {\n                self.plot.groupedData = [{\n                    key: null,\n                    label: '',\n                    values: data\n                }];\n                self.plot.dataLength = data.length;\n            } else {\n\n                if (self.config.series) {\n                    self.plot.groupedData = data.map(function (s) {\n                        return {\n                            key: s.key,\n                            label: s.label,\n                            values: s.values\n                        };\n                    });\n                } else {\n                    self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n                    self.plot.groupedData.forEach(function (g) {\n                        g.label = self.plot.groupToLabel[g.key];\n                    });\n                }\n\n                self.plot.dataLength = d3.sum(this.plot.groupedData, function (s) {\n                    return s.values.length;\n                });\n            }\n\n            // this.plot.seriesColor\n        }\n    }, {\n        key: \"getDataToPlot\",\n        value: function getDataToPlot() {\n            var _this5 = this;\n\n            if (!this.plot.groupingEnabled || !this.enabledGroups) {\n                return this.data;\n            }\n            return this.data.filter(function (d) {\n                return _this5.enabledGroups.indexOf(_this5.plot.groupValue(d)) > -1;\n            });\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(ChartWithColorGroups.prototype), \"update\", this).call(this, newData);\n            this.updateLegend();\n\n            return this;\n        }\n    }, {\n        key: \"updateLegend\",\n        value: function updateLegend() {\n\n            var self = this;\n            var plot = this.plot;\n\n            var scale = plot.colorCategory;\n\n            if (!scale.domain() || scale.domain().length < 2) {\n                plot.showLegend = false;\n            }\n\n            if (!plot.showLegend) {\n                if (plot.legend && plot.legend.container) {\n                    plot.legend.container.remove();\n                }\n                return;\n            }\n\n            var legendX = this.plot.width + this.config.legend.margin;\n            var legendY = this.config.legend.margin;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n            plot.legendColor = plot.legend.color().shapeWidth(this.config.legend.shapeWidth).orient('vertical').scale(scale).labels(scale.domain().map(function (v) {\n                return plot.groupToLabel[v];\n            }));\n\n            plot.legendColor.on('cellclick', function (c) {\n                return self.onLegendCellClick(c);\n            });\n\n            plot.legend.container.call(plot.legendColor);\n\n            this.updateLegendCellStatuses();\n        }\n    }, {\n        key: \"onLegendCellClick\",\n        value: function onLegendCellClick(cellValue) {\n            this.updateEnabledGroups(cellValue);\n            this.init();\n        }\n    }, {\n        key: \"updateLegendCellStatuses\",\n        value: function updateLegendCellStatuses() {\n            var self = this;\n            this.plot.legend.container.selectAll(\"g.cell\").each(function (cell) {\n                var isDisabled = self.enabledGroups && self.enabledGroups.indexOf(cell) < 0;\n                d3.select(this).classed(\"odc-disabled\", isDisabled);\n            });\n        }\n    }, {\n        key: \"updateEnabledGroups\",\n        value: function updateEnabledGroups(cellValue) {\n            if (!this.enabledGroups) {\n                this.enabledGroups = this.plot.colorCategory.domain().slice();\n            }\n            var index = this.enabledGroups.indexOf(cellValue);\n\n            if (index < 0) {\n                this.enabledGroups.push(cellValue);\n            } else {\n                this.enabledGroups.splice(index, 1);\n            }\n\n            if (!this.enabledGroups.length) {\n                this.enabledGroups = this.plot.colorCategory.domain().slice();\n            }\n        }\n    }, {\n        key: \"setData\",\n        value: function setData(data) {\n            _get(Object.getPrototypeOf(ChartWithColorGroups.prototype), \"setData\", this).call(this, data);\n            this.enabledGroups = null;\n            return this;\n        }\n    }]);\n\n    return ChartWithColorGroups;\n}(_chart.Chart);\n\n},{\"./chart\":26,\"./legend\":33,\"./utils\":39}],26:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chart = exports.ChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChartConfig = exports.ChartConfig = function ChartConfig(custom) {\n    _classCallCheck(this, ChartConfig);\n\n    this.cssClassPrefix = \"odc-\";\n    this.svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    this.showTooltip = false;\n    this.transition = true;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar Chart = exports.Chart = function () {\n    function Chart(base, data, config) {\n        _classCallCheck(this, Chart);\n\n        this.utils = _utils.Utils;\n        this.plot = {\n            margin: {}\n        };\n        this._attached = {};\n        this._layers = {};\n        this._events = {};\n        this._isInitialized = false;\n\n\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n\n        this.init();\n        this.postInit();\n    }\n\n    _createClass(Chart, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new ChartConfig();\n            } else {\n                this.config = config;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setData',\n        value: function setData(data) {\n            this.data = data;\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n\n            self.initPlot();\n            self.initSvg();\n\n            if (!this._isInitialized) {\n                self.initTooltip();\n            }\n            self.draw();\n            this._isInitialized = true;\n            return this;\n        }\n    }, {\n        key: 'postInit',\n        value: function postInit() {}\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            var config = this.config;\n\n            var margin = self.plot.margin;\n            var width = self.plot.width + margin.left + margin.right;\n            var height = self.plot.height + margin.top + margin.bottom;\n            var aspect = width / height;\n            if (!self._isAttached) {\n                if (!this._isInitialized) {\n                    d3.select(self.baseContainer).select(\"svg\").remove();\n                }\n                self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\n\n                self.svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height).attr(\"preserveAspectRatio\", \"xMidYMid meet\").attr(\"class\", config.svgClass);\n                self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n            } else {\n                void 0;\n                self.svg = self.baseContainer.svg;\n                self.svgG = self.svg.selectOrAppend(\"g.main-group.\" + config.svgClass);\n            }\n\n            self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n            if (!config.width || config.height) {\n                d3.select(window).on(\"resize\", function () {\n                    var transition = self.config.transition;\n                    self.config.transition = false;\n                    self.init();\n                    self.config.transition = transition;\n                });\n            }\n        }\n    }, {\n        key: 'initTooltip',\n        value: function initTooltip() {\n            var self = this;\n            if (self.config.showTooltip) {\n                if (!self._isAttached) {\n                    self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.' + self.config.cssClassPrefix + 'tooltip').style(\"opacity\", 0);\n                } else {\n                    self.plot.tooltip = self.baseContainer.plot.tooltip;\n                }\n            } else {\n                self.plot.tooltip = null;\n            }\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var margin = this.config.margin;\n            this.plot = this.plot || {};\n            this.plot.margin = {\n                top: margin.top,\n                bottom: margin.bottom,\n                left: margin.left,\n                right: margin.right\n            };\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            if (data) {\n                this.setData(data);\n            }\n            var layerName, attachmentData;\n            for (var attachmentName in this._attached) {\n\n                attachmentData = data;\n\n                this._attached[attachmentName].update(attachmentData);\n            }\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw(data) {\n            this.update(data);\n\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n         * method will be invoked whenever the containing chart's `draw` method is\r\n         * invoked.\r\n         *\r\n         * @externalExample chart-attach\r\n         *\r\n         * @param {String} attachmentName Name of the attachment\r\n         * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n         *        unspecified, this method will return the attachment previously\r\n         *        registered with the specified `attachmentName` (if any).\r\n         *\r\n         * @returns {Chart} Reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'attach',\n        value: function attach(attachmentName, chart) {\n            if (arguments.length === 1) {\n                return this._attached[attachmentName];\n            }\n\n            this._attached[attachmentName] = chart;\n            return chart;\n        }\n    }, {\n        key: 'on',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Subscribe a callback function to an event triggered on the chart. See {@link\r\n            * Chart#once} to subscribe a callback function to an event for one occurence.\r\n         *\r\n         * @externalExample {runnable} chart-on\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function on(name, callback, context) {\n            var events = this._events[name] || (this._events[name] = []);\n            events.push({\n                callback: callback,\n                context: context || this,\n                _chart: this\n            });\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         *\r\n         * Subscribe a callback function to an event triggered on the chart. This\r\n         * function will be invoked at the next occurance of the event and immediately\r\n         * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n         * event indefinitely.\r\n         *\r\n         * @externalExample {runnable} chart-once\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable)\r\n         */\n\n    }, {\n        key: 'once',\n        value: function once(name, callback, context) {\n            var self = this;\n            var once = function once() {\n                self.off(name, once);\n                callback.apply(this, arguments);\n            };\n            return this.on(name, once, context);\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Unsubscribe one or more callback functions from an event triggered on the\r\n         * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n         * When only a `name` is specified, all handlers subscribed to that event will\r\n         * be unsubscribed. When a `name` and `callback` are specified, only that\r\n         * function will be unsubscribed from that event. When a `name` and `context`\r\n         * are specified (but `callback` is omitted), all events bound to the given\r\n         * event with the given context will be unsubscribed.\r\n         *\r\n         * @externalExample {runnable} chart-off\r\n         *\r\n         * @param {String} [name] Name of the event to be unsubscribed\r\n         * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n         * @param {Object} [context] Contexts to be unsubscribe\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'off',\n        value: function off(name, callback, context) {\n            var names, n, events, event, i, j;\n\n            // remove all events\n            if (arguments.length === 0) {\n                for (name in this._events) {\n                    this._events[name].length = 0;\n                }\n                return this;\n            }\n\n            // remove all events for a specific name\n            if (arguments.length === 1) {\n                events = this._events[name];\n                if (events) {\n                    events.length = 0;\n                }\n                return this;\n            }\n\n            // remove all events that match whatever combination of name, context\n            // and callback.\n            names = name ? [name] : Object.keys(this._events);\n            for (i = 0; i < names.length; i++) {\n                n = names[i];\n                events = this._events[n];\n                j = events.length;\n                while (j--) {\n                    event = events[j];\n                    if (callback && callback === event.callback || context && context === event.context) {\n                        events.splice(j, 1);\n                    }\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'trigger',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Publish an event on this chart with the given `name`.\r\n         *\r\n         * @externalExample {runnable} chart-trigger\r\n         *\r\n         * @param {String} name Name of the event to publish\r\n         * @param {...*} arguments Values with which to invoke the registered\r\n         *        callbacks.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function trigger(name) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var events = this._events[name];\n            var i, ev;\n\n            if (events !== undefined) {\n                for (i = 0; i < events.length; i++) {\n                    ev = events[i];\n                    ev.callback.apply(ev.context, args);\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'getBaseContainer',\n        value: function getBaseContainer() {\n            if (this._isAttached) {\n                return this.baseContainer.svg;\n            }\n            return d3.select(this.baseContainer);\n        }\n    }, {\n        key: 'getBaseContainerNode',\n        value: function getBaseContainerNode() {\n\n            return this.getBaseContainer().node();\n        }\n    }, {\n        key: 'prefixClass',\n        value: function prefixClass(clazz, addDot) {\n            return addDot ? '.' : '' + this.config.cssClassPrefix + clazz;\n        }\n    }, {\n        key: 'computePlotSize',\n        value: function computePlotSize() {\n            this.plot.width = _utils.Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n            this.plot.height = _utils.Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n        }\n    }, {\n        key: 'transitionEnabled',\n        value: function transitionEnabled() {\n            return this._isInitialized && this.config.transition;\n        }\n    }, {\n        key: 'showTooltip',\n        value: function showTooltip(html) {\n            if (!this.plot.tooltip) {\n                return;\n            }\n            this.plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n            this.plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n        }\n    }, {\n        key: 'hideTooltip',\n        value: function hideTooltip() {\n            if (!this.plot.tooltip) {\n                return;\n            }\n            this.plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n        }\n    }]);\n\n    return Chart;\n}();\n\n},{\"./utils\":39}],27:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CorrelationMatrix = exports.CorrelationMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _statisticsUtils = require('./statistics-utils');\n\nvar _legend = require('./legend');\n\nvar _scatterplot = require('./scatterplot');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CorrelationMatrixConfig = exports.CorrelationMatrixConfig = function (_ChartConfig) {\n    _inherits(CorrelationMatrixConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function CorrelationMatrixConfig(custom) {\n        _classCallCheck(this, CorrelationMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrixConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'correlation-matrix';\n        _this.guides = false;\n        _this.showTooltip = true;\n        _this.showLegend = true;\n        _this.highlightLabels = true;\n        _this.rotateLabelsX = true;\n        _this.rotateLabelsY = true;\n        _this.variables = {\n            labels: undefined,\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            }, // variable value accessor\n            scale: \"ordinal\"\n        };\n        _this.correlation = {\n            scale: \"linear\",\n            domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n            range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n            value: function value(xValues, yValues) {\n                return _statisticsUtils.StatisticsUtils.sampleCorrelation(xValues, yValues);\n            }\n\n        };\n        _this.cell = {\n            shape: \"ellipse\", //possible values: rect, circle, ellipse\n            size: undefined,\n            sizeMin: 15,\n            sizeMax: 250,\n            padding: 1\n        };\n        _this.margin = {\n            left: 60,\n            right: 50,\n            top: 30,\n            bottom: 60\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    } //show axis guides\n\n\n    return CorrelationMatrixConfig;\n}(_chart.ChartConfig);\n\nvar CorrelationMatrix = exports.CorrelationMatrix = function (_Chart) {\n    _inherits(CorrelationMatrix, _Chart);\n\n    function CorrelationMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, CorrelationMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrix).call(this, placeholderSelector, data, new CorrelationMatrixConfig(config)));\n    }\n\n    _createClass(CorrelationMatrix, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'setConfig', this).call(this, new CorrelationMatrixConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'initPlot', this).call(this);\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.correlation = {\n                matrix: undefined,\n                cells: undefined,\n                color: {},\n                shape: {}\n            };\n\n            this.setupVariables();\n            var width = conf.width;\n            var placeholderNode = this.getBaseContainerNode();\n            this.plot.placeholderNode = placeholderNode;\n\n            var parentWidth = placeholderNode.getBoundingClientRect().width;\n            if (width) {\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n                }\n            } else {\n                this.plot.cellSize = this.config.cell.size;\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n                }\n\n                width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n            }\n\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = this.plot.width;\n\n            this.setupVariablesScales();\n            this.setupCorrelationScales();\n            this.setupCorrelationMatrix();\n\n            return this;\n        }\n    }, {\n        key: 'setupVariablesScales',\n        value: function setupVariablesScales() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.variables;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = conf.value;\n            x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n        }\n    }, {\n        key: 'setupCorrelationScales',\n        value: function setupCorrelationScales() {\n            var plot = this.plot;\n            var corrConf = this.config.correlation;\n\n            plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\n            var shape = plot.correlation.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = cellConf.shape;\n\n            var shapeSize = plot.cellSize - cellConf.padding * 2;\n            if (shape.type == 'circle') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\n                shape.radius = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n            } else if (shape.type == 'ellipse') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\n                shape.radiusX = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n                shape.radiusY = radiusMax;\n\n                shape.rotateVal = function (v) {\n                    if (v == 0) return \"0\";\n                    if (v < 0) return \"-45\";\n                    return \"45\";\n                };\n            } else if (shape.type == 'rect') {\n                shape.size = shapeSize;\n            }\n        }\n    }, {\n        key: 'setupVariables',\n        value: function setupVariables() {\n\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n        }\n    }, {\n        key: 'setupCorrelationMatrix',\n        value: function setupCorrelationMatrix() {\n            var self = this;\n            var data = this.data;\n            var matrix = this.plot.correlation.matrix = [];\n            var matrixCells = this.plot.correlation.matrix.cells = [];\n            var plot = this.plot;\n\n            var variableToValues = {};\n            plot.variables.forEach(function (v, i) {\n\n                variableToValues[v] = data.map(function (d) {\n                    return plot.x.value(d, v);\n                });\n            });\n\n            plot.variables.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                plot.variables.forEach(function (v2, j) {\n                    var corr = 1;\n                    if (v1 != v2) {\n                        corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                    }\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: corr\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'update', this).call(this, newData);\n            // this.update\n            this.updateCells();\n            this.updateVariableLabels();\n\n            if (this.config.showLegend) {\n                this.updateLegend();\n            }\n        }\n    }, {\n        key: 'updateVariableLabels',\n        value: function updateVariableLabels() {\n            this.plot.labelClass = this.prefixClass(\"label\");\n            this.updateAxisX();\n            this.updateAxisY();\n        }\n    }, {\n        key: 'updateAxisX',\n        value: function updateAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = plot.labelClass;\n            var labelXClass = labelClass + \"-x\";\n\n            var labels = self.svgG.selectAll(\"text.\" + labelXClass).data(plot.variables, function (d, i) {\n                return i;\n            });\n\n            labels.enter().append(\"text\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i;\n            });\n\n            labels.attr(\"x\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"y\", plot.height).attr(\"dx\", -2).attr(\"dy\", 5).attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            if (this.config.rotateLabelsX) {\n                labels.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2) + \", \" + plot.height + \")\";\n                });\n            }\n\n            var maxWidth = self.computeXAxisLabelsWidth();\n            labels.each(function (label) {\n                _utils.Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n            });\n\n            labels.exit().remove();\n        }\n    }, {\n        key: 'updateAxisY',\n        value: function updateAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = plot.labelClass;\n            var labelYClass = plot.labelClass + \"-y\";\n            var labels = self.svgG.selectAll(\"text.\" + labelYClass).data(plot.variables);\n\n            labels.enter().append(\"text\");\n\n            labels.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"dx\", -2).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i;\n            })\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            if (this.config.rotateLabelsY) {\n                labels.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + 0 + \", \" + (i * plot.cellSize + plot.cellSize / 2) + \")\";\n                }).attr(\"text-anchor\", \"end\");\n            }\n\n            var maxWidth = self.computeYAxisLabelsWidth();\n            labels.each(function (label) {\n                _utils.Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n            });\n\n            labels.exit().remove();\n        }\n    }, {\n        key: 'computeYAxisLabelsWidth',\n        value: function computeYAxisLabelsWidth() {\n            var maxWidth = this.plot.margin.left;\n            if (!this.config.rotateLabelsY) {\n                return maxWidth;\n            }\n\n            maxWidth *= _utils.Utils.SQRT_2;\n            var fontSize = 11; //todo check actual font size\n            maxWidth -= fontSize / 2;\n\n            return maxWidth;\n        }\n    }, {\n        key: 'computeXAxisLabelsWidth',\n        value: function computeXAxisLabelsWidth(offset) {\n            if (!this.config.rotateLabelsX) {\n                return this.plot.cellSize - 2;\n            }\n            var size = this.plot.margin.bottom;\n            size *= _utils.Utils.SQRT_2;\n            var fontSize = 11; //todo check actual font size\n            size -= fontSize / 2;\n            return size;\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellClass = self.prefixClass(\"cell\");\n            var cellShape = plot.correlation.shape.type;\n\n            var cells = self.svgG.selectAll(\"g.\" + cellClass).data(plot.correlation.matrix.cells);\n\n            var cellEnterG = cells.enter().append(\"g\").classed(cellClass, true);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\";\n            });\n\n            cells.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n            var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n            var wrongShapes = cells.selectAll(selector);\n            wrongShapes.remove();\n\n            var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n            if (plot.correlation.shape.type == 'circle') {\n\n                shapes.attr(\"r\", plot.correlation.shape.radius).attr(\"cx\", 0).attr(\"cy\", 0);\n            }\n\n            if (plot.correlation.shape.type == 'ellipse') {\n                // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n                shapes.attr(\"rx\", plot.correlation.shape.radiusX).attr(\"ry\", plot.correlation.shape.radiusY).attr(\"cx\", 0).attr(\"cy\", 0).attr(\"transform\", function (c) {\n                    return \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\";\n                });\n            }\n\n            if (plot.correlation.shape.type == 'rect') {\n                shapes.attr(\"width\", plot.correlation.shape.size).attr(\"height\", plot.correlation.shape.size).attr(\"x\", -plot.cellSize / 2).attr(\"y\", -plot.cellSize / 2);\n            }\n            shapes.style(\"fill\", function (c) {\n                return plot.correlation.color.scale(c.value);\n            });\n\n            var mouseoverCallbacks = [];\n            var mouseoutCallbacks = [];\n\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value;\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (self.config.highlightLabels) {\n                var highlightClass = self.config.cssClassPrefix + \"highlight\";\n                var xLabelClass = function xLabelClass(c) {\n                    return plot.labelClass + \"-x-\" + c.col;\n                };\n                var yLabelClass = function yLabelClass(c) {\n                    return plot.labelClass + \"-y-\" + c.row;\n                };\n\n                mouseoverCallbacks.push(function (c) {\n\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n                });\n                mouseoutCallbacks.push(function (c) {\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n                });\n            }\n\n            cells.on(\"mouseover\", function (c) {\n                mouseoverCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            }).on(\"mouseout\", function (c) {\n                mouseoutCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            });\n\n            cells.on(\"click\", function (c) {\n                self.trigger(\"cell-selected\", c);\n            });\n\n            cells.exit().remove();\n        }\n    }, {\n        key: 'updateLegend',\n        value: function updateLegend() {\n\n            var plot = this.plot;\n            var legendX = this.plot.width + 10;\n            var legendY = 0;\n            var barWidth = 10;\n            var barHeight = this.plot.height - 2;\n            var scale = plot.correlation.color.scale;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        }\n    }, {\n        key: 'attachScatterPlot',\n        value: function attachScatterPlot(containerSelector, config) {\n            var _this3 = this;\n\n            var self = this;\n\n            config = config || {};\n\n            var scatterPlotConfig = {\n                height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                groups: {\n                    key: self.config.groups.key,\n                    label: self.config.groups.label\n                },\n                guides: true,\n                showLegend: false\n            };\n\n            self.scatterPlot = true;\n\n            scatterPlotConfig = _utils.Utils.deepExtend(scatterPlotConfig, config);\n            this.update();\n\n            this.on(\"cell-selected\", function (c) {\n\n                scatterPlotConfig.x = {\n                    key: c.rowVar,\n                    label: self.plot.labelByVariable[c.rowVar]\n                };\n                scatterPlotConfig.y = {\n                    key: c.colVar,\n                    label: self.plot.labelByVariable[c.colVar]\n                };\n                if (self.scatterPlot && self.scatterPlot !== true) {\n                    self.scatterPlot.setConfig(scatterPlotConfig).init();\n                } else {\n                    self.scatterPlot = new _scatterplot.ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                    _this3.attach(\"ScatterPlot\", self.scatterPlot);\n                }\n            });\n        }\n    }]);\n\n    return CorrelationMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":26,\"./legend\":33,\"./scatterplot\":36,\"./statistics-utils\":38,\"./utils\":39}],28:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.D3Extensions = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar D3Extensions = exports.D3Extensions = function () {\n    function D3Extensions() {\n        _classCallCheck(this, D3Extensions);\n    }\n\n    _createClass(D3Extensions, null, [{\n        key: 'extend',\n        value: function extend() {\n\n            d3.selection.enter.prototype.insertSelector = d3.selection.prototype.insertSelector = function (selector, before) {\n                return _utils.Utils.insertSelector(this, selector, before);\n            };\n\n            d3.selection.enter.prototype.appendSelector = d3.selection.prototype.appendSelector = function (selector) {\n                return _utils.Utils.appendSelector(this, selector);\n            };\n\n            d3.selection.enter.prototype.selectOrAppend = d3.selection.prototype.selectOrAppend = function (selector) {\n                return _utils.Utils.selectOrAppend(this, selector);\n            };\n\n            d3.selection.enter.prototype.selectOrInsert = d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return _utils.Utils.selectOrInsert(this, selector, before);\n            };\n        }\n    }]);\n\n    return D3Extensions;\n}();\n\n},{\"./utils\":39}],29:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.HeatmapTimeSeries = exports.HeatmapTimeSeriesConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _heatmap = require(\"./heatmap\");\n\nvar _utils = require(\"./utils\");\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HeatmapTimeSeriesConfig = exports.HeatmapTimeSeriesConfig = function (_HeatmapConfig) {\n    _inherits(HeatmapTimeSeriesConfig, _HeatmapConfig);\n\n    function HeatmapTimeSeriesConfig(custom) {\n        _classCallCheck(this, HeatmapTimeSeriesConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HeatmapTimeSeriesConfig).call(this));\n\n        _this.x = {\n            fillMissing: false, // fill missing values using interval and intervalStep\n            interval: undefined, //used in filling missing ticks\n            intervalStep: 1,\n            format: undefined, //input data d3 time format\n            displayFormat: undefined, //d3 time format for display\n            intervalToFormats: [//used to guess interval and format\n            {\n                name: 'year',\n                formats: [\"%Y\"]\n            }, {\n                name: 'month',\n                formats: [\"%Y-%m\"]\n            }, {\n                name: 'day',\n                formats: [\"%Y-%m-%d\"]\n            }, {\n                name: 'hour',\n                formats: ['%H', '%Y-%m-%d %H']\n            }, {\n                name: 'minute',\n                formats: ['%H:%M', '%Y-%m-%d %H:%M']\n            }, {\n                name: 'second',\n                formats: ['%H:%M:%S', '%Y-%m-%d %H:%M:%S']\n            }],\n\n            sortComparator: function sortComparator(a, b) {\n                return _utils.Utils.isString(a) ? a.localeCompare(b) : a - b;\n            },\n            formatter: undefined\n        };\n        _this.z = {\n            fillMissing: true // fiill missing values with nearest previous value\n        };\n        _this.legend = {\n            formatter: function formatter(v) {\n                var suffix = \"\";\n                if (v / 1000000 >= 1) {\n                    suffix = \" M\";\n                    v = Number(v / 1000000).toFixed(3);\n                }\n                var nf = Intl.NumberFormat();\n                return nf.format(v) + suffix;\n            }\n        };\n\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    }\n\n    return HeatmapTimeSeriesConfig;\n}(_heatmap.HeatmapConfig);\n\nvar HeatmapTimeSeries = exports.HeatmapTimeSeries = function (_Heatmap) {\n    _inherits(HeatmapTimeSeries, _Heatmap);\n\n    function HeatmapTimeSeries(placeholderSelector, data, config) {\n        _classCallCheck(this, HeatmapTimeSeries);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(HeatmapTimeSeries).call(this, placeholderSelector, data, new HeatmapTimeSeriesConfig(config)));\n    }\n\n    _createClass(HeatmapTimeSeries, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(HeatmapTimeSeries.prototype), \"setConfig\", this).call(this, new HeatmapTimeSeriesConfig(config));\n        }\n    }, {\n        key: \"setupValuesBeforeGroupsSort\",\n        value: function setupValuesBeforeGroupsSort() {\n            var _this3 = this;\n\n            this.plot.x.timeFormat = this.config.x.format;\n            if (this.config.x.displayFormat && !this.plot.x.timeFormat) {\n                this.guessTimeFormat();\n            }\n\n            _get(Object.getPrototypeOf(HeatmapTimeSeries.prototype), \"setupValuesBeforeGroupsSort\", this).call(this);\n            if (!this.config.x.fillMissing) {\n                return;\n            }\n\n            var self = this;\n\n            this.initTimeFormatAndInterval();\n\n            this.plot.x.intervalStep = this.config.x.intervalStep || 1;\n\n            this.plot.x.timeParser = this.getTimeParser();\n\n            this.plot.x.uniqueValues.sort(this.config.x.sortComparator);\n\n            var prev = null;\n\n            this.plot.x.uniqueValues.forEach(function (x, i) {\n                var current = _this3.parseTime(x);\n                if (prev === null) {\n                    prev = current;\n                    return;\n                }\n\n                var next = self.nextTimeTickValue(prev);\n                var missing = [];\n                var iteration = 0;\n                while (self.compareTimeValues(next, current) <= 0) {\n                    iteration++;\n                    if (iteration > 100) {\n                        break;\n                    }\n                    var d = {};\n                    var timeString = self.formatTime(next);\n                    d[_this3.config.x.key] = timeString;\n\n                    self.updateGroups(d, timeString, self.plot.x.groups, self.config.x.groups);\n                    missing.push(next);\n                    next = self.nextTimeTickValue(next);\n                }\n                prev = current;\n            });\n        }\n    }, {\n        key: \"parseTime\",\n        value: function parseTime(x) {\n            var parser = this.getTimeParser();\n            return parser.parse(x);\n        }\n    }, {\n        key: \"formatTime\",\n        value: function formatTime(date) {\n            var parser = this.getTimeParser();\n            return parser(date);\n        }\n    }, {\n        key: \"formatValueX\",\n        value: function formatValueX(value) {\n            //used only for display\n            if (this.config.x.formatter) return this.config.x.formatter.call(this.config, value);\n\n            if (this.config.x.displayFormat) {\n                var date = this.parseTime(value);\n                return d3.time.format(this.config.x.displayFormat)(date);\n            }\n\n            if (!this.plot.x.timeFormat) return value;\n\n            if (_utils.Utils.isDate(value)) {\n                return this.formatTime(value);\n            }\n\n            return value;\n        }\n    }, {\n        key: \"compareTimeValues\",\n        value: function compareTimeValues(a, b) {\n            return a - b;\n        }\n    }, {\n        key: \"timeValuesEqual\",\n        value: function timeValuesEqual(a, b) {\n            var parser = this.plot.x.timeParser;\n            return parser(a) === parser(b);\n        }\n    }, {\n        key: \"nextTimeTickValue\",\n        value: function nextTimeTickValue(t) {\n            var interval = this.plot.x.interval;\n            return d3.time[interval].offset(t, this.plot.x.intervalStep);\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(HeatmapTimeSeries.prototype), \"initPlot\", this).call(this);\n\n            if (this.config.z.fillMissing) {\n                this.plot.matrix.forEach(function (row, rowIndex) {\n                    var prevRowValue = undefined;\n                    row.forEach(function (cell, colIndex) {\n                        if (cell.value === undefined && prevRowValue !== undefined) {\n                            cell.value = prevRowValue;\n                            cell.missing = true;\n                        }\n                        prevRowValue = cell.value;\n                    });\n                });\n            }\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(HeatmapTimeSeries.prototype), \"update\", this).call(this, newData);\n        }\n    }, {\n        key: \"initTimeFormatAndInterval\",\n        value: function initTimeFormatAndInterval() {\n\n            this.plot.x.interval = this.config.x.interval;\n\n            if (!this.plot.x.timeFormat) {\n                this.guessTimeFormat();\n            }\n\n            if (!this.plot.x.interval && this.plot.x.timeFormat) {\n                this.guessInterval();\n            }\n        }\n    }, {\n        key: \"guessTimeFormat\",\n        value: function guessTimeFormat() {\n            var self = this;\n            for (var i = 0; i < self.config.x.intervalToFormats.length; i++) {\n                var intervalFormat = self.config.x.intervalToFormats[i];\n                var format = null;\n                var formatMatch = intervalFormat.formats.some(function (f) {\n                    format = f;\n                    var parser = d3.time.format(f);\n                    return self.plot.x.uniqueValues.every(function (x) {\n                        return parser.parse(x) !== null;\n                    });\n                });\n                if (formatMatch) {\n                    self.plot.x.timeFormat = format;\n                    void 0;\n                    if (!self.plot.x.interval) {\n                        self.plot.x.interval = intervalFormat.name;\n                        void 0;\n                    }\n                    return;\n                }\n            }\n        }\n    }, {\n        key: \"guessInterval\",\n        value: function guessInterval() {\n            var self = this;\n            for (var i = 0; i < self.config.x.intervalToFormats.length; i++) {\n                var intervalFormat = self.config.x.intervalToFormats[i];\n\n                if (intervalFormat.formats.indexOf(self.plot.x.timeFormat) >= 0) {\n                    self.plot.x.interval = intervalFormat.name;\n                    void 0;\n                    return;\n                }\n            }\n        }\n    }, {\n        key: \"getTimeParser\",\n        value: function getTimeParser() {\n            if (!this.plot.x.timeParser) {\n                this.plot.x.timeParser = d3.time.format(this.plot.x.timeFormat);\n            }\n            return this.plot.x.timeParser;\n        }\n    }]);\n\n    return HeatmapTimeSeries;\n}(_heatmap.Heatmap);\n\n},{\"./chart\":26,\"./heatmap\":30,\"./statistics-utils\":38,\"./utils\":39}],30:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Heatmap = exports.HeatmapConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _legend = require('./legend');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HeatmapConfig = exports.HeatmapConfig = function (_ChartConfig) {\n    _inherits(HeatmapConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function HeatmapConfig(custom) {\n        _classCallCheck(this, HeatmapConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HeatmapConfig).call(this));\n\n        _this.svgClass = 'odc-heatmap';\n        _this.showTooltip = true;\n        _this.tooltip = {\n            noDataText: \"N/A\"\n        };\n        _this.showLegend = true;\n        _this.legend = {\n            width: 30,\n            rotateLabels: false,\n            decimalPlaces: undefined,\n            formatter: function formatter(v) {\n                return _this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(_this.legend.decimalPlaces);\n            }\n        };\n        _this.highlightLabels = true;\n        _this.x = { // X axis config\n            title: '', // axis title\n            key: 0,\n            value: function value(d) {\n                return d[_this.x.key];\n            }, // x value accessor\n            rotateLabels: true,\n            sortLabels: false,\n            sortComparator: function sortComparator(a, b) {\n                return _utils.Utils.isNumber(a) ? a - b : a.localeCompare(b);\n            },\n            groups: {\n                keys: [],\n                labels: [],\n                value: function value(d, key) {\n                    return d[key];\n                },\n                overlap: {\n                    top: 20,\n                    bottom: 20\n                }\n            },\n            formatter: undefined // value formatter function\n\n        };\n        _this.y = { // Y axis config\n            title: '', // axis title,\n            rotateLabels: true,\n            key: 1,\n            value: function value(d) {\n                return d[_this.y.key];\n            }, // y value accessor\n            sortLabels: false,\n            sortComparator: function sortComparator(a, b) {\n                return _utils.Utils.isNumber(b) ? b - a : b.localeCompare(a);\n            },\n            groups: {\n                keys: [],\n                labels: [],\n                value: function value(d, key) {\n                    return d[key];\n                },\n                overlap: {\n                    left: 20,\n                    right: 20\n                }\n            },\n            formatter: undefined // value formatter function\n        };\n        _this.z = {\n            key: 2,\n            value: function value(d) {\n                return d[_this.z.key];\n            },\n            notAvailableValue: function notAvailableValue(v) {\n                return v === null || v === undefined;\n            },\n\n            decimalPlaces: undefined,\n            formatter: function formatter(v) {\n                return _this.z.decimalPlaces === undefined ? v : Number(v).toFixed(_this.z.decimalPlaces);\n            } // value formatter function\n\n        };\n        _this.color = {\n            noDataColor: \"white\",\n            scale: \"linear\",\n            reverseScale: false,\n            range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\n        };\n        _this.cell = {\n            width: undefined,\n            height: undefined,\n            sizeMin: 15,\n            sizeMax: 250,\n            padding: 0\n        };\n        _this.margin = {\n            left: 60,\n            right: 50,\n            top: 30,\n            bottom: 80\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    }\n\n    return HeatmapConfig;\n}(_chart.ChartConfig);\n\n//TODO refactor\n\n\nvar Heatmap = exports.Heatmap = function (_Chart) {\n    _inherits(Heatmap, _Chart);\n\n    function Heatmap(placeholderSelector, data, config) {\n        _classCallCheck(this, Heatmap);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Heatmap).call(this, placeholderSelector, data, new HeatmapConfig(config)));\n    }\n\n    _createClass(Heatmap, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(Heatmap.prototype), 'setConfig', this).call(this, new HeatmapConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(Heatmap.prototype), 'initPlot', this).call(this);\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.y = {};\n            this.plot.z = {\n                matrixes: undefined,\n                cells: undefined,\n                color: {},\n                shape: {}\n            };\n\n            this.setupValues();\n            this.buildCells();\n\n            var titleRectWidth = 6;\n            this.plot.x.overlap = {\n                top: 0,\n                bottom: 0\n            };\n            if (this.plot.groupByX) {\n                var depth = self.config.x.groups.keys.length;\n                var allTitlesWidth = depth * titleRectWidth;\n\n                this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\n                this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\n                this.plot.margin.top = conf.margin.right + conf.x.groups.overlap.top;\n                this.plot.margin.bottom = conf.margin.bottom + conf.x.groups.overlap.bottom;\n            }\n\n            this.plot.y.overlap = {\n                left: 0,\n                right: 0\n            };\n\n            if (this.plot.groupByY) {\n                var _depth = self.config.y.groups.keys.length;\n                var _allTitlesWidth = _depth * titleRectWidth;\n                this.plot.y.overlap.right = self.config.y.groups.overlap.left + _allTitlesWidth;\n                this.plot.y.overlap.left = self.config.y.groups.overlap.left;\n                this.plot.margin.left = conf.margin.left + this.plot.y.overlap.left;\n                this.plot.margin.right = conf.margin.right + this.plot.y.overlap.right;\n            }\n            this.plot.showLegend = conf.showLegend;\n            if (this.plot.showLegend) {\n                this.plot.margin.right += conf.legend.width;\n            }\n            this.computePlotSize();\n            this.setupZScale();\n\n            return this;\n        }\n    }, {\n        key: 'setupValues',\n        value: function setupValues() {\n            var _this3 = this;\n\n            var self = this;\n            var config = self.config;\n            var x = self.plot.x;\n            var y = self.plot.y;\n            var z = self.plot.z;\n\n            x.value = function (d) {\n                return config.x.value.call(config, d);\n            };\n            y.value = function (d) {\n                return config.y.value.call(config, d);\n            };\n            z.value = function (d) {\n                return config.z.value.call(config, d);\n            };\n\n            x.uniqueValues = [];\n            y.uniqueValues = [];\n\n            self.plot.groupByY = !!config.y.groups.keys.length;\n            self.plot.groupByX = !!config.x.groups.keys.length;\n\n            y.groups = {\n                key: undefined,\n                label: '',\n                values: [],\n                children: null,\n                level: 0,\n                index: 0,\n                lastIndex: 0\n            };\n            x.groups = {\n                key: undefined,\n                label: '',\n                values: [],\n                children: null,\n                level: 0,\n                index: 0,\n                lastIndex: 0\n            };\n\n            var valueMap = {};\n            var minZ = undefined;\n            var maxZ = undefined;\n            this.data.forEach(function (d) {\n\n                var xVal = x.value(d);\n                var yVal = y.value(d);\n                var zValRaw = z.value(d);\n                var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\n\n                if (x.uniqueValues.indexOf(xVal) === -1) {\n                    x.uniqueValues.push(xVal);\n                }\n\n                if (y.uniqueValues.indexOf(yVal) === -1) {\n                    y.uniqueValues.push(yVal);\n                }\n\n                var groupY = y.groups;\n                if (self.plot.groupByY) {\n                    groupY = _this3.updateGroups(d, yVal, y.groups, config.y.groups);\n                }\n                var groupX = x.groups;\n                if (self.plot.groupByX) {\n\n                    groupX = _this3.updateGroups(d, xVal, x.groups, config.x.groups);\n                }\n\n                if (!valueMap[groupY.index]) {\n                    valueMap[groupY.index] = {};\n                }\n\n                if (!valueMap[groupY.index][groupX.index]) {\n                    valueMap[groupY.index][groupX.index] = {};\n                }\n                if (!valueMap[groupY.index][groupX.index][yVal]) {\n                    valueMap[groupY.index][groupX.index][yVal] = {};\n                }\n                valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\n\n                if (minZ === undefined || zVal < minZ) {\n                    minZ = zVal;\n                }\n                if (maxZ === undefined || zVal > maxZ) {\n                    maxZ = zVal;\n                }\n            });\n            self.plot.valueMap = valueMap;\n\n            if (!self.plot.groupByX) {\n                x.groups.values = x.uniqueValues;\n            }\n\n            if (!self.plot.groupByY) {\n                y.groups.values = y.uniqueValues;\n            }\n\n            this.setupValuesBeforeGroupsSort();\n\n            x.gaps = [];\n            x.totalValuesCount = 0;\n            x.allValuesList = [];\n            this.sortGroups(x, x.groups, config.x);\n\n            y.gaps = [];\n            y.totalValuesCount = 0;\n            y.allValuesList = [];\n            this.sortGroups(y, y.groups, config.y);\n\n            z.min = minZ;\n            z.max = maxZ;\n        }\n    }, {\n        key: 'setupValuesBeforeGroupsSort',\n        value: function setupValuesBeforeGroupsSort() {}\n    }, {\n        key: 'buildCells',\n        value: function buildCells() {\n            var self = this;\n            var x = self.plot.x;\n            var y = self.plot.y;\n            var z = self.plot.z;\n            var valueMap = self.plot.valueMap;\n\n            var matrixCells = self.plot.cells = [];\n            var matrix = self.plot.matrix = [];\n\n            y.allValuesList.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                x.allValuesList.forEach(function (v2, j) {\n                    var zVal = undefined;\n                    try {\n                        zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val];\n                    } catch (e) {}\n\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: zVal\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'updateGroups',\n        value: function updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\n\n            var config = this.config;\n            var currentGroup = rootGroup;\n            axisGroupsConfig.keys.forEach(function (groupKey, groupKeyIndex) {\n                currentGroup.key = groupKey;\n\n                if (!currentGroup.children) {\n                    currentGroup.children = {};\n                }\n\n                var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\n\n                if (!currentGroup.children.hasOwnProperty(groupingValue)) {\n                    rootGroup.lastIndex++;\n                    currentGroup.children[groupingValue] = {\n                        values: [],\n                        children: null,\n                        groupingValue: groupingValue,\n                        level: currentGroup.level + 1,\n                        index: rootGroup.lastIndex,\n                        key: groupKey\n                    };\n                }\n\n                currentGroup = currentGroup.children[groupingValue];\n            });\n\n            if (currentGroup.values.indexOf(axisVal) === -1) {\n                currentGroup.values.push(axisVal);\n            }\n\n            return currentGroup;\n        }\n    }, {\n        key: 'sortGroups',\n        value: function sortGroups(axis, group, axisConfig, gaps) {\n            if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\n                group.label = axisConfig.groups.labels[group.level];\n            } else {\n                group.label = group.key;\n            }\n\n            if (!gaps) {\n                gaps = [0];\n            }\n            if (gaps.length <= group.level) {\n                gaps.push(0);\n            }\n\n            group.allValuesCount = group.allValuesCount || 0;\n            group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\n\n            group.gaps = gaps.slice();\n            group.gapsBefore = gaps.slice();\n\n            group.gapsSize = Heatmap.computeGapsSize(group.gaps);\n            group.gapsBeforeSize = group.gapsSize;\n            if (group.values) {\n                if (axisConfig.sortLabels) {\n                    group.values.sort(axisConfig.sortComparator);\n                }\n                group.values.forEach(function (v) {\n                    return axis.allValuesList.push({ val: v, group: group });\n                });\n                group.allValuesBeforeCount = axis.totalValuesCount;\n                axis.totalValuesCount += group.values.length;\n                group.allValuesCount += group.values.length;\n            }\n\n            group.childrenList = [];\n            if (group.children) {\n                var childrenCount = 0;\n\n                for (var childProp in group.children) {\n                    if (group.children.hasOwnProperty(childProp)) {\n                        var child = group.children[childProp];\n                        group.childrenList.push(child);\n                        childrenCount++;\n\n                        this.sortGroups(axis, child, axisConfig, gaps);\n                        group.allValuesCount += child.allValuesCount;\n                        gaps[group.level] += 1;\n                    }\n                }\n\n                if (gaps && childrenCount > 1) {\n                    gaps[group.level] -= 1;\n                }\n\n                group.gapsInside = [];\n                gaps.forEach(function (d, i) {\n                    group.gapsInside.push(d - (group.gapsBefore[i] || 0));\n                });\n                group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\n\n                if (axis.gaps.length < gaps.length) {\n                    axis.gaps = gaps;\n                }\n            }\n        }\n    }, {\n        key: 'computeYAxisLabelsWidth',\n        value: function computeYAxisLabelsWidth(offset) {\n            var maxWidth = this.plot.margin.left;\n            if (this.config.y.title) {\n                maxWidth -= 15;\n            }\n            if (offset && offset.x) {\n                maxWidth += offset.x;\n            }\n\n            if (this.config.y.rotateLabels) {\n                maxWidth *= _utils.Utils.SQRT_2;\n                var fontSize = 11; //todo check actual font size\n                maxWidth -= fontSize / 2;\n            }\n\n            return maxWidth;\n        }\n    }, {\n        key: 'computeXAxisLabelsWidth',\n        value: function computeXAxisLabelsWidth(offset) {\n            if (!this.config.x.rotateLabels) {\n                return this.plot.cellWidth - 2;\n            }\n            var size = this.plot.margin.bottom;\n            if (this.config.x.title) {\n                size -= 15;\n            }\n            if (offset && offset.y) {\n                size -= offset.y;\n            }\n\n            size *= _utils.Utils.SQRT_2;\n\n            var fontSize = 11; //todo check actual font size\n            size -= fontSize / 2;\n\n            return size;\n        }\n    }, {\n        key: 'computePlotSize',\n        value: function computePlotSize() {\n\n            var plot = this.plot;\n            var conf = this.config;\n            var margin = plot.margin;\n            var availableWidth = _utils.Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n            var availableHeight = _utils.Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n            var width = availableWidth;\n            var height = availableHeight;\n\n            var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\n\n            var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\n            if (this.config.width) {\n\n                if (!this.config.cell.width) {\n                    this.plot.cellWidth = computedCellWidth;\n                }\n            } else {\n                this.plot.cellWidth = this.config.cell.width;\n\n                if (!this.plot.cellWidth) {\n                    this.plot.cellWidth = computedCellWidth;\n                }\n            }\n            width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\n\n            var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\n            var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\n            if (this.config.height) {\n                if (!this.config.cell.height) {\n                    this.plot.cellHeight = computedCellHeight;\n                }\n            } else {\n                this.plot.cellHeight = this.config.cell.height;\n\n                if (!this.plot.cellHeight) {\n                    this.plot.cellHeight = computedCellHeight;\n                }\n            }\n\n            height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n        }\n    }, {\n        key: 'setupZScale',\n        value: function setupZScale() {\n\n            var self = this;\n            var config = self.config;\n            var z = self.plot.z;\n            var range = config.color.range;\n            var extent = z.max - z.min;\n            var scale;\n            z.domain = [];\n            if (config.color.scale == \"pow\") {\n                var exponent = 10;\n                range.forEach(function (c, i) {\n                    var v = z.max - extent / Math.pow(10, i);\n                    z.domain.push(v);\n                });\n                scale = d3.scale.pow().exponent(exponent);\n            } else if (config.color.scale == \"log\") {\n\n                range.forEach(function (c, i) {\n                    var v = z.min + extent / Math.pow(10, i);\n                    z.domain.unshift(v);\n                });\n\n                scale = d3.scale.log();\n            } else {\n                range.forEach(function (c, i) {\n                    var v = z.min + extent * (i / (range.length - 1));\n                    z.domain.push(v);\n                });\n                scale = d3.scale[config.color.scale]();\n            }\n\n            z.domain[0] = z.min; //removing unnecessary floating points\n            z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\n            void 0;\n\n            if (config.color.reverseScale) {\n                z.domain.reverse();\n            }\n\n            var plot = this.plot;\n\n            void 0;\n            plot.z.color.scale = scale.domain(z.domain).range(range);\n            var shape = plot.z.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = \"rect\";\n\n            plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\n            plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(Heatmap.prototype), 'update', this).call(this, newData);\n            if (this.plot.groupByY) {\n                this.drawGroupsY(this.plot.y.groups, this.svgG);\n            }\n            if (this.plot.groupByX) {\n                this.drawGroupsX(this.plot.x.groups, this.svgG);\n            }\n\n            this.updateCells();\n\n            // this.updateVariableLabels();\n\n            this.updateAxisX();\n            this.updateAxisY();\n\n            if (this.config.showLegend) {\n                this.updateLegend();\n            }\n\n            this.updateAxisTitles();\n        }\n    }, {\n        key: 'updateAxisTitles',\n        value: function updateAxisTitles() {\n            var self = this;\n            var plot = self.plot;\n        }\n    }, {\n        key: 'updateAxisX',\n        value: function updateAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = self.prefixClass(\"label\");\n            var labelXClass = labelClass + \"-x\";\n            var labelYClass = labelClass + \"-y\";\n            plot.labelClass = labelClass;\n\n            var offsetX = {\n                x: 0,\n                y: 0\n            };\n            var gapSize = Heatmap.computeGapSize(0);\n            if (plot.groupByX) {\n                var overlap = self.config.x.groups.overlap;\n\n                offsetX.x = gapSize / 2;\n                offsetX.y = overlap.bottom + gapSize / 2 + 6;\n            } else if (plot.groupByY) {\n                offsetX.y = gapSize;\n            }\n\n            var labels = self.svgG.selectAll(\"text.\" + labelXClass).data(plot.x.allValuesList, function (d, i) {\n                return i;\n            });\n\n            labels.enter().append(\"text\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i;\n            });\n\n            labels.attr(\"x\", function (d, i) {\n                return i * plot.cellWidth + plot.cellWidth / 2 + d.group.gapsSize + offsetX.x;\n            }).attr(\"y\", plot.height + offsetX.y).attr(\"dy\", 10).attr(\"text-anchor\", \"middle\").text(function (d) {\n                return self.formatValueX(d.val);\n            });\n\n            var maxWidth = self.computeXAxisLabelsWidth(offsetX);\n\n            labels.each(function (label) {\n                var elem = d3.select(this),\n                    text = self.formatValueX(label.val);\n                _utils.Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n            });\n\n            if (self.config.x.rotateLabels) {\n                labels.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + (i * plot.cellWidth + plot.cellWidth / 2 + d.group.gapsSize + offsetX.x) + \", \" + (plot.height + offsetX.y) + \")\";\n                }).attr(\"dx\", -2).attr(\"dy\", 8).attr(\"text-anchor\", \"end\");\n            }\n\n            labels.exit().remove();\n\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + (plot.height + plot.margin.bottom) + \")\").selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"dy\", \"-0.5em\").style(\"text-anchor\", \"middle\").text(self.config.x.title);\n        }\n    }, {\n        key: 'updateAxisY',\n        value: function updateAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = self.prefixClass(\"label\");\n            var labelYClass = labelClass + \"-y\";\n            plot.labelClass = labelClass;\n\n            var labels = self.svgG.selectAll(\"text.\" + labelYClass).data(plot.y.allValuesList);\n\n            labels.enter().append(\"text\");\n\n            var offsetY = {\n                x: 0,\n                y: 0\n            };\n            if (plot.groupByY) {\n                var overlap = self.config.y.groups.overlap;\n                var gapSize = Heatmap.computeGapSize(0);\n                offsetY.x = -overlap.left;\n\n                offsetY.y = gapSize / 2;\n            }\n            labels.attr(\"x\", offsetY.x).attr(\"y\", function (d, i) {\n                return i * plot.cellHeight + plot.cellHeight / 2 + d.group.gapsSize + offsetY.y;\n            }).attr(\"dx\", -2).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i;\n            }).text(function (d) {\n                var formatted = self.formatValueY(d.val);\n                return formatted;\n            });\n\n            var maxWidth = self.computeYAxisLabelsWidth(offsetY);\n\n            labels.each(function (label) {\n                var elem = d3.select(this),\n                    text = self.formatValueY(label.val);\n                _utils.Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n            });\n\n            if (self.config.y.rotateLabels) {\n                labels.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + offsetY.x + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\";\n                }).attr(\"text-anchor\", \"end\");\n                // .attr(\"dx\", -7);\n            } else {\n                labels.attr(\"dominant-baseline\", \"middle\");\n            }\n\n            labels.exit().remove();\n\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y')).selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\").attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(self.config.y.title);\n        }\n    }, {\n        key: 'drawGroupsY',\n        value: function drawGroupsY(parentGroup, container, availableWidth) {\n\n            var self = this;\n            var plot = self.plot;\n\n            var groupClass = self.prefixClass(\"group\");\n            var groupYClass = groupClass + \"-y\";\n            var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass).data(parentGroup.childrenList);\n\n            var valuesBeforeCount = 0;\n            var gapsBeforeSize = 0;\n\n            var groupsEnterG = groups.enter().append(\"g\");\n            groupsEnterG.classed(groupClass, true).classed(groupYClass, true).append(\"rect\").classed(\"group-rect\", true);\n\n            var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\n            titleGroupEnter.append(\"rect\");\n            titleGroupEnter.append(\"text\");\n\n            var gapSize = Heatmap.computeGapSize(parentGroup.level);\n            var padding = gapSize / 4;\n\n            var titleRectWidth = Heatmap.groupTitleRectHeight;\n            var depth = self.config.y.groups.keys.length - parentGroup.level;\n            var overlap = {\n                left: 0,\n                right: 0\n            };\n\n            if (!availableWidth) {\n                overlap.right = plot.y.overlap.left;\n                overlap.left = plot.y.overlap.left;\n                availableWidth = plot.width + gapSize + overlap.left + overlap.right;\n            }\n\n            groups.attr(\"transform\", function (d, i) {\n                var translate = \"translate(\" + (padding - overlap.left) + \",\" + (plot.cellHeight * valuesBeforeCount + i * gapSize + gapsBeforeSize + padding) + \")\";\n                gapsBeforeSize += d.gapsInsideSize || 0;\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate;\n            });\n\n            var groupWidth = availableWidth - padding * 2;\n\n            var titleGroups = groups.selectAll(\"g.title\").attr(\"transform\", function (d, i) {\n                return \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\";\n            });\n\n            var tileRects = titleGroups.selectAll(\"rect\").attr(\"width\", titleRectWidth).attr(\"height\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n            this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n            groups.selectAll(\"rect.group-rect\").attr(\"class\", function (d) {\n                return \"group-rect group-rect-\" + d.index;\n            }).attr(\"width\", groupWidth).attr(\"height\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", \"white\").attr(\"fill-opacity\", 0).attr(\"stroke-width\", 0.5).attr(\"stroke\", \"black\");\n\n            groups.each(function (group) {\n\n                self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\n            });\n        }\n    }, {\n        key: 'drawGroupsX',\n        value: function drawGroupsX(parentGroup, container, availableHeight) {\n\n            var self = this;\n            var plot = self.plot;\n\n            var groupClass = self.prefixClass(\"group\");\n            var groupXClass = groupClass + \"-x\";\n            var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass).data(parentGroup.childrenList);\n\n            var valuesBeforeCount = 0;\n            var gapsBeforeSize = 0;\n\n            var groupsEnterG = groups.enter().append(\"g\");\n            groupsEnterG.classed(groupClass, true).classed(groupXClass, true).append(\"rect\").classed(\"group-rect\", true);\n\n            var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\n            titleGroupEnter.append(\"rect\");\n            titleGroupEnter.append(\"text\");\n\n            var gapSize = Heatmap.computeGapSize(parentGroup.level);\n            var padding = gapSize / 4;\n            var titleRectHeight = Heatmap.groupTitleRectHeight;\n\n            var depth = self.config.x.groups.keys.length - parentGroup.level;\n\n            var overlap = {\n                top: 0,\n                bottom: 0\n            };\n\n            if (!availableHeight) {\n                overlap.bottom = plot.x.overlap.bottom;\n                overlap.top = plot.x.overlap.top;\n                availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\n            } else {\n                overlap.top = -titleRectHeight;\n            }\n            // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\n\n            groups.attr(\"transform\", function (d, i) {\n                var translate = \"translate(\" + (plot.cellWidth * valuesBeforeCount + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\n                gapsBeforeSize += d.gapsInsideSize || 0;\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate;\n            });\n\n            var groupHeight = availableHeight - padding * 2;\n\n            var titleGroups = groups.selectAll(\"g.title\").attr(\"transform\", function (d, i) {\n                return \"translate(0, \" + 0 + \")\";\n            });\n\n            var tileRects = titleGroups.selectAll(\"rect\").attr(\"height\", titleRectHeight).attr(\"width\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n            this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n            groups.selectAll(\"rect.group-rect\").attr(\"class\", function (d) {\n                return \"group-rect group-rect-\" + d.index;\n            }).attr(\"height\", groupHeight).attr(\"width\", function (d) {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2;\n            }).attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", \"white\").attr(\"fill-opacity\", 0).attr(\"stroke-width\", 0.5).attr(\"stroke\", \"black\");\n\n            groups.each(function (group) {\n                self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\n            });\n\n            groups.exit().remove();\n        }\n    }, {\n        key: 'setGroupMouseCallbacks',\n        value: function setGroupMouseCallbacks(parentGroup, tileRects) {\n            var plot = this.plot;\n            var self = this;\n            var mouseoverCallbacks = [];\n            mouseoverCallbacks.push(function (d) {\n                d3.select(this).classed('highlighted', true);\n                d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\n            });\n\n            var mouseoutCallbacks = [];\n            mouseoutCallbacks.push(function (d) {\n                d3.select(this).classed('highlighted', false);\n                d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\n            });\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = parentGroup.label + \": \" + d.groupingValue;\n\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n            tileRects.on(\"mouseover\", function (d) {\n                var self = this;\n                mouseoverCallbacks.forEach(function (callback) {\n                    callback.call(self, d);\n                });\n            });\n            tileRects.on(\"mouseout\", function (d) {\n                var self = this;\n                mouseoutCallbacks.forEach(function (callback) {\n                    callback.call(self, d);\n                });\n            });\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellContainerClass = self.prefixClass(\"cells\");\n            var gapSize = Heatmap.computeGapSize(0);\n            var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\n            var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\n            var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\n            cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\n\n            var cellClass = self.prefixClass(\"cell\");\n            var cellShape = plot.z.shape.type;\n\n            var cells = cellContainer.selectAll(\"g.\" + cellClass).data(self.plot.cells);\n\n            var cellEnterG = cells.enter().append(\"g\").classed(cellClass, true);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellWidth * c.col + plot.cellWidth / 2 + c.colVar.group.gapsSize) + \",\" + (plot.cellHeight * c.row + plot.cellHeight / 2 + c.rowVar.group.gapsSize) + \")\";\n            });\n\n            var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n            shapes.attr(\"width\", plot.z.shape.width).attr(\"height\", plot.z.shape.height).attr(\"x\", -plot.cellWidth / 2).attr(\"y\", -plot.cellHeight / 2);\n\n            shapes.style(\"fill\", function (c) {\n                return c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value);\n            });\n            shapes.attr(\"fill-opacity\", function (d) {\n                return d.value === undefined ? 0 : 1;\n            });\n\n            var mouseoverCallbacks = [];\n            var mouseoutCallbacks = [];\n\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\n\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (self.config.highlightLabels) {\n                var highlightClass = self.config.cssClassPrefix + \"highlight\";\n                var xLabelClass = function xLabelClass(c) {\n                    return plot.labelClass + \"-x-\" + c.col;\n                };\n                var yLabelClass = function yLabelClass(c) {\n                    return plot.labelClass + \"-y-\" + c.row;\n                };\n\n                mouseoverCallbacks.push(function (c) {\n\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n                });\n                mouseoutCallbacks.push(function (c) {\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n                });\n            }\n\n            cells.on(\"mouseover\", function (c) {\n                mouseoverCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            }).on(\"mouseout\", function (c) {\n                mouseoutCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            });\n\n            cells.on(\"click\", function (c) {\n                self.trigger(\"cell-selected\", c);\n            });\n\n            cells.exit().remove();\n        }\n    }, {\n        key: 'formatValueX',\n        value: function formatValueX(value) {\n            if (!this.config.x.formatter) return value;\n\n            return this.config.x.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'formatValueY',\n        value: function formatValueY(value) {\n            if (!this.config.y.formatter) return value;\n\n            return this.config.y.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'formatValueZ',\n        value: function formatValueZ(value) {\n            if (!this.config.z.formatter) return value;\n\n            return this.config.z.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'formatLegendValue',\n        value: function formatLegendValue(value) {\n            if (!this.config.legend.formatter) return value;\n\n            return this.config.legend.formatter.call(this.config, value);\n        }\n    }, {\n        key: 'updateLegend',\n        value: function updateLegend() {\n            var self = this;\n            var plot = this.plot;\n            var legendX = this.plot.width + 10;\n            var gapSize = Heatmap.computeGapSize(0);\n            if (this.plot.groupByY) {\n                legendX += gapSize / 2 + plot.y.overlap.right;\n            } else if (this.plot.groupByX) {\n                legendX += gapSize;\n            }\n            var legendY = 0;\n            if (this.plot.groupByX || this.plot.groupByY) {\n                legendY += gapSize / 2;\n            }\n\n            var barWidth = 10;\n            var barHeight = this.plot.height - 2;\n            var scale = plot.z.color.scale;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY, function (v) {\n                return self.formatLegendValue(v);\n            }).setRotateLabels(self.config.legend.rotateLabels).linearGradientBar(barWidth, barHeight);\n        }\n    }], [{\n        key: 'computeGapSize',\n        value: function computeGapSize(gapLevel) {\n            return Heatmap.maxGroupGapSize / (gapLevel + 1);\n        }\n    }, {\n        key: 'computeGapsSize',\n        value: function computeGapsSize(gaps) {\n            var gapsSize = 0;\n            gaps.forEach(function (gapsNumber, gapsLevel) {\n                return gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel);\n            });\n            return gapsSize;\n        }\n    }]);\n\n    return Heatmap;\n}(_chart.Chart);\n\nHeatmap.maxGroupGapSize = 24;\nHeatmap.groupTitleRectHeight = 6;\n\n},{\"./chart\":26,\"./legend\":33,\"./utils\":39}],31:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Histogram = exports.HistogramConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chartWithColorGroups = require('./chart-with-color-groups');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HistogramConfig = exports.HistogramConfig = function (_ChartWithColorGroups) {\n    _inherits(HistogramConfig, _ChartWithColorGroups);\n\n    function HistogramConfig(custom) {\n        _classCallCheck(this, HistogramConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HistogramConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'histogram';\n        _this.showLegend = true;\n        _this.showTooltip = true;\n        _this.x = { // X axis config\n            label: '', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return _utils.Utils.isNumber(d) ? d : parseFloat(d[key]);\n            }, // x value accessor\n            scale: \"linear\",\n            ticks: undefined\n        };\n        _this.y = { // Y axis config\n            label: '', // axis label,\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.frequency = true;\n        _this.groups = {\n            key: 1\n        };\n        _this.transition = true;\n\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    }\n\n    return HistogramConfig;\n}(_chartWithColorGroups.ChartWithColorGroupsConfig);\n\nvar Histogram = exports.Histogram = function (_ChartWithColorGroups2) {\n    _inherits(Histogram, _ChartWithColorGroups2);\n\n    function Histogram(placeholderSelector, data, config) {\n        _classCallCheck(this, Histogram);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Histogram).call(this, placeholderSelector, data, new HistogramConfig(config)));\n    }\n\n    _createClass(Histogram, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(Histogram.prototype), 'setConfig', this).call(this, new HistogramConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(Histogram.prototype), 'initPlot', this).call(this);\n            var self = this;\n\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.y = {};\n            this.plot.bar = {\n                color: null //color scale mapping function\n            };\n\n            this.computePlotSize();\n\n            this.setupX();\n            this.setupHistogram();\n            this.setupGroupStacks();\n            this.setupY();\n            return this;\n        }\n    }, {\n        key: 'setupX',\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            if (conf.ticks) {\n                x.axis.ticks(conf.ticks);\n            }\n            var data = this.plot.groupedData;\n            plot.x.scale.domain([d3.min(data, function (s) {\n                return d3.min(s.values, plot.x.value);\n            }), d3.max(data, function (s) {\n                return d3.max(s.values, plot.x.value);\n            })]);\n        }\n    }, {\n        key: 'setupY',\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n            var data = this.plot.data;\n            var yStackMax = d3.max(plot.stackedHistograms, function (layer) {\n                return d3.max(layer.histogramBins, function (d) {\n                    return d.y0 + d.y;\n                });\n            });\n            plot.y.scale.domain([0, yStackMax]);\n        }\n    }, {\n        key: 'setupHistogram',\n        value: function setupHistogram() {\n            var plot = this.plot;\n            var x = plot.x;\n            var y = plot.y;\n            var ticks = this.config.x.ticks ? x.scale.ticks(this.config.x.ticks) : x.scale.ticks();\n\n            plot.histogram = d3.layout.histogram().frequency(this.config.frequency).value(x.value).bins(ticks);\n        }\n    }, {\n        key: 'setupGroupStacks',\n        value: function setupGroupStacks() {\n            var _this3 = this;\n\n            var self = this;\n            void 0;\n            this.plot.stack = d3.layout.stack().values(function (d) {\n                return d.histogramBins;\n            });\n            this.plot.groupedData.forEach(function (d) {\n                d.histogramBins = _this3.plot.histogram.frequency(_this3.config.frequency || _this3.plot.groupingEnabled)(d.values);\n                void 0;\n                if (!_this3.config.frequency && _this3.plot.groupingEnabled) {\n                    d.histogramBins.forEach(function (b) {\n                        b.dy = b.dy / _this3.plot.dataLength;\n                        b.y = b.y / _this3.plot.dataLength;\n                    });\n                }\n            });\n            this.plot.stackedHistograms = this.plot.stack(this.plot.groupedData);\n        }\n    }, {\n        key: 'drawAxisX',\n        value: function drawAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n            var axisT = axis;\n            if (self.config.transition) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.x.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + plot.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawAxisY',\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n            var axisT = axis;\n            if (self.config.transition) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.y.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawHistogram',\n        value: function drawHistogram() {\n            var self = this;\n            var plot = self.plot;\n\n            var layerClass = this.prefixClass(\"layer\");\n\n            var barClass = this.prefixClass(\"bar\");\n            var layer = self.svgG.selectAll(\".\" + layerClass).data(plot.stackedHistograms);\n\n            layer.enter().append(\"g\").attr(\"class\", layerClass);\n\n            var bar = layer.selectAll(\".\" + barClass).data(function (d) {\n                return d.histogramBins;\n            });\n\n            bar.enter().append(\"g\").attr(\"class\", barClass).append(\"rect\").attr(\"x\", 1);\n\n            var barRect = bar.select(\"rect\");\n\n            var barRectT = barRect;\n            var barT = bar;\n            var layerT = layer;\n            if (this.transitionEnabled()) {\n                barRectT = barRect.transition();\n                barT = bar.transition();\n                layerT = layer.transition();\n            }\n\n            barT.attr(\"transform\", function (d) {\n                return \"translate(\" + plot.x.scale(d.x) + \",\" + plot.y.scale(d.y0 + d.y) + \")\";\n            });\n\n            var dx = plot.stackedHistograms.length ? plot.stackedHistograms[0].histogramBins.length ? plot.x.scale(plot.stackedHistograms[0].histogramBins[0].dx) : 0 : 0;\n            barRectT.attr(\"width\", dx - plot.x.scale(0) - 1).attr(\"height\", function (d) {\n                return plot.height - plot.y.scale(d.y);\n            });\n\n            if (this.plot.color) {\n                layerT.attr(\"fill\", this.plot.seriesColor);\n            }\n\n            if (plot.tooltip) {\n                bar.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    plot.tooltip.html(d.y).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n            layer.exit().remove();\n            bar.exit().remove();\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(Histogram.prototype), 'update', this).call(this, newData);\n            this.drawAxisX();\n            this.drawAxisY();\n\n            this.drawHistogram();\n            return this;\n        }\n    }]);\n\n    return Histogram;\n}(_chartWithColorGroups.ChartWithColorGroups);\n\n},{\"./chart-with-color-groups\":25,\"./utils\":39}],32:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Legend = exports.StatisticsUtils = exports.BoxPlotConfig = exports.BoxPlot = exports.BoxPlotBaseConfig = exports.BoxPlotBase = exports.BarChartConfig = exports.BarChart = exports.HistogramConfig = exports.Histogram = exports.HeatmapTimeSeriesConfig = exports.HeatmapTimeSeries = exports.HeatmapConfig = exports.Heatmap = exports.RegressionConfig = exports.Regression = exports.CorrelationMatrixConfig = exports.CorrelationMatrix = exports.ScatterPlotMatrixConfig = exports.ScatterPlotMatrix = exports.ScatterPlotConfig = exports.ScatterPlot = undefined;\n\nvar _scatterplot = require(\"./scatterplot\");\n\nObject.defineProperty(exports, \"ScatterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlot;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlotConfig;\n  }\n});\n\nvar _scatterplotMatrix = require(\"./scatterplot-matrix\");\n\nObject.defineProperty(exports, \"ScatterPlotMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrix;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrixConfig;\n  }\n});\n\nvar _correlationMatrix = require(\"./correlation-matrix\");\n\nObject.defineProperty(exports, \"CorrelationMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrix;\n  }\n});\nObject.defineProperty(exports, \"CorrelationMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrixConfig;\n  }\n});\n\nvar _regression = require(\"./regression\");\n\nObject.defineProperty(exports, \"Regression\", {\n  enumerable: true,\n  get: function get() {\n    return _regression.Regression;\n  }\n});\nObject.defineProperty(exports, \"RegressionConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _regression.RegressionConfig;\n  }\n});\n\nvar _heatmap = require(\"./heatmap\");\n\nObject.defineProperty(exports, \"Heatmap\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmap.Heatmap;\n  }\n});\nObject.defineProperty(exports, \"HeatmapConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmap.HeatmapConfig;\n  }\n});\n\nvar _heatmapTimeseries = require(\"./heatmap-timeseries\");\n\nObject.defineProperty(exports, \"HeatmapTimeSeries\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmapTimeseries.HeatmapTimeSeries;\n  }\n});\nObject.defineProperty(exports, \"HeatmapTimeSeriesConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _heatmapTimeseries.HeatmapTimeSeriesConfig;\n  }\n});\n\nvar _histogram = require(\"./histogram\");\n\nObject.defineProperty(exports, \"Histogram\", {\n  enumerable: true,\n  get: function get() {\n    return _histogram.Histogram;\n  }\n});\nObject.defineProperty(exports, \"HistogramConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _histogram.HistogramConfig;\n  }\n});\n\nvar _barChart = require(\"./bar-chart\");\n\nObject.defineProperty(exports, \"BarChart\", {\n  enumerable: true,\n  get: function get() {\n    return _barChart.BarChart;\n  }\n});\nObject.defineProperty(exports, \"BarChartConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _barChart.BarChartConfig;\n  }\n});\n\nvar _boxPlotBase = require(\"./box-plot-base\");\n\nObject.defineProperty(exports, \"BoxPlotBase\", {\n  enumerable: true,\n  get: function get() {\n    return _boxPlotBase.BoxPlotBase;\n  }\n});\nObject.defineProperty(exports, \"BoxPlotBaseConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _boxPlotBase.BoxPlotBaseConfig;\n  }\n});\n\nvar _boxPlot = require(\"./box-plot\");\n\nObject.defineProperty(exports, \"BoxPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _boxPlot.BoxPlot;\n  }\n});\nObject.defineProperty(exports, \"BoxPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _boxPlot.BoxPlotConfig;\n  }\n});\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nObject.defineProperty(exports, \"StatisticsUtils\", {\n  enumerable: true,\n  get: function get() {\n    return _statisticsUtils.StatisticsUtils;\n  }\n});\n\nvar _legend = require(\"./legend\");\n\nObject.defineProperty(exports, \"Legend\", {\n  enumerable: true,\n  get: function get() {\n    return _legend.Legend;\n  }\n});\n\nvar _d3Extensions = require(\"./d3-extensions\");\n\n_d3Extensions.D3Extensions.extend();\n\n},{\"./bar-chart\":22,\"./box-plot\":24,\"./box-plot-base\":23,\"./correlation-matrix\":27,\"./d3-extensions\":28,\"./heatmap\":30,\"./heatmap-timeseries\":29,\"./histogram\":31,\"./legend\":33,\"./regression\":34,\"./scatterplot\":36,\"./scatterplot-matrix\":35,\"./statistics-utils\":38}],33:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Legend = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require(\"./utils\");\n\nvar _noExtend = require(\"../bower_components/d3-legend/no-extend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*var d3 = require('../bower_components/d3');\r\n*/\n// var legend = require('../bower_components/d3-legend/no-extend');\n//\n// module.exports.legend = legend;\n\nvar Legend = exports.Legend = function () {\n    function Legend(svg, legendParent, scale, legendX, legendY, labelFormat) {\n        _classCallCheck(this, Legend);\n\n        this.cssClassPrefix = \"odc-\";\n        this.legendClass = this.cssClassPrefix + \"legend\";\n        this.color = _noExtend.color;\n        this.size = _noExtend.size;\n        this.symbol = _noExtend.symbol;\n        this.labelFormat = undefined;\n\n        this.scale = scale;\n        this.svg = svg;\n        this.guid = _utils.Utils.guid();\n        this.container = _utils.Utils.selectOrAppend(legendParent, \"g.\" + this.legendClass, \"g\").attr(\"transform\", \"translate(\" + legendX + \",\" + legendY + \")\").classed(this.legendClass, true);\n\n        this.labelFormat = labelFormat;\n    }\n\n    _createClass(Legend, [{\n        key: \"linearGradientBar\",\n        value: function linearGradientBar(barWidth, barHeight, title) {\n            var gradientId = this.cssClassPrefix + \"linear-gradient\" + \"-\" + this.guid;\n            var scale = this.scale;\n            var self = this;\n\n            this.linearGradient = _utils.Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n            this.container.append(\"rect\").attr(\"width\", barWidth).attr(\"height\", barHeight).attr(\"x\", 0).attr(\"y\", 0).style(\"fill\", \"url(#\" + gradientId + \")\");\n\n            var ticks = this.container.selectAll(\"text\").data(scale.domain());\n            var ticksNumber = scale.domain().length - 1;\n            ticks.enter().append(\"text\");\n\n            ticks.attr(\"x\", barWidth).attr(\"y\", function (d, i) {\n                return barHeight - i * barHeight / ticksNumber;\n            }).attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\").text(function (d) {\n                return self.labelFormat ? self.labelFormat(d) : d;\n            });\n            ticks.attr(\"dominant-baseline\", \"middle\");\n            if (this.rotateLabels) {\n                ticks.attr(\"transform\", function (d, i) {\n                    return \"rotate(-45, \" + barWidth + \", \" + (barHeight - i * barHeight / ticksNumber) + \")\";\n                }).attr(\"text-anchor\", \"start\").attr(\"dx\", 5).attr(\"dy\", 5);\n            } else {}\n\n            ticks.exit().remove();\n\n            return this;\n        }\n    }, {\n        key: \"setRotateLabels\",\n        value: function setRotateLabels(rotateLabels) {\n            this.rotateLabels = rotateLabels;\n            return this;\n        }\n    }]);\n\n    return Legend;\n}();\n\n},{\"../bower_components/d3-legend/no-extend\":1,\"./utils\":39}],34:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Regression = exports.RegressionConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RegressionConfig = exports.RegressionConfig = function (_ScatterPlotConfig) {\n    _inherits(RegressionConfig, _ScatterPlotConfig);\n\n    function RegressionConfig(custom) {\n        _classCallCheck(this, RegressionConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RegressionConfig).call(this));\n\n        _this.mainRegression = true;\n        _this.groupRegression = true;\n        _this.confidence = {\n            level: 0.95,\n            criticalValue: function criticalValue(degreesOfFreedom, criticalProbability) {\n                return _statisticsUtils.StatisticsUtils.tValue(degreesOfFreedom, criticalProbability);\n            },\n            marginOfError: undefined //custom  margin Of Error function (x, points)\n        };\n\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    }\n\n    return RegressionConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar Regression = exports.Regression = function (_ScatterPlot) {\n    _inherits(Regression, _ScatterPlot);\n\n    function Regression(placeholderSelector, data, config) {\n        _classCallCheck(this, Regression);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Regression).call(this, placeholderSelector, data, new RegressionConfig(config)));\n    }\n\n    _createClass(Regression, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(Regression.prototype), \"setConfig\", this).call(this, new RegressionConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(Regression.prototype), \"initPlot\", this).call(this);\n            this.initRegressionLines();\n        }\n    }, {\n        key: \"initRegressionLines\",\n        value: function initRegressionLines() {\n\n            var self = this;\n            var groupsAvailable = self.plot.groupingEnabled;\n\n            self.plot.regressions = [];\n\n            if (groupsAvailable && self.config.mainRegression) {\n                var regression = this.initRegression(this.plot.data, false);\n                self.plot.regressions.push(regression);\n            }\n\n            if (self.config.groupRegression) {\n                this.initGroupRegression();\n            }\n        }\n    }, {\n        key: \"initGroupRegression\",\n        value: function initGroupRegression() {\n            var _this3 = this;\n\n            var self = this;\n\n            self.plot.groupedData.forEach(function (group) {\n                var regression = _this3.initRegression(group.values, group.key);\n                self.plot.regressions.push(regression);\n            });\n        }\n    }, {\n        key: \"initRegression\",\n        value: function initRegression(values, groupVal) {\n            var self = this;\n\n            var points = values.map(function (d) {\n                return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n            });\n\n            // points.sort((a,b) => a[0]-b[0]);\n\n            var linearRegression = _statisticsUtils.StatisticsUtils.linearRegression(points);\n            var linearRegressionLine = _statisticsUtils.StatisticsUtils.linearRegressionLine(linearRegression);\n\n            var extentX = d3.extent(points, function (d) {\n                return d[0];\n            });\n\n            var linePoints = [{\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            }, {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }];\n\n            var line = d3.svg.line().interpolate(\"basis\").x(function (d) {\n                return self.plot.x.scale(d.x);\n            }).y(function (d) {\n                return self.plot.y.scale(d.y);\n            });\n\n            var color = self.plot.color;\n\n            var defaultColor = \"black\";\n            if (_utils.Utils.isFunction(color)) {\n                if (values.length && groupVal !== false) {\n                    if (self.config.series) {\n                        color = self.plot.colorCategory(groupVal);\n                    } else {\n                        color = color(values[0]);\n                    }\n                } else {\n                    color = defaultColor;\n                }\n            } else if (!color && groupVal === false) {\n                color = defaultColor;\n            }\n\n            var confidence = this.computeConfidence(points, extentX, linearRegression, linearRegressionLine);\n            return {\n                group: groupVal || false,\n                line: line,\n                linePoints: linePoints,\n                color: color,\n                confidence: confidence\n            };\n        }\n    }, {\n        key: \"computeConfidence\",\n        value: function computeConfidence(points, extentX, linearRegression, linearRegressionLine) {\n            var self = this;\n            var slope = linearRegression.m;\n            var n = points.length;\n            var degreesOfFreedom = Math.max(0, n - 2);\n\n            var alpha = 1 - self.config.confidence.level;\n            var criticalProbability = 1 - alpha / 2;\n            var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom, criticalProbability);\n\n            var xValues = points.map(function (d) {\n                return d[0];\n            });\n            var meanX = _statisticsUtils.StatisticsUtils.mean(xValues);\n            var xMySum = 0;\n            var xSum = 0;\n            var xPowSum = 0;\n            var ySum = 0;\n            var yPowSum = 0;\n            points.forEach(function (p) {\n                var x = p[0];\n                var y = p[1];\n\n                xMySum += x * y;\n                xSum += x;\n                ySum += y;\n                xPowSum += x * x;\n                yPowSum += y * y;\n            });\n            var a = linearRegression.m;\n            var b = linearRegression.b;\n\n            var Sa2 = n / (n + 2) * ((yPowSum - a * xMySum - b * ySum) / (n * xPowSum - xSum * xSum)); //Wariancja współczynnika kierunkowego regresji liniowej a\n            var Sy2 = (yPowSum - a * xMySum - b * ySum) / (n * (n - 2)); //Sa2 //Mean y value variance\n\n            var errorFn = function errorFn(x) {\n                return Math.sqrt(Sy2 + Math.pow(x - meanX, 2) * Sa2);\n            }; //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n            var marginOfError = function marginOfError(x) {\n                return criticalValue * errorFn(x);\n            };\n\n            // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n            // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n            // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n            var computeConfidenceAreaPoint = function computeConfidenceAreaPoint(x) {\n                var linearRegression = linearRegressionLine(x);\n                var moe = marginOfError(x);\n                var confDown = linearRegression - moe;\n                var confUp = linearRegression + moe;\n                return {\n                    x: x,\n                    y0: confDown,\n                    y1: confUp\n                };\n            };\n\n            var centerX = (extentX[1] + extentX[0]) / 2;\n\n            // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n            var confidenceAreaPoints = [extentX[0], centerX, extentX[1]].map(computeConfidenceAreaPoint);\n\n            var fitInPlot = function fitInPlot(y) {\n                return y;\n            };\n\n            var confidenceArea = d3.svg.area().interpolate(\"monotone\").x(function (d) {\n                return self.plot.x.scale(d.x);\n            }).y0(function (d) {\n                return fitInPlot(self.plot.y.scale(d.y0));\n            }).y1(function (d) {\n                return fitInPlot(self.plot.y.scale(d.y1));\n            });\n\n            return {\n                area: confidenceArea,\n                points: confidenceAreaPoints\n            };\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(Regression.prototype), \"update\", this).call(this, newData);\n            this.updateRegressionLines();\n        }\n    }, {\n        key: \"updateRegressionLines\",\n        value: function updateRegressionLines() {\n            var self = this;\n            var regressionContainerClass = this.prefixClass(\"regression-container\");\n            var regressionContainerSelector = \"g.\" + regressionContainerClass;\n\n            var clipPathId = self.prefixClass(\"clip\");\n\n            var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\" + self.dotsContainerClass);\n            var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n            regressionContainerClip.selectOrAppend('rect').attr('width', self.plot.width).attr('height', self.plot.height).attr('x', 0).attr('y', 0);\n\n            regressionContainer.attr(\"clip-path\", function (d, i) {\n                return \"url(#\" + clipPathId + \")\";\n            });\n\n            var regressionClass = this.prefixClass(\"regression\");\n            var confidenceAreaClass = self.prefixClass(\"confidence\");\n            var regressionSelector = \"g.\" + regressionClass;\n            var regression = regressionContainer.selectAll(regressionSelector).data(self.plot.regressions, function (d, i) {\n                return d.group;\n            });\n\n            var regressionEnterG = regression.enter().insertSelector(regressionSelector);\n            var lineClass = self.prefixClass(\"line\");\n            regressionEnterG.append(\"path\").attr(\"class\", lineClass).attr(\"shape-rendering\", \"optimizeQuality\");\n            // .append(\"line\")\n            // .attr(\"class\", \"line\")\n            // .attr(\"shape-rendering\", \"optimizeQuality\");\n\n            var line = regression.select(\"path.\" + lineClass).style(\"stroke\", function (r) {\n                return r.color;\n            });\n            // .attr(\"x1\", r=> self.plot.x.scale(r.linePoints[0].x))\n            // .attr(\"y1\", r=> self.plot.y.scale(r.linePoints[0].y))\n            // .attr(\"x2\", r=> self.plot.x.scale(r.linePoints[1].x))\n            // .attr(\"y2\", r=> self.plot.y.scale(r.linePoints[1].y))\n\n            var lineT = line;\n            if (self.transitionEnabled()) {\n                lineT = line.transition();\n            }\n\n            lineT.attr(\"d\", function (r) {\n                return r.line(r.linePoints);\n            });\n\n            regressionEnterG.append(\"path\").attr(\"class\", confidenceAreaClass).attr(\"shape-rendering\", \"optimizeQuality\").style(\"opacity\", \"0.4\");\n\n            var area = regression.select(\"path.\" + confidenceAreaClass);\n\n            var areaT = area;\n            if (self.transitionEnabled()) {\n                areaT = area.transition();\n            }\n            areaT.attr(\"d\", function (r) {\n                return r.confidence.area(r.confidence.points);\n            });\n            areaT.style(\"fill\", function (r) {\n                return r.color;\n            });\n            regression.exit().remove();\n        }\n    }]);\n\n    return Regression;\n}(_scatterplot.ScatterPlot);\n\n},{\"./chart\":26,\"./scatterplot\":36,\"./statistics-utils\":38,\"./utils\":39}],35:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlotMatrix = exports.ScatterPlotMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chartWithColorGroups = require(\"./chart-with-color-groups\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nvar _legend = require(\"./legend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotMatrixConfig = exports.ScatterPlotMatrixConfig = function (_ScatterPlotConfig) {\n    _inherits(ScatterPlotMatrixConfig, _ScatterPlotConfig);\n\n    //ticks number, (default: computed using cell size)\n    //show axis guides\n    //scatter plot cell padding\n\n    function ScatterPlotMatrixConfig(custom) {\n        _classCallCheck(this, ScatterPlotMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrixConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'scatterplot-matrix';\n        _this.size = undefined;\n        _this.minCellSize = 50;\n        _this.maxCellSize = 1000;\n        _this.padding = 20;\n        _this.brush = true;\n        _this.guides = true;\n        _this.showTooltip = true;\n        _this.ticks = undefined;\n        _this.x = { // X axis config\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: undefined, //object property name or array index with grouping variable\n            includeInPlot: false };\n        _this.variables = {\n            labels: [], //optional array of variable labels (for the diagonal of the plot).\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            } // variable value accessor\n        };\n\n        _utils.Utils.deepExtend(_this, custom);\n        return _this;\n    } //show tooltip on dot hover\n    //scatter plot cell size\n\n\n    return ScatterPlotMatrixConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar ScatterPlotMatrix = exports.ScatterPlotMatrix = function (_ChartWithColorGroups) {\n    _inherits(ScatterPlotMatrix, _ChartWithColorGroups);\n\n    function ScatterPlotMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlotMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrix).call(this, placeholderSelector, data, new ScatterPlotMatrixConfig(config)));\n    }\n\n    _createClass(ScatterPlotMatrix, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"setConfig\", this).call(this, new ScatterPlotMatrixConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"initPlot\", this).call(this);\n\n            var self = this;\n            var margin = this.plot.margin;\n            var conf = this.config;\n            this.plot.x = {};\n            this.plot.y = {};\n            this.plot.dot = {\n                color: null //color scale mapping function\n            };\n\n            this.setupVariables();\n\n            this.plot.size = conf.size;\n\n            var width = conf.width;\n            var availableWidth = _utils.Utils.availableWidth(this.config.width, this.getBaseContainer(), margin);\n            var availableHeight = _utils.Utils.availableHeight(this.config.height, this.getBaseContainer(), margin);\n            if (!width) {\n                if (!this.plot.size) {\n                    this.plot.size = Math.min(conf.maxCellSize, Math.max(conf.minCellSize, availableWidth / this.plot.variables.length));\n                }\n                width = margin.left + margin.right + this.plot.variables.length * this.plot.size;\n            }\n            if (!this.plot.size) {\n                this.plot.size = (width - (margin.left + margin.right)) / this.plot.variables.length;\n            }\n\n            var height = width;\n            if (!height) {\n                height = availableHeight;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            this.plot.ticks = conf.ticks;\n\n            if (this.plot.ticks === undefined) {\n                this.plot.ticks = this.plot.size / 40;\n            }\n\n            this.setupX();\n            this.setupY();\n\n            return this;\n        }\n    }, {\n        key: \"setupVariables\",\n        value: function setupVariables() {\n            var variablesConf = this.config.variables;\n\n            var data = this.plot.groupedData;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n\n                plot.variables = data.length ? _utils.Utils.inferVariables(data[0].values, this.config.groups.key, this.config.includeInPlot) : [];\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                var min = d3.min(data, function (s) {\n                    return d3.min(s.values, function (d) {\n                        return variablesConf.value(d, variableKey);\n                    });\n                });\n                var max = d3.max(data, function (s) {\n                    return d3.max(s.values, function (d) {\n                        return variablesConf.value(d, variableKey);\n                    });\n                });\n                plot.domainByVariable[variableKey] = [min, max];\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            plot.subplots = [];\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config;\n\n            x.value = conf.variables.value;\n            x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\n            x.map = function (d, variable) {\n                return x.scale(x.value(d, variable));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(plot.ticks);\n            x.axis.tickSize(plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config;\n\n            y.value = conf.variables.value;\n            y.scale = d3.scale[conf.y.scale]().range([plot.size - conf.padding / 2, conf.padding / 2]);\n            y.map = function (d, variable) {\n                return y.scale(y.value(d, variable));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(plot.ticks);\n            y.axis.tickSize(-plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"update\", this).call(this, newData);\n\n            var self = this;\n            var n = self.plot.variables.length;\n            var conf = this.config;\n\n            var axisClass = self.prefixClass(\"axis\");\n            var axisXClass = axisClass + \"-x\";\n            var axisYClass = axisClass + \"-y\";\n\n            var xAxisSelector = \"g.\" + axisXClass + \".\" + axisClass;\n            var yAxisSelector = \"g.\" + axisYClass + \".\" + axisClass;\n\n            var noGuidesClass = self.prefixClass(\"no-guides\");\n            var xAxis = self.svgG.selectAll(xAxisSelector).data(self.plot.variables);\n\n            xAxis.enter().appendSelector(xAxisSelector).classed(noGuidesClass, !conf.guides);\n\n            xAxis.attr(\"transform\", function (d, i) {\n                return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\";\n            }).each(function (d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);\n                var axis = d3.select(this);\n                if (self.transitionEnabled()) {\n                    axis = axis.transition();\n                }\n                axis.call(self.plot.x.axis);\n            });\n\n            xAxis.exit().remove();\n\n            var yAxis = self.svgG.selectAll(yAxisSelector).data(self.plot.variables);\n            yAxis.enter().appendSelector(yAxisSelector);\n            yAxis.classed(noGuidesClass, !conf.guides).attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * self.plot.size + \")\";\n            });\n            yAxis.each(function (d) {\n                self.plot.y.scale.domain(self.plot.domainByVariable[d]);\n                var axis = d3.select(this);\n                if (self.transitionEnabled()) {\n                    axis = axis.transition();\n                }\n                axis.call(self.plot.y.axis);\n            });\n\n            yAxis.exit().remove();\n\n            var cellClass = self.prefixClass(\"cell\");\n            var cell = self.svgG.selectAll(\".\" + cellClass).data(self.utils.cross(self.plot.variables, self.plot.variables));\n\n            cell.enter().appendSelector(\"g.\" + cellClass).filter(function (d) {\n                return d.i === d.j;\n            }).append(\"text\");\n\n            cell.attr(\"transform\", function (d) {\n                return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\";\n            });\n\n            if (conf.brush) {\n                this.drawBrush(cell);\n            }\n\n            cell.each(plotSubplot);\n\n            //Labels\n            cell.select(\"text\").attr(\"x\", conf.padding).attr(\"y\", conf.padding).attr(\"dy\", \".71em\").text(function (d) {\n                return self.plot.labelByVariable[d.x];\n            });\n\n            cell.exit().remove();\n\n            function plotSubplot(p) {\n                var plot = self.plot;\n                plot.subplots.push(p);\n                var cell = d3.select(this);\n\n                plot.x.scale.domain(plot.domainByVariable[p.x]);\n                plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n                var frameClass = self.prefixClass(\"frame\");\n                cell.selectOrAppend(\"rect.\" + frameClass).attr(\"class\", frameClass).attr(\"x\", conf.padding / 2).attr(\"y\", conf.padding / 2).attr(\"width\", plot.size - conf.padding).attr(\"height\", plot.size - conf.padding);\n\n                p.update = function () {\n\n                    var subplot = this;\n                    var layerClass = self.prefixClass('layer');\n\n                    var layer = cell.selectAll(\"g.\" + layerClass).data(self.plot.groupedData);\n\n                    layer.enter().appendSelector(\"g.\" + layerClass);\n\n                    var dots = layer.selectAll(\"circle\").data(function (d) {\n                        return d.values;\n                    });\n\n                    dots.enter().append(\"circle\");\n\n                    var dotsT = dots;\n                    if (self.transitionEnabled()) {\n                        dotsT = dots.transition();\n                    }\n\n                    dotsT.attr(\"cx\", function (d) {\n                        return plot.x.map(d, subplot.x);\n                    }).attr(\"cy\", function (d) {\n                        return plot.y.map(d, subplot.y);\n                    }).attr(\"r\", self.config.dotRadius);\n\n                    if (plot.seriesColor) {\n                        layer.style(\"fill\", plot.seriesColor);\n                    } else if (plot.color) {\n                        dots.style(\"fill\", plot.color);\n                    }\n\n                    if (plot.tooltip) {\n                        dots.on(\"mouseover\", function (d) {\n                            plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                            var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\n                            var group = self.config.groups ? self.config.groups.value.call(self.config, d) : null;\n                            if (group || group === 0) {\n                                group = plot.groupToLabel[group];\n                                html += \"<br/>\";\n                                var label = self.config.groups.label;\n                                if (label) {\n                                    html += label + \": \";\n                                }\n                                html += group;\n                            }\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                        }).on(\"mouseout\", function (d) {\n                            plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                        });\n                    }\n\n                    dots.exit().remove();\n                    layer.exit().remove();\n                };\n                p.update();\n            }\n        }\n    }, {\n        key: \"drawBrush\",\n        value: function drawBrush(cell) {\n            var self = this;\n            var brush = d3.svg.brush().x(self.plot.x.scale).y(self.plot.y.scale).on(\"brushstart\", brushstart).on(\"brush\", brushmove).on(\"brushend\", brushend);\n\n            self.plot.brush = brush;\n\n            cell.selectOrAppend(\"g.brush-container\").call(brush);\n            self.clearBrush();\n\n            // Clear the previously-active brush, if any.\n            function brushstart(p) {\n                if (self.plot.brushCell !== this) {\n                    self.clearBrush();\n                    self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                    self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                    self.plot.brushCell = this;\n                }\n            }\n\n            // Highlight the selected circles.\n            function brushmove(p) {\n                var e = brush.extent();\n                self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\n                    return e[0][0] > d[p.x] || d[p.x] > e[1][0] || e[0][1] > d[p.y] || d[p.y] > e[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            }\n        }\n    }, {\n        key: \"clearBrush\",\n        value: function clearBrush() {\n            var self = this;\n            if (!self.plot.brushCell) {\n                return;\n            }\n            d3.select(self.plot.brushCell).call(self.plot.brush.clear());\n            self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            self.plot.brushCell = null;\n        }\n    }]);\n\n    return ScatterPlotMatrix;\n}(_chartWithColorGroups.ChartWithColorGroups);\n\n},{\"./chart-with-color-groups\":25,\"./legend\":33,\"./scatterplot\":36,\"./utils\":39}],36:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlot = exports.ScatterPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chartWithColorGroups = require(\"./chart-with-color-groups\");\n\nvar _utils = require(\"./utils\");\n\nvar _legend = require(\"./legend\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotConfig = exports.ScatterPlotConfig = function (_ChartWithColorGroups) {\n    _inherits(ScatterPlotConfig, _ChartWithColorGroups);\n\n    //show axis guides\n\n    function ScatterPlotConfig(custom) {\n        _classCallCheck(this, ScatterPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'scatterplot';\n        _this.guides = false;\n        _this.showTooltip = true;\n        _this.x = { // X axis config\n            label: '', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return d[key];\n            }, // x value accessor\n            orient: \"bottom\",\n            scale: \"linear\",\n            domainMargin: 0.05\n        };\n        _this.y = { // Y axis config\n            label: '', // axis label,\n            key: 1,\n            value: function value(d, key) {\n                return d[key];\n            }, // y value accessor\n            orient: \"left\",\n            scale: \"linear\",\n            domainMargin: 0.05\n        };\n        _this.groups = {\n            key: 2\n        };\n        _this.dotRadius = 2;\n        _this.transition = true;\n\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } //show tooltip on dot hover\n\n    return ScatterPlotConfig;\n}(_chartWithColorGroups.ChartWithColorGroupsConfig);\n\nvar ScatterPlot = exports.ScatterPlot = function (_ChartWithColorGroups2) {\n    _inherits(ScatterPlot, _ChartWithColorGroups2);\n\n    function ScatterPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlot).call(this, placeholderSelector, data, new ScatterPlotConfig(config)));\n    }\n\n    _createClass(ScatterPlot, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlot.prototype), \"setConfig\", this).call(this, new ScatterPlotConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(ScatterPlot.prototype), \"initPlot\", this).call(this);\n            var self = this;\n\n            var conf = this.config;\n\n            this.plot.x = {};\n            this.plot.y = {};\n\n            this.computePlotSize();\n            this.setupX();\n            this.setupY();\n\n            return this;\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            var data = this.plot.groupedData;\n\n            var domain = [parseFloat(d3.min(data, function (s) {\n                return d3.min(s.values, plot.x.value);\n            })), parseFloat(d3.max(data, function (s) {\n                return d3.max(s.values, plot.x.value);\n            }))];\n            var margin = (domain[1] - domain[0]) * conf.domainMargin;\n            domain[0] -= margin;\n            domain[1] += margin;\n            plot.x.scale.domain(domain);\n            if (this.config.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n\n            /*\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             */\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n\n            if (this.config.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n\n            var data = this.plot.groupedData;\n\n            var domain = [parseFloat(d3.min(data, function (s) {\n                return d3.min(s.values, plot.y.value);\n            })), parseFloat(d3.max(data, function (s) {\n                return d3.max(s.values, plot.y.value);\n            }))];\n            var margin = (domain[1] - domain[0]) * conf.domainMargin;\n            domain[0] -= margin;\n            domain[1] += margin;\n            plot.y.scale.domain(domain);\n            // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n        }\n    }, {\n        key: \"drawAxisX\",\n        value: function drawAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n            var axisT = axis;\n            if (self.transitionEnabled()) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.x.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + plot.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: \"drawAxisY\",\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n            var axisT = axis;\n            if (self.transitionEnabled()) {\n                axisT = axis.transition().ease(\"sin-in-out\");\n            }\n\n            axisT.call(plot.y.axis);\n\n            axis.selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(ScatterPlot.prototype), \"update\", this).call(this, newData);\n            this.drawAxisX();\n            this.drawAxisY();\n\n            this.updateDots();\n        }\n    }, {\n        key: \"updateDots\",\n        value: function updateDots() {\n            var self = this;\n            var plot = self.plot;\n            var data = plot.data;\n            var layerClass = self.prefixClass('layer');\n            var dotClass = self.prefixClass('dot');\n            self.dotsContainerClass = self.prefixClass('dots-container');\n\n            var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n            var layer = dotsContainer.selectAll(\"g.\" + layerClass).data(plot.groupedData);\n\n            layer.enter().appendSelector(\"g.\" + layerClass);\n\n            var dots = layer.selectAll('.' + dotClass).data(function (d) {\n                return d.values;\n            });\n\n            dots.enter().append(\"circle\").attr(\"class\", dotClass);\n\n            var dotsT = dots;\n            if (self.transitionEnabled()) {\n                dotsT = dots.transition();\n            }\n\n            dotsT.attr(\"r\", self.config.dotRadius).attr(\"cx\", plot.x.map).attr(\"cy\", plot.y.map);\n\n            if (plot.tooltip) {\n                dots.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                    var group = self.config.groups ? self.config.groups.value.call(self.config, d) : null;\n                    if (group || group === 0) {\n                        group = plot.groupToLabel[group];\n                        html += \"<br/>\";\n                        var label = self.config.groups.label;\n                        if (label) {\n                            html += label + \": \";\n                        }\n                        html += group;\n                    }\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (plot.seriesColor) {\n                layer.style(\"fill\", plot.seriesColor);\n            } else if (plot.color) {\n                dots.style(\"fill\", plot.color);\n            }\n\n            dots.exit().remove();\n            layer.exit().remove();\n        }\n    }]);\n\n    return ScatterPlot;\n}(_chartWithColorGroups.ChartWithColorGroups);\n\n},{\"./chart-with-color-groups\":25,\"./legend\":33,\"./utils\":39}],37:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.tdistr = tdistr;\n/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subchisqr($n - 0, $p - 0));\n}\n\nfunction udistr($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subu($p - 0));\n}\n\nfunction tdistr($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\";\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subt($n - 0, $p - 0));\n}\n\nfunction fdistr($n, $m, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* first degree of freedom */\n\t}\n\tif ($m <= 0 || Math.abs($m) - Math.abs(integer($m)) != 0) {\n\t\tthrow \"Invalid m: $m\\n\"; /* second degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subf($n - 0, $m - 0, $p - 0));\n}\n\nfunction uprob($x) {\n\treturn precision_string(_subuprob($x - 0));\n}\n\nfunction chisqrprob($n, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n - 0, $x - 0));\n}\n\nfunction tprob($n, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n - 0, $x - 0));\n}\n\nfunction fprob($n, $m, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* first degree of freedom */\n\t}\n\tif ($m <= 0 || Math.abs($m) - Math.abs(integer($m)) != 0) {\n\t\tthrow \"Invalid m: $m\\n\"; /* second degree of freedom */\n\t}\n\treturn precision_string(_subfprob($n - 0, $m - 0, $x - 0));\n}\n\nfunction _subfprob($n, $m, $x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow(1 - $z, $n / 2 * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow(1 - $z, $m / 2) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = $n == 1 ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = $m == 1 ? 0 : 1;\n\t\tfor (var $i = $m - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI - 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\nfunction _subchisqrprob($n, $x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow($x / $n, 1 / 3) - (1 - 2 / 9 / $n)) / Math.sqrt(2 / 9 / $n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {\n\t\tvar $a;\n\t\tvar $i;\n\t\tvar $i1;\n\t\tif ($n % 2 != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2 / Math.PI) * Math.exp(-$x / 2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x / 2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= $n - 2; $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt($y * (1.570796288 + $y * (.03706987906 + $y * (-.8364353589E-3 + $y * (-.2250947176E-3 + $y * (.6841218299E-5 + $y * (0.5824238515E-5 + $y * (-.104527497E-5 + $y * (.8360937017E-7 + $y * (-.3231081277E-8 + $y * (.3657763036E-10 + $y * .6936233982E-12)))))))))));\n\tif ($p > .5) $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow(1 + $absx * (.049867347 + $absx * (.0211410061 + $absx * (.0032776263 + $absx * (.0000380036 + $absx * (.0000488906 + $absx * .000005383))))), -16) / 2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) / Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x < 0) $p = 1 - $p;\n\treturn $p;\n}\n\nfunction _subt($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn -_subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) / 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2 + 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo {\n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) / Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) + Math.log($n / $n1 / 2 / Math.PI) - 1 + (1 / $n1 - 1 / $n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x)) - 4)));\n\t\t} while ($x && $round != 0);\n\t}\n\treturn $x;\n}\n\nfunction _subtprob($n, $x) {\n\n\tvar $a;\n\tvar $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i - 1) / $i * $z * $y;\n\t}\n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w) / 2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = $n == 1 ? 0 : Math.sin($w) * Math.cos($w) / Math.PI;\n\t\t$b = .5 + $w / Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p / 2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 + (($u - $a) / 2 + (((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 + (((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u - $a * $a * (9 * $m - 6)) / 48 / $n) / $n) / $n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p);\n\t} else {\n\t\t$x = _subf2($n, $m, $p);\n\t}\n\treturn $x;\n}\n\nfunction _subf2($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * (1 + (($u - $n2) / 2 + (((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + (((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u - $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp((($n + $m) * Math.log(($n + $m) / ($n * $x + $m)) + ($n - 2) * Math.log($x) + Math.log($n * $m / ($n + $m)) - Math.log(4 * Math.PI) - (1 / $n + 1 / $m - 1 / ($n + $m)) / 6) / 2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta) > 3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr($n, $p) {\n\tvar $x;\n\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t} else if ($p == 1) {\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u + 2 / 3 * ($u2 - 1) + $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n) - 2 / 405 / $n * ($u2 * (3 * $u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n\t\t\tvar $p1;\n\t\t\tvar $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n > 100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow($x / $n, 1 / 3) - (1 - 2 / 9 / $n)) / Math.sqrt(2 / 9 / $n));\n\t\t\t\t} else if ($x > 400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0;\n\t\t\t\t\tvar $a;\n\t\t\t\t\tif ($n % 2 != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2 / Math.PI) * Math.exp(-$x / 2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x / 2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n - 2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n - 1) * Math.log($x / $n) - Math.log(4 * Math.PI * $x) + $n - $x - 1 / $n / 6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while ($n < 31 && Math.abs($x0 - $x) > 1e-4);\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n\nfunction max() {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n\t\tif ($max < arguments[$i]) $max = arguments[$i];\n\t}\n\treturn $max;\n}\n\nfunction min() {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n\t\tif ($min > arguments[$i]) $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision($x, $p) {\n\t$x = $x * Math.pow(10, $p);\n\t$x = Math.round($x);\n\treturn $x / Math.pow(10, $p);\n}\n\nfunction integer($i) {\n\tif ($i > 0) return Math.floor($i);else return Math.ceil($i);\n}\n\n},{}],38:[function(require,module,exports){\n'use strict';\n\nvar _statisticsDistributions = require('./statistics-distributions');\n\nvar su = module.exports.StatisticsUtils = {};\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\nsu.linearRegression = require('../bower_components/simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('../bower_components/simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('../bower_components/simple-statistics/src/error_function');\nsu.standardDeviation = require('../bower_components/simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('../bower_components/simple-statistics/src/sample_standard_deviation');\nsu.variance = require('../bower_components/simple-statistics/src/variance');\nsu.mean = require('../bower_components/simple-statistics/src/mean');\nsu.zScore = require('../bower_components/simple-statistics/src/z_score');\nsu.standardError = function (arr) {\n    return Math.sqrt(su.variance(arr) / (arr.length - 1));\n};\nsu.quantile = require('../bower_components/simple-statistics/src/quantile');\n\nsu.tValue = function (degreesOfFreedom, criticalProbability) {\n    //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return (0, _statisticsDistributions.tdistr)(degreesOfFreedom, criticalProbability);\n};\n\n},{\"../bower_components/simple-statistics/src/error_function\":6,\"../bower_components/simple-statistics/src/linear_regression\":7,\"../bower_components/simple-statistics/src/linear_regression_line\":8,\"../bower_components/simple-statistics/src/mean\":9,\"../bower_components/simple-statistics/src/quantile\":10,\"../bower_components/simple-statistics/src/sample_correlation\":13,\"../bower_components/simple-statistics/src/sample_standard_deviation\":15,\"../bower_components/simple-statistics/src/standard_deviation\":17,\"../bower_components/simple-statistics/src/variance\":20,\"../bower_components/simple-statistics/src/z_score\":21,\"./statistics-distributions\":37}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'inferVariables',\n        value: function inferVariables(data, groupKey, includeGroup) {\n            var res = [];\n            if (!data) {\n                return res;\n            }\n\n            if (data.length) {\n                var d = data[0];\n                if (d instanceof Array) {\n                    res = d.map(function (v, i) {\n                        return i;\n                    });\n                } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object') {\n\n                    for (var prop in d) {\n                        if (!d.hasOwnProperty(prop)) continue;\n\n                        res.push(prop);\n                    }\n                }\n            }\n            if (groupKey !== null && groupKey !== undefined && !includeGroup) {\n                var index = res.indexOf(groupKey);\n                if (index > -1) {\n                    res.splice(index, 1);\n                }\n            }\n            return res;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'isDate',\n        value: function isDate(a) {\n            return Object.prototype.toString.call(a) === '[object Date]';\n        }\n    }, {\n        key: 'isString',\n        value: function isString(a) {\n            return typeof a === 'string' || a instanceof String;\n        }\n    }, {\n        key: 'insertOrAppendSelector',\n        value: function insertOrAppendSelector(parent, selector, operation, before) {\n            var selectorParts = selector.split(/([\\.\\#])/);\n            var element = parent[operation](selectorParts.shift(), before); //\":first-child\"\n            while (selectorParts.length > 1) {\n                var selectorModifier = selectorParts.shift();\n                var selectorItem = selectorParts.shift();\n                if (selectorModifier === \".\") {\n                    element = element.classed(selectorItem, true);\n                } else if (selectorModifier === \"#\") {\n                    element = element.attr('id', selectorItem);\n                }\n            }\n            return element;\n        }\n    }, {\n        key: 'insertSelector',\n        value: function insertSelector(parent, selector, before) {\n            return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n        }\n    }, {\n        key: 'appendSelector',\n        value: function appendSelector(parent, selector) {\n            return Utils.insertOrAppendSelector(parent, selector, \"append\");\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                if (element) {\n                    return parent.append(element);\n                }\n                return Utils.appendSelector(parent, selector);\n            }\n            return selection;\n        }\n    }, {\n        key: 'selectOrInsert',\n        value: function selectOrInsert(parent, selector, before) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return Utils.insertSelector(parent, selector, before);\n            }\n            return selection;\n        }\n    }, {\n        key: 'linearGradient',\n        value: function linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n            var defs = Utils.selectOrAppend(svg, \"defs\");\n            var linearGradient = defs.append(\"linearGradient\").attr(\"id\", gradientId);\n\n            linearGradient.attr(\"x1\", x1 + \"%\").attr(\"y1\", y1 + \"%\").attr(\"x2\", x2 + \"%\").attr(\"y2\", y2 + \"%\");\n\n            //Append multiple color stops by using D3's data/enter step\n            var stops = linearGradient.selectAll(\"stop\").data(range);\n\n            stops.enter().append(\"stop\");\n\n            stops.attr(\"offset\", function (d, i) {\n                return i / (range.length - 1);\n            }).attr(\"stop-color\", function (d) {\n                return d;\n            });\n\n            stops.exit().remove();\n        }\n    }, {\n        key: 'guid',\n        value: function guid() {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            }\n\n            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n        }\n\n        //places textString in textObj, adds an ellipsis if text can't fit in width\n\n    }, {\n        key: 'placeTextWithEllipsis',\n        value: function placeTextWithEllipsis(textD3Obj, textString, width) {\n            var textObj = textD3Obj.node();\n            textObj.textContent = textString;\n\n            var margin = 0;\n            var ellipsisLength = 9;\n            //ellipsis is needed\n            if (textObj.getComputedTextLength() > width + margin) {\n                for (var x = textString.length - 3; x > 0; x -= 1) {\n                    if (textObj.getSubStringLength(0, x) + ellipsisLength <= width + margin) {\n                        textObj.textContent = textString.substring(0, x) + \"...\";\n                        return true;\n                    }\n                }\n                textObj.textContent = \"...\"; //can't place at all\n                return true;\n            }\n            return false;\n        }\n    }, {\n        key: 'placeTextWithEllipsisAndTooltip',\n        value: function placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip) {\n            var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n            if (ellipsisPlaced && tooltip) {\n                textD3Obj.on(\"mouseover\", function (d) {\n                    tooltip.transition().duration(200).style(\"opacity\", .9);\n                    tooltip.html(textString).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                textD3Obj.on(\"mouseout\", function (d) {\n                    tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n        }\n    }, {\n        key: 'getFontSize',\n        value: function getFontSize(element) {\n            return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n        }\n    }]);\n\n    return Utils;\n}();\n\nUtils.SQRT_2 = 1.41421356237;\n\nUtils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n};\n\nUtils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n};\n\nUtils.availableHeight = function (height, container, margin) {\n    return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n};\n\nUtils.availableWidth = function (width, container, margin) {\n    return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n};\n\n},{}]},{},[32])(32)\n});\n\n","module.exports = {\r\n  color: require('./src/color'),\r\n  size: require('./src/size'),\r\n  symbol: require('./src/symbol')\r\n};\r\n","var helper = require('./legend');\r\n\r\nmodule.exports = function(){\r\n\r\n  var scale = d3.scale.linear(),\r\n    shape = \"rect\",\r\n    shapeWidth = 15,\r\n    shapeHeight = 15,\r\n    shapeRadius = 10,\r\n    shapePadding = 2,\r\n    cells = [5],\r\n    labels = [],\r\n    classPrefix = \"\",\r\n    useClass = false,\r\n    title = \"\",\r\n    labelFormat = d3.format(\".01f\"),\r\n    labelOffset = 10,\r\n    labelAlign = \"middle\",\r\n    labelDelimiter = \"to\",\r\n    orient = \"vertical\",\r\n    ascending = false,\r\n    path,\r\n    legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\r\n\r\n    function legend(svg){\r\n\r\n      var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\r\n        legendG = svg.selectAll('g').data([scale]);\r\n\r\n      legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\r\n\r\n\r\n      var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\r\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\r\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\r\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\r\n\r\n      //add event handlers\r\n      helper.d3_addEvents(cellEnter, legendDispatcher);\r\n\r\n      cell.exit().transition().style(\"opacity\", 0).remove();\r\n\r\n      helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\r\n\r\n      helper.d3_addText(legendG, cellEnter, type.labels, classPrefix)\r\n\r\n      // sets placement\r\n      var text = cell.select(\"text\"),\r\n        shapeSize = shapes[0].map( function(d){ return d.getBBox(); });\r\n\r\n      //sets scale\r\n      //everything is fill except for line which is stroke,\r\n      if (!useClass){\r\n        if (shape == \"line\"){\r\n          shapes.style(\"stroke\", type.feature);\r\n        } else {\r\n          shapes.style(\"fill\", type.feature);\r\n        }\r\n      } else {\r\n        shapes.attr(\"class\", function(d){ return classPrefix + \"swatch \" + type.feature(d); });\r\n      }\r\n\r\n      var cellTrans,\r\n      textTrans,\r\n      textAlign = (labelAlign == \"start\") ? 0 : (labelAlign == \"middle\") ? 0.5 : 1;\r\n\r\n      //positions cells and text\r\n      if (orient === \"vertical\"){\r\n        cellTrans = function(d,i) { return \"translate(0, \" + (i * (shapeSize[i].height + shapePadding)) + \")\"; };\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width + shapeSize[i].x +\r\n          labelOffset) + \",\" + (shapeSize[i].y + shapeSize[i].height/2 + 5) + \")\"; };\r\n\r\n      } else if (orient === \"horizontal\"){\r\n        cellTrans = function(d,i) { return \"translate(\" + (i * (shapeSize[i].width + shapePadding)) + \",0)\"; }\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width*textAlign  + shapeSize[i].x) +\r\n          \",\" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\"; };\r\n      }\r\n\r\n      helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\r\n      helper.d3_title(svg, legendG, title, classPrefix);\r\n\r\n      cell.transition().style(\"opacity\", 1);\r\n\r\n    }\r\n\r\n\r\n\r\n  legend.scale = function(_) {\r\n    if (!arguments.length) return scale;\r\n    scale = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.cells = function(_) {\r\n    if (!arguments.length) return cells;\r\n    if (_.length > 1 || _ >= 2 ){\r\n      cells = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shape = function(_, d) {\r\n    if (!arguments.length) return shape;\r\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || (_ == \"path\" && (typeof d === 'string')) ){\r\n      shape = _;\r\n      path = d;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeWidth = function(_) {\r\n    if (!arguments.length) return shapeWidth;\r\n    shapeWidth = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeHeight = function(_) {\r\n    if (!arguments.length) return shapeHeight;\r\n    shapeHeight = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeRadius = function(_) {\r\n    if (!arguments.length) return shapeRadius;\r\n    shapeRadius = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapePadding = function(_) {\r\n    if (!arguments.length) return shapePadding;\r\n    shapePadding = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labels = function(_) {\r\n    if (!arguments.length) return labels;\r\n    labels = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelAlign = function(_) {\r\n    if (!arguments.length) return labelAlign;\r\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\r\n      labelAlign = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.labelFormat = function(_) {\r\n    if (!arguments.length) return labelFormat;\r\n    labelFormat = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelOffset = function(_) {\r\n    if (!arguments.length) return labelOffset;\r\n    labelOffset = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelDelimiter = function(_) {\r\n    if (!arguments.length) return labelDelimiter;\r\n    labelDelimiter = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.useClass = function(_) {\r\n    if (!arguments.length) return useClass;\r\n    if (_ === true || _ === false){\r\n      useClass = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.orient = function(_){\r\n    if (!arguments.length) return orient;\r\n    _ = _.toLowerCase();\r\n    if (_ == \"horizontal\" || _ == \"vertical\") {\r\n      orient = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.ascending = function(_) {\r\n    if (!arguments.length) return ascending;\r\n    ascending = !!_;\r\n    return legend;\r\n  };\r\n\r\n  legend.classPrefix = function(_) {\r\n    if (!arguments.length) return classPrefix;\r\n    classPrefix = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.title = function(_) {\r\n    if (!arguments.length) return title;\r\n    title = _;\r\n    return legend;\r\n  };\r\n\r\n  d3.rebind(legend, legendDispatcher, \"on\");\r\n\r\n  return legend;\r\n\r\n};\r\n","module.exports = {\r\n\r\n  d3_identity: function (d) {\r\n    return d;\r\n  },\r\n\r\n  d3_mergeLabels: function (gen, labels) {\r\n\r\n      if(labels.length === 0) return gen;\r\n\r\n      gen = (gen) ? gen : [];\r\n\r\n      var i = labels.length;\r\n      for (; i < gen.length; i++) {\r\n        labels.push(gen[i]);\r\n      }\r\n      return labels;\r\n    },\r\n\r\n  d3_linearLegend: function (scale, cells, labelFormat) {\r\n    var data = [];\r\n\r\n    if (cells.length > 1){\r\n      data = cells;\r\n\r\n    } else {\r\n      var domain = scale.domain(),\r\n      increment = (domain[domain.length - 1] - domain[0])/(cells - 1),\r\n      i = 0;\r\n\r\n      for (; i < cells; i++){\r\n        data.push(domain[0] + i*increment);\r\n      }\r\n    }\r\n\r\n    var labels = data.map(labelFormat);\r\n\r\n    return {data: data,\r\n            labels: labels,\r\n            feature: function(d){ return scale(d); }};\r\n  },\r\n\r\n  d3_quantLegend: function (scale, labelFormat, labelDelimiter) {\r\n    var labels = scale.range().map(function(d){\r\n      var invert = scale.invertExtent(d),\r\n      a = labelFormat(invert[0]),\r\n      b = labelFormat(invert[1]);\r\n\r\n      // if (( (a) && (a.isNan()) && b){\r\n      //   console.log(\"in initial statement\")\r\n        return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\r\n      // } else if (a || b) {\r\n      //   console.log('in else statement')\r\n      //   return (a) ? a : b;\r\n      // }\r\n\r\n    });\r\n\r\n    return {data: scale.range(),\r\n            labels: labels,\r\n            feature: this.d3_identity\r\n          };\r\n  },\r\n\r\n  d3_ordinalLegend: function (scale) {\r\n    return {data: scale.domain(),\r\n            labels: scale.domain(),\r\n            feature: function(d){ return scale(d); }};\r\n  },\r\n\r\n  d3_drawShapes: function (shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\r\n    if (shape === \"rect\"){\r\n        shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\r\n\r\n    } else if (shape === \"circle\") {\r\n        shapes.attr(\"r\", shapeRadius)//.attr(\"cx\", shapeRadius).attr(\"cy\", shapeRadius);\r\n\r\n    } else if (shape === \"line\") {\r\n        shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\r\n\r\n    } else if (shape === \"path\") {\r\n      shapes.attr(\"d\", path);\r\n    }\r\n  },\r\n\r\n  d3_addText: function (svg, enter, labels, classPrefix){\r\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\r\n    svg.selectAll(\"g.\" + classPrefix + \"cell text\").data(labels).text(this.d3_identity);\r\n  },\r\n\r\n  d3_calcType: function (scale, ascending, cells, labels, labelFormat, labelDelimiter){\r\n    var type = scale.ticks ?\r\n            this.d3_linearLegend(scale, cells, labelFormat) : scale.invertExtent ?\r\n            this.d3_quantLegend(scale, labelFormat, labelDelimiter) : this.d3_ordinalLegend(scale);\r\n\r\n    type.labels = this.d3_mergeLabels(type.labels, labels);\r\n\r\n    if (ascending) {\r\n      type.labels = this.d3_reverse(type.labels);\r\n      type.data = this.d3_reverse(type.data);\r\n    }\r\n\r\n    return type;\r\n  },\r\n\r\n  d3_reverse: function(arr) {\r\n    var mirror = [];\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      mirror[i] = arr[l-i-1];\r\n    }\r\n    return mirror;\r\n  },\r\n\r\n  d3_placement: function (orient, cell, cellTrans, text, textTrans, labelAlign) {\r\n    cell.attr(\"transform\", cellTrans);\r\n    text.attr(\"transform\", textTrans);\r\n    if (orient === \"horizontal\"){\r\n      text.style(\"text-anchor\", labelAlign);\r\n    }\r\n  },\r\n\r\n  d3_addEvents: function(cells, dispatcher){\r\n    var _ = this;\r\n\r\n      cells.on(\"mouseover.legend\", function (d) { _.d3_cellOver(dispatcher, d, this); })\r\n          .on(\"mouseout.legend\", function (d) { _.d3_cellOut(dispatcher, d, this); })\r\n          .on(\"click.legend\", function (d) { _.d3_cellClick(dispatcher, d, this); });\r\n  },\r\n\r\n  d3_cellOver: function(cellDispatcher, d, obj){\r\n    cellDispatcher.cellover.call(obj, d);\r\n  },\r\n\r\n  d3_cellOut: function(cellDispatcher, d, obj){\r\n    cellDispatcher.cellout.call(obj, d);\r\n  },\r\n\r\n  d3_cellClick: function(cellDispatcher, d, obj){\r\n    cellDispatcher.cellclick.call(obj, d);\r\n  },\r\n\r\n  d3_title: function(svg, cellsSvg, title, classPrefix){\r\n    if (title !== \"\"){\r\n\r\n      var titleText = svg.selectAll('text.' + classPrefix + 'legendTitle');\r\n\r\n      titleText.data([title])\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', classPrefix + 'legendTitle');\r\n\r\n        svg.selectAll('text.' + classPrefix + 'legendTitle')\r\n            .text(title)\r\n\r\n      var yOffset = svg.select('.' + classPrefix + 'legendTitle')\r\n          .map(function(d) { return d[0].getBBox().height})[0],\r\n      xOffset = -cellsSvg.map(function(d) { return d[0].getBBox().x})[0];\r\n\r\n      cellsSvg.attr('transform', 'translate(' + xOffset + ',' + (yOffset + 10) + ')');\r\n\r\n    }\r\n  }\r\n}\r\n","var helper = require('./legend');\r\n\r\nmodule.exports =  function(){\r\n\r\n  var scale = d3.scale.linear(),\r\n    shape = \"rect\",\r\n    shapeWidth = 15,\r\n    shapePadding = 2,\r\n    cells = [5],\r\n    labels = [],\r\n    useStroke = false,\r\n    classPrefix = \"\",\r\n    title = \"\",\r\n    labelFormat = d3.format(\".01f\"),\r\n    labelOffset = 10,\r\n    labelAlign = \"middle\",\r\n    labelDelimiter = \"to\",\r\n    orient = \"vertical\",\r\n    ascending = false,\r\n    path,\r\n    legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\r\n\r\n    function legend(svg){\r\n\r\n      var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\r\n        legendG = svg.selectAll('g').data([scale]);\r\n\r\n      legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\r\n\r\n\r\n      var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\r\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\r\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\r\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\r\n\r\n      //add event handlers\r\n      helper.d3_addEvents(cellEnter, legendDispatcher);\r\n\r\n      cell.exit().transition().style(\"opacity\", 0).remove();\r\n\r\n      //creates shape\r\n      if (shape === \"line\"){\r\n        helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\r\n        shapes.attr(\"stroke-width\", type.feature);\r\n      } else {\r\n        helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\r\n      }\r\n\r\n      helper.d3_addText(legendG, cellEnter, type.labels, classPrefix)\r\n\r\n      //sets placement\r\n      var text = cell.select(\"text\"),\r\n        shapeSize = shapes[0].map(\r\n          function(d, i){\r\n            var bbox = d.getBBox()\r\n            var stroke = scale(type.data[i]);\r\n\r\n            if (shape === \"line\" && orient === \"horizontal\") {\r\n              bbox.height = bbox.height + stroke;\r\n            } else if (shape === \"line\" && orient === \"vertical\"){\r\n              bbox.width = bbox.width;\r\n            }\r\n\r\n            return bbox;\r\n        });\r\n\r\n      var maxH = d3.max(shapeSize, function(d){ return d.height + d.y; }),\r\n      maxW = d3.max(shapeSize, function(d){ return d.width + d.x; });\r\n\r\n      var cellTrans,\r\n      textTrans,\r\n      textAlign = (labelAlign == \"start\") ? 0 : (labelAlign == \"middle\") ? 0.5 : 1;\r\n\r\n      //positions cells and text\r\n      if (orient === \"vertical\"){\r\n\r\n        cellTrans = function(d,i) {\r\n            var height = d3.sum(shapeSize.slice(0, i + 1 ), function(d){ return d.height; });\r\n            return \"translate(0, \" + (height + i*shapePadding) + \")\"; };\r\n\r\n        textTrans = function(d,i) { return \"translate(\" + (maxW + labelOffset) + \",\" +\r\n          (shapeSize[i].y + shapeSize[i].height/2 + 5) + \")\"; };\r\n\r\n      } else if (orient === \"horizontal\"){\r\n        cellTrans = function(d,i) {\r\n            var width = d3.sum(shapeSize.slice(0, i + 1 ), function(d){ return d.width; });\r\n            return \"translate(\" + (width + i*shapePadding) + \",0)\"; };\r\n\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width*textAlign  + shapeSize[i].x) + \",\" +\r\n              (maxH + labelOffset ) + \")\"; };\r\n      }\r\n\r\n      helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\r\n      helper.d3_title(svg, legendG, title, classPrefix);\r\n\r\n      cell.transition().style(\"opacity\", 1);\r\n\r\n    }\r\n\r\n  legend.scale = function(_) {\r\n    if (!arguments.length) return scale;\r\n    scale = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.cells = function(_) {\r\n    if (!arguments.length) return cells;\r\n    if (_.length > 1 || _ >= 2 ){\r\n      cells = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n\r\n  legend.shape = function(_, d) {\r\n    if (!arguments.length) return shape;\r\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" ){\r\n      shape = _;\r\n      path = d;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shapeWidth = function(_) {\r\n    if (!arguments.length) return shapeWidth;\r\n    shapeWidth = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.shapePadding = function(_) {\r\n    if (!arguments.length) return shapePadding;\r\n    shapePadding = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labels = function(_) {\r\n    if (!arguments.length) return labels;\r\n    labels = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelAlign = function(_) {\r\n    if (!arguments.length) return labelAlign;\r\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\r\n      labelAlign = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.labelFormat = function(_) {\r\n    if (!arguments.length) return labelFormat;\r\n    labelFormat = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelOffset = function(_) {\r\n    if (!arguments.length) return labelOffset;\r\n    labelOffset = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelDelimiter = function(_) {\r\n    if (!arguments.length) return labelDelimiter;\r\n    labelDelimiter = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.orient = function(_){\r\n    if (!arguments.length) return orient;\r\n    _ = _.toLowerCase();\r\n    if (_ == \"horizontal\" || _ == \"vertical\") {\r\n      orient = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.ascending = function(_) {\r\n    if (!arguments.length) return ascending;\r\n    ascending = !!_;\r\n    return legend;\r\n  };\r\n\r\n  legend.classPrefix = function(_) {\r\n    if (!arguments.length) return classPrefix;\r\n    classPrefix = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.title = function(_) {\r\n    if (!arguments.length) return title;\r\n    title = _;\r\n    return legend;\r\n  };\r\n\r\n  d3.rebind(legend, legendDispatcher, \"on\");\r\n\r\n  return legend;\r\n\r\n};\r\n","var helper = require('./legend');\r\n\r\nmodule.exports = function(){\r\n\r\n  var scale = d3.scale.linear(),\r\n    shape = \"path\",\r\n    shapeWidth = 15,\r\n    shapeHeight = 15,\r\n    shapeRadius = 10,\r\n    shapePadding = 5,\r\n    cells = [5],\r\n    labels = [],\r\n    classPrefix = \"\",\r\n    useClass = false,\r\n    title = \"\",\r\n    labelFormat = d3.format(\".01f\"),\r\n    labelAlign = \"middle\",\r\n    labelOffset = 10,\r\n    labelDelimiter = \"to\",\r\n    orient = \"vertical\",\r\n    ascending = false,\r\n    legendDispatcher = d3.dispatch(\"cellover\", \"cellout\", \"cellclick\");\r\n\r\n    function legend(svg){\r\n\r\n      var type = helper.d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter),\r\n        legendG = svg.selectAll('g').data([scale]);\r\n\r\n      legendG.enter().append('g').attr('class', classPrefix + 'legendCells');\r\n\r\n      var cell = legendG.selectAll(\".\" + classPrefix + \"cell\").data(type.data),\r\n        cellEnter = cell.enter().append(\"g\", \".cell\").attr(\"class\", classPrefix + \"cell\").style(\"opacity\", 1e-6),\r\n        shapeEnter = cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\"),\r\n        shapes = cell.select(\"g.\" + classPrefix + \"cell \" + shape);\r\n\r\n      //add event handlers\r\n      helper.d3_addEvents(cellEnter, legendDispatcher);\r\n\r\n      //remove old shapes\r\n      cell.exit().transition().style(\"opacity\", 0).remove();\r\n\r\n      helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\r\n      helper.d3_addText(legendG, cellEnter, type.labels, classPrefix)\r\n\r\n      // sets placement\r\n      var text = cell.select(\"text\"),\r\n        shapeSize = shapes[0].map( function(d){ return d.getBBox(); });\r\n\r\n      var maxH = d3.max(shapeSize, function(d){ return d.height; }),\r\n      maxW = d3.max(shapeSize, function(d){ return d.width; });\r\n\r\n      var cellTrans,\r\n      textTrans,\r\n      textAlign = (labelAlign == \"start\") ? 0 : (labelAlign == \"middle\") ? 0.5 : 1;\r\n\r\n      //positions cells and text\r\n      if (orient === \"vertical\"){\r\n        cellTrans = function(d,i) { return \"translate(0, \" + (i * (maxH + shapePadding)) + \")\"; };\r\n        textTrans = function(d,i) { return \"translate(\" + (maxW + labelOffset) + \",\" +\r\n              (shapeSize[i].y + shapeSize[i].height/2 + 5) + \")\"; };\r\n\r\n      } else if (orient === \"horizontal\"){\r\n        cellTrans = function(d,i) { return \"translate(\" + (i * (maxW + shapePadding)) + \",0)\"; };\r\n        textTrans = function(d,i) { return \"translate(\" + (shapeSize[i].width*textAlign  + shapeSize[i].x) + \",\" +\r\n              (maxH + labelOffset ) + \")\"; };\r\n      }\r\n\r\n      helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\r\n      helper.d3_title(svg, legendG, title, classPrefix);\r\n      cell.transition().style(\"opacity\", 1);\r\n\r\n    }\r\n\r\n\r\n  legend.scale = function(_) {\r\n    if (!arguments.length) return scale;\r\n    scale = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.cells = function(_) {\r\n    if (!arguments.length) return cells;\r\n    if (_.length > 1 || _ >= 2 ){\r\n      cells = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.shapePadding = function(_) {\r\n    if (!arguments.length) return shapePadding;\r\n    shapePadding = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labels = function(_) {\r\n    if (!arguments.length) return labels;\r\n    labels = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelAlign = function(_) {\r\n    if (!arguments.length) return labelAlign;\r\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\r\n      labelAlign = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.labelFormat = function(_) {\r\n    if (!arguments.length) return labelFormat;\r\n    labelFormat = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelOffset = function(_) {\r\n    if (!arguments.length) return labelOffset;\r\n    labelOffset = +_;\r\n    return legend;\r\n  };\r\n\r\n  legend.labelDelimiter = function(_) {\r\n    if (!arguments.length) return labelDelimiter;\r\n    labelDelimiter = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.orient = function(_){\r\n    if (!arguments.length) return orient;\r\n    _ = _.toLowerCase();\r\n    if (_ == \"horizontal\" || _ == \"vertical\") {\r\n      orient = _;\r\n    }\r\n    return legend;\r\n  };\r\n\r\n  legend.ascending = function(_) {\r\n    if (!arguments.length) return ascending;\r\n    ascending = !!_;\r\n    return legend;\r\n  };\r\n\r\n  legend.classPrefix = function(_) {\r\n    if (!arguments.length) return classPrefix;\r\n    classPrefix = _;\r\n    return legend;\r\n  };\r\n\r\n  legend.title = function(_) {\r\n    if (!arguments.length) return title;\r\n    title = _;\r\n    return legend;\r\n  };\r\n\r\n  d3.rebind(legend, legendDispatcher, \"on\");\r\n\r\n  return legend;\r\n\r\n};\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\r\n *\r\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\r\n * normal distribution with standard deviation sd is within x of the mean.\r\n *\r\n * This function returns a numerical approximation to the exact value.\r\n *\r\n * @param {number} x input\r\n * @return {number} error estimation\r\n * @example\r\n * errorFunction(1); //= 0.8427\r\n */\r\nfunction errorFunction(x/*: number */)/*: number */ {\r\n    var t = 1 / (1 + 0.5 * Math.abs(x));\r\n    var tau = t * Math.exp(-Math.pow(x, 2) -\r\n        1.26551223 +\r\n        1.00002368 * t +\r\n        0.37409196 * Math.pow(t, 2) +\r\n        0.09678418 * Math.pow(t, 3) -\r\n        0.18628806 * Math.pow(t, 4) +\r\n        0.27886807 * Math.pow(t, 5) -\r\n        1.13520398 * Math.pow(t, 6) +\r\n        1.48851587 * Math.pow(t, 7) -\r\n        0.82215223 * Math.pow(t, 8) +\r\n        0.17087277 * Math.pow(t, 9));\r\n    if (x >= 0) {\r\n        return 1 - tau;\r\n    } else {\r\n        return tau - 1;\r\n    }\r\n}\r\n\r\nmodule.exports = errorFunction;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\r\n * is a simple way to find a fitted line\r\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\r\n * using the least sum of squares.\r\n *\r\n * @param {Array<Array<number>>} data an array of two-element of arrays,\r\n * like `[[0, 1], [2, 3]]`\r\n * @returns {Object} object containing slope and intersect of regression line\r\n * @example\r\n * linearRegression([[0, 0], [1, 1]]); // { m: 1, b: 0 }\r\n */\r\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\r\n\r\n    var m, b;\r\n\r\n    // Store data length in a local variable to reduce\r\n    // repeated object property lookups\r\n    var dataLength = data.length;\r\n\r\n    //if there's only one point, arbitrarily choose a slope of 0\r\n    //and a y-intercept of whatever the y of the initial point is\r\n    if (dataLength === 1) {\r\n        m = 0;\r\n        b = data[0][1];\r\n    } else {\r\n        // Initialize our sums and scope the `m` and `b`\r\n        // variables that define the line.\r\n        var sumX = 0, sumY = 0,\r\n            sumXX = 0, sumXY = 0;\r\n\r\n        // Use local variables to grab point values\r\n        // with minimal object property lookups\r\n        var point, x, y;\r\n\r\n        // Gather the sum of all x values, the sum of all\r\n        // y values, and the sum of x^2 and (x*y) for each\r\n        // value.\r\n        //\r\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\r\n        for (var i = 0; i < dataLength; i++) {\r\n            point = data[i];\r\n            x = point[0];\r\n            y = point[1];\r\n\r\n            sumX += x;\r\n            sumY += y;\r\n\r\n            sumXX += x * x;\r\n            sumXY += x * y;\r\n        }\r\n\r\n        // `m` is the slope of the regression line\r\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\r\n            ((dataLength * sumXX) - (sumX * sumX));\r\n\r\n        // `b` is the y-intercept of the line.\r\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\r\n    }\r\n\r\n    // Return both values as an object.\r\n    return {\r\n        m: m,\r\n        b: b\r\n    };\r\n}\r\n\r\n\r\nmodule.exports = linearRegression;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Given the output of `linearRegression`: an object\r\n * with `m` and `b` values indicating slope and intercept,\r\n * respectively, generate a line function that translates\r\n * x values into y values.\r\n *\r\n * @param {Object} mb object with `m` and `b` members, representing\r\n * slope and intersect of desired line\r\n * @returns {Function} method that computes y-value at any given\r\n * x-value on the line.\r\n * @example\r\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\r\n * l(0) //= 0\r\n * l(2) //= 2\r\n */\r\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\r\n    // Return a function that computes a `y` value for each\r\n    // x value it is given, based on the values of `b` and `a`\r\n    // that we just computed.\r\n    return function(x) {\r\n        return mb.b + (mb.m * x);\r\n    };\r\n}\r\n\r\nmodule.exports = linearRegressionLine;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sum = require('./sum');\r\n\r\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\r\nfunction mean(x /*: Array<number> */)/*:number*/ {\r\n    // The mean of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    return sum(x) / x.length;\r\n}\r\n\r\nmodule.exports = mean;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar quantileSorted = require('./quantile_sorted');\r\nvar quickselect = require('./quickselect');\r\n\r\n/**\r\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\r\n * this is a population quantile, since we assume to know the entire\r\n * dataset in this library. This is an implementation of the\r\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\r\n * algorithm from wikipedia.\r\n *\r\n * Sample is a one-dimensional array of numbers,\r\n * and p is either a decimal number from 0 to 1 or an array of decimal\r\n * numbers from 0 to 1.\r\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\r\n * with decimal values.\r\n * When p is an array, the result of the function is also an array containing the appropriate\r\n * quantiles in input order\r\n *\r\n * @param {Array<number>} sample a sample from the population\r\n * @param {number} p the desired quantile, as a number between 0 and 1\r\n * @returns {number} quantile\r\n * @example\r\n * var data = [3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20];\r\n * quantile(data, 1); //= max(data);\r\n * quantile(data, 0); //= min(data);\r\n * quantile(data, 0.5); //= 9\r\n */\r\nfunction quantile(sample /*: Array<number> */, p /*: Array<number> | number */) {\r\n    var copy = sample.slice();\r\n\r\n    if (Array.isArray(p)) {\r\n        // rearrange elements so that each element corresponding to a requested\r\n        // quantile is on a place it would be if the array was fully sorted\r\n        multiQuantileSelect(copy, p);\r\n        // Initialize the result array\r\n        var results = [];\r\n        // For each requested quantile\r\n        for (var i = 0; i < p.length; i++) {\r\n            results[i] = quantileSorted(copy, p[i]);\r\n        }\r\n        return results;\r\n    } else {\r\n        var idx = quantileIndex(copy.length, p);\r\n        quantileSelect(copy, idx, 0, copy.length - 1);\r\n        return quantileSorted(copy, p);\r\n    }\r\n}\r\n\r\nfunction quantileSelect(arr, k, left, right) {\r\n    if (k % 1 === 0) {\r\n        quickselect(arr, k, left, right);\r\n    } else {\r\n        k = Math.floor(k);\r\n        quickselect(arr, k, left, right);\r\n        quickselect(arr, k + 1, k + 1, right);\r\n    }\r\n}\r\n\r\nfunction multiQuantileSelect(arr, p) {\r\n    var indices = [0];\r\n    for (var i = 0; i < p.length; i++) {\r\n        indices.push(quantileIndex(arr.length, p[i]));\r\n    }\r\n    indices.push(arr.length - 1);\r\n    indices.sort(compare);\r\n\r\n    var stack = [0, indices.length - 1];\r\n\r\n    while (stack.length) {\r\n        var r = Math.ceil(stack.pop());\r\n        var l = Math.floor(stack.pop());\r\n        if (r - l <= 1) continue;\r\n\r\n        var m = Math.floor((l + r) / 2);\r\n        quantileSelect(arr, indices[m], indices[l], indices[r]);\r\n\r\n        stack.push(l, m, m, r);\r\n    }\r\n}\r\n\r\nfunction compare(a, b) {\r\n    return a - b;\r\n}\r\n\r\nfunction quantileIndex(len /*: number */, p /*: number */)/*:number*/ {\r\n    var idx = len * p;\r\n    if (p === 1) {\r\n        // If p is 1, directly return the last index\r\n        return len - 1;\r\n    } else if (p === 0) {\r\n        // If p is 0, directly return the first index\r\n        return 0;\r\n    } else if (idx % 1 !== 0) {\r\n        // If index is not integer, return the next index in array\r\n        return Math.ceil(idx) - 1;\r\n    } else if (len % 2 === 0) {\r\n        // If the list has even-length, we'll return the middle of two indices\r\n        // around quantile to indicate that we need an average value of the two\r\n        return idx - 0.5;\r\n    } else {\r\n        // Finally, in the simple case of an integer index\r\n        // with an odd-length list, return the index\r\n        return idx;\r\n    }\r\n}\r\n\r\nmodule.exports = quantile;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * This is the internal implementation of quantiles: when you know\r\n * that the order is sorted, you don't need to re-sort it, and the computations\r\n * are faster.\r\n *\r\n * @param {Array<number>} sample input data\r\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\r\n * @returns {number} quantile value\r\n * @example\r\n * var data = [3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20];\r\n * quantileSorted(data, 1); //= max(data);\r\n * quantileSorted(data, 0); //= min(data);\r\n * quantileSorted(data, 0.5); //= 9\r\n */\r\nfunction quantileSorted(sample /*: Array<number> */, p /*: number */)/*:number*/ {\r\n    var idx = sample.length * p;\r\n    if (p < 0 || p > 1) {\r\n        return NaN;\r\n    } else if (p === 1) {\r\n        // If p is 1, directly return the last element\r\n        return sample[sample.length - 1];\r\n    } else if (p === 0) {\r\n        // If p is 0, directly return the first element\r\n        return sample[0];\r\n    } else if (idx % 1 !== 0) {\r\n        // If p is not integer, return the next element in array\r\n        return sample[Math.ceil(idx) - 1];\r\n    } else if (sample.length % 2 === 0) {\r\n        // If the list has even-length, we'll take the average of this number\r\n        // and the next value, if there is one\r\n        return (sample[idx - 1] + sample[idx]) / 2;\r\n    } else {\r\n        // Finally, in the simple case of an integer value\r\n        // with an odd-length list, return the sample value at the index.\r\n        return sample[idx];\r\n    }\r\n}\r\n\r\nmodule.exports = quantileSorted;\r\n","'use strict';\r\n/* @flow */\r\n\r\nmodule.exports = quickselect;\r\n\r\n/**\r\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\r\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\r\n *\r\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\r\n *\r\n * @private\r\n * @param {Array<number>} arr input array\r\n * @param {number} k pivot index\r\n * @param {number} left left index\r\n * @param {number} right right index\r\n * @returns {undefined}\r\n * @example\r\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\r\n * quickselect(arr, 8);\r\n * // [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\r\n */\r\nfunction quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {\r\n    left = left || 0;\r\n    right = right || (arr.length - 1);\r\n\r\n    while (right > left) {\r\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\r\n        if (right - left > 600) {\r\n            var n = right - left + 1;\r\n            var m = k - left + 1;\r\n            var z = Math.log(n);\r\n            var s = 0.5 * Math.exp(2 * z / 3);\r\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);\r\n            if (m - n / 2 < 0) sd *= -1;\r\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\r\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\r\n            quickselect(arr, k, newLeft, newRight);\r\n        }\r\n\r\n        var t = arr[k];\r\n        var i = left;\r\n        var j = right;\r\n\r\n        swap(arr, left, k);\r\n        if (arr[right] > t) swap(arr, left, right);\r\n\r\n        while (i < j) {\r\n            swap(arr, i, j);\r\n            i++;\r\n            j--;\r\n            while (arr[i] < t) i++;\r\n            while (arr[j] > t) j--;\r\n        }\r\n\r\n        if (arr[left] === t) swap(arr, left, j);\r\n        else {\r\n            j++;\r\n            swap(arr, j, right);\r\n        }\r\n\r\n        if (j <= k) left = j + 1;\r\n        if (k <= j) right = j - 1;\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    var tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleCovariance = require('./sample_covariance');\r\nvar sampleStandardDeviation = require('./sample_standard_deviation');\r\n\r\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\r\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\r\n    var cov = sampleCovariance(x, y),\r\n        xstd = sampleStandardDeviation(x),\r\n        ystd = sampleStandardDeviation(y);\r\n\r\n    return cov / xstd / ystd;\r\n}\r\n\r\nmodule.exports = sampleCorrelation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\r\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\r\n\r\n    // The two datasets must have the same length which must be more than 1\r\n    if (x.length <= 1 || x.length !== y.length) {\r\n        return NaN;\r\n    }\r\n\r\n    // determine the mean of each dataset so that we can judge each\r\n    // value of the dataset fairly as the difference from the mean. this\r\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\r\n    // does not suffer because of the difference in absolute values\r\n    var xmean = mean(x),\r\n        ymean = mean(y),\r\n        sum = 0;\r\n\r\n    // for each pair of values, the covariance increases when their\r\n    // difference from the mean is associated - if both are well above\r\n    // or if both are well below\r\n    // the mean, the covariance increases significantly.\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += (x[i] - xmean) * (y[i] - ymean);\r\n    }\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // the covariance is weighted by the length of the datasets.\r\n    return sum / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleCovariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleVariance = require('./sample_variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\r\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var sampleVarianceX = sampleVariance(x);\r\n    if (isNaN(sampleVarianceX)) { return NaN; }\r\n    return Math.sqrt(sampleVarianceX);\r\n}\r\n\r\nmodule.exports = sampleStandardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\r\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length <= 1) { return NaN; }\r\n\r\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // Find the mean value of that list\r\n    return sumSquaredDeviationsValue / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleVariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar variance = require('./variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance. It's useful for measuring the amount\r\n * of variation or dispersion in a set of values.\r\n *\r\n * Standard deviation is only appropriate for full-population knowledge: for\r\n * samples of a population, {@link sampleStandardDeviation} is\r\n * more appropriate.\r\n *\r\n * @param {Array<number>} x input\r\n * @returns {number} standard deviation\r\n * @example\r\n * var scores = [2, 4, 4, 4, 5, 5, 7, 9];\r\n * variance(scores); //= 4\r\n * standardDeviation(scores); //= 2\r\n */\r\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var v = variance(x);\r\n    if (isNaN(v)) { return 0; }\r\n    return Math.sqrt(v);\r\n}\r\n\r\nmodule.exports = standardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\r\nfunction sum(x/*: Array<number> */)/*: number */ {\r\n\r\n    // like the traditional sum algorithm, we keep a running\r\n    // count of the current sum.\r\n    var sum = 0;\r\n\r\n    // but we also keep three extra variables as bookkeeping:\r\n    // most importantly, an error correction value. This will be a very\r\n    // small number that is the opposite of the floating point precision loss.\r\n    var errorCompensation = 0;\r\n\r\n    // this will be each number in the list corrected with the compensation value.\r\n    var correctedCurrentValue;\r\n\r\n    // and this will be the next sum\r\n    var nextSum;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        // first correct the value that we're going to add to the sum\r\n        correctedCurrentValue = x[i] - errorCompensation;\r\n\r\n        // compute the next sum. sum is likely a much larger number\r\n        // than correctedCurrentValue, so we'll lose precision here,\r\n        // and measure how much precision is lost in the next step\r\n        nextSum = sum + correctedCurrentValue;\r\n\r\n        // we intentionally didn't assign sum immediately, but stored\r\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\r\n        // not equal to 0? ideally it would be, but in practice it won't:\r\n        // it will be some very small number. that's what we record\r\n        // as errorCompensation.\r\n        errorCompensation = nextSum - sum - correctedCurrentValue;\r\n\r\n        // now that we've computed how much we'll correct for in the next\r\n        // loop, start treating the nextSum as the current sum.\r\n        sum = nextSum;\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sum;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\r\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\r\n    var meanValue = mean(x),\r\n        sum = 0;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += Math.pow(x[i] - meanValue, n);\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sumNthPowerDeviations;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/**\r\n * The [variance](http://en.wikipedia.org/wiki/Variance)\r\n * is the sum of squared deviations from the mean.\r\n *\r\n * This is an implementation of variance, not sample variance:\r\n * see the `sampleVariance` method if you want a sample measure.\r\n *\r\n * @param {Array<number>} x a population\r\n * @returns {number} variance: a value greater than or equal to zero.\r\n * zero indicates that all values are identical.\r\n * @example\r\n * ss.variance([1, 2, 3, 4, 5, 6]); //= 2.917\r\n */\r\nfunction variance(x/*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    // Find the mean of squared deviations between the\r\n    // mean value and each value.\r\n    return sumNthPowerDeviations(x, 2) / x.length;\r\n}\r\n\r\nmodule.exports = variance;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\r\n *\r\n * The standard score is the number of standard deviations an observation\r\n * or datum is above or below the mean. Thus, a positive standard score\r\n * represents a datum above the mean, while a negative standard score\r\n * represents a datum below the mean. It is a dimensionless quantity\r\n * obtained by subtracting the population mean from an individual raw\r\n * score and then dividing the difference by the population standard\r\n * deviation.\r\n *\r\n * The z-score is only defined if one knows the population parameters;\r\n * if one only has a sample set, then the analogous computation with\r\n * sample mean and sample standard deviation yields the\r\n * Student's t-statistic.\r\n *\r\n * @param {number} x\r\n * @param {number} mean\r\n * @param {number} standardDeviation\r\n * @return {number} z score\r\n * @example\r\n * ss.zScore(78, 80, 5); //= -0.4\r\n */\r\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\r\n    return (x - mean) / standardDeviation;\r\n}\r\n\r\nmodule.exports = zScore;\r\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from \"./legend\";\r\n\r\nexport class BarChartConfig extends ChartWithColorGroupsConfig {\r\n\r\n    svgClass = this.cssClassPrefix + 'bar-chart';\r\n    showLegend = true;\r\n    showTooltip = true;\r\n    x = {// X axis config\r\n        label: '', // axis label\r\n        key: 0,\r\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\r\n        scale: \"ordinal\",\r\n        ticks: undefined,\r\n    };\r\n    y = {// Y axis config\r\n        key: 1,\r\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\r\n        label: '', // axis label,\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    transition = true;\r\n\r\n    constructor(custom) {\r\n        super();\r\n        var config = this;\r\n\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class BarChart extends ChartWithColorGroups {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new BarChartConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new BarChartConfig(config));\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n        var self = this;\r\n\r\n        var conf = this.config;\r\n\r\n        this.plot.x = {};\r\n        this.plot.y = {};\r\n\r\n        this.computePlotSize();\r\n        this.setupY();\r\n        this.setupX();\r\n        this.setupGroupStacks();\r\n        this.setupYDomain();\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale.ordinal().rangeRoundBands([0, plot.width], .08);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n\r\n        var data = this.plot.data;\r\n        var domain;\r\n        if (!data || !data.length) {\r\n            domain = [];\r\n        } else if (!this.config.series) {\r\n            domain = d3.map(data, x.value).keys();\r\n        } else {\r\n            domain = d3.map(data[0].values, x.value).keys();\r\n        }\r\n\r\n        plot.x.scale.domain(domain);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = d => y.scale(y.value(d));\r\n\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n        if (conf.ticks) {\r\n            y.axis.ticks(conf.ticks);\r\n        }\r\n    };\r\n\r\n    setupYDomain() {\r\n        var plot = this.plot;\r\n        var data = this.plot.data;\r\n        var domain;\r\n        var yStackMax = d3.max(plot.layers, layer => d3.max(layer.points, d => d.y0 + d.y));\r\n\r\n\r\n        // var min = d3.min(data, s=>d3.min(s.values, plot.y.value));\r\n        var max = yStackMax;\r\n        domain = [0, max];\r\n\r\n        plot.y.scale.domain(domain);\r\n        console.log(' plot.y.scale.domain', plot.y.scale.domain());\r\n    }\r\n\r\n    setupGroupStacks() {\r\n        var self = this;\r\n        this.groupData();\r\n\r\n        this.plot.stack = d3.layout.stack().values(d=>d.points);\r\n        this.plot.groupedData.forEach(s=> {\r\n            s.points = s.values.map(v=>self.mapToPoint(v));\r\n        });\r\n        this.plot.layers = this.plot.stack(this.plot.groupedData);\r\n\r\n    }\r\n\r\n    mapToPoint(value) {\r\n        var plot = this.plot;\r\n        return {\r\n            x: plot.x.value(value),\r\n            y: parseFloat(plot.y.value(value))\r\n        }\r\n    }\r\n\r\n\r\n    drawAxisX() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\r\n\r\n        var axisT = axis;\r\n        if (self.config.transition) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.x.axis);\r\n\r\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.margin.bottom) + \")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\r\n\r\n        var axisT = axis;\r\n        if (self.config.transition) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.y.axis);\r\n\r\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n\r\n    drawBars() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n\r\n        console.log('layers', plot.layers);\r\n\r\n        var layerClass = this.prefixClass(\"layer\");\r\n\r\n        var barClass = this.prefixClass(\"bar\");\r\n        var layer = self.svgG.selectAll(\".\" + layerClass)\r\n            .data(plot.layers);\r\n\r\n        layer.enter().append(\"g\")\r\n            .attr(\"class\", layerClass);\r\n\r\n        var bar = layer.selectAll(\".\" + barClass)\r\n            .data(d => d.points);\r\n\r\n        bar.enter().append(\"g\")\r\n            .attr(\"class\", barClass)\r\n            .append(\"rect\")\r\n            .attr(\"x\", 1);\r\n\r\n\r\n        var barRect = bar.select(\"rect\");\r\n\r\n        var barRectT = barRect;\r\n        var barT = bar;\r\n        var layerT = layer;\r\n        if (this.transitionEnabled()) {\r\n            barRectT = barRect.transition();\r\n            barT = bar.transition();\r\n            layerT = layer.transition();\r\n        }\r\n\r\n        var yDomain = plot.y.scale.domain();\r\n        barT.attr(\"transform\", function (d) {\r\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 + d.y)) + \")\";\r\n        });\r\n\r\n        barRectT\r\n            .attr(\"width\", plot.x.scale.rangeBand())\r\n            .attr(\"height\", d => plot.y.scale(d.y0) - plot.y.scale(d.y0 + d.y - yDomain[0]));\r\n\r\n\r\n        if (this.plot.seriesColor) {\r\n            layerT\r\n                .attr(\"fill\", this.plot.seriesColor);\r\n        }\r\n\r\n        if (plot.tooltip) {\r\n            bar.on(\"mouseover\", d => {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                plot.tooltip.html(d.y)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            }).on(\"mouseout\", d => {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n        }\r\n        layer.exit().remove();\r\n        bar.exit().remove();\r\n    }\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.drawBars();\r\n        return this;\r\n    };\r\n\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\n\r\nexport class BoxPlotBaseConfig extends ChartConfig{\r\n\r\n    svgClass = this.cssClassPrefix + 'box-plot';\r\n    showLegend = true;\r\n    showTooltip = true;\r\n    x = {// X axis config\r\n        title: '', // axis label\r\n        value: s => s.key, // x value accessor\r\n        guides: false, //show axis guides\r\n        scale: \"ordinal\"\r\n\r\n    };\r\n    y = {// Y axis config\r\n        title: '',\r\n        value: d => d, // y value accessor\r\n        scale: \"linear\",\r\n        orient: 'left',\r\n        domainMargin: 0.1,\r\n        guides: true //show axis guides\r\n    };\r\n    Q1 = d => d.values.Q1;\r\n    Q2 = d => d.values.Q2;\r\n    Q3 = d => d.values.Q3;\r\n    Wl = d => d.values.whiskerLow;\r\n    Wh = d => d.values.whiskerHigh;\r\n    outliers= d=> d.values.outliers;\r\n    outlierValue = (d,i)=> d;\r\n    outlierLabel = (d,i)=> d;\r\n    minBoxWidth = 35;\r\n    maxBoxWidth = 100;\r\n\r\n    transition = true;\r\n    color =  undefined;// string or function returning color's value for color scale\r\n    d3ColorCategory= 'category10';\r\n\r\n    constructor(custom){\r\n        super();\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class BoxPlotBase extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new BoxPlotBaseConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new BoxPlotBaseConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        super.computePlotSize();\r\n        this.plot.x = {};\r\n        this.plot.y = {};\r\n\r\n        this.plot.data = this.getDataToPlot();\r\n        this.setupY();\r\n        this.setupX();\r\n\r\n        this.setupColor();\r\n\r\n    }\r\n\r\n    getDataToPlot() {\r\n        return this.data;\r\n    }\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        x.value = conf.value;\r\n        x.scale = d3.scale.ordinal().rangeRoundBands([0, plot.width], .08);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        if(conf.guides){\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n        var data = this.plot.data;\r\n        var domain;\r\n        if (!data || !data.length) {\r\n            domain = [];\r\n        } else {\r\n            domain = data.map(x.value);\r\n        }\r\n\r\n        plot.x.scale.domain(domain);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n        y.value = d => conf.value.call(this.config, d);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = d => y.scale(y.value(d));\r\n\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n        if (conf.ticks) {\r\n            y.axis.ticks(conf.ticks);\r\n        }\r\n        if(conf.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n        this.setupYDomain();\r\n    };\r\n\r\n    setupYDomain() {\r\n        var plot = this.plot;\r\n        var data = this.plot.data;\r\n        var c = this.config;\r\n\r\n        var values = [], yMin, yMax;\r\n        data.forEach(function (d, i) {\r\n            let q1 = c.Q1(d), \r\n                q3 = c.Q3(d), \r\n                wl = c.Wl(d), \r\n                wh = c.Wh(d),\r\n                outliers = c.outliers(d);\r\n            \r\n            if (outliers) {\r\n                outliers.forEach(function (o, i) {\r\n                    values.push(c.outlierValue(o, i));\r\n                });\r\n            }\r\n            if (wl) { values.push(wl) }\r\n            if (q1) { values.push(q1) }\r\n            if (q3) { values.push(q3) }\r\n            if (wh) { values.push(wh) }\r\n        });\r\n        yMin = d3.min(values);\r\n        yMax = d3.max(values);\r\n        var margin = (yMax-yMin)* this.config.y.domainMargin;\r\n        yMin-=margin;\r\n        yMax+=margin;\r\n        var domain = [ yMin, yMax ] ;\r\n\r\n        plot.y.scale.domain(domain);\r\n    }\r\n\r\n    drawAxisX() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\r\n\r\n        var axisT = axis;\r\n        if (self.config.transition) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.x.axis);\r\n\r\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\r\n\r\n        var axisT = axis;\r\n        if (self.config.transition) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.y.axis);\r\n\r\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.title);\r\n    };\r\n\r\n    drawBoxPlots() {\r\n        var self = this,\r\n            plot = self.plot,\r\n            config = self.config,\r\n            boxplotClass = self.prefixClass(\"boxplot-item\")\r\n        \r\n        var boxplots = self.svgG.selectAll('.'+boxplotClass).data(plot.data);\r\n        var boxplotEnter = boxplots.enter()\r\n            .append('g')\r\n            .attr('class', boxplotClass)\r\n            .style('stroke-opacity', 1e-6)\r\n            .style('fill-opacity', 1e-6);\r\n\r\n        var duration = 1000;\r\n        var boxplotsT = boxplots;\r\n        if (self.transitionEnabled()) {\r\n            boxplotsT = boxplots.transition();\r\n            boxplotsT.delay(function(d,i) { return i * duration / plot.data.length })\r\n        }\r\n\r\n        boxplotsT\r\n            .style('fill', plot.color)\r\n            .style('stroke-opacity', 1)\r\n            .style('fill-opacity', 0.75)\r\n            .attr('transform', (d,i) =>'translate(' + (plot.x.map(d,i) + plot.x.scale.rangeBand() * 0.05) + ', 0)')\r\n        boxplots.exit().remove();\r\n\r\n\r\n        var boxWidth = !config.maxBoxWidth ? plot.x.scale.rangeBand() * 0.9 : Math.min(config.maxBoxWidth, Math.max(config.minBoxWidth, plot.x.scale.rangeBand() * 0.9));\r\n        var boxLeft  = plot.x.scale.rangeBand() * 0.45 - boxWidth/2;\r\n        var boxRight = plot.x.scale.rangeBand() * 0.45 + boxWidth/2;\r\n\r\n        var boxClass = self.prefixClass(\"box\");\r\n\r\n        boxplotEnter.append('rect')\r\n            .attr('class', boxClass)\r\n            // tooltip events\r\n            .on('mouseover', function(d,i) {\r\n                d3.select(this).classed('hover', true);\r\n                var html = 'Q3: '+config.Q3(d,i)+'<br/>Q2: '+config.Q2(d,i)+'<br/>Q1: '+config.Q1(d,i);\r\n                self.showTooltip(html)\r\n            })\r\n            .on('mouseout', function(d,i) {\r\n                d3.select(this).classed('hover', false);\r\n                self.hideTooltip();\r\n            });\r\n\r\n        var boxRects = boxplots.select('rect.'+boxClass);\r\n\r\n        var boxRectsT = boxRects;\r\n        if (self.config.transition) {\r\n            boxRectsT = boxRects.transition();\r\n        }\r\n\r\n        boxRectsT.attr('y', (d,i) => plot.y.scale(config.Q3(d)))\r\n            .attr('width', boxWidth)\r\n            .attr('x', boxLeft )\r\n            .attr('height', (d,i) => Math.abs(plot.y.scale(config.Q3(d)) - plot.y.scale(config.Q1(d))) || 1)\r\n            .style('stroke', plot.color);\r\n\r\n        // median line\r\n        var medianClass = self.prefixClass('median');\r\n        boxplotEnter.append('line').attr('class', medianClass);\r\n\r\n        boxplots.select('line.'+medianClass)\r\n            .attr('x1', boxLeft)\r\n            .attr('y1', (d,i) => plot.y.scale(config.Q2(d)))\r\n            .attr('x2', boxRight)\r\n            .attr('y2', (d,i) => plot.y.scale(config.Q2(d)));\r\n\r\n\r\n        //whiskers\r\n\r\n        var whiskerClass= self.prefixClass(\"whisker\"),\r\n            tickClass = self.prefixClass(\"boxplot-tick\");\r\n\r\n        var whiskers = [{key: 'low', value: config.Wl}, {key: 'high', value: config.Wh}];\r\n\r\n        boxplotEnter.each(function(d,i) {\r\n            var box = d3.select(this);\r\n\r\n            whiskers.forEach(f=> {\r\n                if (f.value(d)) {\r\n                    box.append('line')\r\n                        .style('stroke', plot.color(d,i))\r\n                        .attr('class', whiskerClass+' ' + boxplotClass+'-'+f.key);\r\n                    box.append('line')\r\n                        .style('stroke', plot.color(d,i))\r\n                        .attr('class', tickClass+' ' + boxplotClass+'-'+f.key);\r\n                }\r\n            });\r\n        });\r\n\r\n        whiskers.forEach(f => {\r\n            var endpoint = (f.key === 'low') ? config.Q1 : config.Q3;\r\n\r\n            boxplots.select('.'+whiskerClass+'.'+boxplotClass+'-'+f.key)\r\n                .attr('x1', plot.x.scale.rangeBand() * 0.45 )\r\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\r\n                .attr('x2', plot.x.scale.rangeBand() * 0.45 )\r\n                .attr('y2', (d,i) => plot.y.scale(endpoint(d)));\r\n            boxplots.select('.'+tickClass+'.'+boxplotClass+'-'+f.key)\r\n                .attr('x1', boxLeft )\r\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\r\n                .attr('x2', boxRight )\r\n                .attr('y2', (d,i) => plot.y.scale(f.value(d)));\r\n\r\n            boxplotEnter.selectAll('.'+boxplotClass+'-'+f.key)\r\n                .on('mouseover', function(d,i,j) {\r\n                    d3.select(this).classed('hover', true);\r\n                    self.showTooltip(f.value(d))\r\n                })\r\n                .on('mouseout', function(d,i,j) {\r\n                    d3.select(this).classed('hover', false);\r\n                    self.hideTooltip();\r\n                })\r\n        });\r\n\r\n\r\n        // outliers\r\n        var outlierClass = self.prefixClass(\"outlier\");\r\n        var outliers = boxplots.selectAll('.'+outlierClass).data((d,i) => config.outliers(d,i) || []);\r\n\r\n        var outlierEnterCircle = outliers.enter().append('circle')\r\n            .attr('class', outlierClass)\r\n            .style('z-index', 9000);\r\n\r\n        outlierEnterCircle\r\n            .on('mouseover', function (d, i, j) {\r\n                d3.select(this).classed('hover', true);\r\n                self.showTooltip(config.outlierLabel(d,i))\r\n            })\r\n            .on('mouseout', function (d, i, j) {\r\n                d3.select(this).classed('hover', false);\r\n                self.hideTooltip();\r\n            });\r\n\r\n        var outliersT = outliers;\r\n        if (self.config.transition) {\r\n            outliersT = outliers.transition();\r\n        }\r\n        outliersT\r\n            .attr('cx', plot.x.scale.rangeBand() * 0.45)\r\n            .attr('cy', (d,i) => plot.y.scale(config.outlierValue(d,i)))\r\n            .attr('r', '3');\r\n        outliers.exit().remove();\r\n\r\n\r\n    }\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.drawBoxPlots();\r\n        return this;\r\n    };\r\n\r\n    setupColor() {\r\n        var self=this;\r\n        var conf = this.config;\r\n\r\n        if(conf.d3ColorCategory){\r\n            this.plot.colorCategory = d3.scale[conf.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.color;\r\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\r\n            this.plot.color = colorValue;\r\n        }else if(this.plot.colorCategory){\r\n            self.plot.colorValue=colorValue;\r\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.x.value(d));\r\n        }\r\n    }\r\n}\r\n","import {BoxPlotBase, BoxPlotBaseConfig} from \"./box-plot-base\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\n\r\nexport class BoxPlotConfig extends BoxPlotBaseConfig{\r\n\r\n    svgClass = this.cssClassPrefix + 'box-plot';\r\n    showLegend = true;\r\n    showTooltip = true;\r\n    y = {// Y axis config\r\n        title: '',\r\n        key: undefined,\r\n        value: function(d) { return this.y.key===undefined ? d : d[this.y.key]} , // y value accessor\r\n        scale: \"linear\",\r\n        orient: 'left',\r\n        domainMargin: 0.1,\r\n        guides: true //show axis guides\r\n    };\r\n    series = false;\r\n    groups={\r\n        key: undefined,\r\n        value: function(d) { return this.groups.key===undefined ? null : d[this.groups.key]}  , // grouping value accessor,\r\n        label: \"\",\r\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\r\n    };\r\n    \r\n    constructor(custom){\r\n        super();\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class BoxPlot extends BoxPlotBase{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new BoxPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new BoxPlotConfig(config));\r\n    }\r\n\r\n    getDataToPlot(){\r\n        var self = this;\r\n        var conf = self.config;\r\n        self.plot.groupingEnabled = this.isGroupingEnabled();\r\n\r\n        var data = this.data;\r\n        if(!self.plot.groupingEnabled ){\r\n            self.plot.groupedData =  [{\r\n                key: null,\r\n                label: '',\r\n                values: data\r\n            }];\r\n            self.plot.dataLength = data.length;\r\n        }else{\r\n            if(self.config.series){\r\n                self.plot.groupedData =  data.map(s=>{\r\n                    return{\r\n                        key: s.key,\r\n                        label: s.label,\r\n                        values: s.values\r\n                    }\r\n                });\r\n            }else{\r\n                self.plot.groupValue = d => conf.groups.value.call(conf, d);\r\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\r\n            }\r\n\r\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        self.plot.groupedData.forEach(s=>{\r\n            if(!Array.isArray(s.values)){\r\n                return;\r\n            }\r\n\r\n            var values = s.values.map(d=>parseFloat(self.config.y.value.call(self.config, d)));\r\n            s.values.Q1 = StatisticsUtils.quantile(values, 0.25);\r\n            s.values.Q2 = StatisticsUtils.quantile(values, 0.5);\r\n            s.values.Q3 = StatisticsUtils.quantile(values, 0.75);\r\n            s.values.whiskerLow = d3.min(values);\r\n            s.values.whiskerHigh = d3.max(values);\r\n        });\r\n\r\n        return self.plot.groupedData;\r\n    }\r\n\r\n    isGroupingEnabled(){\r\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from \"./legend\";\r\n\r\nexport class ChartWithColorGroupsConfig extends ChartConfig{\r\n\r\n    showLegend=true;\r\n    legend={\r\n        width: 80,\r\n        margin: 10,\r\n        shapeWidth: 20\r\n    };\r\n    groups={\r\n        key: 2,\r\n        value: function(d) { return d[this.groups.key]}  , // grouping value accessor,\r\n        label: \"\",\r\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\r\n    };\r\n    series = false;\r\n    color =  undefined;// string or function returning color's value for color scale\r\n    d3ColorCategory= 'category10';\r\n\r\n    constructor(custom){\r\n        super();\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ChartWithColorGroups extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ChartWithColorGroupsConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ChartWithColorGroupsConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        var self=this;\r\n\r\n        var conf = this.config;\r\n       \r\n        this.plot.showLegend = conf.showLegend;\r\n        if(this.plot.showLegend){\r\n            this.plot.margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\r\n        }\r\n        this.setupGroups();\r\n        this.plot.data = this.getDataToPlot();\r\n        this.groupData();\r\n        return this;\r\n    }\r\n\r\n    isGroupingEnabled(){\r\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\r\n    }\r\n\r\n    computeGroupColorDomain(){\r\n        return Object.getOwnPropertyNames(d3.map(this.data, d => this.plot.groupValue(d))['_']);\r\n    }\r\n\r\n    setupGroups() {\r\n        var self=this;\r\n        var conf = this.config;\r\n\r\n        this.plot.groupingEnabled = this.isGroupingEnabled();\r\n        var domain = [];\r\n        if(this.plot.groupingEnabled){\r\n            self.plot.groupToLabel = {};\r\n            if(this.config.series){\r\n                this.plot.groupValue = s => s.key;\r\n                domain = this.computeGroupColorDomain();\r\n\r\n                this.data.forEach(s=>{\r\n                    self.plot.groupToLabel[s.key] = s.label||s.key;\r\n                })\r\n            }else{\r\n                this.plot.groupValue = d => conf.groups.value.call(conf, d);\r\n                domain = this.computeGroupColorDomain();\r\n                var getLabel= k => k;\r\n                if(self.config.groups.displayValue){\r\n                    if(Utils.isFunction(self.config.groups.displayValue)){\r\n                        getLabel = k=>self.config.groups.displayValue(k) || k;\r\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\r\n                        getLabel = k => self.config.groups.displayValue[k] || k;\r\n                    }\r\n                }\r\n                domain.forEach(k=>{\r\n                    self.plot.groupToLabel[k] = getLabel(k);\r\n                })\r\n            }\r\n\r\n        }else{\r\n            this.plot.groupValue = d => null;\r\n        }\r\n\r\n        if(conf.d3ColorCategory){\r\n            this.plot.colorCategory = d3.scale[conf.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.color;\r\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\r\n            this.plot.color = colorValue;\r\n            this.plot.seriesColor = this.plot.color;\r\n        }else if(this.plot.colorCategory){\r\n            self.plot.colorValue=colorValue;\r\n            self.plot.colorCategory.domain(domain);\r\n\r\n            this.plot.seriesColor = s =>  self.plot.colorCategory(s.key);\r\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.groupValue(d));\r\n            \r\n        }else{\r\n            this.plot.color = this.plot.seriesColor = s=> 'black'\r\n        }\r\n\r\n    }\r\n\r\n    groupData(){\r\n        var self=this;\r\n        var data = this.plot.data;\r\n        if(!self.plot.groupingEnabled ){\r\n            self.plot.groupedData =  [{\r\n                key: null,\r\n                label: '',\r\n                values: data\r\n            }];\r\n            self.plot.dataLength = data.length;\r\n        }else{\r\n\r\n            if(self.config.series){\r\n                self.plot.groupedData =  data.map(s=>{\r\n                    return{\r\n                        key: s.key,\r\n                        label: s.label,\r\n                        values: s.values\r\n                    }\r\n                });\r\n            }else{\r\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\r\n                self.plot.groupedData.forEach(g => {\r\n                    g.label = self.plot.groupToLabel[g.key];\r\n                });\r\n            }\r\n\r\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\r\n        }\r\n\r\n        // this.plot.seriesColor\r\n\r\n    }\r\n\r\n    getDataToPlot(){\r\n        if(!this.plot.groupingEnabled || !this.enabledGroups){\r\n            return this.data;\r\n        }\r\n        return this.data.filter(d => this.enabledGroups.indexOf(this.plot.groupValue(d))>-1);\r\n    }\r\n\r\n\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.updateLegend();\r\n\r\n        return this;\r\n    };\r\n\r\n    updateLegend() {\r\n\r\n        var self =this;\r\n        var plot = this.plot;\r\n\r\n        var scale = plot.colorCategory;\r\n\r\n\r\n\r\n        if(!scale.domain() || scale.domain().length<2){\r\n            plot.showLegend = false;\r\n        }\r\n\r\n        if(!plot.showLegend){\r\n            if(plot.legend && plot.legend.container){\r\n                plot.legend.container.remove();\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n        var legendX = this.plot.width + this.config.legend.margin;\r\n        var legendY = this.config.legend.margin;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\r\n\r\n        plot.legendColor = plot.legend.color()\r\n            .shapeWidth(this.config.legend.shapeWidth)\r\n            .orient('vertical')\r\n            .scale(scale)\r\n            .labels(scale.domain().map(v=>plot.groupToLabel[v]));\r\n\r\n\r\n        plot.legendColor.on('cellclick', c=> self.onLegendCellClick(c));\r\n        \r\n        plot.legend.container\r\n            .call(plot.legendColor);\r\n\r\n        this.updateLegendCellStatuses();\r\n    }\r\n\r\n    onLegendCellClick(cellValue){\r\n        this.updateEnabledGroups(cellValue);\r\n        this.init();\r\n    }\r\n    updateLegendCellStatuses() {\r\n        var self = this;\r\n        this.plot.legend.container.selectAll(\"g.cell\").each(function(cell){\r\n            var isDisabled = self.enabledGroups && self.enabledGroups.indexOf(cell)<0;\r\n            d3.select(this).classed(\"odc-disabled\", isDisabled);\r\n        });\r\n    }\r\n\r\n    updateEnabledGroups(cellValue) {\r\n        if (!this.enabledGroups) {\r\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\r\n        }\r\n        var index = this.enabledGroups.indexOf(cellValue);\r\n\r\n        if (index < 0) {\r\n            this.enabledGroups.push(cellValue);\r\n        } else {\r\n            this.enabledGroups.splice(index, 1);\r\n        }\r\n\r\n        if (!this.enabledGroups.length) {\r\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\r\n        }\r\n\r\n    }\r\n\r\n    setData(data){\r\n        super.setData(data);\r\n        this.enabledGroups = null;\r\n        return this;\r\n    }\r\n}\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class ChartConfig {\r\n    cssClassPrefix = \"odc-\";\r\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\r\n    width = undefined;\r\n    height = undefined;\r\n    margin = {\r\n        left: 50,\r\n        right: 30,\r\n        top: 30,\r\n        bottom: 50\r\n    };\r\n    showTooltip = false;\r\n    transition = true;\r\n\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Chart {\r\n    utils = Utils;\r\n    baseContainer;\r\n    svg;\r\n    config;\r\n    plot = {\r\n        margin: {}\r\n    };\r\n    _attached = {};\r\n    _layers = {};\r\n    _events = {};\r\n    _isAttached;\r\n    _isInitialized=false;\r\n\r\n\r\n    constructor(base, data, config) {\r\n        \r\n        this._isAttached = base instanceof Chart;\r\n\r\n        this.baseContainer = base;\r\n\r\n        this.setConfig(config);\r\n\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n\r\n        this.init();\r\n        this.postInit();\r\n    }\r\n\r\n    setConfig(config) {\r\n        if (!config) {\r\n            this.config = new ChartConfig();\r\n        } else {\r\n            this.config = config;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setData(data) {\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n\r\n        self.initPlot();\r\n        self.initSvg();\r\n\r\n        if(!this._isInitialized){\r\n            self.initTooltip();\r\n        }\r\n        self.draw();\r\n        this._isInitialized=true;\r\n        return this;\r\n    }\r\n\r\n    postInit(){\r\n\r\n    }\r\n\r\n    initSvg() {\r\n        var self = this;\r\n        var config = this.config;\r\n\r\n        var margin = self.plot.margin;\r\n        var width = self.plot.width + margin.left + margin.right;\r\n        var height = self.plot.height + margin.top + margin.bottom;\r\n        var aspect = width / height;\r\n        if(!self._isAttached){\r\n            if(!this._isInitialized){\r\n                d3.select(self.baseContainer).select(\"svg\").remove();\r\n            }\r\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\r\n\r\n            self.svg\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\r\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n                .attr(\"class\", config.svgClass);\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\r\n        }else{\r\n            console.log(self.baseContainer);\r\n            self.svg = self.baseContainer.svg;\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\r\n        }\r\n\r\n        self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        if (!config.width || config.height) {\r\n            d3.select(window)\r\n                .on(\"resize\", function () {\r\n                    var transition = self.config.transition;\r\n                    self.config.transition=false;\r\n                    self.init();\r\n                    self.config.transition = transition;\r\n                });\r\n        }\r\n    }\r\n\r\n    initTooltip(){\r\n        var self = this;\r\n        if (self.config.showTooltip) {\r\n            if(!self._isAttached ){\r\n                self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\r\n                    .style(\"opacity\", 0);\r\n            }else{\r\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\r\n            }\r\n\r\n        }else{\r\n            self.plot.tooltip = null;\r\n        }\r\n    }\r\n\r\n    initPlot() {\r\n        var margin = this.config.margin;\r\n        this.plot = this.plot || {};\r\n        this.plot.margin = {\r\n            top: margin.top,\r\n            bottom: margin.bottom,\r\n            left: margin.left,\r\n            right: margin.right\r\n        };\r\n    }\r\n\r\n    update(data) {\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n        var layerName, attachmentData;\r\n        for (var attachmentName in this._attached) {\r\n\r\n            attachmentData = data;\r\n\r\n            this._attached[attachmentName].update(attachmentData);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    draw(data) {\r\n        this.update(data);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n     * method will be invoked whenever the containing chart's `draw` method is\r\n     * invoked.\r\n     *\r\n     * @externalExample chart-attach\r\n     *\r\n     * @param {String} attachmentName Name of the attachment\r\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n     *        unspecified, this method will return the attachment previously\r\n     *        registered with the specified `attachmentName` (if any).\r\n     *\r\n     * @returns {Chart} Reference to this chart (chainable).\r\n     */\r\n    attach(attachmentName, chart) {\r\n        if (arguments.length === 1) {\r\n            return this._attached[attachmentName];\r\n        }\r\n\r\n        this._attached[attachmentName] = chart;\r\n        return chart;\r\n    };\r\n\r\n    \r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Subscribe a callback function to an event triggered on the chart. See {@link\r\n        * Chart#once} to subscribe a callback function to an event for one occurence.\r\n     *\r\n     * @externalExample {runnable} chart-on\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    on(name, callback, context) {\r\n        var events = this._events[name] || (this._events[name] = []);\r\n        events.push({\r\n            callback: callback,\r\n            context: context || this,\r\n            _chart: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     *\r\n     * Subscribe a callback function to an event triggered on the chart. This\r\n     * function will be invoked at the next occurance of the event and immediately\r\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n     * event indefinitely.\r\n     *\r\n     * @externalExample {runnable} chart-once\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable)\r\n     */\r\n    once(name, callback, context) {\r\n        var self = this;\r\n        var once = function () {\r\n            self.off(name, once);\r\n            callback.apply(this, arguments);\r\n        };\r\n        return this.on(name, once, context);\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Unsubscribe one or more callback functions from an event triggered on the\r\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n     * When only a `name` is specified, all handlers subscribed to that event will\r\n     * be unsubscribed. When a `name` and `callback` are specified, only that\r\n     * function will be unsubscribed from that event. When a `name` and `context`\r\n     * are specified (but `callback` is omitted), all events bound to the given\r\n     * event with the given context will be unsubscribed.\r\n     *\r\n     * @externalExample {runnable} chart-off\r\n     *\r\n     * @param {String} [name] Name of the event to be unsubscribed\r\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n     * @param {Object} [context] Contexts to be unsubscribe\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n\r\n    off(name, callback, context) {\r\n        var names, n, events, event, i, j;\r\n\r\n        // remove all events\r\n        if (arguments.length === 0) {\r\n            for (name in this._events) {\r\n                this._events[name].length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events for a specific name\r\n        if (arguments.length === 1) {\r\n            events = this._events[name];\r\n            if (events) {\r\n                events.length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events that match whatever combination of name, context\r\n        // and callback.\r\n        names = name ? [name] : Object.keys(this._events);\r\n        for (i = 0; i < names.length; i++) {\r\n            n = names[i];\r\n            events = this._events[n];\r\n            j = events.length;\r\n            while (j--) {\r\n                event = events[j];\r\n                if ((callback && callback === event.callback) ||\r\n                    (context && context === event.context)) {\r\n                    events.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Publish an event on this chart with the given `name`.\r\n     *\r\n     * @externalExample {runnable} chart-trigger\r\n     *\r\n     * @param {String} name Name of the event to publish\r\n     * @param {...*} arguments Values with which to invoke the registered\r\n     *        callbacks.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    trigger(name) {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var events = this._events[name];\r\n        var i, ev;\r\n\r\n        if (events !== undefined) {\r\n            for (i = 0; i < events.length; i++) {\r\n                ev = events[i];\r\n                ev.callback.apply(ev.context, args);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n    getBaseContainer(){\r\n        if(this._isAttached){\r\n            return this.baseContainer.svg;\r\n        }\r\n        return d3.select(this.baseContainer);\r\n    }\r\n\r\n    getBaseContainerNode(){\r\n\r\n        return this.getBaseContainer().node();\r\n    }\r\n\r\n    prefixClass(clazz, addDot){\r\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\r\n    }\r\n    computePlotSize() {\r\n        this.plot.width = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\r\n        this.plot.height = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\r\n    }\r\n\r\n    transitionEnabled(){\r\n        return this._isInitialized && this.config.transition;\r\n    }\r\n\r\n    showTooltip(html){\r\n        if(!this.plot.tooltip){\r\n            return;\r\n        }\r\n        this.plot.tooltip.transition()\r\n            .duration(200)\r\n            .style(\"opacity\", .9);\r\n        this.plot.tooltip.html(html)\r\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n    }\r\n\r\n    hideTooltip(){\r\n        if(!this.plot.tooltip){\r\n            return;\r\n        }\r\n        this.plot.tooltip.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0);\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\nimport {Legend} from './legend'\r\nimport {ScatterPlot} from './scatterplot'\r\n\r\nexport class CorrelationMatrixConfig extends ChartConfig {\r\n\r\n    svgClass = this.cssClassPrefix+'correlation-matrix';\r\n    guides = false; //show axis guides\r\n    showTooltip = true; //show tooltip on dot hover\r\n    showLegend = true;\r\n    highlightLabels = true;\r\n    rotateLabelsX = true;\r\n    rotateLabelsY = true;\r\n    variables = {\r\n        labels: undefined,\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey], // variable value accessor\r\n        scale: \"ordinal\"\r\n    };\r\n    correlation = {\r\n        scale: \"linear\",\r\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\r\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\r\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\r\n\r\n    };\r\n    cell = {\r\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\r\n        size: undefined,\r\n        sizeMin: 15,\r\n        sizeMax: 250,\r\n        padding: 1\r\n    };\r\n    margin = {\r\n        left: 60,\r\n        right: 50,\r\n        top: 30,\r\n        bottom: 60\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CorrelationMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new CorrelationMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n\r\n        this.plot.x = {};\r\n        this.plot.correlation = {\r\n            matrix: undefined,\r\n            cells: undefined,\r\n            color: {},\r\n            shape: {}\r\n        };\r\n\r\n\r\n        this.setupVariables();\r\n        var width = conf.width;\r\n        var placeholderNode = this.getBaseContainerNode();\r\n        this.plot.placeholderNode = placeholderNode;\r\n\r\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\r\n        if (width) {\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n        } else {\r\n            this.plot.cellSize = this.config.cell.size;\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\r\n\r\n        }\r\n\r\n        var height = width;\r\n        if (!height) {\r\n            height = placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = this.plot.width;\r\n\r\n        this.setupVariablesScales();\r\n        this.setupCorrelationScales();\r\n        this.setupCorrelationMatrix();\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    setupVariablesScales() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.variables;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = conf.value;\r\n        x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n    };\r\n\r\n    setupCorrelationScales() {\r\n        var plot = this.plot;\r\n        var corrConf = this.config.correlation;\r\n\r\n        plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\r\n        var shape = plot.correlation.shape = {};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = cellConf.shape;\r\n\r\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\r\n        if (shape.type == 'circle') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\r\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\r\n        } else if (shape.type == 'ellipse') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\r\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\r\n            shape.radiusY = radiusMax;\r\n\r\n            shape.rotateVal = v => {\r\n                if (v == 0) return \"0\";\r\n                if (v < 0) return \"-45\";\r\n                return \"45\"\r\n            }\r\n        } else if (shape.type == 'rect') {\r\n            shape.size = shapeSize;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupVariables() {\r\n\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if (!plot.variables || !plot.variables.length) {\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, (d) => variablesConf.value(d, variableKey));\r\n            var label = variableKey;\r\n            if (variablesConf.labels && variablesConf.labels.length > index) {\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n    };\r\n\r\n\r\n    setupCorrelationMatrix() {\r\n        var self = this;\r\n        var data = this.data;\r\n        var matrix = this.plot.correlation.matrix = [];\r\n        var matrixCells = this.plot.correlation.matrix.cells = [];\r\n        var plot = this.plot;\r\n\r\n        var variableToValues = {};\r\n        plot.variables.forEach((v, i) => {\r\n\r\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\r\n        });\r\n\r\n        plot.variables.forEach((v1, i) => {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            plot.variables.forEach((v2, j) => {\r\n                var corr = 1;\r\n                if (v1 != v2) {\r\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\r\n                }\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: corr\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        // this.update\r\n        this.updateCells();\r\n        this.updateVariableLabels();\r\n\r\n\r\n        if (this.config.showLegend) {\r\n            this.updateLegend();\r\n        }\r\n    };\r\n\r\n    updateVariableLabels() {\r\n        this.plot.labelClass = this.prefixClass(\"label\");\r\n        this.updateAxisX();\r\n        this.updateAxisY();\r\n    }\r\n\r\n    updateAxisX() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = plot.labelClass;\r\n        var labelXClass = labelClass + \"-x\";\r\n\r\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\r\n            .data(plot.variables, (d, i)=>i);\r\n\r\n        labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i);\r\n\r\n        labels\r\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"y\", plot.height)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"dy\", 5)\r\n            .attr(\"text-anchor\", \"end\")\r\n\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        if (this.config.rotateLabelsX) {\r\n            labels.attr(\"transform\", (d, i) => \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\r\n        }\r\n\r\n        var maxWidth = self.computeXAxisLabelsWidth();\r\n        labels.each(function (label) {\r\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\r\n        });\r\n\r\n        labels.exit().remove();\r\n    }\r\n\r\n    updateAxisY() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = plot.labelClass;\r\n        var labelYClass = plot.labelClass + \"-y\";\r\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\r\n            .data(plot.variables);\r\n\r\n        labels.enter().append(\"text\");\r\n\r\n        labels\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        if (this.config.rotateLabelsY) {\r\n            labels\r\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + 0 + \", \" + (i * plot.cellSize + plot.cellSize / 2) + \")\")\r\n                .attr(\"text-anchor\", \"end\");\r\n        }\r\n\r\n        var maxWidth = self.computeYAxisLabelsWidth();\r\n        labels.each(function (label) {\r\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\r\n        });\r\n\r\n        labels.exit().remove();\r\n    }\r\n\r\n    computeYAxisLabelsWidth() {\r\n        var maxWidth = this.plot.margin.left;\r\n        if (!this.config.rotateLabelsY) {\r\n            return maxWidth;\r\n        }\r\n\r\n        maxWidth *= Utils.SQRT_2;\r\n        var fontSize = 11; //todo check actual font size\r\n        maxWidth -= fontSize / 2;\r\n\r\n        return maxWidth;\r\n    }\r\n\r\n    computeXAxisLabelsWidth(offset) {\r\n        if (!this.config.rotateLabelsX) {\r\n            return this.plot.cellSize - 2;\r\n        }\r\n        var size = this.plot.margin.bottom;\r\n        size *= Utils.SQRT_2;\r\n        var fontSize = 11; //todo check actual font size\r\n        size -= fontSize / 2;\r\n        return size;\r\n    }\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellClass = self.prefixClass(\"cell\");\r\n        var cellShape = plot.correlation.shape.type;\r\n\r\n        var cells = self.svgG.selectAll(\"g.\" + cellClass)\r\n            .data(plot.correlation.matrix.cells);\r\n\r\n        var cellEnterG = cells.enter().append(\"g\")\r\n            .classed(cellClass, true);\r\n        cells.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\r\n\r\n        cells.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\r\n\r\n        var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\r\n\r\n        var wrongShapes = cells.selectAll(selector);\r\n        wrongShapes.remove();\r\n\r\n        var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\r\n\r\n        if (plot.correlation.shape.type == 'circle') {\r\n\r\n            shapes\r\n                .attr(\"r\", plot.correlation.shape.radius)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0);\r\n        }\r\n\r\n        if (plot.correlation.shape.type == 'ellipse') {\r\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\r\n            shapes\r\n                .attr(\"rx\", plot.correlation.shape.radiusX)\r\n                .attr(\"ry\", plot.correlation.shape.radiusY)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0)\r\n\r\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\r\n        }\r\n\r\n\r\n        if (plot.correlation.shape.type == 'rect') {\r\n            shapes\r\n                .attr(\"width\", plot.correlation.shape.size)\r\n                .attr(\"height\", plot.correlation.shape.size)\r\n                .attr(\"x\", -plot.cellSize / 2)\r\n                .attr(\"y\", -plot.cellSize / 2);\r\n        }\r\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\r\n\r\n        var mouseoverCallbacks = [];\r\n        var mouseoutCallbacks = [];\r\n\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value;\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (self.config.highlightLabels) {\r\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\r\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\r\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\r\n\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\r\n            });\r\n            mouseoutCallbacks.push(c=> {\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\r\n            });\r\n        }\r\n\r\n\r\n        cells.on(\"mouseover\", c => {\r\n            mouseoverCallbacks.forEach(callback=>callback(c));\r\n        })\r\n            .on(\"mouseout\", c => {\r\n                mouseoutCallbacks.forEach(callback=>callback(c));\r\n            });\r\n\r\n        cells.on(\"click\", c=> {\r\n            self.trigger(\"cell-selected\", c);\r\n        });\r\n\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n\r\n    updateLegend() {\r\n\r\n        var plot = this.plot;\r\n        var legendX = this.plot.width + 10;\r\n        var legendY = 0;\r\n        var barWidth = 10;\r\n        var barHeight = this.plot.height - 2;\r\n        var scale = plot.correlation.color.scale;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\r\n\r\n\r\n    }\r\n\r\n    attachScatterPlot(containerSelector, config) {\r\n        var self = this;\r\n\r\n        config = config || {};\r\n\r\n\r\n        var scatterPlotConfig = {\r\n            height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\r\n            width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\r\n            groups: {\r\n                key: self.config.groups.key,\r\n                label: self.config.groups.label\r\n            },\r\n            guides: true,\r\n            showLegend: false\r\n        };\r\n\r\n        self.scatterPlot = true;\r\n\r\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\r\n        this.update();\r\n\r\n        this.on(\"cell-selected\", c=> {\r\n\r\n\r\n            scatterPlotConfig.x = {\r\n                key: c.rowVar,\r\n                label: self.plot.labelByVariable[c.rowVar]\r\n            };\r\n            scatterPlotConfig.y = {\r\n                key: c.colVar,\r\n                label: self.plot.labelByVariable[c.colVar]\r\n            };\r\n            if (self.scatterPlot && self.scatterPlot !== true) {\r\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\r\n            } else {\r\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\r\n                this.attach(\"ScatterPlot\", self.scatterPlot);\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n}\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class D3Extensions{\r\n\r\n    static extend(){\r\n\r\n        d3.selection.enter.prototype.insertSelector =\r\n            d3.selection.prototype.insertSelector = function(selector, before) {\r\n                return Utils.insertSelector(this, selector, before);\r\n            };\r\n\r\n\r\n        d3.selection.enter.prototype.appendSelector =\r\n            d3.selection.prototype.appendSelector = function(selector) {\r\n                return Utils.appendSelector(this, selector);\r\n            };\r\n\r\n        d3.selection.enter.prototype.selectOrAppend =\r\n            d3.selection.prototype.selectOrAppend = function(selector) {\r\n                return Utils.selectOrAppend(this, selector);\r\n            };\r\n\r\n        d3.selection.enter.prototype.selectOrInsert =\r\n            d3.selection.prototype.selectOrInsert = function(selector, before) {\r\n                return Utils.selectOrInsert(this, selector, before);\r\n            };\r\n\r\n\r\n\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Heatmap, HeatmapConfig} from \"./heatmap\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\n\r\n\r\nexport class HeatmapTimeSeriesConfig extends HeatmapConfig {\r\n    x = {\r\n        fillMissing: false, // fill missing values using interval and intervalStep\r\n        interval: undefined, //used in filling missing ticks\r\n        intervalStep: 1,\r\n        format: undefined, //input data d3 time format\r\n        displayFormat: undefined,//d3 time format for display\r\n        intervalToFormats: [ //used to guess interval and format\r\n            {\r\n                name: 'year',\r\n                formats: [\"%Y\"]\r\n            },\r\n            {\r\n                name: 'month',\r\n                formats: [\"%Y-%m\"]\r\n            },\r\n            {\r\n                name: 'day',\r\n                formats: [\"%Y-%m-%d\"]\r\n            },\r\n            {\r\n                name: 'hour',\r\n                formats: ['%H', '%Y-%m-%d %H']\r\n            },\r\n            {\r\n                name: 'minute',\r\n                formats: ['%H:%M', '%Y-%m-%d %H:%M']\r\n            },\r\n            {\r\n                name: 'second',\r\n                formats: ['%H:%M:%S', '%Y-%m-%d %H:%M:%S']\r\n            }\r\n        ],\r\n\r\n        sortComparator: function sortComparator(a, b) {\r\n            return Utils.isString(a) ?  a.localeCompare(b) :  a - b;\r\n        },\r\n        formatter: undefined\r\n    };\r\n    z = {\r\n        fillMissing: true // fiill missing values with nearest previous value\r\n    };\r\n\r\n    legend = {\r\n        formatter: function (v) {\r\n            var suffix = \"\";\r\n            if (v / 1000000 >= 1) {\r\n                suffix = \" M\";\r\n                v = Number(v / 1000000).toFixed(3);\r\n            }\r\n            var nf = Intl.NumberFormat();\r\n            return nf.format(v) + suffix;\r\n        }\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class HeatmapTimeSeries extends Heatmap {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new HeatmapTimeSeriesConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new HeatmapTimeSeriesConfig(config));\r\n    }\r\n\r\n\r\n    setupValuesBeforeGroupsSort() {\r\n\r\n        this.plot.x.timeFormat = this.config.x.format;\r\n        if(this.config.x.displayFormat && !this.plot.x.timeFormat){\r\n            this.guessTimeFormat();\r\n        }\r\n\r\n\r\n        super.setupValuesBeforeGroupsSort();\r\n        if (!this.config.x.fillMissing) {\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n\r\n        this.initTimeFormatAndInterval();\r\n\r\n        this.plot.x.intervalStep = this.config.x.intervalStep || 1;\r\n\r\n        this.plot.x.timeParser = this.getTimeParser();\r\n\r\n\r\n\r\n        this.plot.x.uniqueValues.sort(this.config.x.sortComparator);\r\n\r\n        var prev = null;\r\n\r\n        this.plot.x.uniqueValues.forEach((x, i)=> {\r\n            var current = this.parseTime(x);\r\n            if (prev === null) {\r\n                prev = current;\r\n                return;\r\n            }\r\n\r\n            var next = self.nextTimeTickValue(prev);\r\n            var missing = [];\r\n            var iteration = 0;\r\n            while (self.compareTimeValues(next, current)<=0) {\r\n                iteration++;\r\n                if (iteration > 100) {\r\n                    break;\r\n                }\r\n                var d = {};\r\n                var timeString = self.formatTime(next);\r\n                d[this.config.x.key] = timeString;\r\n\r\n                self.updateGroups(d, timeString, self.plot.x.groups, self.config.x.groups);\r\n                missing.push(next);\r\n                next = self.nextTimeTickValue(next);\r\n            }\r\n            prev = current;\r\n        });\r\n\r\n    }\r\n\r\n    parseTime(x) {\r\n        var parser = this.getTimeParser();\r\n        return parser.parse(x);\r\n    }\r\n\r\n    formatTime(date){\r\n        var parser = this.getTimeParser();\r\n        return parser(date);\r\n    }\r\n\r\n    formatValueX(value) { //used only for display\r\n        if (this.config.x.formatter) return this.config.x.formatter.call(this.config, value);\r\n\r\n        if(this.config.x.displayFormat){\r\n            var date = this.parseTime(value);\r\n            return d3.time.format(this.config.x.displayFormat)(date);\r\n        }\r\n\r\n        if(!this.plot.x.timeFormat) return value;\r\n\r\n        if(Utils.isDate(value)){\r\n            return this.formatTime(value);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    compareTimeValues(a, b){\r\n        return a-b;\r\n    }\r\n\r\n    timeValuesEqual(a, b) {\r\n        var parser = this.plot.x.timeParser;\r\n        return parser(a) === parser(b);\r\n    }\r\n\r\n    nextTimeTickValue(t) {\r\n        var interval = this.plot.x.interval;\r\n        return d3.time[interval].offset(t, this.plot.x.intervalStep);\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n\r\n        if (this.config.z.fillMissing) {\r\n            this.plot.matrix.forEach((row, rowIndex) => {\r\n                var prevRowValue = undefined;\r\n                row.forEach((cell, colIndex) => {\r\n                    if (cell.value === undefined && prevRowValue !== undefined) {\r\n                        cell.value = prevRowValue;\r\n                        cell.missing = true;\r\n                    }\r\n                    prevRowValue = cell.value;\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n\r\n    };\r\n\r\n\r\n    initTimeFormatAndInterval() {\r\n\r\n        this.plot.x.interval = this.config.x.interval;\r\n\r\n        if(!this.plot.x.timeFormat){\r\n            this.guessTimeFormat();\r\n        }\r\n\r\n        if(!this.plot.x.interval && this.plot.x.timeFormat){\r\n            this.guessInterval();\r\n        }\r\n    }\r\n\r\n    guessTimeFormat() {\r\n        var self = this;\r\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++){\r\n            let intervalFormat = self.config.x.intervalToFormats[i];\r\n            var format = null;\r\n            var formatMatch = intervalFormat.formats.some(f=>{\r\n                format = f;\r\n                var parser = d3.time.format(f);\r\n                return self.plot.x.uniqueValues.every(x=>{\r\n                    return parser.parse(x) !== null\r\n                });\r\n            });\r\n            if(formatMatch){\r\n                self.plot.x.timeFormat = format;\r\n                console.log('Guessed timeFormat', format);\r\n                if(!self.plot.x.interval){\r\n                    self.plot.x.interval = intervalFormat.name;\r\n                    console.log('Guessed interval', self.plot.x.interval);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    guessInterval() {\r\n        var self = this;\r\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++) {\r\n            let intervalFormat = self.config.x.intervalToFormats[i];\r\n\r\n            if(intervalFormat.formats.indexOf(self.plot.x.timeFormat) >= 0){\r\n                self.plot.x.interval = intervalFormat.name;\r\n                console.log('Guessed interval', self.plot.x.interval);\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getTimeParser() {\r\n        if(!this.plot.x.timeParser){\r\n            this.plot.x.timeParser = d3.time.format(this.plot.x.timeFormat);\r\n        }\r\n        return this.plot.x.timeParser;\r\n    }\r\n}\r\n\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from './legend'\r\n\r\n\r\nexport class HeatmapConfig extends ChartConfig {\r\n\r\n    svgClass = 'odc-heatmap';\r\n    showTooltip = true; //show tooltip on dot hover\r\n    tooltip = {\r\n        noDataText: \"N/A\"\r\n    };\r\n    showLegend = true;\r\n    legend = {\r\n        width: 30,\r\n        rotateLabels: false,\r\n        decimalPlaces: undefined,\r\n        formatter: v => this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(this.legend.decimalPlaces)\r\n    }\r\n    highlightLabels = true;\r\n    x = {// X axis config\r\n        title: '', // axis title\r\n        key: 0,\r\n        value: (d) => d[this.x.key], // x value accessor\r\n        rotateLabels: true,\r\n        sortLabels: false,\r\n        sortComparator: (a, b)=> Utils.isNumber(a) ? a - b : a.localeCompare(b),\r\n        groups: {\r\n            keys: [],\r\n            labels: [],\r\n            value: (d, key) => d[key],\r\n            overlap: {\r\n                top: 20,\r\n                bottom: 20\r\n            }\r\n        },\r\n        formatter: undefined // value formatter function\r\n\r\n    };\r\n    y = {// Y axis config\r\n        title: '', // axis title,\r\n        rotateLabels: true,\r\n        key: 1,\r\n        value: (d) => d[this.y.key], // y value accessor\r\n        sortLabels: false,\r\n        sortComparator: (a, b)=> Utils.isNumber(b) ? b - a : b.localeCompare(a),\r\n        groups: {\r\n            keys: [],\r\n            labels: [],\r\n            value: (d, key) => d[key],\r\n            overlap: {\r\n                left: 20,\r\n                right: 20\r\n            }\r\n        },\r\n        formatter: undefined// value formatter function\r\n    };\r\n    z = {\r\n        key: 2,\r\n        value: (d) => d[this.z.key],\r\n        notAvailableValue: (v) => v === null || v === undefined,\r\n\r\n        decimalPlaces: undefined,\r\n        formatter: v => this.z.decimalPlaces === undefined ? v : Number(v).toFixed(this.z.decimalPlaces)// value formatter function\r\n\r\n    };\r\n    color = {\r\n        noDataColor: \"white\",\r\n        scale: \"linear\",\r\n        reverseScale: false,\r\n        range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\r\n    };\r\n    cell = {\r\n        width: undefined,\r\n        height: undefined,\r\n        sizeMin: 15,\r\n        sizeMax: 250,\r\n        padding: 0\r\n    };\r\n    margin = {\r\n        left: 60,\r\n        right: 50,\r\n        top: 30,\r\n        bottom: 80\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\n//TODO refactor\r\nexport class Heatmap extends Chart {\r\n\r\n    static maxGroupGapSize = 24;\r\n    static groupTitleRectHeight = 6;\r\n\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new HeatmapConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new HeatmapConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n\r\n        this.plot.x = {};\r\n        this.plot.y = {};\r\n        this.plot.z = {\r\n            matrixes: undefined,\r\n            cells: undefined,\r\n            color: {},\r\n            shape: {}\r\n        };\r\n\r\n\r\n        this.setupValues();\r\n        this.buildCells();\r\n\r\n        var titleRectWidth = 6;\r\n        this.plot.x.overlap = {\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n        if (this.plot.groupByX) {\r\n            let depth = self.config.x.groups.keys.length;\r\n            let allTitlesWidth = depth * (titleRectWidth);\r\n\r\n            this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\r\n            this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\r\n            this.plot.margin.top = conf.margin.right + conf.x.groups.overlap.top;\r\n            this.plot.margin.bottom = conf.margin.bottom + conf.x.groups.overlap.bottom;\r\n        }\r\n\r\n\r\n        this.plot.y.overlap = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n\r\n\r\n        if (this.plot.groupByY) {\r\n            let depth = self.config.y.groups.keys.length;\r\n            let allTitlesWidth = depth * (titleRectWidth);\r\n            this.plot.y.overlap.right = self.config.y.groups.overlap.left + allTitlesWidth;\r\n            this.plot.y.overlap.left = self.config.y.groups.overlap.left;\r\n            this.plot.margin.left = conf.margin.left + this.plot.y.overlap.left;\r\n            this.plot.margin.right = conf.margin.right + this.plot.y.overlap.right;\r\n        }\r\n        this.plot.showLegend = conf.showLegend;\r\n        if (this.plot.showLegend) {\r\n            this.plot.margin.right += conf.legend.width;\r\n        }\r\n        this.computePlotSize();\r\n        this.setupZScale();\r\n\r\n        return this;\r\n    }\r\n\r\n    setupValues() {\r\n        var self = this;\r\n        var config = self.config;\r\n        var x = self.plot.x;\r\n        var y = self.plot.y;\r\n        var z = self.plot.z;\r\n\r\n\r\n        x.value = d => config.x.value.call(config, d);\r\n        y.value = d => config.y.value.call(config, d);\r\n        z.value = d => config.z.value.call(config, d);\r\n\r\n        x.uniqueValues = [];\r\n        y.uniqueValues = [];\r\n\r\n\r\n        self.plot.groupByY = !!config.y.groups.keys.length;\r\n        self.plot.groupByX = !!config.x.groups.keys.length;\r\n\r\n        y.groups = {\r\n            key: undefined,\r\n            label: '',\r\n            values: [],\r\n            children: null,\r\n            level: 0,\r\n            index: 0,\r\n            lastIndex: 0\r\n        };\r\n        x.groups = {\r\n            key: undefined,\r\n            label: '',\r\n            values: [],\r\n            children: null,\r\n            level: 0,\r\n            index: 0,\r\n            lastIndex: 0\r\n        };\r\n\r\n        var valueMap = {};\r\n        var minZ = undefined;\r\n        var maxZ = undefined;\r\n        this.data.forEach(d=> {\r\n\r\n            var xVal = x.value(d);\r\n            var yVal = y.value(d);\r\n            var zValRaw = z.value(d);\r\n            var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\r\n\r\n\r\n            if (x.uniqueValues.indexOf(xVal) === -1) {\r\n                x.uniqueValues.push(xVal);\r\n            }\r\n\r\n            if (y.uniqueValues.indexOf(yVal) === -1) {\r\n                y.uniqueValues.push(yVal);\r\n            }\r\n\r\n            var groupY = y.groups;\r\n            if (self.plot.groupByY) {\r\n                groupY = this.updateGroups(d, yVal, y.groups, config.y.groups);\r\n            }\r\n            var groupX = x.groups;\r\n            if (self.plot.groupByX) {\r\n\r\n                groupX = this.updateGroups(d, xVal, x.groups, config.x.groups);\r\n            }\r\n\r\n            if (!valueMap[groupY.index]) {\r\n                valueMap[groupY.index] = {};\r\n            }\r\n\r\n            if (!valueMap[groupY.index][groupX.index]) {\r\n                valueMap[groupY.index][groupX.index] = {};\r\n            }\r\n            if (!valueMap[groupY.index][groupX.index][yVal]) {\r\n                valueMap[groupY.index][groupX.index][yVal] = {};\r\n            }\r\n            valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\r\n\r\n\r\n            if (minZ === undefined || zVal < minZ) {\r\n                minZ = zVal;\r\n            }\r\n            if (maxZ === undefined || zVal > maxZ) {\r\n                maxZ = zVal;\r\n            }\r\n        });\r\n        self.plot.valueMap = valueMap;\r\n\r\n\r\n        if (!self.plot.groupByX) {\r\n            x.groups.values = x.uniqueValues;\r\n        }\r\n\r\n        if (!self.plot.groupByY) {\r\n            y.groups.values = y.uniqueValues;\r\n        }\r\n\r\n        this.setupValuesBeforeGroupsSort();\r\n\r\n        x.gaps = [];\r\n        x.totalValuesCount = 0;\r\n        x.allValuesList = [];\r\n        this.sortGroups(x, x.groups, config.x);\r\n\r\n        y.gaps = [];\r\n        y.totalValuesCount = 0;\r\n        y.allValuesList = [];\r\n        this.sortGroups(y, y.groups, config.y);\r\n\r\n        z.min = minZ;\r\n        z.max = maxZ;\r\n\r\n    }\r\n\r\n    setupValuesBeforeGroupsSort() {\r\n    }\r\n\r\n    buildCells() {\r\n        var self = this;\r\n        var x = self.plot.x;\r\n        var y = self.plot.y;\r\n        var z = self.plot.z;\r\n        var valueMap = self.plot.valueMap;\r\n\r\n        var matrixCells = self.plot.cells = [];\r\n        var matrix = self.plot.matrix = [];\r\n\r\n        y.allValuesList.forEach((v1, i)=> {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            x.allValuesList.forEach((v2, j) => {\r\n                var zVal = undefined;\r\n                try {\r\n                    zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val]\r\n                } catch (e) {\r\n                }\r\n\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: zVal\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\r\n\r\n        var config = this.config;\r\n        var currentGroup = rootGroup;\r\n        axisGroupsConfig.keys.forEach((groupKey, groupKeyIndex) => {\r\n            currentGroup.key = groupKey;\r\n\r\n            if (!currentGroup.children) {\r\n                currentGroup.children = {};\r\n            }\r\n\r\n            var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\r\n\r\n            if (!currentGroup.children.hasOwnProperty(groupingValue)) {\r\n                rootGroup.lastIndex++;\r\n                currentGroup.children[groupingValue] = {\r\n                    values: [],\r\n                    children: null,\r\n                    groupingValue: groupingValue,\r\n                    level: currentGroup.level + 1,\r\n                    index: rootGroup.lastIndex,\r\n                    key: groupKey\r\n                }\r\n            }\r\n\r\n            currentGroup = currentGroup.children[groupingValue];\r\n        });\r\n\r\n        if (currentGroup.values.indexOf(axisVal) === -1) {\r\n            currentGroup.values.push(axisVal);\r\n        }\r\n\r\n        return currentGroup;\r\n    }\r\n\r\n    sortGroups(axis, group, axisConfig, gaps) {\r\n        if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\r\n            group.label = axisConfig.groups.labels[group.level];\r\n        } else {\r\n            group.label = group.key;\r\n        }\r\n\r\n        if (!gaps) {\r\n            gaps = [0];\r\n        }\r\n        if (gaps.length <= group.level) {\r\n            gaps.push(0);\r\n        }\r\n\r\n        group.allValuesCount = group.allValuesCount || 0;\r\n        group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\r\n\r\n        group.gaps = gaps.slice();\r\n        group.gapsBefore = gaps.slice();\r\n\r\n\r\n        group.gapsSize = Heatmap.computeGapsSize(group.gaps);\r\n        group.gapsBeforeSize = group.gapsSize;\r\n        if (group.values) {\r\n            if (axisConfig.sortLabels) {\r\n                group.values.sort(axisConfig.sortComparator);\r\n            }\r\n            group.values.forEach(v=>axis.allValuesList.push({val: v, group: group}));\r\n            group.allValuesBeforeCount = axis.totalValuesCount;\r\n            axis.totalValuesCount += group.values.length;\r\n            group.allValuesCount += group.values.length;\r\n        }\r\n\r\n        group.childrenList = [];\r\n        if (group.children) {\r\n            var childrenCount = 0;\r\n\r\n            for (var childProp in group.children) {\r\n                if (group.children.hasOwnProperty(childProp)) {\r\n                    var child = group.children[childProp];\r\n                    group.childrenList.push(child);\r\n                    childrenCount++;\r\n\r\n                    this.sortGroups(axis, child, axisConfig, gaps);\r\n                    group.allValuesCount += child.allValuesCount;\r\n                    gaps[group.level] += 1;\r\n                }\r\n            }\r\n\r\n            if (gaps && childrenCount > 1) {\r\n                gaps[group.level] -= 1;\r\n            }\r\n\r\n            group.gapsInside = [];\r\n            gaps.forEach((d, i)=> {\r\n                group.gapsInside.push(d - (group.gapsBefore[i] || 0));\r\n            });\r\n            group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\r\n\r\n            if (axis.gaps.length < gaps.length) {\r\n                axis.gaps = gaps;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    computeYAxisLabelsWidth(offset) {\r\n        var maxWidth = this.plot.margin.left;\r\n        if (this.config.y.title) {\r\n            maxWidth -= 15;\r\n        }\r\n        if (offset && offset.x) {\r\n            maxWidth += offset.x;\r\n        }\r\n\r\n        if (this.config.y.rotateLabels) {\r\n            maxWidth *= Utils.SQRT_2;\r\n            var fontSize = 11; //todo check actual font size\r\n            maxWidth -=fontSize/2;\r\n        }\r\n\r\n        return maxWidth;\r\n    }\r\n\r\n    computeXAxisLabelsWidth(offset) {\r\n        if (!this.config.x.rotateLabels) {\r\n            return this.plot.cellWidth - 2;\r\n        }\r\n        var size = this.plot.margin.bottom;\r\n        if (this.config.x.title) {\r\n            size -= 15;\r\n        }\r\n        if (offset && offset.y) {\r\n            size -= offset.y;\r\n        }\r\n\r\n        size *= Utils.SQRT_2;\r\n\r\n        var fontSize = 11; //todo check actual font size\r\n        size -=fontSize/2;\r\n\r\n        return size;\r\n    }\r\n\r\n    static computeGapSize(gapLevel) {\r\n        return Heatmap.maxGroupGapSize / (gapLevel + 1);\r\n    }\r\n\r\n    static computeGapsSize(gaps) {\r\n        var gapsSize = 0;\r\n        gaps.forEach((gapsNumber, gapsLevel)=> gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel));\r\n        return gapsSize;\r\n    }\r\n\r\n    computePlotSize() {\r\n\r\n        var plot = this.plot;\r\n        var conf = this.config;\r\n        var margin = plot.margin;\r\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\r\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\r\n        var width = availableWidth;\r\n        var height = availableHeight;\r\n\r\n        var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\r\n\r\n\r\n        var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\r\n        if (this.config.width) {\r\n\r\n            if (!this.config.cell.width) {\r\n                this.plot.cellWidth = computedCellWidth;\r\n            }\r\n\r\n        } else {\r\n            this.plot.cellWidth = this.config.cell.width;\r\n\r\n            if (!this.plot.cellWidth) {\r\n                this.plot.cellWidth = computedCellWidth;\r\n            }\r\n\r\n        }\r\n        width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\r\n\r\n        var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\r\n        var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\r\n        if (this.config.height) {\r\n            if (!this.config.cell.height) {\r\n                this.plot.cellHeight = computedCellHeight;\r\n            }\r\n        } else {\r\n            this.plot.cellHeight = this.config.cell.height;\r\n\r\n            if (!this.plot.cellHeight) {\r\n                this.plot.cellHeight = computedCellHeight;\r\n            }\r\n\r\n        }\r\n\r\n        height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\r\n\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n    }\r\n\r\n\r\n    setupZScale() {\r\n\r\n        var self = this;\r\n        var config = self.config;\r\n        var z = self.plot.z;\r\n        var range = config.color.range;\r\n        var extent = z.max - z.min;\r\n        var scale;\r\n        z.domain = [];\r\n        if (config.color.scale == \"pow\") {\r\n            var exponent = 10;\r\n            range.forEach((c, i)=> {\r\n                var v = z.max - (extent / Math.pow(10, i));\r\n                z.domain.push(v)\r\n            });\r\n            scale = d3.scale.pow().exponent(exponent);\r\n        } else if (config.color.scale == \"log\") {\r\n\r\n            range.forEach((c, i)=> {\r\n                var v = z.min + (extent / Math.pow(10, i));\r\n                z.domain.unshift(v)\r\n\r\n            });\r\n\r\n            scale = d3.scale.log()\r\n        } else {\r\n            range.forEach((c, i)=> {\r\n                var v = z.min + (extent * (i / (range.length - 1)));\r\n                z.domain.push(v)\r\n            });\r\n            scale = d3.scale[config.color.scale]();\r\n        }\r\n\r\n\r\n        z.domain[0] = z.min; //removing unnecessary floating points\r\n        z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\r\n        console.log(z.domain);\r\n\r\n        if (config.color.reverseScale) {\r\n            z.domain.reverse();\r\n        }\r\n\r\n        var plot = this.plot;\r\n\r\n        console.log(range);\r\n        plot.z.color.scale = scale.domain(z.domain).range(range);\r\n        var shape = plot.z.shape = {};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = \"rect\";\r\n\r\n        plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\r\n        plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\r\n    }\r\n\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        if (this.plot.groupByY) {\r\n            this.drawGroupsY(this.plot.y.groups, this.svgG);\r\n        }\r\n        if (this.plot.groupByX) {\r\n            this.drawGroupsX(this.plot.x.groups, this.svgG);\r\n        }\r\n\r\n        this.updateCells();\r\n\r\n        // this.updateVariableLabels();\r\n\r\n        this.updateAxisX();\r\n        this.updateAxisY();\r\n\r\n        if (this.config.showLegend) {\r\n            this.updateLegend();\r\n        }\r\n\r\n        this.updateAxisTitles();\r\n    };\r\n\r\n    updateAxisTitles() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n\r\n\r\n    }\r\n\r\n\r\n    updateAxisX() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = self.prefixClass(\"label\");\r\n        var labelXClass = labelClass + \"-x\";\r\n        var labelYClass = labelClass + \"-y\";\r\n        plot.labelClass = labelClass;\r\n\r\n        var offsetX = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        let gapSize = Heatmap.computeGapSize(0);\r\n        if (plot.groupByX) {\r\n            let overlap = self.config.x.groups.overlap;\r\n\r\n            offsetX.x = gapSize / 2;\r\n            offsetX.y = overlap.bottom + gapSize / 2 + 6;\r\n        } else if (plot.groupByY) {\r\n            offsetX.y = gapSize;\r\n        }\r\n\r\n\r\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\r\n            .data(plot.x.allValuesList, (d, i)=>i);\r\n\r\n        labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i);\r\n\r\n        labels\r\n            .attr(\"x\", (d, i) => (i * plot.cellWidth + plot.cellWidth / 2) + (d.group.gapsSize) + offsetX.x)\r\n            .attr(\"y\", plot.height + offsetX.y)\r\n            .attr(\"dy\", 10)\r\n\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text(d=>self.formatValueX(d.val));\r\n\r\n\r\n\r\n        var maxWidth = self.computeXAxisLabelsWidth(offsetX);\r\n\r\n        labels.each(function (label) {\r\n            var elem = d3.select(this),\r\n                text = self.formatValueX(label.val);\r\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\r\n        });\r\n\r\n        if (self.config.x.rotateLabels) {\r\n            labels.attr(\"transform\", (d, i) => \"rotate(-45, \" + ((i * plot.cellWidth + plot.cellWidth / 2) + d.group.gapsSize + offsetX.x ) + \", \" + ( plot.height + offsetX.y) + \")\")\r\n                .attr(\"dx\", -2)\r\n                .attr(\"dy\", 8)\r\n                .attr(\"text-anchor\", \"end\");\r\n        }\r\n\r\n\r\n        labels.exit().remove();\r\n\r\n\r\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x'))\r\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.height + plot.margin.bottom) + \")\")\r\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\r\n\r\n            .attr(\"dy\", \"-0.5em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(self.config.x.title);\r\n    }\r\n\r\n    updateAxisY() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = self.prefixClass(\"label\");\r\n        var labelYClass = labelClass + \"-y\";\r\n        plot.labelClass = labelClass;\r\n\r\n\r\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\r\n            .data(plot.y.allValuesList);\r\n\r\n        labels.enter().append(\"text\");\r\n\r\n        var offsetY = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        if (plot.groupByY) {\r\n            let overlap = self.config.y.groups.overlap;\r\n            let gapSize = Heatmap.computeGapSize(0);\r\n            offsetY.x = -overlap.left;\r\n\r\n            offsetY.y = gapSize / 2;\r\n        }\r\n        labels\r\n            .attr(\"x\", offsetY.x)\r\n            .attr(\"y\", (d, i) => (i * plot.cellHeight + plot.cellHeight / 2) + d.group.gapsSize + offsetY.y)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\r\n\r\n            .text(function (d) {\r\n                var formatted = self.formatValueY(d.val);\r\n                return formatted\r\n            });\r\n\r\n        var maxWidth = self.computeYAxisLabelsWidth(offsetY);\r\n\r\n        labels.each(function (label) {\r\n            var elem = d3.select(this),\r\n                text = self.formatValueY(label.val);\r\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\r\n        });\r\n\r\n        if (self.config.y.rotateLabels) {\r\n            labels\r\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + (offsetY.x  ) + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\")\r\n                .attr(\"text-anchor\", \"end\");\r\n            // .attr(\"dx\", -7);\r\n        } else {\r\n            labels.attr(\"dominant-baseline\", \"middle\")\r\n        }\r\n\r\n\r\n        labels.exit().remove();\r\n\r\n\r\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y'))\r\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(self.config.y.title);\r\n\r\n    }\r\n\r\n\r\n    drawGroupsY(parentGroup, container, availableWidth) {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n\r\n        var groupClass = self.prefixClass(\"group\");\r\n        var groupYClass = groupClass + \"-y\";\r\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass)\r\n            .data(parentGroup.childrenList);\r\n\r\n        var valuesBeforeCount = 0;\r\n        var gapsBeforeSize = 0;\r\n\r\n        var groupsEnterG = groups.enter().append(\"g\");\r\n        groupsEnterG\r\n            .classed(groupClass, true)\r\n            .classed(groupYClass, true)\r\n            .append(\"rect\").classed(\"group-rect\", true);\r\n\r\n        var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\r\n        titleGroupEnter.append(\"rect\");\r\n        titleGroupEnter.append(\"text\");\r\n\r\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\r\n        var padding = gapSize / 4;\r\n\r\n        var titleRectWidth = Heatmap.groupTitleRectHeight;\r\n        var depth = self.config.y.groups.keys.length - parentGroup.level;\r\n        var overlap = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n\r\n        if (!availableWidth) {\r\n            overlap.right = plot.y.overlap.left;\r\n            overlap.left = plot.y.overlap.left;\r\n            availableWidth = plot.width + gapSize + overlap.left + overlap.right;\r\n        }\r\n\r\n\r\n        groups\r\n            .attr(\"transform\", (d, i) => {\r\n                var translate = \"translate(\" + (padding - overlap.left) + \",\" + ((plot.cellHeight * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \")\";\r\n                gapsBeforeSize += (d.gapsInsideSize || 0);\r\n                valuesBeforeCount += d.allValuesCount || 0;\r\n                return translate\r\n            });\r\n\r\n\r\n        var groupWidth = availableWidth - padding * 2;\r\n\r\n        var titleGroups = groups.selectAll(\"g.title\")\r\n            .attr(\"transform\", (d, i) => \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\");\r\n\r\n        var tileRects = titleGroups.selectAll(\"rect\")\r\n            .attr(\"width\", titleRectWidth)\r\n            .attr(\"height\", d=> {\r\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            // .attr(\"fill\", \"lightgrey\")\r\n            .attr(\"stroke-width\", 0);\r\n\r\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\r\n\r\n\r\n        groups.selectAll(\"rect.group-rect\")\r\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\r\n            .attr(\"width\", groupWidth)\r\n            .attr(\"height\", d=> {\r\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"fill-opacity\", 0)\r\n            .attr(\"stroke-width\", 0.5)\r\n            .attr(\"stroke\", \"black\")\r\n\r\n\r\n        groups.each(function (group) {\r\n\r\n            self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\r\n        });\r\n\r\n    }\r\n\r\n    drawGroupsX(parentGroup, container, availableHeight) {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n\r\n        var groupClass = self.prefixClass(\"group\");\r\n        var groupXClass = groupClass + \"-x\";\r\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass)\r\n            .data(parentGroup.childrenList);\r\n\r\n        var valuesBeforeCount = 0;\r\n        var gapsBeforeSize = 0;\r\n\r\n        var groupsEnterG = groups.enter().append(\"g\");\r\n        groupsEnterG\r\n            .classed(groupClass, true)\r\n            .classed(groupXClass, true)\r\n            .append(\"rect\").classed(\"group-rect\", true);\r\n\r\n        var titleGroupEnter = groupsEnterG.appendSelector(\"g.title\");\r\n        titleGroupEnter.append(\"rect\");\r\n        titleGroupEnter.append(\"text\");\r\n\r\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\r\n        var padding = gapSize / 4;\r\n        var titleRectHeight = Heatmap.groupTitleRectHeight;\r\n\r\n        var depth = self.config.x.groups.keys.length - parentGroup.level;\r\n\r\n        var overlap = {\r\n            top: 0,\r\n            bottom: 0\r\n        };\r\n\r\n        if (!availableHeight) {\r\n            overlap.bottom = plot.x.overlap.bottom;\r\n            overlap.top = plot.x.overlap.top;\r\n            availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\r\n\r\n        } else {\r\n            overlap.top = -titleRectHeight;\r\n        }\r\n        // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\r\n\r\n        groups\r\n            .attr(\"transform\", (d, i) => {\r\n                var translate = \"translate(\" + ((plot.cellWidth * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\r\n                gapsBeforeSize += (d.gapsInsideSize || 0);\r\n                valuesBeforeCount += d.allValuesCount || 0;\r\n                return translate\r\n            });\r\n\r\n        var groupHeight = availableHeight - padding * 2;\r\n\r\n        var titleGroups = groups.selectAll(\"g.title\")\r\n            .attr(\"transform\", (d, i) => \"translate(0, \" + (0) + \")\");\r\n\r\n\r\n        var tileRects = titleGroups.selectAll(\"rect\")\r\n            .attr(\"height\", titleRectHeight)\r\n            .attr(\"width\", d=> {\r\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            // .attr(\"fill\", \"lightgrey\")\r\n            .attr(\"stroke-width\", 0);\r\n\r\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\r\n\r\n\r\n        groups.selectAll(\"rect.group-rect\")\r\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\r\n            .attr(\"height\", groupHeight)\r\n            .attr(\"width\", d=> {\r\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\r\n            })\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"fill-opacity\", 0)\r\n            .attr(\"stroke-width\", 0.5)\r\n            .attr(\"stroke\", \"black\");\r\n\r\n        groups.each(function (group) {\r\n            self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\r\n        });\r\n\r\n        groups.exit().remove();\r\n\r\n    }\r\n\r\n    setGroupMouseCallbacks(parentGroup, tileRects) {\r\n        var plot = this.plot;\r\n        var self = this;\r\n        var mouseoverCallbacks = [];\r\n        mouseoverCallbacks.push(function (d) {\r\n            d3.select(this).classed('highlighted', true);\r\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\r\n        });\r\n\r\n        var mouseoutCallbacks = [];\r\n        mouseoutCallbacks.push(function (d) {\r\n            d3.select(this).classed('highlighted', false);\r\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\r\n        });\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(d=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = parentGroup.label + \": \" + d.groupingValue;\r\n\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(d=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n        tileRects.on(\"mouseover\", function (d) {\r\n            var self = this;\r\n            mouseoverCallbacks.forEach(function (callback) {\r\n                callback.call(self, d)\r\n            });\r\n        });\r\n        tileRects.on(\"mouseout\", function (d) {\r\n            var self = this;\r\n            mouseoutCallbacks.forEach(function (callback) {\r\n                callback.call(self, d)\r\n            });\r\n        });\r\n    }\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellContainerClass = self.prefixClass(\"cells\");\r\n        var gapSize = Heatmap.computeGapSize(0);\r\n        var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\r\n        var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\r\n        var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\r\n        cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\r\n\r\n        var cellClass = self.prefixClass(\"cell\");\r\n        var cellShape = plot.z.shape.type;\r\n\r\n        var cells = cellContainer.selectAll(\"g.\" + cellClass)\r\n            .data(self.plot.cells);\r\n\r\n        var cellEnterG = cells.enter().append(\"g\")\r\n            .classed(cellClass, true);\r\n        cells.attr(\"transform\", c=> \"translate(\" + ((plot.cellWidth * c.col + plot.cellWidth / 2) + c.colVar.group.gapsSize) + \",\" + ((plot.cellHeight * c.row + plot.cellHeight / 2) + c.rowVar.group.gapsSize) + \")\");\r\n\r\n        var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\r\n\r\n        shapes\r\n            .attr(\"width\", plot.z.shape.width)\r\n            .attr(\"height\", plot.z.shape.height)\r\n            .attr(\"x\", -plot.cellWidth / 2)\r\n            .attr(\"y\", -plot.cellHeight / 2);\r\n\r\n        shapes.style(\"fill\", c=> c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value));\r\n        shapes.attr(\"fill-opacity\", d=> d.value === undefined ? 0 : 1);\r\n\r\n        var mouseoverCallbacks = [];\r\n        var mouseoutCallbacks = [];\r\n\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\r\n\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (self.config.highlightLabels) {\r\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\r\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\r\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\r\n\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\r\n            });\r\n            mouseoutCallbacks.push(c=> {\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\r\n            });\r\n        }\r\n\r\n\r\n        cells.on(\"mouseover\", c => {\r\n            mouseoverCallbacks.forEach(callback=>callback(c));\r\n        })\r\n            .on(\"mouseout\", c => {\r\n                mouseoutCallbacks.forEach(callback=>callback(c));\r\n            });\r\n\r\n        cells.on(\"click\", c=> {\r\n            self.trigger(\"cell-selected\", c);\r\n        });\r\n\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n    formatValueX(value) {\r\n        if (!this.config.x.formatter) return value;\r\n\r\n        return this.config.x.formatter.call(this.config, value);\r\n    }\r\n\r\n    formatValueY(value) {\r\n        if (!this.config.y.formatter) return value;\r\n\r\n        return this.config.y.formatter.call(this.config, value);\r\n    }\r\n\r\n    formatValueZ(value) {\r\n        if (!this.config.z.formatter) return value;\r\n\r\n        return this.config.z.formatter.call(this.config, value);\r\n    }\r\n\r\n    formatLegendValue(value) {\r\n        if (!this.config.legend.formatter) return value;\r\n\r\n        return this.config.legend.formatter.call(this.config, value);\r\n    }\r\n\r\n    updateLegend() {\r\n        var self = this;\r\n        var plot = this.plot;\r\n        var legendX = this.plot.width + 10;\r\n        var gapSize = Heatmap.computeGapSize(0);\r\n        if (this.plot.groupByY) {\r\n            legendX += gapSize / 2 + plot.y.overlap.right;\r\n        } else if (this.plot.groupByX) {\r\n            legendX += gapSize;\r\n        }\r\n        var legendY = 0;\r\n        if (this.plot.groupByX || this.plot.groupByY) {\r\n            legendY += gapSize / 2;\r\n        }\r\n\r\n        var barWidth = 10;\r\n        var barHeight = this.plot.height - 2;\r\n        var scale = plot.z.color.scale;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY, v => self.formatLegendValue(v)).setRotateLabels(self.config.legend.rotateLabels).linearGradientBar(barWidth, barHeight);\r\n    }\r\n\r\n\r\n}\r\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\r\nimport {Utils} from './utils'\r\n\r\nexport class HistogramConfig extends ChartWithColorGroupsConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'histogram';\r\n    showLegend=true;\r\n    showTooltip =true;\r\n    x={// X axis config\r\n        label: '', // axis label\r\n        key: 0,\r\n        value: (d, key) => Utils.isNumber(d) ? d : parseFloat(d[key]), // x value accessor\r\n        scale: \"linear\",\r\n        ticks: undefined,\r\n    };\r\n    y={// Y axis config\r\n        label: '', // axis label,\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    frequency=true;\r\n    groups={\r\n        key: 1\r\n    };\r\n    transition= true;\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class Histogram extends ChartWithColorGroups{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new HistogramConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new HistogramConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        var self=this;\r\n\r\n        var conf = this.config;\r\n\r\n        this.plot.x={};\r\n        this.plot.y={};\r\n        this.plot.bar={\r\n            color: null//color scale mapping function\r\n        };\r\n        \r\n        this.computePlotSize();\r\n        \r\n        this.setupX();\r\n        this.setupHistogram();\r\n        this.setupGroupStacks();\r\n        this.setupY();\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        if(conf.ticks){\r\n            x.axis.ticks(conf.ticks);\r\n        }\r\n        var data = this.plot.groupedData;\r\n        plot.x.scale.domain([d3.min(data, s=>d3.min(s.values, plot.x.value)), d3.max(data, s=>d3.max(s.values, plot.x.value))]);\r\n        \r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n        var data = this.plot.data;\r\n        var yStackMax = d3.max(plot.stackedHistograms, layer => d3.max(layer.histogramBins, d => d.y0 + d.y));\r\n        plot.y.scale.domain([0, yStackMax]);\r\n\r\n    };\r\n\r\n\r\n    setupHistogram() {\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var y = plot.y;\r\n        var ticks = this.config.x.ticks ? x.scale.ticks(this.config.x.ticks) : x.scale.ticks();\r\n\r\n        plot.histogram = d3.layout.histogram().frequency(this.config.frequency)\r\n            .value(x.value)\r\n            .bins(ticks);\r\n    }\r\n\r\n    setupGroupStacks() {\r\n        var self=this;\r\n        console.log(this.plot.groupedData);\r\n        this.plot.stack = d3.layout.stack().values(d=>d.histogramBins);\r\n        this.plot.groupedData.forEach(d=>{\r\n            d.histogramBins = this.plot.histogram.frequency(this.config.frequency || this.plot.groupingEnabled)(d.values);\r\n            console.log(d.histogramBins);\r\n            if(!this.config.frequency && this.plot.groupingEnabled){\r\n                d.histogramBins.forEach(b => {\r\n                    b.dy = b.dy/this.plot.dataLength\r\n                    b.y = b.y/this.plot.dataLength\r\n                });\r\n            }\r\n        });\r\n        this.plot.stackedHistograms = this.plot.stack(this.plot.groupedData);\r\n    }\r\n\r\n    drawAxisX(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\r\n\r\n        var axisT = axis;\r\n        if (self.config.transition) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.x.axis);\r\n\r\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\r\n\r\n        var axisT = axis;\r\n        if (self.config.transition) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.y.axis);\r\n\r\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n\r\n    drawHistogram() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        \r\n        var layerClass = this.prefixClass(\"layer\");\r\n\r\n        var barClass = this.prefixClass(\"bar\");\r\n        var layer = self.svgG.selectAll(\".\"+layerClass)\r\n            .data(plot.stackedHistograms);\r\n\r\n        layer.enter().append(\"g\")\r\n            .attr(\"class\", layerClass);\r\n\r\n        var bar = layer.selectAll(\".\"+barClass)\r\n            .data(d => d.histogramBins);\r\n\r\n        bar.enter().append(\"g\")\r\n            .attr(\"class\", barClass)\r\n            .append(\"rect\")\r\n            .attr(\"x\", 1);\r\n\r\n\r\n        var barRect = bar.select(\"rect\");\r\n\r\n        var barRectT = barRect;\r\n        var barT = bar;\r\n        var layerT = layer;\r\n        if (this.transitionEnabled()) {\r\n            barRectT = barRect.transition();\r\n            barT = bar.transition();\r\n            layerT= layer.transition();\r\n        }\r\n\r\n        barT.attr(\"transform\", function(d) { return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 +d.y)) + \")\"; });\r\n\r\n        var dx = plot.stackedHistograms.length ? (plot.stackedHistograms[0].histogramBins.length ?  plot.x.scale(plot.stackedHistograms[0].histogramBins[0].dx) : 0) : 0;\r\n        barRectT\r\n            .attr(\"width\",  dx - plot.x.scale(0)- 1)\r\n            .attr(\"height\", d =>   plot.height - plot.y.scale(d.y));\r\n\r\n        if(this.plot.color){\r\n            layerT\r\n                .attr(\"fill\", this.plot.seriesColor);\r\n        }\r\n\r\n        if (plot.tooltip) {\r\n            bar.on(\"mouseover\", d => {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                plot.tooltip.html(d.y)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            }).on(\"mouseout\", d => {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n        }\r\n        layer.exit().remove();\r\n        bar.exit().remove();\r\n    }\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n\r\n        this.drawHistogram();\r\n        return this;\r\n    };\r\n}\r\n","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\r\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\r\nexport {Regression, RegressionConfig} from './regression'\r\nexport {Heatmap, HeatmapConfig} from './heatmap'\r\nexport {HeatmapTimeSeries, HeatmapTimeSeriesConfig} from './heatmap-timeseries'\r\nexport {Histogram, HistogramConfig} from './histogram'\r\nexport {BarChart, BarChartConfig} from './bar-chart'\r\nexport {BoxPlotBase, BoxPlotBaseConfig} from './box-plot-base'\r\nexport {BoxPlot, BoxPlotConfig} from './box-plot'\r\nexport {StatisticsUtils} from './statistics-utils'\r\nexport {Legend} from './legend'\r\n\r\n\r\n\r\n\r\n\r\n","import {Utils} from \"./utils\";\r\nimport {color, size, symbol} from \"../bower_components/d3-legend/no-extend\";\r\n\r\n/*var d3 = require('../bower_components/d3');\r\n*/\r\n// var legend = require('../bower_components/d3-legend/no-extend');\r\n//\r\n// module.exports.legend = legend;\r\n\r\nexport class Legend {\r\n\r\n    cssClassPrefix=\"odc-\";\r\n    legendClass=this.cssClassPrefix+\"legend\";\r\n    container;\r\n    scale;\r\n    color= color;\r\n    size = size;\r\n    symbol= symbol;\r\n    guid;\r\n\r\n    labelFormat = undefined;\r\n\r\n    constructor(svg, legendParent, scale, legendX, legendY, labelFormat){\r\n        this.scale=scale;\r\n        this.svg = svg;\r\n        this.guid = Utils.guid();\r\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\r\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\r\n            .classed(this.legendClass, true);\r\n\r\n        this.labelFormat = labelFormat;\r\n    }\r\n\r\n\r\n\r\n    linearGradientBar(barWidth, barHeight, title){\r\n        var gradientId = this.cssClassPrefix+\"linear-gradient\"+\"-\"+this.guid;\r\n        var scale= this.scale;\r\n        var self = this;\r\n\r\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\r\n\r\n        this.container.append(\"rect\")\r\n            .attr(\"width\", barWidth)\r\n            .attr(\"height\", barHeight)\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\r\n\r\n\r\n        var ticks = this.container.selectAll(\"text\")\r\n            .data( scale.domain() );\r\n        var ticksNumber =scale.domain().length-1;\r\n        ticks.enter().append(\"text\");\r\n\r\n        ticks.attr(\"x\", barWidth)\r\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\r\n            .attr(\"dx\", 3)\r\n            // .attr(\"dy\", 1)\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .text(d=> self.labelFormat ? self.labelFormat(d) : d);\r\n        ticks.attr(\"dominant-baseline\", \"middle\")\r\n        if(this.rotateLabels){\r\n            ticks\r\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + barWidth + \", \" + (barHeight -(i*barHeight/ticksNumber)) + \")\")\r\n                .attr(\"text-anchor\", \"start\")\r\n                .attr(\"dx\", 5)\r\n                .attr(\"dy\", 5);\r\n\r\n        }else{\r\n\r\n        }\r\n\r\n        ticks.exit().remove();\r\n\r\n        return this;\r\n    }\r\n\r\n    setRotateLabels(rotateLabels) {\r\n        this.rotateLabels = rotateLabels;\r\n        return this;\r\n    }\r\n\r\n    \r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\n\r\n\r\nexport class RegressionConfig extends ScatterPlotConfig{\r\n\r\n    mainRegression = true;\r\n    groupRegression = true;\r\n    confidence={\r\n        level: 0.95,\r\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\r\n        marginOfError: undefined //custom  margin Of Error function (x, points)\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class Regression extends ScatterPlot{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new RegressionConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new RegressionConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        this.initRegressionLines();\r\n    }\r\n\r\n    initRegressionLines(){\r\n\r\n        var self = this;\r\n        var groupsAvailable = self.plot.groupingEnabled;\r\n\r\n        self.plot.regressions= [];\r\n\r\n\r\n        if(groupsAvailable && self.config.mainRegression){\r\n            var regression = this.initRegression(this.plot.data, false);\r\n            self.plot.regressions.push(regression);\r\n        }\r\n\r\n        if(self.config.groupRegression){\r\n            this.initGroupRegression();\r\n        }\r\n\r\n    }\r\n\r\n    initGroupRegression() {\r\n        var self = this;\r\n\r\n        self.plot.groupedData.forEach(group=>{\r\n            var regression = this.initRegression(group.values, group.key);\r\n            self.plot.regressions.push(regression);\r\n        });\r\n    }\r\n\r\n    initRegression(values, groupVal){\r\n        var self = this;\r\n\r\n        var points = values.map(d=>{\r\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\r\n        });\r\n\r\n        // points.sort((a,b) => a[0]-b[0]);\r\n\r\n        var linearRegression =  StatisticsUtils.linearRegression(points);\r\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\r\n\r\n\r\n        var extentX = d3.extent(points, d=>d[0]);\r\n\r\n\r\n        var linePoints = [\r\n            {\r\n                x: extentX[0],\r\n                y: linearRegressionLine(extentX[0])\r\n            },\r\n            {\r\n                x: extentX[1],\r\n                y: linearRegressionLine(extentX[1])\r\n            }\r\n        ];\r\n\r\n        var line = d3.svg.line()\r\n            .interpolate(\"basis\")\r\n            .x(d => self.plot.x.scale(d.x))\r\n            .y(d => self.plot.y.scale(d.y));\r\n\r\n        var color = self.plot.color;\r\n\r\n        var defaultColor = \"black\";\r\n        if(Utils.isFunction(color)){\r\n            if(values.length && groupVal!==false){\r\n                if(self.config.series){\r\n                    color =self.plot.colorCategory(groupVal);\r\n                }else{\r\n                    color = color(values[0]);\r\n                }\r\n\r\n            }else{\r\n                color = defaultColor;\r\n            }\r\n        }else if(!color && groupVal===false){\r\n            color = defaultColor;\r\n        }\r\n\r\n\r\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\r\n        return {\r\n            group: groupVal || false,\r\n            line: line,\r\n            linePoints: linePoints,\r\n            color: color,\r\n            confidence: confidence\r\n        };\r\n    }\r\n\r\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\r\n        var self = this;\r\n        var slope = linearRegression.m;\r\n        var n = points.length;\r\n        var degreesOfFreedom = Math.max(0, n-2);\r\n\r\n        var alpha = 1 - self.config.confidence.level;\r\n        var criticalProbability  = 1 - alpha/2;\r\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\r\n\r\n        var xValues = points.map(d=>d[0]);\r\n        var meanX = StatisticsUtils.mean(xValues);\r\n        var xMySum=0;\r\n        var xSum=0;\r\n        var xPowSum=0;\r\n        var ySum=0;\r\n        var yPowSum=0;\r\n        points.forEach(p=>{\r\n            var x = p[0];\r\n            var y = p[1];\r\n\r\n            xMySum += x*y;\r\n            xSum+=x;\r\n            ySum+=y;\r\n            xPowSum+= x*x;\r\n            yPowSum+= y*y;\r\n        });\r\n        var a = linearRegression.m;\r\n        var b = linearRegression.b;\r\n\r\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\r\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\r\n\r\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\r\n        var marginOfError =  x=> criticalValue* errorFn(x);\r\n\r\n\r\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\r\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\r\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\r\n\r\n\r\n        var computeConfidenceAreaPoint = x=>{\r\n            var linearRegression = linearRegressionLine(x);\r\n            var moe = marginOfError(x);\r\n            var confDown = linearRegression - moe;\r\n            var confUp = linearRegression + moe;\r\n            return {\r\n                x: x,\r\n                y0: confDown,\r\n                y1: confUp\r\n            }\r\n\r\n        };\r\n\r\n        var centerX = (extentX[1]+extentX[0])/2;\r\n\r\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\r\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\r\n\r\n        var fitInPlot = y => y;\r\n\r\n        var confidenceArea =  d3.svg.area()\r\n        .interpolate(\"monotone\")\r\n            .x(d => self.plot.x.scale(d.x))\r\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\r\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\r\n\r\n        return {\r\n            area:confidenceArea,\r\n            points:confidenceAreaPoints\r\n        };\r\n    }\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.updateRegressionLines();\r\n\r\n    };\r\n\r\n    updateRegressionLines() {\r\n        var self = this;\r\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\r\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\r\n\r\n        var clipPathId = self.prefixClass(\"clip\");\r\n\r\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\r\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\r\n            .attr(\"id\", clipPathId);\r\n\r\n\r\n        regressionContainerClip.selectOrAppend('rect')\r\n            .attr('width', self.plot.width)\r\n            .attr('height', self.plot.height)\r\n            .attr('x', 0)\r\n            .attr('y', 0);\r\n\r\n        regressionContainer.attr(\"clip-path\", (d,i) => \"url(#\"+clipPathId+\")\");\r\n\r\n        var regressionClass = this.prefixClass(\"regression\");\r\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\r\n        var regressionSelector = \"g.\"+regressionClass;\r\n        var regression = regressionContainer.selectAll(regressionSelector)\r\n            .data(self.plot.regressions, (d,i)=> d.group);\r\n\r\n        var regressionEnterG = regression.enter().insertSelector(regressionSelector);\r\n        var lineClass = self.prefixClass(\"line\");\r\n        regressionEnterG\r\n\r\n            .append(\"path\")\r\n            .attr(\"class\", lineClass)\r\n            .attr(\"shape-rendering\", \"optimizeQuality\");\r\n            // .append(\"line\")\r\n            // .attr(\"class\", \"line\")\r\n            // .attr(\"shape-rendering\", \"optimizeQuality\");\r\n\r\n        var line = regression.select(\"path.\"+lineClass)\r\n            .style(\"stroke\", r => r.color);\r\n        // .attr(\"x1\", r=> self.plot.x.scale(r.linePoints[0].x))\r\n            // .attr(\"y1\", r=> self.plot.y.scale(r.linePoints[0].y))\r\n            // .attr(\"x2\", r=> self.plot.x.scale(r.linePoints[1].x))\r\n            // .attr(\"y2\", r=> self.plot.y.scale(r.linePoints[1].y))\r\n\r\n\r\n        var lineT = line;\r\n        if (self.transitionEnabled()) {\r\n            lineT = line.transition();\r\n        }\r\n\r\n        lineT.attr(\"d\", r => r.line(r.linePoints))\r\n\r\n\r\n        regressionEnterG\r\n            .append(\"path\")\r\n            .attr(\"class\", confidenceAreaClass)\r\n            .attr(\"shape-rendering\", \"optimizeQuality\")\r\n            .style(\"opacity\", \"0.4\");\r\n\r\n\r\n\r\n        var area = regression.select(\"path.\"+confidenceAreaClass);\r\n\r\n        var areaT = area;\r\n        if (self.transitionEnabled()) {\r\n            areaT = area.transition();\r\n        }\r\n        areaT.attr(\"d\", r => r.confidence.area(r.confidence.points));\r\n        areaT.style(\"fill\", r => r.color)\r\n        regression.exit().remove();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import {ChartWithColorGroups} from \"./chart-with-color-groups\";\r\nimport {ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from \"./legend\";\r\n\r\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\r\n    size= undefined; //scatter plot cell size\r\n    minCellSize = 50;\r\n    maxCellSize = 1000;\r\n    padding= 20; //scatter plot cell padding\r\n    brush= true;\r\n    guides= true; //show axis guides\r\n    showTooltip= true; //show tooltip on dot hover\r\n    ticks= undefined; //ticks number, (default: computed using cell size)\r\n    x={// X axis config\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: undefined, //object property name or array index with grouping variable\r\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\r\n    };\r\n    variables= {\r\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey] // variable value accessor\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n        Utils.deepExtend(this, custom);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ScatterPlotMatrix extends ChartWithColorGroups {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        super.initPlot();\r\n\r\n        var self = this;\r\n        var margin = this.plot.margin;\r\n        var conf = this.config;\r\n        this.plot.x={};\r\n        this.plot.y={};\r\n        this.plot.dot={\r\n            color: null//color scale mapping function\r\n        };\r\n        \r\n        this.setupVariables();\r\n\r\n        this.plot.size = conf.size;\r\n\r\n\r\n        var width = conf.width;\r\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), margin);\r\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), margin);\r\n        if (!width) {\r\n            if(!this.plot.size){\r\n                this.plot.size =  Math.min(conf.maxCellSize, Math.max(conf.minCellSize, availableWidth/this.plot.variables.length));\r\n            }\r\n            width = margin.left + margin.right + this.plot.variables.length*this.plot.size;\r\n        }\r\n        if(!this.plot.size){\r\n            this.plot.size = (width - (margin.left + margin.right)) / this.plot.variables.length;\r\n        }\r\n\r\n        var height = width;\r\n        if (!height) {\r\n            height = availableHeight;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n        this.plot.ticks = conf.ticks;\r\n\r\n        if(this.plot.ticks===undefined){\r\n            this.plot.ticks = this.plot.size / 40;\r\n        }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    setupVariables() {\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.plot.groupedData;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n\r\n            plot.variables = data.length ? Utils.inferVariables(data[0].values, this.config.groups.key, this.config.includeInPlot) : [];\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            var min = d3.min(data, s=>d3.min(s.values, d=>variablesConf.value(d, variableKey)));\r\n            var max = d3.max(data, s=>d3.max(s.values, d=>variablesConf.value(d, variableKey)));\r\n            plot.domainByVariable[variableKey] = [min,max];\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        plot.subplots = [];\r\n    };\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config;\r\n\r\n        x.value = conf.variables.value;\r\n        x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\r\n        x.map = (d, variable) => x.scale(x.value(d, variable));\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(plot.ticks);\r\n        x.axis.tickSize(plot.size * plot.variables.length);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config;\r\n\r\n        y.value = conf.variables.value;\r\n        y.scale = d3.scale[conf.y.scale]().range([ plot.size - conf.padding / 2, conf.padding / 2]);\r\n        y.map = (d, variable) => y.scale(y.value(d, variable));\r\n        y.axis= d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(plot.ticks);\r\n        y.axis.tickSize(-plot.size * plot.variables.length);\r\n    };\r\n\r\n    update( newData) {\r\n        super.update(newData);\r\n\r\n        var self =this;\r\n        var n = self.plot.variables.length;\r\n        var conf = this.config;\r\n\r\n        var axisClass = self.prefixClass(\"axis\");\r\n        var axisXClass = axisClass+\"-x\";\r\n        var axisYClass = axisClass+\"-y\";\r\n\r\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\r\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\r\n\r\n        var noGuidesClass = self.prefixClass(\"no-guides\");\r\n        var xAxis = self.svgG.selectAll(xAxisSelector)\r\n            .data(self.plot.variables);\r\n\r\n        xAxis.enter().appendSelector(xAxisSelector)\r\n            .classed(noGuidesClass, !conf.guides);\r\n\r\n        xAxis.attr(\"transform\", (d, i) => \"translate(\" + (n - i - 1) * self.plot.size + \",0)\")\r\n            .each(function(d) {\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);\r\n                var axis = d3.select(this);\r\n                if (self.transitionEnabled()) {\r\n                    axis = axis.transition();\r\n                }\r\n                axis.call(self.plot.x.axis);\r\n\r\n            });\r\n\r\n        xAxis.exit().remove();\r\n\r\n        var yAxis = self.svgG.selectAll(yAxisSelector)\r\n            .data(self.plot.variables);\r\n        yAxis.enter().appendSelector(yAxisSelector);\r\n        yAxis.classed(noGuidesClass, !conf.guides)\r\n            .attr(\"transform\", (d, i) => \"translate(0,\" + i * self.plot.size + \")\");\r\n        yAxis.each(function(d) {\r\n            self.plot.y.scale.domain(self.plot.domainByVariable[d]);\r\n            var axis = d3.select(this);\r\n            if (self.transitionEnabled()) {\r\n                axis = axis.transition();\r\n            }\r\n            axis.call(self.plot.y.axis);\r\n\r\n        });\r\n\r\n        yAxis.exit().remove();\r\n\r\n        var cellClass =  self.prefixClass(\"cell\");\r\n        var cell = self.svgG.selectAll(\".\"+cellClass)\r\n            .data(self.utils.cross(self.plot.variables, self.plot.variables));\r\n\r\n        cell.enter().appendSelector(\"g.\"+cellClass).filter(d => d.i === d.j)\r\n            .append(\"text\");\r\n\r\n        cell.attr(\"transform\", d => \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\");\r\n\r\n        if(conf.brush){\r\n            this.drawBrush(cell);\r\n        }\r\n\r\n        cell.each(plotSubplot);\r\n\r\n        //Labels\r\n        cell.select(\"text\")\r\n            .attr(\"x\", conf.padding)\r\n            .attr(\"y\", conf.padding)\r\n            .attr(\"dy\", \".71em\")\r\n            .text( d => self.plot.labelByVariable[d.x]);\r\n\r\n        cell.exit().remove();\r\n\r\n        function plotSubplot(p) {\r\n            var plot = self.plot;\r\n            plot.subplots.push(p);\r\n            var cell = d3.select(this);\r\n\r\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\r\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\r\n\r\n            var frameClass =  self.prefixClass(\"frame\");\r\n            cell.selectOrAppend(\"rect.\"+frameClass)\r\n                .attr(\"class\", frameClass)\r\n                .attr(\"x\", conf.padding / 2)\r\n                .attr(\"y\", conf.padding / 2)\r\n                .attr(\"width\", plot.size - conf.padding)\r\n                .attr(\"height\", plot.size - conf.padding);\r\n            \r\n            p.update = function() {\r\n\r\n                var subplot = this;\r\n                var layerClass = self.prefixClass('layer');\r\n\r\n\r\n                var layer = cell.selectAll(\"g.\"+layerClass).data(self.plot.groupedData);\r\n\r\n                layer.enter().appendSelector(\"g.\"+layerClass);\r\n\r\n                var dots = layer.selectAll(\"circle\")\r\n                    .data(d=>d.values);\r\n\r\n                dots.enter().append(\"circle\");\r\n\r\n                var dotsT = dots;\r\n                if (self.transitionEnabled()) {\r\n                    dotsT = dots.transition();\r\n                }\r\n\r\n                dotsT.attr(\"cx\", (d) => plot.x.map(d, subplot.x))\r\n                    .attr(\"cy\", (d) => plot.y.map(d, subplot.y))\r\n                    .attr(\"r\", self.config.dotRadius);\r\n\r\n\r\n                if (plot.seriesColor) {\r\n                    layer.style(\"fill\", plot.seriesColor)\r\n                }else if(plot.color){\r\n                    dots.style(\"fill\", plot.color)\r\n                }\r\n\r\n\r\n                if(plot.tooltip){\r\n                    dots.on(\"mouseover\", (d) => {\r\n                        plot.tooltip.transition()\r\n                            .duration(200)\r\n                            .style(\"opacity\", .9);\r\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" +plot.y.value(d, subplot.y) + \")\";\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n                        var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\r\n                        if(group || group===0 ){\r\n                            group = plot.groupToLabel[group];\r\n                            html+=\"<br/>\";\r\n                            var label = self.config.groups.label;\r\n                            if(label){\r\n                                html+=label+\": \";\r\n                            }\r\n                            html+=group\r\n                        }\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                        .on(\"mouseout\", (d)=> {\r\n                            plot.tooltip.transition()\r\n                                .duration(500)\r\n                                .style(\"opacity\", 0);\r\n                        });\r\n                }\r\n\r\n                dots.exit().remove();\r\n                layer.exit().remove();\r\n            };\r\n            p.update();\r\n\r\n        }\r\n    };\r\n\r\n    drawBrush(cell) {\r\n        var self = this;\r\n        var brush = d3.svg.brush()\r\n            .x(self.plot.x.scale)\r\n            .y(self.plot.y.scale)\r\n            .on(\"brushstart\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"brushend\", brushend);\r\n\r\n        self.plot.brush = brush;\r\n\r\n        cell.selectOrAppend(\"g.brush-container\").call(brush);\r\n        self.clearBrush();\r\n\r\n        // Clear the previously-active brush, if any.\r\n        function brushstart(p) {\r\n            if (self.plot.brushCell !== this) {\r\n                self.clearBrush();\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\r\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\r\n                self.plot.brushCell = this;\r\n            }\r\n        }\r\n\r\n        // Highlight the selected circles.\r\n        function brushmove(p) {\r\n            var e = brush.extent();\r\n            self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\r\n                return e[0][0] > d[p.x] || d[p.x] > e[1][0]\r\n                    || e[0][1] > d[p.y] || d[p.y] > e[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        }\r\n    };\r\n\r\n    clearBrush(){\r\n        var self = this;\r\n        if(!self.plot.brushCell){\r\n            return;\r\n        }\r\n        d3.select(self.plot.brushCell).call(self.plot.brush.clear());\r\n        self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        self.plot.brushCell=null;\r\n    }\r\n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\r\nimport {Utils} from './utils'\r\nimport {Legend} from \"./legend\";\r\n\r\nexport class ScatterPlotConfig extends ChartWithColorGroupsConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'scatterplot';\r\n    guides= false; //show axis guides\r\n    showTooltip= true; //show tooltip on dot hover\r\n\r\n    x={// X axis config\r\n        label: '', // axis label\r\n        key: 0,\r\n        value: (d, key) => d[key], // x value accessor\r\n        orient: \"bottom\",\r\n        scale: \"linear\",\r\n        domainMargin: 0.05\r\n    };\r\n    y={// Y axis config\r\n        label: '', // axis label,\r\n        key: 1,\r\n        value: (d, key) => d[key], // y value accessor\r\n        orient: \"left\",\r\n        scale: \"linear\",\r\n        domainMargin: 0.05\r\n    };\r\n    groups={\r\n        key: 2\r\n    };\r\n    dotRadius = 2;\r\n    transition= true;\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ScatterPlot extends ChartWithColorGroups{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ScatterPlotConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        var self=this;\r\n\r\n        var conf = this.config;\r\n\r\n        this.plot.x={};\r\n        this.plot.y={};\r\n\r\n        this.computePlotSize();\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = d => x.scale(x.value(d));\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        var data = this.plot.groupedData;\r\n\r\n\r\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\r\n        var margin = (domain[1]-domain[0])* conf.domainMargin;\r\n        domain[0]-=margin;\r\n        domain[1]+=margin;\r\n        plot.x.scale.domain(domain);\r\n        if(this.config.guides) {\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n\r\n        /*\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         */\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = d => y.scale(y.value(d));\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n\r\n        if(this.config.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n\r\n\r\n        var data = this.plot.groupedData;\r\n\r\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\r\n        var margin = (domain[1]-domain[0])* conf.domainMargin;\r\n        domain[0]-=margin;\r\n        domain[1]+=margin;\r\n        plot.y.scale.domain(domain);\r\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\r\n    };\r\n\r\n    drawAxisX(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\r\n        \r\n        var axisT = axis;\r\n        if (self.transitionEnabled()) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.x.axis);\r\n        \r\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\r\n\r\n        var axisT = axis;\r\n        if (self.transitionEnabled()) {\r\n            axisT = axis.transition().ease(\"sin-in-out\");\r\n        }\r\n\r\n        axisT.call(plot.y.axis);\r\n\r\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n\r\n        this.updateDots();\r\n    };\r\n\r\n    updateDots() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var data = plot.data;\r\n        var layerClass = self.prefixClass('layer');\r\n        var dotClass = self.prefixClass('dot');\r\n        self.dotsContainerClass = self.prefixClass('dots-container');\r\n\r\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\r\n\r\n        var layer = dotsContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\r\n\r\n        layer.enter().appendSelector(\"g.\"+layerClass);\r\n\r\n        var dots = layer.selectAll('.' + dotClass)\r\n            .data(d=>d.values);\r\n\r\n        dots.enter().append(\"circle\")\r\n            .attr(\"class\", dotClass);\r\n\r\n        var dotsT = dots;\r\n        if (self.transitionEnabled()) {\r\n            dotsT = dots.transition();\r\n        }\r\n\r\n        dotsT.attr(\"r\", self.config.dotRadius)\r\n            .attr(\"cx\", plot.x.map)\r\n            .attr(\"cy\", plot.y.map);\r\n\r\n        if (plot.tooltip) {\r\n            dots.on(\"mouseover\", d => {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\r\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\r\n                if (group || group === 0) {\r\n                    group = plot.groupToLabel[group];\r\n                    html += \"<br/>\";\r\n                    var label = self.config.groups.label;\r\n                    if (label) {\r\n                        html += label + \": \";\r\n                    }\r\n                    html += group\r\n                }\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", d => {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        if (plot.seriesColor) {\r\n            layer.style(\"fill\", plot.seriesColor)\r\n        }else if(plot.color){\r\n            dots.style(\"fill\", plot.color)\r\n        }\r\n\r\n        dots.exit().remove();\r\n        layer.exit().remove();\r\n    }\r\n}\r\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\r\n\r\nvar su = module.exports.StatisticsUtils ={};\r\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\r\nsu.linearRegression = require('../bower_components/simple-statistics/src/linear_regression');\r\nsu.linearRegressionLine = require('../bower_components/simple-statistics/src/linear_regression_line');\r\nsu.errorFunction = require('../bower_components/simple-statistics/src/error_function');\r\nsu.standardDeviation = require('../bower_components/simple-statistics/src/standard_deviation');\r\nsu.sampleStandardDeviation = require('../bower_components/simple-statistics/src/sample_standard_deviation');\r\nsu.variance = require('../bower_components/simple-statistics/src/variance');\r\nsu.mean = require('../bower_components/simple-statistics/src/mean');\r\nsu.zScore = require('../bower_components/simple-statistics/src/z_score');\r\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\r\nsu.quantile = require('../bower_components/simple-statistics/src/quantile');\r\n\r\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\r\n    return tdistr(degreesOfFreedom, criticalProbability);\r\n};","export class Utils {\r\n    static SQRT_2 = 1.41421356237;\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, {[key]: source[key]});\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, {[key]: source[key]});\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static inferVariables(data, groupKey, includeGroup) {\r\n        var res = [];\r\n        if(!data){\r\n            return res;\r\n        }\r\n\r\n        if (data.length) {\r\n            var d = data[0];\r\n            if (d instanceof Array) {\r\n                res = d.map(function (v, i) {\r\n                    return i;\r\n                });\r\n            } else if (typeof d === 'object') {\r\n\r\n                for (var prop in d) {\r\n                    if (!d.hasOwnProperty(prop)) continue;\r\n\r\n                    res.push(prop);\r\n                }\r\n            }\r\n        }\r\n        if (groupKey !== null && groupKey !== undefined && !includeGroup) {\r\n            var index = res.indexOf(groupKey);\r\n            if (index > -1) {\r\n                res.splice(index, 1);\r\n            }\r\n        }\r\n        return res\r\n    };\r\n\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static isDate(a){\r\n        return Object.prototype.toString.call(a) === '[object Date]'\r\n    }\r\n\r\n    static isString(a){\r\n        return typeof a === 'string' || a instanceof String\r\n    }\r\n\r\n    static insertOrAppendSelector(parent, selector, operation, before) {\r\n        var selectorParts = selector.split(/([\\.\\#])/);\r\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\r\n        while (selectorParts.length > 1) {\r\n            var selectorModifier = selectorParts.shift();\r\n            var selectorItem = selectorParts.shift();\r\n            if (selectorModifier === \".\") {\r\n                element = element.classed(selectorItem, true);\r\n            } else if (selectorModifier === \"#\") {\r\n                element = element.attr('id', selectorItem);\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    static insertSelector(parent, selector, before) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\r\n    }\r\n\r\n    static appendSelector(parent, selector) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\r\n    }\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            if (element) {\r\n                return parent.append(element);\r\n            }\r\n            return Utils.appendSelector(parent, selector);\r\n\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static selectOrInsert(parent, selector, before) {\r\n        var selection = parent.select(selector);\r\n        if (selection.empty()) {\r\n            return Utils.insertSelector(parent, selector, before);\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\r\n        var defs = Utils.selectOrAppend(svg, \"defs\");\r\n        var linearGradient = defs.append(\"linearGradient\")\r\n            .attr(\"id\", gradientId);\r\n\r\n        linearGradient\r\n            .attr(\"x1\", x1 + \"%\")\r\n            .attr(\"y1\", y1 + \"%\")\r\n            .attr(\"x2\", x2 + \"%\")\r\n            .attr(\"y2\", y2 + \"%\");\r\n\r\n        //Append multiple color stops by using D3's data/enter step\r\n        var stops = linearGradient.selectAll(\"stop\")\r\n            .data(range);\r\n\r\n        stops.enter().append(\"stop\");\r\n\r\n        stops.attr(\"offset\", (d, i) => i / (range.length - 1))\r\n            .attr(\"stop-color\", d => d);\r\n\r\n        stops.exit().remove();\r\n    }\r\n\r\n    static sanitizeHeight = function (height, container) {\r\n        return (height || parseInt(container.style('height'), 10) || 400);\r\n    };\r\n\r\n    static sanitizeWidth = function (width, container) {\r\n        return (width || parseInt(container.style('width'), 10) || 960);\r\n    };\r\n\r\n    static availableHeight = function (height, container, margin) {\r\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\r\n    };\r\n\r\n    static availableWidth = function (width, container, margin) {\r\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\r\n    };\r\n\r\n    static guid() {\r\n        function s4() {\r\n            return Math.floor((1 + Math.random()) * 0x10000)\r\n                .toString(16)\r\n                .substring(1);\r\n        }\r\n\r\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n            s4() + '-' + s4() + s4() + s4();\r\n    }\r\n\r\n    //places textString in textObj, adds an ellipsis if text can't fit in width\r\n    static placeTextWithEllipsis(textD3Obj, textString, width){\r\n        var textObj = textD3Obj.node();\r\n        textObj.textContent=textString;\r\n\r\n        var margin = 0;\r\n        var ellipsisLength = 9;\r\n        //ellipsis is needed\r\n        if (textObj.getComputedTextLength()>width+margin){\r\n            for (var x=textString.length-3;x>0;x-=1){\r\n                if (textObj.getSubStringLength(0,x)+ellipsisLength<=width+margin){\r\n                    textObj.textContent=textString.substring(0,x)+\"...\";\r\n                    return true;\r\n                }\r\n            }\r\n            textObj.textContent=\"...\"; //can't place at all\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip){\r\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\r\n        if(ellipsisPlaced && tooltip){\r\n            textD3Obj.on(\"mouseover\", function (d) {\r\n                tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                tooltip.html(textString)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            textD3Obj.on(\"mouseout\", function (d) {\r\n                tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    static getFontSize(element){\r\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}