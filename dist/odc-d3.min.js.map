{"version":3,"sources":["node_modules/browser-pack/_prelude.js","odc-d3.js","src/chart.js","src/index.js","src/scatterplot-matrix.js","src/scatterplot.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ODCD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Chart","ChartConfig","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","custom","cssClassPrefix","svgClass","width","height","margin","left","right","top","bottom","tooltip","Utils","deepExtend","placeholderSelector","data","config","utils","svg","plot","setConfig","setData","init","initPlot","initSvg","draw","d3","select","empty","remove","append","attr","svgG","selectOrAppend","style","on","update","./utils","2","_scatterplot","get","ScatterPlot","ScatterPlotConfig","_scatterplotMatrix","ScatterPlotMatrix","ScatterPlotMatrixConfig","./scatterplot","./scatterplot-matrix","3","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_chart","_ScatterPlotConfig","_this","size","padding","brush","guides","ticks","x","orient","scale","y","groups","includeInPlot","d","label","variables","labels","keys","variableKey","_Chart","conf","dot","color","setupVariables","placeholderNode","node","maxWidth","Math","min","getBoundingClientRect","setupX","setupY","d3ColorCategory","colorCategory","colorValue","String","variablesConf","domainByVariable","inferVariables","labelByVariable","forEach","index","extent","push","subplots","range","map","variable","axis","tickSize","plotSubplot","p","cell","domain","subplot","dots","selectAll","enter","radius","transition","duration","html","event","pageX","pageY","group","exit","each","cross","j","drawBrush","filter","text","brushstart","brushCell","clear","brushmove","classed","brushend","./chart","4","_ChartConfig","max","drawAxisX","drawAxisY","axisConf","newData","5","_defineProperty","obj","_typeof","Symbol","iterator","out","arguments","Array","isArray","source","hasOwnProperty","isObject","srcObj","output","assign","isObjectNotArray","mergeDeep","b","c","m","groupKey","includeGroup","res","v","prop","indexOf","splice","item","isNaN","selector","element","selection"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ODCD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chart = exports.ChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChartConfig = exports.ChartConfig = function ChartConfig(custom) {\n    _classCallCheck(this, ChartConfig);\n\n    this.cssClassPrefix = \"odc-\";\n    this.svgClass = 'mw-d3-chart';\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    this.tooltip = false;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar Chart = exports.Chart = function () {\n    function Chart(placeholderSelector, data, config) {\n        _classCallCheck(this, Chart);\n\n        this.utils = _utils.Utils;\n        this.placeholderSelector = placeholderSelector;\n        this.svg = null;\n        this.config = undefined;\n        this.plot = {\n            margin: {}\n        };\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n\n        this.init();\n    }\n\n    _createClass(Chart, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new ChartConfig();\n            } else {\n                this.config = config;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setData',\n        value: function setData(data) {\n            this.data = data;\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n            self.initPlot();\n            self.initSvg();\n            self.draw();\n        }\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            var config = this.config;\n            void 0;\n\n            var width = self.plot.width + config.margin.left + config.margin.right;\n            var height = self.plot.height + config.margin.top + config.margin.bottom;\n            var aspect = width / height;\n\n            self.svg = d3.select(self.placeholderSelector).select(\"svg\");\n            if (!self.svg.empty()) {\n                self.svg.remove();\n            }\n            self.svg = d3.select(self.placeholderSelector).append(\"svg\");\n\n            self.svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height).attr(\"preserveAspectRatio\", \"xMidYMid meet\").attr(\"class\", config.svgClass);\n            self.svgG = self.svg.append(\"g\").attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\n\n            if (config.tooltip) {\n                self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div').attr(\"class\", \"mw-tooltip\").style(\"opacity\", 0);\n            }\n\n            if (!config.width || config.height) {\n                d3.select(window).on(\"resize\", function () {\n                    //TODO add responsiveness if width/height not specified\n                });\n            }\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {}\n    }, {\n        key: 'update',\n        value: function update(data) {\n            if (data) {\n                this.setData(data);\n            }\n            void 0;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.update();\n        }\n    }]);\n\n    return Chart;\n}();\n\n},{\"./utils\":5}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _scatterplot = require(\"./scatterplot\");\n\nObject.defineProperty(exports, \"ScatterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlot;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlotConfig;\n  }\n});\n\nvar _scatterplotMatrix = require(\"./scatterplot-matrix\");\n\nObject.defineProperty(exports, \"ScatterPlotMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrix;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrixConfig;\n  }\n});\n\n},{\"./scatterplot\":4,\"./scatterplot-matrix\":3}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlotMatrix = exports.ScatterPlotMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotMatrixConfig = exports.ScatterPlotMatrixConfig = function (_ScatterPlotConfig) {\n    _inherits(ScatterPlotMatrixConfig, _ScatterPlotConfig);\n\n    //ticks number, (default: computed using cell size)\n    //show axis guides\n    //scatter plot cell padding\n\n    function ScatterPlotMatrixConfig(custom) {\n        _classCallCheck(this, ScatterPlotMatrixConfig);\n\n        // this.svgClass = 'mw-d3-scatterplot-matrix';\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrixConfig).call(this));\n\n        _this.svgClass = 'mw-d3-scatterplot-matrix';\n        _this.size = 200;\n        _this.padding = 20;\n        _this.brush = true;\n        _this.guides = true;\n        _this.tooltip = true;\n        _this.ticks = undefined;\n        _this.x = { // X axis config\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: undefined, //object property name or array index with grouping variable\n            includeInPlot: false, //include group as variable in plot, boolean (default: false)\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.variables = {\n            labels: [], //optional array of variable labels (for the diagonal of the plot).\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                // variable value accessor\n                return d[variableKey];\n            }\n        };\n        void 0;\n        _utils.Utils.deepExtend(_this, custom);\n        return _this;\n    } //show tooltip on dot hover\n    //scatter plot cell size\n\n\n    return ScatterPlotMatrixConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar ScatterPlotMatrix = exports.ScatterPlotMatrix = function (_Chart) {\n    _inherits(ScatterPlotMatrix, _Chart);\n\n    function ScatterPlotMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlotMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrix).call(this, placeholderSelector, data, new ScatterPlotMatrixConfig(config)));\n    }\n\n    _createClass(ScatterPlotMatrix, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"setConfig\", this).call(this, new ScatterPlotMatrixConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            this.setupVariables();\n\n            this.plot.size = conf.size;\n\n            var width = conf.width;\n            var placeholderNode = d3.select(this.placeholderSelector).node();\n\n            if (!width) {\n                var maxWidth = margin.left + margin.right + this.plot.variables.length * this.plot.size;\n                width = Math.min(placeholderNode.getBoundingClientRect().width, maxWidth);\n            }\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            if (conf.ticks === undefined) {\n                conf.ticks = this.plot.size / 40;\n            }\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            } else if (conf.groups.key) {\n                this.plot.dot.color = function (d) {\n                    return self.plot.dot.colorCategory(d[conf.groups.key]);\n                };\n            }\n\n            return this;\n        }\n    }, {\n        key: \"setupVariables\",\n        value: function setupVariables() {\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n\n            plot.subplots = [];\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config;\n\n            x.value = conf.variables.value;\n            x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\n            x.map = function (d, variable) {\n                return x.scale(x.value(d, variable));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\n            x.axis.tickSize(plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config;\n\n            y.value = conf.variables.value;\n            y.scale = d3.scale[conf.y.scale]().range([plot.size - conf.padding / 2, conf.padding / 2]);\n            y.map = function (d, variable) {\n                return y.scale(y.value(d, variable));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\n            y.axis.tickSize(-plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            var self = this;\n            var n = self.plot.variables.length;\n            var conf = this.config;\n            self.svgG.selectAll(\".mw-axis-x.mw-axis\").data(self.plot.variables).enter().append(\"g\").attr(\"class\", \"mw-axis-x mw-axis\" + (conf.guides ? '' : ' mw-no-guides')).attr(\"transform\", function (d, i) {\n                return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\";\n            }).each(function (d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.x.axis);\n            });\n\n            self.svgG.selectAll(\".mw-axis-y.mw-axis\").data(self.plot.variables).enter().append(\"g\").attr(\"class\", \"mw-axis-y mw-axis\" + (conf.guides ? '' : ' mw-no-guides')).attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * self.plot.size + \")\";\n            }).each(function (d) {\n                self.plot.y.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.y.axis);\n            });\n\n            if (conf.tooltip) {\n                self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div').attr(\"class\", \"mw-tooltip\").style(\"opacity\", 0);\n            }\n\n            var cell = self.svgG.selectAll(\".mw-cell\").data(self.utils.cross(self.plot.variables, self.plot.variables)).enter().append(\"g\").attr(\"class\", \"mw-cell\").attr(\"transform\", function (d) {\n                return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\";\n            });\n\n            if (conf.brush) {\n                this.drawBrush(cell);\n            }\n\n            cell.each(plotSubplot);\n\n            //Labels\n            cell.filter(function (d) {\n                return d.i === d.j;\n            }).append(\"text\").attr(\"x\", conf.padding).attr(\"y\", conf.padding).attr(\"dy\", \".71em\").text(function (d) {\n                return self.plot.labelByVariable[d.x];\n            });\n\n            function plotSubplot(p) {\n                var plot = self.plot;\n                plot.subplots.push(p);\n                var cell = d3.select(this);\n\n                plot.x.scale.domain(plot.domainByVariable[p.x]);\n                plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n                cell.append(\"rect\").attr(\"class\", \"mw-frame\").attr(\"x\", conf.padding / 2).attr(\"y\", conf.padding / 2).attr(\"width\", conf.size - conf.padding).attr(\"height\", conf.size - conf.padding);\n\n                p.update = function () {\n                    var subplot = this;\n                    var dots = cell.selectAll(\"circle\").data(self.data);\n\n                    dots.enter().append(\"circle\");\n\n                    dots.attr(\"cx\", function (d) {\n                        return plot.x.map(d, subplot.x);\n                    }).attr(\"cy\", function (d) {\n                        return plot.y.map(d, subplot.y);\n                    }).attr(\"r\", self.config.dot.radius);\n\n                    if (plot.dot.color) {\n                        dots.style(\"fill\", plot.dot.color);\n                    }\n\n                    if (plot.tooltip) {\n                        dots.on(\"mouseover\", function (d) {\n                            plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                            var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\n                            var group = self.config.groups.value(d);\n                            if (group || group === 0) {\n                                html += \"<br/>\";\n                                var label = self.config.groups.label;\n                                if (label) {\n                                    html += label + \": \";\n                                }\n                                html += group;\n                            }\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                        }).on(\"mouseout\", function (d) {\n                            plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                        });\n                    }\n\n                    dots.exit().remove();\n                };\n\n                p.update();\n            }\n        }\n    }, {\n        key: \"update\",\n        value: function update() {\n            this.plot.subplots.forEach(function (p) {\n                p.update();\n            });\n        }\n    }, {\n        key: \"drawBrush\",\n        value: function drawBrush(cell) {\n            var self = this;\n            var brush = d3.svg.brush().x(self.plot.x.scale).y(self.plot.y.scale).on(\"brushstart\", brushstart).on(\"brush\", brushmove).on(\"brushend\", brushend);\n\n            cell.append(\"g\").call(brush);\n\n            var brushCell;\n\n            // Clear the previously-active brush, if any.\n            function brushstart(p) {\n                if (brushCell !== this) {\n                    d3.select(brushCell).call(brush.clear());\n                    self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                    self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                    brushCell = this;\n                }\n            }\n\n            // Highlight the selected circles.\n            function brushmove(p) {\n                var e = brush.extent();\n                self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\n                    return e[0][0] > d[p.x] || d[p.x] > e[1][0] || e[0][1] > d[p.y] || d[p.y] > e[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            }\n        }\n    }]);\n\n    return ScatterPlotMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":1,\"./scatterplot\":4,\"./utils\":5}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlot = exports.ScatterPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotConfig = exports.ScatterPlotConfig = function (_ChartConfig) {\n    _inherits(ScatterPlotConfig, _ChartConfig);\n\n    //show axis guides\n\n    function ScatterPlotConfig(custom) {\n        _classCallCheck(this, ScatterPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotConfig).call(this));\n\n        _this.svgClass = 'mw-d3-scatterplot';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.x = { // X axis config\n            label: 'X', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return d[key];\n            }, // x value accessor\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            label: 'Y', // axis label,\n            key: 1,\n            value: function value(d, key) {\n                return d[key];\n            }, // y value accessor\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: 2,\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n\n        var config = _this;\n        _this.dot = {\n            radius: 2,\n            color: function color(d) {\n                return config.groups.value(d, config.groups.key);\n            }, // string or function returning color's value for color scale\n            d3ColorCategory: 'category10'\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } //show tooltip on dot hover\n\n\n    return ScatterPlotConfig;\n}(_chart.ChartConfig);\n\nvar ScatterPlot = exports.ScatterPlot = function (_Chart) {\n    _inherits(ScatterPlot, _Chart);\n\n    function ScatterPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlot).call(this, placeholderSelector, data, new ScatterPlotConfig(config)));\n    }\n\n    _createClass(ScatterPlot, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlot.prototype), 'setConfig', this).call(this, new ScatterPlotConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            var width = conf.width;\n            var placeholderNode = d3.select(this.placeholderSelector).node();\n\n            if (!width) {\n                width = placeholderNode.getBoundingClientRect().width;\n            }\n            var height = conf.height;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            } else {}\n\n            return this;\n        }\n    }, {\n        key: 'setupX',\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            var data = this.data;\n            plot.x.scale.domain([d3.min(data, plot.x.value) - 1, d3.max(data, plot.x.value) + 1]);\n            if (this.config.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n        }\n    }, {\n        key: 'setupY',\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n\n            /*\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             */\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n\n            if (this.config.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n\n            var data = this.data;\n            plot.y.scale.domain([d3.min(data, plot.y.value) - 1, d3.max(data, plot.y.value) + 1]);\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.drawAxisX();\n            this.drawAxisY();\n            this.update();\n        }\n    }, {\n        key: 'drawAxisX',\n        value: function drawAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            self.svgG.append(\"g\").attr(\"class\", \"mw-axis-x mw-axis\" + (self.config.guides ? '' : ' mw-no-guides')).attr(\"transform\", \"translate(0,\" + plot.height + \")\").call(plot.x.axis).append(\"text\").attr(\"class\", \"mw-label\").attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + self.config.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawAxisY',\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            self.svgG.append(\"g\").attr(\"class\", \"mw-axis mw-axis-y\" + (self.config.guides ? '' : ' mw-no-guides')).call(plot.y.axis).append(\"text\").attr(\"class\", \"mw-label\").attr(\"transform\", \"translate(\" + -self.config.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            // D3ChartBase.prototype.update.call(this, newData);\n            var self = this;\n            var plot = self.plot;\n            var data = this.data;\n            var dots = self.svgG.selectAll(\".mw-dot\").data(data);\n\n            dots.enter().append(\"circle\").attr(\"class\", \"mw-dot\");\n\n            dots.attr(\"r\", self.config.dot.radius).attr(\"cx\", plot.x.map).attr(\"cy\", plot.y.map);\n\n            if (plot.tooltip) {\n                dots.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                    var group = self.config.groups.value(d, self.config.groups.key);\n                    if (group || group === 0) {\n                        html += \"<br/>\";\n                        var label = self.config.groups.label;\n                        if (label) {\n                            html += label + \": \";\n                        }\n                        html += group;\n                    }\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (plot.dot.color) {\n                dots.style(\"fill\", plot.dot.color);\n            }\n\n            dots.exit().remove();\n        }\n    }]);\n\n    return ScatterPlot;\n}(_chart.Chart);\n\n/*\r\n\r\n\r\n function ScatterPlot(placeholderSelector, data, config){\r\n var self =  this;\r\n this.defaultConfig = {\r\n svgClass: 'mw-d3-scatterplot',\r\n guides: false, //show axis guides\r\n tooltip: true, //show tooltip on dot hover\r\n x:{// X axis config\r\n label: 'X', // axis label\r\n key: 0,\r\n value: function(d) { return d[self.config.x.key] }, // x value accessor\r\n orient: \"bottom\",\r\n scale: \"linear\"\r\n },\r\n y:{// Y axis config\r\n label: 'Y', // axis label,\r\n key: 1,\r\n value: function(d) { return d[self.config.y.key] }, // y value accessor\r\n orient: \"left\",\r\n scale: \"linear\"\r\n },\r\n groups:{\r\n key: 2,\r\n value: function(d) { return d[self.config.groups.key] }, // grouping value accessor,\r\n label: \"\"\r\n },\r\n dot:{\r\n radius: 2,\r\n color: function(d) { return self.config.groups.value(d) }, // string or function returning color's value for color scale\r\n d3ColorCategory: 'category10'\r\n }\r\n\r\n };\r\n D3ChartBase.call(self, placeholderSelector, data, config);\r\n console.log(this.defaultConfig);\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\n ScatterPlot.prototype.\r\n\r\n\r\n */\n\n},{\"./chart\":1,\"./utils\":5}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'inferVariables',\n        value: function inferVariables(data, groupKey, includeGroup) {\n            var res = [];\n            if (data.length) {\n                var d = data[0];\n                if (d instanceof Array) {\n                    res = d.map(function (v, i) {\n                        return i;\n                    });\n                } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object') {\n\n                    for (var prop in d) {\n                        if (!d.hasOwnProperty(prop)) continue;\n\n                        res.push(prop);\n                    }\n                }\n            }\n            if (!includeGroup) {\n                var index = res.indexOf(groupKey);\n                if (index > -1) {\n                    res.splice(index, 1);\n                }\n            }\n            return res;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return parent.append(element || selector);\n            }\n            return selection;\n        }\n    }]);\n\n    return Utils;\n}();\n\n},{}]},{},[2])(2)\n});\n\n","import {Utils} from './utils'\r\n\r\nexport class ChartConfig{\r\n    cssClassPrefix = \"odc-\";\r\n    svgClass = 'mw-d3-chart';\r\n    width = undefined;\r\n    height =  undefined;\r\n    margin ={\r\n        left: 50,\r\n        right: 30,\r\n        top: 30,\r\n        bottom: 50\r\n    };\r\n    tooltip = false;\r\n    constructor(custom){\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n\r\n        this.utils = Utils;\r\n        this.placeholderSelector = placeholderSelector;\r\n        this.svg=null;\r\n        this.config = undefined;\r\n        this.plot={\r\n            margin:{}\r\n        }\r\n\r\n\r\n        this.setConfig(config);\r\n\r\n        if(data){\r\n            this.setData(data);\r\n        }\r\n\r\n        this.init();\r\n    }\r\n\r\n    setConfig(config){\r\n        if(!config){\r\n            this.config = new ChartConfig();\r\n        }else{\r\n            this.config = config;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setData(data){\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    init(){\r\n        var self = this;\r\n        self.initPlot();\r\n        self.initSvg();\r\n        self.draw();\r\n    }\r\n\r\n    initSvg(){\r\n        var self = this;\r\n        var config = this.config;\r\n        console.log(config.svgClass);\r\n\r\n        var width = self.plot.width+ config.margin.left + config.margin.right;\r\n        var height =  self.plot.height+ config.margin.top + config.margin.bottom;\r\n        var aspect = width / height;\r\n\r\n        self.svg = d3.select(self.placeholderSelector).select(\"svg\");\r\n        if(!self.svg.empty()){\r\n            self.svg.remove();\r\n\r\n        }\r\n        self.svg = d3.select(self.placeholderSelector).append(\"svg\");\r\n\r\n        self.svg\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .attr(\"viewBox\", \"0 0 \"+\" \"+width+\" \"+height)\r\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n            .attr(\"class\", config.svgClass);\r\n        self.svgG = self.svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\r\n\r\n        if(config.tooltip){\r\n            self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div')\r\n                .attr(\"class\", \"mw-tooltip\")\r\n                .style(\"opacity\", 0);\r\n        }\r\n\r\n        if(!config.width || config.height ){\r\n            d3.select(window)\r\n                .on(\"resize\", function() {\r\n                    //TODO add responsiveness if width/height not specified\r\n                });\r\n        }\r\n    }\r\n\r\n    initPlot(){\r\n\r\n    }\r\n\r\n    update(data){\r\n        if(data){\r\n            this.setData(data);\r\n        }\r\n        console.log('base uppdate')\r\n\r\n    }\r\n\r\n    draw(){\r\n        this.update();\r\n    }\r\n}\r\n","export {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\r\n\r\n    svgClass= 'mw-d3-scatterplot-matrix';\r\n    size= 200; //scatter plot cell size\r\n    padding= 20; //scatter plot cell padding\r\n    brush= true;\r\n    guides= true; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    ticks= undefined; //ticks number, (default: computed using cell size)\r\n    x={// X axis config\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: undefined, //object property name or array index with grouping variable\r\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    variables= {\r\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\r\n        keys: [], //optional array of variable keys\r\n        value: function (d, variableKey) {// variable value accessor\r\n            return d[variableKey];\r\n        }\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        // this.svgClass = 'mw-d3-scatterplot-matrix';\r\n        console.log(custom);\r\n        Utils.deepExtend(this, custom);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ScatterPlotMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n\r\n\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot = {\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        this.setupVariables();\r\n\r\n        this.plot.size = conf.size;\r\n\r\n\r\n        var width = conf.width;\r\n        var placeholderNode = d3.select(this.placeholderSelector).node();\r\n\r\n        if (!width) {\r\n            var maxWidth = margin.left + margin.right + this.plot.variables.length*this.plot.size;\r\n            width = Math.min(placeholderNode.getBoundingClientRect().width, maxWidth);\r\n\r\n        }\r\n        var height = width;\r\n        if (!height) {\r\n            height = placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n\r\n        if(conf.ticks===undefined){\r\n            conf.ticks = this.plot.size / 40;\r\n        }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if (conf.dot.d3ColorCategory) {\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if (colorValue) {\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String) {\r\n                this.plot.dot.color = colorValue;\r\n            } else if (this.plot.dot.colorCategory) {\r\n                this.plot.dot.color = function (d) {\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }else if(conf.groups.key){\r\n            this.plot.dot.color = function (d) {\r\n                return self.plot.dot.colorCategory(d[conf.groups.key]);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    setupVariables() {\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach(function(variableKey, index) {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function(d) { return variablesConf.value(d, variableKey) });\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n        plot.subplots = [];\r\n    };\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config;\r\n\r\n        x.value = conf.variables.value;\r\n        x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\r\n        x.map = function (d, variable) {\r\n            return x.scale(x.value(d, variable));\r\n        };\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\r\n        x.axis.tickSize(plot.size * plot.variables.length);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config;\r\n\r\n        y.value = conf.variables.value;\r\n        y.scale = d3.scale[conf.y.scale]().range([ plot.size - conf.padding / 2, conf.padding / 2]);\r\n        y.map = function (d, variable) {\r\n            return y.scale(y.value(d, variable));\r\n        };\r\n        y.axis= d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\r\n        y.axis.tickSize(-plot.size * plot.variables.length);\r\n    };\r\n\r\n    draw() {\r\n        var self =this;\r\n        var n = self.plot.variables.length;\r\n        var conf = this.config;\r\n        self.svgG.selectAll(\".mw-axis-x.mw-axis\")\r\n            .data(self.plot.variables)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-axis-x mw-axis\"+(conf.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", function(d, i) { return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\"; })\r\n            .each(function(d) { self.plot.x.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.x.axis); });\r\n\r\n        self.svgG.selectAll(\".mw-axis-y.mw-axis\")\r\n            .data(self.plot.variables)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-axis-y mw-axis\"+(conf.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * self.plot.size + \")\"; })\r\n            .each(function(d) { self.plot.y.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.y.axis); });\r\n\r\n\r\n        if(conf.tooltip){\r\n            self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div')\r\n                .attr(\"class\", \"mw-tooltip\")\r\n                .style(\"opacity\", 0);\r\n        }\r\n\r\n        var cell = self.svgG.selectAll(\".mw-cell\")\r\n            .data(self.utils.cross(self.plot.variables, self.plot.variables))\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-cell\")\r\n            .attr(\"transform\", function(d) { return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\"; });\r\n\r\n        if(conf.brush){\r\n            this.drawBrush(cell);\r\n        }\r\n\r\n        cell.each(plotSubplot);\r\n\r\n\r\n\r\n        //Labels\r\n        cell.filter(function(d) { return d.i === d.j; }).append(\"text\")\r\n            .attr(\"x\", conf.padding)\r\n            .attr(\"y\", conf.padding)\r\n            .attr(\"dy\", \".71em\")\r\n            .text(function(d) { return self.plot.labelByVariable[d.x]; });\r\n\r\n\r\n\r\n\r\n        function plotSubplot(p) {\r\n            var plot = self.plot;\r\n            plot.subplots.push(p);\r\n            var cell = d3.select(this);\r\n\r\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\r\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\r\n\r\n            cell.append(\"rect\")\r\n                .attr(\"class\", \"mw-frame\")\r\n                .attr(\"x\", conf.padding / 2)\r\n                .attr(\"y\", conf.padding / 2)\r\n                .attr(\"width\", conf.size - conf.padding)\r\n                .attr(\"height\", conf.size - conf.padding);\r\n\r\n\r\n            p.update = function(){\r\n                var subplot = this;\r\n                var dots = cell.selectAll(\"circle\")\r\n                    .data(self.data);\r\n\r\n                dots.enter().append(\"circle\");\r\n\r\n                dots.attr(\"cx\", function(d){return plot.x.map(d, subplot.x)})\r\n                    .attr(\"cy\", function(d){return plot.y.map(d, subplot.y)})\r\n                    .attr(\"r\", self.config.dot.radius);\r\n\r\n                if (plot.dot.color) {\r\n                    dots.style(\"fill\", plot.dot.color)\r\n                }\r\n\r\n                if(plot.tooltip){\r\n                    dots.on(\"mouseover\", function(d) {\r\n                        plot.tooltip.transition()\r\n                            .duration(200)\r\n                            .style(\"opacity\", .9);\r\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" +plot.y.value(d, subplot.y) + \")\";\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n                        var group = self.config.groups.value(d);\r\n                        if(group || group===0 ){\r\n                            html+=\"<br/>\";\r\n                            var label = self.config.groups.label;\r\n                            if(label){\r\n                                html+=label+\": \";\r\n                            }\r\n                            html+=group\r\n                        }\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                        .on(\"mouseout\", function(d) {\r\n                            plot.tooltip.transition()\r\n                                .duration(500)\r\n                                .style(\"opacity\", 0);\r\n                        });\r\n                }\r\n\r\n                dots.exit().remove();\r\n            };\r\n\r\n            p.update();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    update() {\r\n        this.plot.subplots.forEach(function(p){p.update()});\r\n    };\r\n\r\n    drawBrush(cell) {\r\n        var self = this;\r\n        var brush = d3.svg.brush()\r\n            .x(self.plot.x.scale)\r\n            .y(self.plot.y.scale)\r\n            .on(\"brushstart\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"brushend\", brushend);\r\n\r\n        cell.append(\"g\").call(brush);\r\n\r\n\r\n        var brushCell;\r\n\r\n        // Clear the previously-active brush, if any.\r\n        function brushstart(p) {\r\n            if (brushCell !== this) {\r\n                d3.select(brushCell).call(brush.clear());\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\r\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\r\n                brushCell = this;\r\n            }\r\n        }\r\n\r\n        // Highlight the selected circles.\r\n        function brushmove(p) {\r\n            var e = brush.extent();\r\n            self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\r\n                return e[0][0] > d[p.x] || d[p.x] > e[1][0]\r\n                    || e[0][1] > d[p.y] || d[p.y] > e[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        }\r\n    };\r\n}","\r\nimport {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotConfig extends ChartConfig{\r\n\r\n    svgClass= 'mw-d3-scatterplot';\r\n    guides= false; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    x={// X axis config\r\n        label: 'X', // axis label\r\n        key: 0,\r\n        value: function(d, key) { return d[key] }, // x value accessor\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        label: 'Y', // axis label,\r\n        key: 1,\r\n        value: function(d, key) { return d[key] }, // y value accessor\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: 2,\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n        var config = this;\r\n        this.dot={\r\n            radius: 2,\r\n            color: function(d) { return config.groups.value(d, config.groups.key) }, // string or function returning color's value for color scale\r\n            d3ColorCategory: 'category10'\r\n        };\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ScatterPlot extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ScatterPlotConfig(config));\r\n\r\n    }\r\n\r\n    initPlot(){\r\n        var self=this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot={\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        var width = conf.width;\r\n        var placeholderNode = d3.select(this.placeholderSelector).node();\r\n\r\n        if(!width){\r\n            width =placeholderNode.getBoundingClientRect().width;\r\n        }\r\n        var height = conf.height;\r\n        if(!height){\r\n            height =placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if(conf.dot.d3ColorCategory){\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if(colorValue){\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String){\r\n                this.plot.dot.color = colorValue;\r\n            }else if(this.plot.dot.colorCategory){\r\n                this.plot.dot.color = function(d){\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }else{\r\n\r\n\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = function(d) { return x.scale(x.value(d));};\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        var data = this.data;\r\n        plot.x.scale.domain([d3.min(data, plot.x.value)-1, d3.max(data, plot.x.value)+1]);\r\n        if(this.config.guides) {\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n\r\n        /*\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         */\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = function(d) { return y.scale(y.value(d));};\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n\r\n        if(this.config.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n\r\n\r\n        var data = this.data;\r\n        plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\r\n    };\r\n\r\n    draw(){\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.update();\r\n    };\r\n\r\n    drawAxisX(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        self.svgG.append(\"g\")\r\n            .attr(\"class\", \"mw-axis-x mw-axis\"+(self.config.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\")\r\n            .call(plot.x.axis)\r\n            .append(\"text\")\r\n            .attr(\"class\", \"mw-label\")\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (self.config.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        self.svgG.append(\"g\")\r\n            .attr(\"class\", \"mw-axis mw-axis-y\"+(self.config.guides ? '' : ' mw-no-guides'))\r\n            .call(plot.y.axis)\r\n            .append(\"text\")\r\n            .attr(\"class\", \"mw-label\")\r\n            .attr(\"transform\", \"translate(\"+ -self.config.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    update(newData){\r\n        // D3ChartBase.prototype.update.call(this, newData);\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var data = this.data;\r\n        var dots = self.svgG.selectAll(\".mw-dot\")\r\n            .data(data);\r\n\r\n        dots.enter().append(\"circle\")\r\n            .attr(\"class\", \"mw-dot\");\r\n\r\n\r\n        dots.attr(\"r\", self.config.dot.radius)\r\n            .attr(\"cx\", plot.x.map)\r\n            .attr(\"cy\", plot.y.map);\r\n\r\n        if(plot.tooltip){\r\n            dots.on(\"mouseover\", function(d) {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = \"(\" + plot.x.value(d) + \", \" +plot.y.value(d) + \")\";\r\n                var group = self.config.groups.value(d, self.config.groups.key);\r\n                if(group || group===0 ){\r\n                    html+=\"<br/>\";\r\n                    var label = self.config.groups.label;\r\n                    if(label){\r\n                        html+=label+\": \";\r\n                    }\r\n                    html+=group\r\n                }\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", function(d) {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        if(plot.dot.color){\r\n            dots.style(\"fill\", plot.dot.color)\r\n        }\r\n\r\n        dots.exit().remove();\r\n\r\n    };\r\n}\r\n\r\n/*\r\n\r\n\r\n function ScatterPlot(placeholderSelector, data, config){\r\n var self =  this;\r\n this.defaultConfig = {\r\n svgClass: 'mw-d3-scatterplot',\r\n guides: false, //show axis guides\r\n tooltip: true, //show tooltip on dot hover\r\n x:{// X axis config\r\n label: 'X', // axis label\r\n key: 0,\r\n value: function(d) { return d[self.config.x.key] }, // x value accessor\r\n orient: \"bottom\",\r\n scale: \"linear\"\r\n },\r\n y:{// Y axis config\r\n label: 'Y', // axis label,\r\n key: 1,\r\n value: function(d) { return d[self.config.y.key] }, // y value accessor\r\n orient: \"left\",\r\n scale: \"linear\"\r\n },\r\n groups:{\r\n key: 2,\r\n value: function(d) { return d[self.config.groups.key] }, // grouping value accessor,\r\n label: \"\"\r\n },\r\n dot:{\r\n radius: 2,\r\n color: function(d) { return self.config.groups.value(d) }, // string or function returning color's value for color scale\r\n d3ColorCategory: 'category10'\r\n }\r\n\r\n };\r\n D3ChartBase.call(self, placeholderSelector, data, config);\r\n console.log(this.defaultConfig);\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\n ScatterPlot.prototype.\r\n\r\n\r\n */\r\n","export class Utils {\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, { [key]: source[key] });\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static inferVariables(data, groupKey, includeGroup) {\r\n        var res = [];\r\n        if (data.length) {\r\n            var d = data[0];\r\n            if (d instanceof Array) {\r\n                res=  d.map(function (v, i) {\r\n                    return i;\r\n                });\r\n            }else if (typeof d === 'object'){\r\n\r\n                for (var prop in d) {\r\n                    if(!d.hasOwnProperty(prop)) continue;\r\n\r\n                    res.push(prop);\r\n                }\r\n            }\r\n        }\r\n        if(!includeGroup){\r\n            var index = res.indexOf(groupKey);\r\n            if (index > -1) {\r\n                res.splice(index, 1);\r\n            }\r\n        }\r\n        return res\r\n    };\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if(selection.empty()){\r\n            return parent.append(element || selector);\r\n        }\r\n        return selection;\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}