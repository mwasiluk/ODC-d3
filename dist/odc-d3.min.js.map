{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/simple-statistics/src/mean.js","odc-d3.js","bower_components/simple-statistics/src/sample_correlation.js","bower_components/simple-statistics/src/sample_covariance.js","bower_components/simple-statistics/src/sample_standard_deviation.js","bower_components/simple-statistics/src/sample_variance.js","bower_components/simple-statistics/src/sum.js","bower_components/simple-statistics/src/sum_nth_power_deviations.js","src/chart.js","src/correlation-matrix.js","src/index.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ODCD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","mean","x","NaN","sum","./sum","2","sampleCorrelation","y","cov","sampleCovariance","xstd","sampleStandardDeviation","ystd","./sample_covariance","./sample_standard_deviation","3","xmean","ymean","besselsCorrection","./mean","4","sampleVarianceX","sampleVariance","isNaN","Math","sqrt","./sample_variance","5","sumSquaredDeviationsValue","sumNthPowerDeviations","./sum_nth_power_deviations","6","correctedCurrentValue","nextSum","errorCompensation","7","meanValue","pow","8","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Chart","ChartConfig","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","custom","cssClassPrefix","svgClass","width","height","margin","left","right","top","bottom","tooltip","Utils","deepExtend","placeholderSelector","data","config","utils","svg","plot","setConfig","setData","init","initPlot","initSvg","draw","d3","select","empty","remove","append","attr","svgG","selectOrAppend","style","on","update","./utils","9","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","CorrelationMatrix","CorrelationMatrixConfig","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_chart","_statisticsUtils","_ChartConfig","_this","guides","variables","scale","labels","keys","d","variableKey","label","correlation","domain","range","xValues","yValues","StatisticsUtils","cell","shape","size","sizeMin","sizeMax","padding","_Chart","conf","matrix","cells","color","setupVariables","placeholderNode","node","parentWidth","getBoundingClientRect","cellSize","max","min","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","rangeBands","map","corrConf","cellConf","type","shapeSize","radiusMax","radiusScale","linear","radius","c","abs","radiusX","radiusY","rotateVal","v","variablesConf","domainByVariable","inferVariables","groups","includeInPlot","labelByVariable","forEach","index","extent","push","matrixCells","variableToValues","v1","row","v2","j","corr","rowVar","colVar","col","newData","updateCells","cellClass","cellShape","selectAll","enter","shapes","transition","duration","html","event","pageX","pageY","exit","./chart","./statistics-utils","10","_scatterplot","ScatterPlot","ScatterPlotConfig","_scatterplotMatrix","ScatterPlotMatrix","ScatterPlotMatrixConfig","_correlationMatrix","./correlation-matrix","./scatterplot","./scatterplot-matrix","11","_ScatterPlotConfig","brush","ticks","orient","dot","maxWidth","setupX","setupY","d3ColorCategory","colorCategory","colorValue","String","subplots","variable","axis","tickSize","plotSubplot","p","subplot","dots","group","each","cross","drawBrush","filter","text","brushstart","brushCell","clear","brushmove","classed","brushend","12","drawAxisX","drawAxisY","axisConf","13","su","../bower_components/simple-statistics/src/sample_correlation","14","_defineProperty","obj","_typeof","Symbol","iterator","out","arguments","Array","isArray","source","hasOwnProperty","isObject","srcObj","output","assign","isObjectNotArray","mergeDeep","b","m","groupKey","includeGroup","res","prop","indexOf","splice","item","selector","element","selection"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n/* @flow */\r\n\r\nvar sum = require('./sum');\r\n\r\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\r\nfunction mean(x /*: Array<number> */)/*:number*/ {\r\n    // The mean of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    return sum(x) / x.length;\r\n}\r\n\r\nmodule.exports = mean;\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ODCD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\nfunction mean(x /*: Array<number> */) /*:number*/{\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n\n},{\"./sum\":6}],2:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\nfunction sampleCorrelation(x /*: Array<number> */, y /*: Array<number> */) /*:number*/{\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n\n},{\"./sample_covariance\":3,\"./sample_standard_deviation\":4}],3:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/) /*:number*/{\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length <= 1 || x.length !== y.length) {\n        return NaN;\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n\n},{\"./mean\":1}],4:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\nfunction sampleStandardDeviation(x /*:Array<number>*/) /*:number*/{\n  // The standard deviation of no numbers is null\n  var sampleVarianceX = sampleVariance(x);\n  if (isNaN(sampleVarianceX)) {\n    return NaN;\n  }\n  return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n\n},{\"./sample_variance\":5}],5:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\nfunction sampleVariance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length <= 1) {\n        return NaN;\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n\n},{\"./sum_nth_power_deviations\":7}],6:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\n\nfunction sum(x /*: Array<number> */) /*: number */{\n\n    // like the traditional sum algorithm, we keep a running\n    // count of the current sum.\n    var sum = 0;\n\n    // but we also keep three extra variables as bookkeeping:\n    // most importantly, an error correction value. This will be a very\n    // small number that is the opposite of the floating point precision loss.\n    var errorCompensation = 0;\n\n    // this will be each number in the list corrected with the compensation value.\n    var correctedCurrentValue;\n\n    // and this will be the next sum\n    var nextSum;\n\n    for (var i = 0; i < x.length; i++) {\n        // first correct the value that we're going to add to the sum\n        correctedCurrentValue = x[i] - errorCompensation;\n\n        // compute the next sum. sum is likely a much larger number\n        // than correctedCurrentValue, so we'll lose precision here,\n        // and measure how much precision is lost in the next step\n        nextSum = sum + correctedCurrentValue;\n\n        // we intentionally didn't assign sum immediately, but stored\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\n        // not equal to 0? ideally it would be, but in practice it won't:\n        // it will be some very small number. that's what we record\n        // as errorCompensation.\n        errorCompensation = nextSum - sum - correctedCurrentValue;\n\n        // now that we've computed how much we'll correct for in the next\n        // loop, start treating the nextSum as the current sum.\n        sum = nextSum;\n    }\n\n    return sum;\n}\n\nmodule.exports = sum;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\nfunction sumNthPowerDeviations(x /*: Array<number> */, n /*: number */) /*:number*/{\n    var meanValue = mean(x),\n        sum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        sum += Math.pow(x[i] - meanValue, n);\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n\n},{\"./mean\":1}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chart = exports.ChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChartConfig = exports.ChartConfig = function ChartConfig(custom) {\n    _classCallCheck(this, ChartConfig);\n\n    this.cssClassPrefix = \"odc-\";\n    this.svgClass = 'mw-d3-chart';\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    this.tooltip = false;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar Chart = exports.Chart = function () {\n    function Chart(placeholderSelector, data, config) {\n        _classCallCheck(this, Chart);\n\n        this.utils = _utils.Utils;\n        this.placeholderSelector = placeholderSelector;\n        this.svg = null;\n        this.config = undefined;\n        this.plot = {\n            margin: {}\n        };\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n\n        this.init();\n    }\n\n    _createClass(Chart, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new ChartConfig();\n            } else {\n                this.config = config;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setData',\n        value: function setData(data) {\n            this.data = data;\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n            self.initPlot();\n            self.initSvg();\n            self.draw();\n        }\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            var config = this.config;\n            void 0;\n\n            var width = self.plot.width + config.margin.left + config.margin.right;\n            var height = self.plot.height + config.margin.top + config.margin.bottom;\n            var aspect = width / height;\n\n            self.svg = d3.select(self.placeholderSelector).select(\"svg\");\n            if (!self.svg.empty()) {\n                self.svg.remove();\n            }\n            self.svg = d3.select(self.placeholderSelector).append(\"svg\");\n\n            self.svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height).attr(\"preserveAspectRatio\", \"xMidYMid meet\").attr(\"class\", config.svgClass);\n            self.svgG = self.svg.append(\"g\").attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\n\n            if (config.tooltip) {\n                self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div').attr(\"class\", \"mw-tooltip\").style(\"opacity\", 0);\n            }\n\n            if (!config.width || config.height) {\n                d3.select(window).on(\"resize\", function () {\n                    //TODO add responsiveness if width/height not specified\n                });\n            }\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {}\n    }, {\n        key: 'update',\n        value: function update(data) {\n            if (data) {\n                this.setData(data);\n            }\n            void 0;\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.update();\n        }\n    }]);\n\n    return Chart;\n}();\n\n},{\"./utils\":14}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CorrelationMatrix = exports.CorrelationMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _statisticsUtils = require('./statistics-utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CorrelationMatrixConfig = exports.CorrelationMatrixConfig = function (_ChartConfig) {\n    _inherits(CorrelationMatrixConfig, _ChartConfig);\n\n    //show axis guides\n\n    function CorrelationMatrixConfig(custom) {\n        _classCallCheck(this, CorrelationMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrixConfig).call(this));\n\n        _this.svgClass = 'odc-correlation-matrix';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.variables = {\n            scale: \"ordinal\",\n            labels: undefined,\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            }, // variable value accessor\n            label: function label(d, key) {\n                return key;\n            }\n        };\n        _this.correlation = {\n            scale: \"linear\",\n            domain: [-1, 0, 1],\n            range: [\"darkblue\", \"white\", \"crimson\"],\n            value: function value(xValues, yValues) {\n                return _statisticsUtils.StatisticsUtils.sampleCorrelation(xValues, yValues);\n            }\n\n        };\n        _this.cell = {\n            shape: \"ellipse\", //possible values: rect, circle, ellipse\n            size: undefined,\n            sizeMin: 5,\n            sizeMax: 80,\n            padding: 1\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    } //show tooltip on dot hover\n\n\n    return CorrelationMatrixConfig;\n}(_chart.ChartConfig);\n\nvar CorrelationMatrix = exports.CorrelationMatrix = function (_Chart) {\n    _inherits(CorrelationMatrix, _Chart);\n\n    function CorrelationMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, CorrelationMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrix).call(this, placeholderSelector, data, new CorrelationMatrixConfig(config)));\n    }\n\n    _createClass(CorrelationMatrix, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'setConfig', this).call(this, new CorrelationMatrixConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                correlation: {\n                    matrix: undefined,\n                    cells: undefined,\n                    color: {},\n                    shape: {}\n                }\n\n            };\n            this.setupVariables();\n            var width = conf.width;\n            var placeholderNode = d3.select(this.placeholderSelector).node();\n\n            var parentWidth = placeholderNode.getBoundingClientRect().width;\n            if (width) {\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n                }\n            } else {\n                this.plot.cellSize = this.config.cell.size;\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, parentWidth / this.plot.variables.length));\n                }\n\n                width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n            }\n\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            this.setupVariablesScales();\n            this.setupCorrelationScales();\n            this.setupCorrelationMatrix();\n\n            return this;\n        }\n    }, {\n        key: 'setupVariablesScales',\n        value: function setupVariablesScales() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.variables;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = conf.value;\n            x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n        }\n    }, {\n        key: 'setupCorrelationScales',\n        value: function setupCorrelationScales() {\n            var plot = this.plot;\n            var corrConf = this.config.correlation;\n\n            plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\n            var shape = plot.correlation.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = cellConf.shape;\n\n            var shapeSize = plot.cellSize - cellConf.padding * 2;\n            if (shape.type == 'circle') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\n                shape.radius = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n            } else if (shape.type == 'ellipse') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\n                shape.radiusX = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n                shape.radiusY = radiusMax;\n\n                shape.rotateVal = function (v) {\n                    if (v == 0) return \"0\";\n                    if (v < 0) return \"-45\";\n                    return \"45\";\n                };\n            } else if (shape.type == 'rect') {\n                shape.size = shapeSize;\n            }\n        }\n    }, {\n        key: 'setupVariables',\n        value: function setupVariables() {\n\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n        }\n    }, {\n        key: 'setupCorrelationMatrix',\n        value: function setupCorrelationMatrix() {\n            var self = this;\n            var data = this.data;\n            var matrix = this.plot.correlation.matrix = [];\n            var matrixCells = this.plot.correlation.matrix.cells = [];\n            var plot = this.plot;\n\n            var variableToValues = {};\n            plot.variables.forEach(function (v, i) {\n\n                variableToValues[v] = data.map(function (d) {\n                    return plot.x.value(d, v);\n                });\n            });\n\n            plot.variables.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                plot.variables.forEach(function (v2, j) {\n                    var corr = 1;\n                    if (v1 != v2) {\n                        corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                    }\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: corr\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.update();\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'update', this).call(this, newData);\n            this.updateCells();\n            // this.updateAxes();\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellClass = self.config.cssClassPrefix + \"cell\";\n            var cellShape = plot.correlation.shape.type;\n\n            var data = this.data;\n\n            var cells = self.svgG.selectAll(cellClass).data(plot.correlation.matrix.cells);\n\n            cells.enter().append(\"g\").attr(\"class\", cellClass);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\";\n            });\n            var shapes = cells.append(cellShape);\n\n            if (plot.correlation.shape.type == 'circle') {\n\n                shapes.attr(\"r\", plot.correlation.shape.radius).attr(\"cx\", 0).attr(\"cy\", 0);\n            }\n\n            if (plot.correlation.shape.type == 'ellipse') {\n                // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n                shapes.attr(\"rx\", plot.correlation.shape.radiusX).attr(\"ry\", plot.correlation.shape.radiusY).attr(\"cx\", 0).attr(\"cy\", 0).attr(\"transform\", function (c) {\n                    return \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\";\n                });\n            }\n\n            if (plot.correlation.shape.type == 'rect') {\n                shapes.attr(\"width\", plot.correlation.shape.size).attr(\"height\", plot.correlation.shape.size).attr(\"x\", -plot.cellSize / 2).attr(\"y\", -plot.cellSize / 2);\n            }\n\n            if (plot.tooltip) {\n                cells.on(\"mouseover\", function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value;\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            shapes.style(\"fill\", function (c) {\n                return plot.correlation.color.scale(c.value);\n            });\n\n            cells.exit().remove();\n        }\n    }]);\n\n    return CorrelationMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":8,\"./statistics-utils\":13,\"./utils\":14}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _scatterplot = require(\"./scatterplot\");\n\nObject.defineProperty(exports, \"ScatterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlot;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlotConfig;\n  }\n});\n\nvar _scatterplotMatrix = require(\"./scatterplot-matrix\");\n\nObject.defineProperty(exports, \"ScatterPlotMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrix;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrixConfig;\n  }\n});\n\nvar _correlationMatrix = require(\"./correlation-matrix\");\n\nObject.defineProperty(exports, \"CorrelationMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrix;\n  }\n});\nObject.defineProperty(exports, \"CorrelationMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrixConfig;\n  }\n});\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nObject.defineProperty(exports, \"StatisticsUtils\", {\n  enumerable: true,\n  get: function get() {\n    return _statisticsUtils.StatisticsUtils;\n  }\n});\n\n},{\"./correlation-matrix\":9,\"./scatterplot\":12,\"./scatterplot-matrix\":11,\"./statistics-utils\":13}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlotMatrix = exports.ScatterPlotMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotMatrixConfig = exports.ScatterPlotMatrixConfig = function (_ScatterPlotConfig) {\n    _inherits(ScatterPlotMatrixConfig, _ScatterPlotConfig);\n\n    //ticks number, (default: computed using cell size)\n    //show axis guides\n    //scatter plot cell padding\n\n    function ScatterPlotMatrixConfig(custom) {\n        _classCallCheck(this, ScatterPlotMatrixConfig);\n\n        // this.svgClass = 'mw-d3-scatterplot-matrix';\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrixConfig).call(this));\n\n        _this.svgClass = 'mw-d3-scatterplot-matrix';\n        _this.size = 200;\n        _this.padding = 20;\n        _this.brush = true;\n        _this.guides = true;\n        _this.tooltip = true;\n        _this.ticks = undefined;\n        _this.x = { // X axis config\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: undefined, //object property name or array index with grouping variable\n            includeInPlot: false, //include group as variable in plot, boolean (default: false)\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.variables = {\n            labels: [], //optional array of variable labels (for the diagonal of the plot).\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                // variable value accessor\n                return d[variableKey];\n            }\n        };\n        void 0;\n        _utils.Utils.deepExtend(_this, custom);\n        return _this;\n    } //show tooltip on dot hover\n    //scatter plot cell size\n\n\n    return ScatterPlotMatrixConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar ScatterPlotMatrix = exports.ScatterPlotMatrix = function (_Chart) {\n    _inherits(ScatterPlotMatrix, _Chart);\n\n    function ScatterPlotMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlotMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrix).call(this, placeholderSelector, data, new ScatterPlotMatrixConfig(config)));\n    }\n\n    _createClass(ScatterPlotMatrix, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"setConfig\", this).call(this, new ScatterPlotMatrixConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            this.setupVariables();\n\n            this.plot.size = conf.size;\n\n            var width = conf.width;\n            var placeholderNode = d3.select(this.placeholderSelector).node();\n\n            if (!width) {\n                var maxWidth = margin.left + margin.right + this.plot.variables.length * this.plot.size;\n                width = Math.min(placeholderNode.getBoundingClientRect().width, maxWidth);\n            }\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            if (conf.ticks === undefined) {\n                conf.ticks = this.plot.size / 40;\n            }\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: \"setupVariables\",\n        value: function setupVariables() {\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n\n            plot.subplots = [];\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config;\n\n            x.value = conf.variables.value;\n            x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\n            x.map = function (d, variable) {\n                return x.scale(x.value(d, variable));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\n            x.axis.tickSize(plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config;\n\n            y.value = conf.variables.value;\n            y.scale = d3.scale[conf.y.scale]().range([plot.size - conf.padding / 2, conf.padding / 2]);\n            y.map = function (d, variable) {\n                return y.scale(y.value(d, variable));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\n            y.axis.tickSize(-plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            var self = this;\n            var n = self.plot.variables.length;\n            var conf = this.config;\n            self.svgG.selectAll(\".mw-axis-x.mw-axis\").data(self.plot.variables).enter().append(\"g\").attr(\"class\", \"mw-axis-x mw-axis\" + (conf.guides ? '' : ' mw-no-guides')).attr(\"transform\", function (d, i) {\n                return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\";\n            }).each(function (d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.x.axis);\n            });\n\n            self.svgG.selectAll(\".mw-axis-y.mw-axis\").data(self.plot.variables).enter().append(\"g\").attr(\"class\", \"mw-axis-y mw-axis\" + (conf.guides ? '' : ' mw-no-guides')).attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * self.plot.size + \")\";\n            }).each(function (d) {\n                self.plot.y.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.y.axis);\n            });\n\n            if (conf.tooltip) {\n                self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div').attr(\"class\", \"mw-tooltip\").style(\"opacity\", 0);\n            }\n\n            var cell = self.svgG.selectAll(\".mw-cell\").data(self.utils.cross(self.plot.variables, self.plot.variables)).enter().append(\"g\").attr(\"class\", \"mw-cell\").attr(\"transform\", function (d) {\n                return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\";\n            });\n\n            if (conf.brush) {\n                this.drawBrush(cell);\n            }\n\n            cell.each(plotSubplot);\n\n            //Labels\n            cell.filter(function (d) {\n                return d.i === d.j;\n            }).append(\"text\").attr(\"x\", conf.padding).attr(\"y\", conf.padding).attr(\"dy\", \".71em\").text(function (d) {\n                return self.plot.labelByVariable[d.x];\n            });\n\n            function plotSubplot(p) {\n                var plot = self.plot;\n                plot.subplots.push(p);\n                var cell = d3.select(this);\n\n                plot.x.scale.domain(plot.domainByVariable[p.x]);\n                plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n                cell.append(\"rect\").attr(\"class\", \"mw-frame\").attr(\"x\", conf.padding / 2).attr(\"y\", conf.padding / 2).attr(\"width\", conf.size - conf.padding).attr(\"height\", conf.size - conf.padding);\n\n                p.update = function () {\n                    var subplot = this;\n                    var dots = cell.selectAll(\"circle\").data(self.data);\n\n                    dots.enter().append(\"circle\");\n\n                    dots.attr(\"cx\", function (d) {\n                        return plot.x.map(d, subplot.x);\n                    }).attr(\"cy\", function (d) {\n                        return plot.y.map(d, subplot.y);\n                    }).attr(\"r\", self.config.dot.radius);\n\n                    if (plot.dot.color) {\n                        dots.style(\"fill\", plot.dot.color);\n                    }\n\n                    if (plot.tooltip) {\n                        dots.on(\"mouseover\", function (d) {\n                            plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                            var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\n                            var group = self.config.groups.value(d);\n                            if (group || group === 0) {\n                                html += \"<br/>\";\n                                var label = self.config.groups.label;\n                                if (label) {\n                                    html += label + \": \";\n                                }\n                                html += group;\n                            }\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                        }).on(\"mouseout\", function (d) {\n                            plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                        });\n                    }\n\n                    dots.exit().remove();\n                };\n\n                p.update();\n            }\n        }\n    }, {\n        key: \"update\",\n        value: function update() {\n            this.plot.subplots.forEach(function (p) {\n                p.update();\n            });\n        }\n    }, {\n        key: \"drawBrush\",\n        value: function drawBrush(cell) {\n            var self = this;\n            var brush = d3.svg.brush().x(self.plot.x.scale).y(self.plot.y.scale).on(\"brushstart\", brushstart).on(\"brush\", brushmove).on(\"brushend\", brushend);\n\n            cell.append(\"g\").call(brush);\n\n            var brushCell;\n\n            // Clear the previously-active brush, if any.\n            function brushstart(p) {\n                if (brushCell !== this) {\n                    d3.select(brushCell).call(brush.clear());\n                    self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                    self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                    brushCell = this;\n                }\n            }\n\n            // Highlight the selected circles.\n            function brushmove(p) {\n                var e = brush.extent();\n                self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\n                    return e[0][0] > d[p.x] || d[p.x] > e[1][0] || e[0][1] > d[p.y] || d[p.y] > e[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            }\n        }\n    }]);\n\n    return ScatterPlotMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":8,\"./scatterplot\":12,\"./utils\":14}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlot = exports.ScatterPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotConfig = exports.ScatterPlotConfig = function (_ChartConfig) {\n    _inherits(ScatterPlotConfig, _ChartConfig);\n\n    //show axis guides\n\n    function ScatterPlotConfig(custom) {\n        _classCallCheck(this, ScatterPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotConfig).call(this));\n\n        _this.svgClass = 'mw-d3-scatterplot';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.x = { // X axis config\n            label: 'X', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return d[key];\n            }, // x value accessor\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            label: 'Y', // axis label,\n            key: 1,\n            value: function value(d, key) {\n                return d[key];\n            }, // y value accessor\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: 2,\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n\n        var config = _this;\n        _this.dot = {\n            radius: 2,\n            color: function color(d) {\n                return config.groups.value(d, config.groups.key);\n            }, // string or function returning color's value for color scale\n            d3ColorCategory: 'category10'\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } //show tooltip on dot hover\n\n\n    return ScatterPlotConfig;\n}(_chart.ChartConfig);\n\nvar ScatterPlot = exports.ScatterPlot = function (_Chart) {\n    _inherits(ScatterPlot, _Chart);\n\n    function ScatterPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlot).call(this, placeholderSelector, data, new ScatterPlotConfig(config)));\n    }\n\n    _createClass(ScatterPlot, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlot.prototype), 'setConfig', this).call(this, new ScatterPlotConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            var width = conf.width;\n            var placeholderNode = d3.select(this.placeholderSelector).node();\n\n            if (!width) {\n                width = placeholderNode.getBoundingClientRect().width;\n            }\n            var height = conf.height;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            } else {}\n\n            return this;\n        }\n    }, {\n        key: 'setupX',\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            var data = this.data;\n            plot.x.scale.domain([d3.min(data, plot.x.value) - 1, d3.max(data, plot.x.value) + 1]);\n            if (this.config.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n        }\n    }, {\n        key: 'setupY',\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n\n            /*\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             */\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n\n            if (this.config.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n\n            var data = this.data;\n            plot.y.scale.domain([d3.min(data, plot.y.value) - 1, d3.max(data, plot.y.value) + 1]);\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.drawAxisX();\n            this.drawAxisY();\n            this.update();\n        }\n    }, {\n        key: 'drawAxisX',\n        value: function drawAxisX() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            self.svgG.append(\"g\").attr(\"class\", \"mw-axis-x mw-axis\" + (self.config.guides ? '' : ' mw-no-guides')).attr(\"transform\", \"translate(0,\" + plot.height + \")\").call(plot.x.axis).append(\"text\").attr(\"class\", \"mw-label\").attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + self.config.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawAxisY',\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            self.svgG.append(\"g\").attr(\"class\", \"mw-axis mw-axis-y\" + (self.config.guides ? '' : ' mw-no-guides')).call(plot.y.axis).append(\"text\").attr(\"class\", \"mw-label\").attr(\"transform\", \"translate(\" + -self.config.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            // D3ChartBase.prototype.update.call(this, newData);\n            var self = this;\n            var plot = self.plot;\n            var data = this.data;\n            var dots = self.svgG.selectAll(\".mw-dot\").data(data);\n\n            dots.enter().append(\"circle\").attr(\"class\", \"mw-dot\");\n\n            dots.attr(\"r\", self.config.dot.radius).attr(\"cx\", plot.x.map).attr(\"cy\", plot.y.map);\n\n            if (plot.tooltip) {\n                dots.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                    var group = self.config.groups.value(d, self.config.groups.key);\n                    if (group || group === 0) {\n                        html += \"<br/>\";\n                        var label = self.config.groups.label;\n                        if (label) {\n                            html += label + \": \";\n                        }\n                        html += group;\n                    }\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (plot.dot.color) {\n                dots.style(\"fill\", plot.dot.color);\n            }\n\n            dots.exit().remove();\n        }\n    }]);\n\n    return ScatterPlot;\n}(_chart.Chart);\n\n},{\"./chart\":8,\"./utils\":14}],13:[function(require,module,exports){\n'use strict';\n\nvar su = module.exports.StatisticsUtils = {};\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\n\n},{\"../bower_components/simple-statistics/src/sample_correlation\":2}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'inferVariables',\n        value: function inferVariables(data, groupKey, includeGroup) {\n            var res = [];\n            if (data.length) {\n                var d = data[0];\n                if (d instanceof Array) {\n                    res = d.map(function (v, i) {\n                        return i;\n                    });\n                } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object') {\n\n                    for (var prop in d) {\n                        if (!d.hasOwnProperty(prop)) continue;\n\n                        res.push(prop);\n                    }\n                }\n            }\n            if (!includeGroup) {\n                var index = res.indexOf(groupKey);\n                if (index > -1) {\n                    res.splice(index, 1);\n                }\n            }\n            return res;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return parent.append(element || selector);\n            }\n            return selection;\n        }\n    }]);\n\n    return Utils;\n}();\n\n},{}]},{},[10])(10)\n});\n\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleCovariance = require('./sample_covariance');\r\nvar sampleStandardDeviation = require('./sample_standard_deviation');\r\n\r\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\r\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\r\n    var cov = sampleCovariance(x, y),\r\n        xstd = sampleStandardDeviation(x),\r\n        ystd = sampleStandardDeviation(y);\r\n\r\n    return cov / xstd / ystd;\r\n}\r\n\r\nmodule.exports = sampleCorrelation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\r\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\r\n\r\n    // The two datasets must have the same length which must be more than 1\r\n    if (x.length <= 1 || x.length !== y.length) {\r\n        return NaN;\r\n    }\r\n\r\n    // determine the mean of each dataset so that we can judge each\r\n    // value of the dataset fairly as the difference from the mean. this\r\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\r\n    // does not suffer because of the difference in absolute values\r\n    var xmean = mean(x),\r\n        ymean = mean(y),\r\n        sum = 0;\r\n\r\n    // for each pair of values, the covariance increases when their\r\n    // difference from the mean is associated - if both are well above\r\n    // or if both are well below\r\n    // the mean, the covariance increases significantly.\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += (x[i] - xmean) * (y[i] - ymean);\r\n    }\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // the covariance is weighted by the length of the datasets.\r\n    return sum / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleCovariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleVariance = require('./sample_variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\r\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var sampleVarianceX = sampleVariance(x);\r\n    if (isNaN(sampleVarianceX)) { return NaN; }\r\n    return Math.sqrt(sampleVarianceX);\r\n}\r\n\r\nmodule.exports = sampleStandardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\r\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length <= 1) { return NaN; }\r\n\r\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // Find the mean value of that list\r\n    return sumSquaredDeviationsValue / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleVariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\r\nfunction sum(x/*: Array<number> */)/*: number */ {\r\n\r\n    // like the traditional sum algorithm, we keep a running\r\n    // count of the current sum.\r\n    var sum = 0;\r\n\r\n    // but we also keep three extra variables as bookkeeping:\r\n    // most importantly, an error correction value. This will be a very\r\n    // small number that is the opposite of the floating point precision loss.\r\n    var errorCompensation = 0;\r\n\r\n    // this will be each number in the list corrected with the compensation value.\r\n    var correctedCurrentValue;\r\n\r\n    // and this will be the next sum\r\n    var nextSum;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        // first correct the value that we're going to add to the sum\r\n        correctedCurrentValue = x[i] - errorCompensation;\r\n\r\n        // compute the next sum. sum is likely a much larger number\r\n        // than correctedCurrentValue, so we'll lose precision here,\r\n        // and measure how much precision is lost in the next step\r\n        nextSum = sum + correctedCurrentValue;\r\n\r\n        // we intentionally didn't assign sum immediately, but stored\r\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\r\n        // not equal to 0? ideally it would be, but in practice it won't:\r\n        // it will be some very small number. that's what we record\r\n        // as errorCompensation.\r\n        errorCompensation = nextSum - sum - correctedCurrentValue;\r\n\r\n        // now that we've computed how much we'll correct for in the next\r\n        // loop, start treating the nextSum as the current sum.\r\n        sum = nextSum;\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sum;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\r\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\r\n    var meanValue = mean(x),\r\n        sum = 0;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += Math.pow(x[i] - meanValue, n);\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sumNthPowerDeviations;\r\n","import {Utils} from './utils'\r\n\r\nexport class ChartConfig{\r\n    cssClassPrefix = \"odc-\";\r\n    svgClass = 'mw-d3-chart';\r\n    width = undefined;\r\n    height =  undefined;\r\n    margin ={\r\n        left: 50,\r\n        right: 30,\r\n        top: 30,\r\n        bottom: 50\r\n    };\r\n    tooltip = false;\r\n    constructor(custom){\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n\r\n        this.utils = Utils;\r\n        this.placeholderSelector = placeholderSelector;\r\n        this.svg=null;\r\n        this.config = undefined;\r\n        this.plot={\r\n            margin:{}\r\n        };\r\n\r\n\r\n        this.setConfig(config);\r\n\r\n        if(data){\r\n            this.setData(data);\r\n        }\r\n\r\n        this.init();\r\n    }\r\n\r\n    setConfig(config){\r\n        if(!config){\r\n            this.config = new ChartConfig();\r\n        }else{\r\n            this.config = config;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setData(data){\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    init(){\r\n        var self = this;\r\n        self.initPlot();\r\n        self.initSvg();\r\n        self.draw();\r\n    }\r\n\r\n    initSvg(){\r\n        var self = this;\r\n        var config = this.config;\r\n        console.log(config.svgClass);\r\n\r\n        var width = self.plot.width+ config.margin.left + config.margin.right;\r\n        var height =  self.plot.height+ config.margin.top + config.margin.bottom;\r\n        var aspect = width / height;\r\n\r\n        self.svg = d3.select(self.placeholderSelector).select(\"svg\");\r\n        if(!self.svg.empty()){\r\n            self.svg.remove();\r\n\r\n        }\r\n        self.svg = d3.select(self.placeholderSelector).append(\"svg\");\r\n\r\n        self.svg\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .attr(\"viewBox\", \"0 0 \"+\" \"+width+\" \"+height)\r\n            .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n            .attr(\"class\", config.svgClass);\r\n        self.svgG = self.svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\r\n\r\n        if(config.tooltip){\r\n            self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div')\r\n                .attr(\"class\", \"mw-tooltip\")\r\n                .style(\"opacity\", 0);\r\n        }\r\n\r\n        if(!config.width || config.height ){\r\n            d3.select(window)\r\n                .on(\"resize\", function() {\r\n                    //TODO add responsiveness if width/height not specified\r\n                });\r\n        }\r\n    }\r\n\r\n    initPlot(){\r\n\r\n    }\r\n\r\n    update(data){\r\n        if(data){\r\n            this.setData(data);\r\n        }\r\n        console.log('base uppdate')\r\n\r\n    }\r\n\r\n    draw(){\r\n        this.update();\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\n\r\nexport class CorrelationMatrixConfig extends ChartConfig{\r\n\r\n    svgClass= 'odc-correlation-matrix';\r\n    guides= false; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    variables={\r\n        scale: \"ordinal\",\r\n        labels: undefined,\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey] , // variable value accessor\r\n        label:  (d, key) => key\r\n    };\r\n    correlation={\r\n        scale: \"linear\",\r\n        domain: [-1, 0, 1],\r\n        range: [\"darkblue\", \"white\", \"crimson\"],\r\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues),\r\n\r\n    };\r\n    cell={\r\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\r\n        size: undefined,\r\n        sizeMin: 5,\r\n        sizeMax: 80,\r\n        padding: 1\r\n    };\r\n\r\n\r\n    constructor(custom){\r\n        super();\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CorrelationMatrix extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new CorrelationMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot(){\r\n        var self=this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot={\r\n            x: {},\r\n            correlation:{\r\n                matrix: undefined,\r\n                cells: undefined,\r\n                color: {},\r\n                shape:{}\r\n            }\r\n\r\n\r\n        };\r\n        this.setupVariables();\r\n        var width = conf.width;\r\n        var placeholderNode = d3.select(this.placeholderSelector).node();\r\n\r\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\r\n        if(width){\r\n\r\n            if(!this.plot.cellSize){\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin,Math.min(conf.cell.sizeMax, (width - margin.left - margin.right)/this.plot.variables.length));\r\n            }\r\n\r\n        }else{\r\n            this.plot.cellSize = this.config.cell.size;\r\n\r\n            if(!this.plot.cellSize){\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin,Math.min(conf.cell.sizeMax, parentWidth/this.plot.variables.length));\r\n            }\r\n\r\n            width = this.plot.cellSize*this.plot.variables.length + margin.left + margin.right;\r\n\r\n        }\r\n        \r\n        var height = width;\r\n        if(!height){\r\n            height =placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n\r\n\r\n        this.setupVariablesScales();\r\n        this.setupCorrelationScales();\r\n        this.setupCorrelationMatrix();\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    setupVariablesScales(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.variables;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = conf.value;\r\n        x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n    };\r\n\r\n    setupCorrelationScales(){\r\n        var plot = this.plot;\r\n        var corrConf = this.config.correlation;\r\n\r\n        plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\r\n        var shape = plot.correlation.shape ={};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = cellConf.shape;\r\n\r\n        var shapeSize = plot.cellSize - cellConf.padding*2;\r\n        if(shape.type == 'circle'){\r\n            var radiusMax = shapeSize/2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\r\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\r\n        }else if(shape.type == 'ellipse'){\r\n            var radiusMax = shapeSize/2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\r\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\r\n            shape.radiusY = radiusMax;\r\n\r\n            shape.rotateVal = v => {\r\n                if(v==0) return \"0\";\r\n                if(v<0) return \"-45\";\r\n                return \"45\"\r\n            }\r\n        }else if(shape.type == 'rect'){\r\n            shape.size = shapeSize;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    setupVariables(){\r\n\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function(d) { return variablesConf.value(d, variableKey) });\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n    };\r\n\r\n\r\n\r\n    setupCorrelationMatrix(){\r\n        var self = this;\r\n        var data = this.data;\r\n        var matrix = this.plot.correlation.matrix = [];\r\n        var matrixCells = this.plot.correlation.matrix.cells = [];\r\n        var plot = this.plot;\r\n\r\n        var variableToValues= {};\r\n        plot.variables.forEach((v, i) => {\r\n\r\n            variableToValues[v] = data.map(d=>plot.x.value(d,v));\r\n        });\r\n\r\n        plot.variables.forEach((v1, i) => {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            plot.variables.forEach((v2, j) => {\r\n                var corr = 1;\r\n                if(v1!=v2){\r\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\r\n                }\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: corr\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    draw(){\r\n        this.update();\r\n    };\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.updateCells();\r\n        // this.updateAxes();\r\n    };\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellClass = self.config.cssClassPrefix+\"cell\";\r\n        var cellShape = plot.correlation.shape.type;\r\n\r\n\r\n        var data = this.data;\r\n\r\n        var cells = self.svgG.selectAll(cellClass)\r\n            .data(plot.correlation.matrix.cells);\r\n\r\n\r\n        cells.enter().append(\"g\")\r\n            .attr(\"class\", cellClass);\r\n        cells.attr(\"transform\", c=> \"translate(\"+(plot.cellSize * c.col + plot.cellSize/2)+\",\"+(plot.cellSize * c.row + plot.cellSize/2)+\")\");\r\n        var shapes = cells.append(cellShape);\r\n        \r\n        if(plot.correlation.shape.type=='circle'){\r\n\r\n            shapes\r\n                .attr(\"r\", plot.correlation.shape.radius)\r\n                .attr(\"cx\",0)\r\n                .attr(\"cy\", 0);\r\n        }\r\n\r\n        if(plot.correlation.shape.type=='ellipse'){\r\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\r\n            shapes\r\n                .attr(\"rx\", plot.correlation.shape.radiusX)\r\n                .attr(\"ry\", plot.correlation.shape.radiusY)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0)\r\n\r\n                .attr(\"transform\", c=> \"rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\r\n        }\r\n\r\n\r\n        if(plot.correlation.shape.type=='rect'){\r\n            shapes\r\n                .attr(\"width\", plot.correlation.shape.size)\r\n                .attr(\"height\", plot.correlation.shape.size)\r\n                .attr(\"x\", -plot.cellSize/2)\r\n                .attr(\"y\", -plot.cellSize/2);\r\n        }\r\n\r\n        if(plot.tooltip){\r\n            cells.on(\"mouseover\", function(c) {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value ;\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", function(d) {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n\r\n}\r\n","export {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\r\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\r\nexport {StatisticsUtils} from './statistics-utils'\r\n// export {sampleCorrelation} from '../bower_components/simple-statistics/src/sample_correlation'\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\r\n\r\n    svgClass= 'mw-d3-scatterplot-matrix';\r\n    size= 200; //scatter plot cell size\r\n    padding= 20; //scatter plot cell padding\r\n    brush= true;\r\n    guides= true; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    ticks= undefined; //ticks number, (default: computed using cell size)\r\n    x={// X axis config\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: undefined, //object property name or array index with grouping variable\r\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    variables= {\r\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\r\n        keys: [], //optional array of variable keys\r\n        value: function (d, variableKey) {// variable value accessor\r\n            return d[variableKey];\r\n        }\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        // this.svgClass = 'mw-d3-scatterplot-matrix';\r\n        console.log(custom);\r\n        Utils.deepExtend(this, custom);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ScatterPlotMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n\r\n\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot = {\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        this.setupVariables();\r\n\r\n        this.plot.size = conf.size;\r\n\r\n\r\n        var width = conf.width;\r\n        var placeholderNode = d3.select(this.placeholderSelector).node();\r\n\r\n        if (!width) {\r\n            var maxWidth = margin.left + margin.right + this.plot.variables.length*this.plot.size;\r\n            width = Math.min(placeholderNode.getBoundingClientRect().width, maxWidth);\r\n\r\n        }\r\n        var height = width;\r\n        if (!height) {\r\n            height = placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n\r\n        if(conf.ticks===undefined){\r\n            conf.ticks = this.plot.size / 40;\r\n        }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if (conf.dot.d3ColorCategory) {\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if (colorValue) {\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String) {\r\n                this.plot.dot.color = colorValue;\r\n            } else if (this.plot.dot.colorCategory) {\r\n                this.plot.dot.color = function (d) {\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    setupVariables() {\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach(function(variableKey, index) {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function(d) { return variablesConf.value(d, variableKey) });\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n        plot.subplots = [];\r\n    };\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config;\r\n\r\n        x.value = conf.variables.value;\r\n        x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\r\n        x.map = function (d, variable) {\r\n            return x.scale(x.value(d, variable));\r\n        };\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\r\n        x.axis.tickSize(plot.size * plot.variables.length);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config;\r\n\r\n        y.value = conf.variables.value;\r\n        y.scale = d3.scale[conf.y.scale]().range([ plot.size - conf.padding / 2, conf.padding / 2]);\r\n        y.map = function (d, variable) {\r\n            return y.scale(y.value(d, variable));\r\n        };\r\n        y.axis= d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\r\n        y.axis.tickSize(-plot.size * plot.variables.length);\r\n    };\r\n\r\n    draw() {\r\n        var self =this;\r\n        var n = self.plot.variables.length;\r\n        var conf = this.config;\r\n        self.svgG.selectAll(\".mw-axis-x.mw-axis\")\r\n            .data(self.plot.variables)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-axis-x mw-axis\"+(conf.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", function(d, i) { return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\"; })\r\n            .each(function(d) { self.plot.x.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.x.axis); });\r\n\r\n        self.svgG.selectAll(\".mw-axis-y.mw-axis\")\r\n            .data(self.plot.variables)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-axis-y mw-axis\"+(conf.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * self.plot.size + \")\"; })\r\n            .each(function(d) { self.plot.y.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.y.axis); });\r\n\r\n\r\n        if(conf.tooltip){\r\n            self.plot.tooltip = this.utils.selectOrAppend(d3.select(self.placeholderSelector), 'div.mw-tooltip', 'div')\r\n                .attr(\"class\", \"mw-tooltip\")\r\n                .style(\"opacity\", 0);\r\n        }\r\n\r\n        var cell = self.svgG.selectAll(\".mw-cell\")\r\n            .data(self.utils.cross(self.plot.variables, self.plot.variables))\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-cell\")\r\n            .attr(\"transform\", function(d) { return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\"; });\r\n\r\n        if(conf.brush){\r\n            this.drawBrush(cell);\r\n        }\r\n\r\n        cell.each(plotSubplot);\r\n\r\n\r\n\r\n        //Labels\r\n        cell.filter(function(d) { return d.i === d.j; }).append(\"text\")\r\n            .attr(\"x\", conf.padding)\r\n            .attr(\"y\", conf.padding)\r\n            .attr(\"dy\", \".71em\")\r\n            .text(function(d) { return self.plot.labelByVariable[d.x]; });\r\n\r\n\r\n\r\n\r\n        function plotSubplot(p) {\r\n            var plot = self.plot;\r\n            plot.subplots.push(p);\r\n            var cell = d3.select(this);\r\n\r\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\r\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\r\n\r\n            cell.append(\"rect\")\r\n                .attr(\"class\", \"mw-frame\")\r\n                .attr(\"x\", conf.padding / 2)\r\n                .attr(\"y\", conf.padding / 2)\r\n                .attr(\"width\", conf.size - conf.padding)\r\n                .attr(\"height\", conf.size - conf.padding);\r\n\r\n\r\n            p.update = function(){\r\n                var subplot = this;\r\n                var dots = cell.selectAll(\"circle\")\r\n                    .data(self.data);\r\n\r\n                dots.enter().append(\"circle\");\r\n\r\n                dots.attr(\"cx\", function(d){return plot.x.map(d, subplot.x)})\r\n                    .attr(\"cy\", function(d){return plot.y.map(d, subplot.y)})\r\n                    .attr(\"r\", self.config.dot.radius);\r\n\r\n                if (plot.dot.color) {\r\n                    dots.style(\"fill\", plot.dot.color)\r\n                }\r\n\r\n                if(plot.tooltip){\r\n                    dots.on(\"mouseover\", function(d) {\r\n                        plot.tooltip.transition()\r\n                            .duration(200)\r\n                            .style(\"opacity\", .9);\r\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" +plot.y.value(d, subplot.y) + \")\";\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n                        var group = self.config.groups.value(d);\r\n                        if(group || group===0 ){\r\n                            html+=\"<br/>\";\r\n                            var label = self.config.groups.label;\r\n                            if(label){\r\n                                html+=label+\": \";\r\n                            }\r\n                            html+=group\r\n                        }\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                        .on(\"mouseout\", function(d) {\r\n                            plot.tooltip.transition()\r\n                                .duration(500)\r\n                                .style(\"opacity\", 0);\r\n                        });\r\n                }\r\n\r\n                dots.exit().remove();\r\n            };\r\n\r\n            p.update();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    update() {\r\n        this.plot.subplots.forEach(function(p){p.update()});\r\n    };\r\n\r\n    drawBrush(cell) {\r\n        var self = this;\r\n        var brush = d3.svg.brush()\r\n            .x(self.plot.x.scale)\r\n            .y(self.plot.y.scale)\r\n            .on(\"brushstart\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"brushend\", brushend);\r\n\r\n        cell.append(\"g\").call(brush);\r\n\r\n\r\n        var brushCell;\r\n\r\n        // Clear the previously-active brush, if any.\r\n        function brushstart(p) {\r\n            if (brushCell !== this) {\r\n                d3.select(brushCell).call(brush.clear());\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\r\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\r\n                brushCell = this;\r\n            }\r\n        }\r\n\r\n        // Highlight the selected circles.\r\n        function brushmove(p) {\r\n            var e = brush.extent();\r\n            self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\r\n                return e[0][0] > d[p.x] || d[p.x] > e[1][0]\r\n                    || e[0][1] > d[p.y] || d[p.y] > e[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        }\r\n    };\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotConfig extends ChartConfig{\r\n\r\n    svgClass= 'mw-d3-scatterplot';\r\n    guides= false; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    x={// X axis config\r\n        label: 'X', // axis label\r\n        key: 0,\r\n        value: function(d, key) { return d[key] }, // x value accessor\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        label: 'Y', // axis label,\r\n        key: 1,\r\n        value: function(d, key) { return d[key] }, // y value accessor\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: 2,\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n        var config = this;\r\n        this.dot={\r\n            radius: 2,\r\n            color: function(d) { return config.groups.value(d, config.groups.key) }, // string or function returning color's value for color scale\r\n            d3ColorCategory: 'category10'\r\n        };\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ScatterPlot extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ScatterPlotConfig(config));\r\n\r\n    }\r\n\r\n    initPlot(){\r\n        var self=this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot={\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        var width = conf.width;\r\n        var placeholderNode = d3.select(this.placeholderSelector).node();\r\n\r\n        if(!width){\r\n            width =placeholderNode.getBoundingClientRect().width;\r\n        }\r\n        var height = conf.height;\r\n        if(!height){\r\n            height =placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if(conf.dot.d3ColorCategory){\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if(colorValue){\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String){\r\n                this.plot.dot.color = colorValue;\r\n            }else if(this.plot.dot.colorCategory){\r\n                this.plot.dot.color = function(d){\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }else{\r\n\r\n\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = function(d) { return x.scale(x.value(d));};\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        var data = this.data;\r\n        plot.x.scale.domain([d3.min(data, plot.x.value)-1, d3.max(data, plot.x.value)+1]);\r\n        if(this.config.guides) {\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n\r\n        /*\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         */\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = function(d) { return y.scale(y.value(d));};\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n\r\n        if(this.config.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n\r\n\r\n        var data = this.data;\r\n        plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\r\n    };\r\n\r\n    draw(){\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.update();\r\n    };\r\n\r\n    drawAxisX(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        self.svgG.append(\"g\")\r\n            .attr(\"class\", \"mw-axis-x mw-axis\"+(self.config.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\")\r\n            .call(plot.x.axis)\r\n            .append(\"text\")\r\n            .attr(\"class\", \"mw-label\")\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (self.config.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        self.svgG.append(\"g\")\r\n            .attr(\"class\", \"mw-axis mw-axis-y\"+(self.config.guides ? '' : ' mw-no-guides'))\r\n            .call(plot.y.axis)\r\n            .append(\"text\")\r\n            .attr(\"class\", \"mw-label\")\r\n            .attr(\"transform\", \"translate(\"+ -self.config.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    update(newData){\r\n        // D3ChartBase.prototype.update.call(this, newData);\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var data = this.data;\r\n        var dots = self.svgG.selectAll(\".mw-dot\")\r\n            .data(data);\r\n\r\n        dots.enter().append(\"circle\")\r\n            .attr(\"class\", \"mw-dot\");\r\n\r\n\r\n        dots.attr(\"r\", self.config.dot.radius)\r\n            .attr(\"cx\", plot.x.map)\r\n            .attr(\"cy\", plot.y.map);\r\n\r\n        if(plot.tooltip){\r\n            dots.on(\"mouseover\", function(d) {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = \"(\" + plot.x.value(d) + \", \" +plot.y.value(d) + \")\";\r\n                var group = self.config.groups.value(d, self.config.groups.key);\r\n                if(group || group===0 ){\r\n                    html+=\"<br/>\";\r\n                    var label = self.config.groups.label;\r\n                    if(label){\r\n                        html+=label+\": \";\r\n                    }\r\n                    html+=group\r\n                }\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", function(d) {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        if(plot.dot.color){\r\n            dots.style(\"fill\", plot.dot.color)\r\n        }\r\n\r\n        dots.exit().remove();\r\n\r\n    };\r\n}\r\n","var su = module.exports.StatisticsUtils ={};\r\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');","export class Utils {\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, { [key]: source[key] });\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static inferVariables(data, groupKey, includeGroup) {\r\n        var res = [];\r\n        if (data.length) {\r\n            var d = data[0];\r\n            if (d instanceof Array) {\r\n                res=  d.map(function (v, i) {\r\n                    return i;\r\n                });\r\n            }else if (typeof d === 'object'){\r\n\r\n                for (var prop in d) {\r\n                    if(!d.hasOwnProperty(prop)) continue;\r\n\r\n                    res.push(prop);\r\n                }\r\n            }\r\n        }\r\n        if(!includeGroup){\r\n            var index = res.indexOf(groupKey);\r\n            if (index > -1) {\r\n                res.splice(index, 1);\r\n            }\r\n        }\r\n        return res\r\n    };\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if(selection.empty()){\r\n            return parent.append(element || selector);\r\n        }\r\n        return selection;\r\n    };\r\n}\r\n"],"sourceRoot":"/source/"}