{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-svg-legend/indexRollup.js","node_modules/d3-svg-legend/node_modules/d3-array/build/d3-array.js","node_modules/d3-svg-legend/node_modules/d3-dispatch/build/d3-dispatch.js","node_modules/d3-svg-legend/node_modules/d3-format/build/d3-format.js","node_modules/d3-svg-legend/node_modules/d3-scale/build/d3-scale.js","node_modules/d3-svg-legend/node_modules/d3-selection/build/d3-selection.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/simple-statistics/src/error_function.js","node_modules/simple-statistics/src/linear_regression.js","node_modules/simple-statistics/src/linear_regression_line.js","node_modules/simple-statistics/src/mean.js","node_modules/simple-statistics/src/quantile.js","node_modules/simple-statistics/src/quantile_sorted.js","node_modules/simple-statistics/src/quickselect.js","node_modules/simple-statistics/src/sample_correlation.js","node_modules/simple-statistics/src/sample_covariance.js","node_modules/simple-statistics/src/sample_standard_deviation.js","node_modules/simple-statistics/src/sample_variance.js","node_modules/simple-statistics/src/standard_deviation.js","node_modules/simple-statistics/src/sum.js","node_modules/simple-statistics/src/sum_nth_power_deviations.js","node_modules/simple-statistics/src/variance.js","node_modules/simple-statistics/src/z_score.js","src/bar-chart.js","src/box-plot-base.js","src/box-plot.js","src/chart-with-color-groups.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/d3.js","src/diverging-stacked-bar-chart.js","src/heatmap-timeseries.js","src/heatmap.js","src/histogram.js","src/index.js","src/legend.js","src/line-chart.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","window","global","self","this","ODCD3","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","prefix","Map","map","object","each","value","key","set","Array","isArray","createObject","setObject","createMap","setMap","map$$1","Set","prototype","constructor","has","get","remove","property","clear","keys","push","slice","values","entries","size","empty","proto","add","nest","sortValues","rollup","sortKeys","apply","array","depth","createResult","setResult","sort","keyValue","valuesByKey","result","sortKey","v","k","b","d","order","Object","defineProperty","factory","d3","extend","parent","definition","create","Color","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","format","m","trim","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","NaN","g","rgbConvert","rgb","opacity","arguments","hex","Math","max","min","round","toString","h","s","l","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","pow","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","x","z","rgb2lrgb","y","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","sqrt","hcl","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","cosh","sinh","lch","d3Color","basis","v0","v1","v2","v3","basis$1","floor","basisClosed","constant","linear","hue","gamma","nogamma","rgbGamma","start","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","nb","na","date","Date","setTime","number","reA","reB","source","string","am","bm","bs","bi","lastIndex","q","index","join","valueOf","cssNode","cssRoot","cssView","svgNode","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","interpolateTransformSvg","createElementNS","setAttribute","baseVal","consolidate","matrix","rho","SQRT2","exp","hue$$1","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolate","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateDiscrete","range","interpolateHue","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","log","d1","b0","b1","r0","r1","coshr0","duration","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","piecewise","I","quantize","interpolator","samples","d3Selection","d3Format","d3Dispatch","d3Scale","d3Array","_typeof","Symbol","iterator","obj","d3_identity","d3_reverse","arr","mirror","d3_textWrapping","text","width","word","select","words","reverse","line","attr","parseFloat","tspan","append","node","getComputedTextLength","helper","d3_drawShapes","shape","shapes","shapeHeight","shapeWidth","shapeRadius","path","d3_addText","svg","enter","labels","classPrefix","labelWidth","selectAll","data","d3_calcType","ascending","cells","labelFormat","labelDelimiter","type","invertExtent","invert","feature","ticks","domain","increment","d3_linearLegend","gen","undefined","customLabels","genLength","_i","generatedLabels","d3_mergeLabels","d3_filterCells","cellFilter","filterCells","label","filter","dataValues","labelValues","indexOf","d3_placement","orient","cell","cellTrans","textTrans","labelAlign","d3_addEvents","dispatcher","on","d3_title","title","titleWidth","cellsSvg","yOffset","nodes","getBBox","height","xOffset","d3_defaultLocale","formatPrefix","d3_defaultFormatSpecifier","d3_defaultDelimiter","scaleLinear","shapePadding","useClass","locale","specifier","labelOffset","labelWrap","legendDispatcher","dispatch","legend","cellEnter","exit","transition","merge","textSize","shapeSize","cellSize","textAlign","sum","_","formatLocale","formatSpecifier","textWrap","legendG","bbox","stroke","maxH","maxW","offset","symbol","legendHelpers","thresholdLabels","_ref","legendColor","legendSize","legendSymbol","indexRollup","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","variance","j","deviation","extent","stop","step","ceil","e10","e5","e2","count","tickStep","step0","abs","step1","LN10","error","sturges","LN2","quantile","transpose","row","bisect","descending","histogram","threshold","xz","x0","x1","tz","shift","bin","bins","thresholds","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","mean","median","numbers","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","random","zip","noop","Dispatch","name","callback","concat","typename","types","T","copy","that","args","formatDecimal","toExponential","coefficient","exponent","prefixExponent","formatRounded","formatTypes","","out","toPrecision","%","toFixed","X","toUpperCase","re","FormatSpecifier","match","fill","align","sign","zero","comma","precision","prefixes","grouping","thousands","group","substring","currency","decimal","newFormat","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","d3Collection","d3Interpolate","d3Time","d3TimeFormat","map$1","implicit","ordinal","unknown","band","bandwidth","ordinalRange","paddingInner","paddingOuter","rescale","rangeRound","unit","deinterpolate","bimap","reinterpolate","d0","polymap","target","clamp","continuous","deinterpolate$$","output","input","linearish","tickFormat","nice","interval","deinterpolate$1","pow10","isFinite","powp","base","logp","log10","log2","reflect","raise","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","every","category10","category20b","category20c","category20","warm","cool","rainbow","ramp","viridis","magma","inferno","plasma","scaleBand","scalePoint","pointish","scaleIdentity","scaleLog","logs","pows","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","quantile$1","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","sequential","xhtml","namespaces","xlink","xml","xmlns","namespace","space","local","creator","fullname","ownerDocument","uri","namespaceURI","nextId","Local","id","parentNode","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","sourceEvent","current","point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","none","querySelector","selectorAll","querySelectorAll","sparse","update","EnterNode","datum","_next","_parent","child","insertBefore","next","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","nextSibling","lower","previousSibling","firstChild","constantNull","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","splice","contains","root","Selection","groups","parents","_groups","_parents","selection","subgroups","subnode","subgroup","bind","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","insert","before","typenames","mouse","changedTouches","touch","touches","identifier","points","customEvent","localDate","H","M","L","setFullYear","utcDate","setUTCFullYear","newYear","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","A","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","getHours","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","w","formatWeekdayNumberSunday","W","formatWeekNumberMonday","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","getUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","getUTCHours","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","utcMonday","getUTCFullYear","getUTCDate","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","replace","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","timeParse","isoSpecifier","formatIso","toISOString","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","newInterval","floori","offseti","field","milliseconds","seconds","minutes","hours","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","tau","sumX","sumY","sumXX","sumXY","mb","quantileSorted","quickselect","quantileSelect","quantileIndex","len","idx","indices","stack","multiQuantileSelect","results","swap","tmp","sd","newLeft","newRight","sampleCovariance","sampleStandardDeviation","xmean","ymean","sampleVariance","sampleVarianceX","sumNthPowerDeviations","correction","tempValue","meanValue","standardDeviation","_chartWithColorGroups","_utils","_interopRequireWildcard","BarChartConfig","custom","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","svgClass","cssClassPrefix","showLegend","showTooltip","Utils","isNumber","_assertThisInitialized","deepExtend","ChartWithColorGroupsConfig","BarChart","placeholderSelector","config","ChartWithColorGroups","_get","plot","computePlotSize","setupY","setupX","setupGroupStacks","setupYDomain","conf","axis","createAxis","series","createScale","layers","layer","y0","groupData","y0s","groupedData","forEach","mapToPoint","prevY0","axisConf","svgG","selectOrAppend","prefixClass","guides","axisT","ease","easeSinInOut","margin","bottom","layerClass","barClass","layerMerge","bar","barEnter","barRectEnter","barMerge","barRect","barRectT","barT","layerT","transitionEnabled","yDomain","seriesColor","tooltip","hideTooltip","newData","drawAxisX","drawAxisY","drawBars","_chart","BoxPlotBaseConfig","domainMargin","Q1","Q2","Q3","Wl","whiskerLow","Wh","whiskerHigh","outliers","outlierValue","outlierLabel","minBoxWidth","maxBoxWidth","d3ColorCategory","ChartConfig","BoxPlotBase","Chart","getDataToPlot","setupColor","tickSize","_this2","yMin","yMax","q1","q3","wl","wh","boxplotClass","boxplots","boxplotEnter","boxplotsMerge","boxplotsT","delay","boxWidth","boxLeft","boxRight","boxClass","boxRects","boxRectsT","medianClass","medianLine","whiskerClass","tickClass","whiskers","box","endpoint","whisker","tick","outlierClass","outlierEnterCircle","outliersMerge","outliersT","drawBoxPlots","_this3","colorSchemeCategory","capitalizeFirstLetter","colorCategory","colorValue","String","_boxPlotBase","_statisticsUtils","BoxPlotConfig","displayValue","tukey","BoxPlot","groupingEnabled","isGroupingEnabled","groupValue","getDisplayValue","isFunction","isObject","StatisticsUtils","IQR","_legend","forceLegend","setupGroups","getOwnPropertyNames","groupToLabel","computeGroupColorDomain","getLabel","groupColorDomain","_this4","enabledGroups","updateLegend","legendX","legendY","Legend","onLegendCellClick","container","updateLegendCellStatuses","cellValue","updateEnabledGroups","init","isDisabled","titleSize","titleMargin","subtitle","subtitleSize","subtitleMargin","utils","_attached","_layers","_events","_isInitialized","_id","guid","_isAttached","baseContainer","setConfig","setData","postInit","initConfigAccessors","initPlot","initSvg","initTooltip","draw","svgWidth","svgHeight","titleMarginSize","attachmentData","attachmentName","updateTitle","updateSubtitle","titleClass","subtitleClass","chart","context","once","off","events","ev","getBaseContainer","clazz","addDot","availableWidth","availableHeight","pageX","pageY","clean","removePropertyAccessors","initPropertyAccessors","bindTo","returnObj","recursive","accessor","initPropertyAccessor","isObjectNotArray","propertyKey","_scatterplot","CorrelationMatrixConfig","highlightLabels","rotateLabelsX","rotateLabelsY","variables","variableKey","correlation","xValues","yValues","sampleCorrelation","sizeMin","sizeMax","CorrelationMatrix","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","corrConf","cellConf","radiusMax","radiusScale","radius","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","includeInPlot","labelByVariable","matrixCells","variableToValues","corr","rowVar","colVar","col","updateCells","updateVariableLabels","labelClass","updateAxisX","updateAxisY","labelXClass","labelsMerge","maxWidth","computeXAxisLabelsWidth","placeTextWithEllipsisAndTooltip","labelYClass","computeYAxisLabelsWidth","SQRT_2","fontSize","cellClass","cellShape","cellsMerge","scatterPlot","mouseoverCallbacks","mouseoutCallbacks","highlightClass","xLabelClass","yLabelClass","trigger","barHeight","linearGradientBar","containerSelector","scatterPlotConfig","ScatterPlot","attach","D3Extensions","insertSelector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","DivergingStackedBarChartConfig","showBarValues","colorRange","categoryNames","middleValue","DivergingStackedBarChart","neutralIndex","rows","originalValues","total","categories","catIndex","boxes","originalValue","_toConsumableArray","titleY","titleDY","rowClass","rowMerge","bars","barsEnter","barsM","textM","_heatmap","HeatmapTimeSeriesConfig","fillMissing","intervalStep","displayFormat","intervalToFormats","sortComparator","isString","localeCompare","formatter","Number","Intl","NumberFormat","HeatmapConfig","HeatmapTimeSeries","Heatmap","guessTimeFormat","initTimeFormatAndInterval","timeParser","getTimeParser","uniqueValues","prev","parseTime","nextTimeTickValue","missing","iteration","compareTimeValues","timeString","formatTime","updateGroups","parser","getTimeFormatter","isDate","rowIndex","prevRowValue","colIndex","guessInterval","intervalFormat","some","timeFormatter","noDataText","rotateLabels","decimalPlaces","sortLabels","overlap","notAvailableValue","noDataColor","reverseScale","gapLevel","maxGroupGapSize","gaps","gapsSize","gapsNumber","gapsLevel","computeGapSize","matrixes","setupValues","buildCells","groupByX","allTitlesWidth","groupByY","_allTitlesWidth","setupZScale","children","level","valueMap","minZ","maxZ","xVal","yVal","zValRaw","zVal","groupY","groupX","setupValuesBeforeGroupsSort","totalValuesCount","allValuesList","sortGroups","val","axisVal","rootGroup","axisGroupsConfig","currentGroup","groupKey","groupKeyIndex","groupingValue","axisConfig","allValuesCount","allValuesBeforeCount","gapsBefore","computeGapsSize","gapsBeforeSize","childrenList","childrenCount","childProp","gapsInside","gapsInsideSize","cellWidth","xGapsSize","computedCellWidth","yGapsSize","computedCellHeight","cellHeight","unshift","drawGroupsY","drawGroupsX","updateAxisTitles","offsetX","gapSize","formatValueX","elem","offsetY","formatValueY","parentGroup","groupClass","groupYClass","valuesBeforeCount","groupsEnter","titleGroupEnter","titleRectWidth","groupTitleRectHeight","groupsMerge","groupWidth","tileRects","setGroupMouseCallbacks","groupXClass","titleRectHeight","groupHeight","cellContainerClass","paddingX","paddingY","cellContainer","formatValueZ","formatLegendValue","setRotateLabels","HistogramConfig","frequency","Histogram","setupHistogram","yStackMax","stackedHistograms","histogramBins","drawHistogram","_d3Extensions","_scatterplotMatrix","_regression","_correlationMatrix","_heatmapTimeseries","_histogram","_barChart","_boxPlot","_divergingStackedBarChart","_lineChart","_d3SvgLegend","legendParent","legendClass","barWidth","gradientId","linearGradient","ticksNumber","ticksMerge","LineChartConfig","dotRadius","dotId","onDotHover","onDotHoverOut","lineId","onLineHover","onLineHoverOut","LineChart","updateLines","lineClass","linesContainerClass","layerEnter","linePathEnter","linePath","linePathMerge","linePathT","dotClass","dots","dotsMerge","dotsT","RegressionConfig","mainRegression","groupRegression","confidence","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","areaCurve","curveNatural","ScatterPlotConfig","Regression","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","groupVal","linearRegression","linearRegressionLine","extentX","linePoints","curve","curveBasis","computeConfidence","meanX","xMySum","xSum","xPowSum","ySum","yPowSum","Sa2","Sy2","centerX","confidenceAreaPoints","moe","y1","fitInPlot","area","updateRegressionLines","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionClass","confidenceAreaClass","regressionSelector","regressionEnter","regressionMerge","lineT","areaT","ScatterPlotMatrixConfig","minCellSize","maxCellSize","brush","ScatterPlotMatrix","dot","subplots","variable","axisClass","xAxisSelector","yAxisSelector","noGuidesClass","xAxis","yAxis","yAxisMerge","cross","cellMerge","drawBrush","frameClass","subplot","hiddenClass","brushCell","clearBrush","move","updateDots","$n","$p","integer","precision_string","_subt","SIGNIFICANT","_subu","$y","$x","$round","$u","$u2","$n1","$delta","_subtprob","round_to_precision","$a","$w","$z","$i","$max","_statisticsDistributions","su","errorFunction","zScore","standardError","tdistr","srcObj","assign","mergeDeep","_defineProperty","includeGroup","res","prop","item","x2","y2","stops","s4","textD3Obj","textString","textObj","getSubStringLength","placeTextWithEllipsis","scaleName","scaleFunctionName","axisFnName","sanitizeHeight","sanitizeWidth"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.2.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.lch = lch;\nexports.gray = gray;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-interpolate/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHue = hue$1;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-format'), require('d3-dispatch'), require('d3-scale'), require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-format', 'd3-dispatch', 'd3-scale', 'd3-array'], factory) :\n\t(factory((global.indexRollup = global.indexRollup || {}),global.d3Selection,global.d3Format,global.d3Dispatch,global.d3Scale,global.d3Array));\n}(this, (function (exports,d3Selection,d3Format,d3Dispatch,d3Scale,d3Array) { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar d3_identity = function d3_identity(d) {\n  return d;\n};\n\nvar d3_reverse = function d3_reverse(arr) {\n  var mirror = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1];\n  }\n  return mirror;\n};\n\n//Text wrapping code adapted from Mike Bostock\nvar d3_textWrapping = function d3_textWrapping(text, width) {\n  text.each(function () {\n    var text = d3Selection.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.2,\n        //ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n};\n\nvar d3_mergeLabels = function d3_mergeLabels() {\n  var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments[1];\n  var domain = arguments[2];\n  var range = arguments[3];\n  var labelDelimiter = arguments[4];\n\n  if ((typeof labels === \"undefined\" ? \"undefined\" : _typeof(labels)) === \"object\") {\n    if (labels.length === 0) return gen;\n\n    var i = labels.length;\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n    return labels;\n  } else if (typeof labels === \"function\") {\n    var customLabels = [];\n    var genLength = gen.length;\n    for (var _i = 0; _i < genLength; _i++) {\n      customLabels.push(labels({\n        i: _i,\n        genLength: genLength,\n        generatedLabels: gen,\n        domain: domain,\n        range: range,\n        labelDelimiter: labelDelimiter\n      }));\n    }\n    return customLabels;\n  }\n\n  return gen;\n};\n\nvar d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {\n  var data = [];\n\n  if (cells.length > 1) {\n    data = cells;\n  } else {\n    var domain = scale.domain(),\n        increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);\n    var i = 0;\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment);\n    }\n  }\n\n  var labels = data.map(labelFormat);\n  return {\n    data: data,\n    labels: labels,\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n  });\n\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  };\n};\n\nvar d3_ordinalLegend = function d3_ordinalLegend(scale) {\n  return {\n    data: scale.domain(),\n    labels: scale.domain(),\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellover\", obj, d);\n};\n\nvar d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellout\", obj, d);\n};\n\nvar d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellclick\", obj, d);\n};\n\nvar helper = {\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    var text = svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").data(labels).text(d3_identity);\n\n    if (labelWidth) {\n      svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").call(d3_textWrapping, labelWidth);\n    }\n\n    return text;\n  },\n\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale);\n\n    //for d3.scaleSequential that doesn't have a range function\n    var range = scale.range && scale.range() || scale.domain();\n    type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels);\n      type.data = d3_reverse(type.data);\n    }\n\n    return type;\n  },\n\n  d3_filterCells: function d3_filterCells(type, cellFilter) {\n    var filterCells = type.data.map(function (d, i) {\n      return { data: d, label: type.labels[i] };\n    }).filter(cellFilter);\n    var dataValues = filterCells.map(function (d) {\n      return d.data;\n    });\n    var labelValues = filterCells.map(function (d) {\n      return d.label;\n    });\n    type.data = type.data.filter(function (d) {\n      return dataValues.indexOf(d) !== -1;\n    });\n    type.labels = type.labels.filter(function (d) {\n      return labelValues.indexOf(d) !== -1;\n    });\n    return type;\n  },\n\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    cells.on(\"mouseover.legend\", function (d) {\n      d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      d3_cellClick(dispatcher, d, this);\n    });\n  },\n\n  d3_title: function d3_title(svg, title, classPrefix, titleWidth) {\n    if (title !== \"\") {\n      var titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\");\n\n      titleText.data([title]).enter().append(\"text\").attr(\"class\", classPrefix + \"legendTitle\");\n\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title);\n\n      if (titleWidth) {\n        svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").call(d3_textWrapping, titleWidth);\n      }\n\n      var cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\");\n      var yOffset = svg.select(\".\" + classPrefix + \"legendTitle\").nodes().map(function (d) {\n        return d.getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.nodes().map(function (d) {\n        return d.getBBox().x;\n      })[0];\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n    }\n  },\n\n  d3_defaultLocale: {\n    format: d3Format.format,\n    formatPrefix: d3Format.formatPrefix\n  },\n\n  d3_defaultFormatSpecifier: \".01f\",\n\n  d3_defaultDelimiter: \"to\"\n};\n\nfunction color() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\").data(type.data);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \", \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n          \" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === \"string\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.textWrap = function (_) {\n    if (!arguments.length) return textWrap;\n    textWrap = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction size() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    //sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n      return bbox;\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n        var y = shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0;\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n\n          return \"translate(0, \" + (y + height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n          \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      (function () {\n        cellTrans = function cellTrans(d, i) {\n          var width = d3Array.sum(shapeSize.slice(0, i), function (d) {\n            return d.width;\n          });\n          var y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0;\n          return \"translate(\" + (width + i * shapePadding) + \", \" + y + \")\";\n        };\n\n        var offset = shape == \"line\" ? maxH / 2 : maxH;\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (offset + labelOffset) + \")\";\n        };\n      })();\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction symbol() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    //remove old shapes\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(maxH, d.height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \" )\";\n        };\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n              \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate( \" + i * (maxW + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nvar thresholdLabels = function thresholdLabels(_ref) {\n  var i = _ref.i,\n      genLength = _ref.genLength,\n      generatedLabels = _ref.generatedLabels,\n      labelDelimiter = _ref.labelDelimiter;\n\n  if (i === 0) {\n    var values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return \"Less than \" + values[1];\n  } else if (i === genLength - 1) {\n    var _values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return _values[0] + \" or more\";\n  }\n  return generatedLabels[i];\n};\n\nvar legendHelpers = {\n  thresholdLabels: thresholdLabels\n};\n\nvar index = {\n  legendColor: color,\n  legendSize: size,\n  legendSymbol: symbol,\n  legendHelpers: legendHelpers\n};\n\nexports.legendColor = color;\nexports.legendSize = size;\nexports.legendSymbol = symbol;\nexports.legendHelpers = legendHelpers;\nexports['default'] = index;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=indexRollup.js.map\n","// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-time-format/ v2.1.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-time/ v1.0.10 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n/* @flow */\n\n/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x/*: number */)/*: number */ {\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) -\n        1.26551223 +\n        1.00002368 * t +\n        0.37409196 * Math.pow(t, 2) +\n        0.09678418 * Math.pow(t, 3) -\n        0.18628806 * Math.pow(t, 4) +\n        0.27886807 * Math.pow(t, 5) -\n        1.13520398 * Math.pow(t, 6) +\n        1.48851587 * Math.pow(t, 7) -\n        0.82215223 * Math.pow(t, 8) +\n        0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n","'use strict';\n/* @flow */\n\n/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0, sumY = 0,\n            sumXX = 0, sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\n            ((dataLength * sumXX) - (sumX * sumX));\n\n        // `b` is the y-intercept of the line.\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\n\nmodule.exports = linearRegression;\n","'use strict';\n/* @flow */\n\n/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function(x) {\n        return mb.b + (mb.m * x);\n    };\n}\n\nmodule.exports = linearRegressionLine;\n","'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs on `O(n)`, linear time in respect to the array\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x /*: Array<number> */)/*:number*/ {\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        throw new Error('mean requires at least one data point');\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n","'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\nvar quickselect = require('./quickselect');\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x /*: Array<number> */, p /*: Array<number> | number */) {\n    var copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        var results = [];\n        // For each requested quantile\n        for (var i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        var idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    var indices = [0];\n    for (var i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    var stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        var r = Math.ceil(stack.pop());\n        var l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        var m = Math.floor((l + r) / 2);\n        quantileSelect(arr, indices[m], indices[l], indices[r]);\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len /*: number */, p /*: number */)/*:number*/ {\n    var idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nmodule.exports = quantile;\n","'use strict';\n/* @flow */\n\n/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x /*: Array<number> */, p /*: number */)/*:number*/ {\n    var idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error('quantile requires at least one data point.');\n    } else if (p < 0 || p > 1) {\n        throw new Error('quantiles must be between 0 and 1');\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nmodule.exports = quantileSorted;\n","'use strict';\n/* @flow */\n\nmodule.exports = quickselect;\n\n/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @private\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} left left index\n * @param {number} right right index\n * @returns {undefined}\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {\n    left = left || 0;\n    right = right || (arr.length - 1);\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error('sampleCovariance requires samples with equal lengths');\n    }\n\n    if (x.length < 2) {\n        throw new Error('sampleCovariance requires at least two data points in each sample');\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n","'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\n    // The standard deviation of no numbers is null\n    var sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length < 2) {\n        throw new Error('sampleVariance requires at least two data points');\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n","'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\n    if (x.length === 1) {\n        return 0;\n    }\n    var v = variance(x);\n    return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n","'use strict';\n/* @flow */\n\n/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs on `O(n)`, linear time in respect to the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x/*: Array<number> */)/*: number */ {\n\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    var sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    var correction = 0;\n\n    var transition;\n\n    for (var i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += ((sum - transition) + x[i]);\n        }\n        else {\n            correction += ((x[i] - transition) + sum);\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nmodule.exports = sum;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * var variance = sumNthPowerDeviations(input) / input.length;\n */\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\n    var meanValue = mean(x),\n        sum = 0,\n        tempValue,\n        i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x/*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        throw new Error('variance requires at least one data point');\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n","'use strict';\n/* @flow */\n\n/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\n    return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class BarChartConfig extends ChartWithColorGroupsConfig {\n\n    svgClass = this.cssClassPrefix + 'bar-chart';\n    showLegend = true;\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        scale: \"ordinal\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y = {// Y axis config\n        key: 1,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    transition = true;\n\n    constructor(custom) {\n        super();\n        var config = this;\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BarChart extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BarChartConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new BarChartConfig(config));\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.computePlotSize();\n        this.setupY();\n        this.setupX();\n        this.setupGroupStacks();\n        this.setupYDomain();\n\n        return this;\n    }\n\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = d3.scaleBand().range([0, plot.width]).paddingInner(.08);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if (conf.ticks) {\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else if (!this.config.series) {\n            domain = d3.map(data, x.value).keys();\n        } else {\n            domain = d3.map(data[0].values, x.value).keys();\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value(d, conf.key);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var domain;\n        var yStackMax = d3.max(plot.layers, layer => d3.max(layer.points, d => d.y0 + d.y));\n\n\n        // var min = d3.min(data, s=>d3.min(s.values, plot.y.value));\n        var max = yStackMax;\n        domain = [0, max];\n\n        plot.y.scale.domain(domain);\n        // console.log(' plot.y.scale.domain', plot.y.scale.domain());\n    }\n\n    setupGroupStacks() {\n        var self = this;\n        this.groupData();\n\n        var y0s = [];\n        this.plot.groupedData.forEach(s=> {\n            s.points = s.values.map(v=>self.mapToPoint(v));\n            s.points.forEach((p, i)=> {\n                var prevY0 = y0s[i];\n                if(!prevY0) prevY0 = 0;\n                p.y0 = prevY0;\n                y0s[i] = p.y+prevY0;\n            });\n\n        });\n        this.plot.layers = this.plot.groupedData;\n\n    }\n\n    mapToPoint(value) {\n        var plot = this.plot;\n        return {\n            x: plot.x.value(value),\n            y: parseFloat(plot.y.value(value))\n        }\n    }\n\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.margin.bottom) + \")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawBars() {\n        var self = this;\n        var plot = self.plot;\n\n        // console.log('layers', plot.layers);\n\n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\" + layerClass)\n            .data(plot.layers);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n        var bar = layerMerge.selectAll(\".\" + barClass)\n            .data(d => d.points);\n\n        var barEnter = bar.enter().append(\"g\")\n            .attr(\"class\", barClass);\n        var barRectEnter = barEnter.append(\"rect\")\n            .attr(\"x\", 1);\n        var barMerge = barEnter.merge(bar);\n\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT = layerMerge.transition();\n        }\n\n        barEnter.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0)) + \")\";\n        });\n        var yDomain = plot.y.scale.domain();\n        barT.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 + d.y)) + \")\";\n        });\n        barRectEnter\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", 0);\n        barRectT\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", d => plot.y.scale(d.y0) - plot.y.scale(d.y0 + d.y - yDomain[0]));\n\n\n        if (this.plot.seriesColor) {\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData) {\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        return this;\n    };\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotBaseConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        value: s => s.key, // x value accessor\n        guides: false, //show axis guides\n        orient: 'bottom',\n\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d, // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    Q1 = d => d.values.Q1;\n    Q2 = d => d.values.Q2;\n    Q3 = d => d.values.Q3;\n    Wl = d => d.values.whiskerLow;\n    Wh = d => d.values.whiskerHigh;\n    outliers= d=> d.values.outliers;\n    outlierValue = (d,i)=> d;\n    outlierLabel = (d,i)=> d;\n    minBoxWidth = 35;\n    maxBoxWidth = 100;\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BoxPlotBase extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotBaseConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotBaseConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = data.map(x.value);\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var values = [], yMin, yMax;\n        data.forEach(function (d, i) {\n            let q1 = c.Q1(d), \n                q3 = c.Q3(d), \n                wl = c.Wl(d), \n                wh = c.Wh(d),\n                outliers = c.outliers(d);\n            \n            if (outliers) {\n                outliers.forEach(function (o, i) {\n                    values.push(c.outlierValue(o, i));\n                });\n            }\n            if (wl) { values.push(wl) }\n            if (q1) { values.push(q1) }\n            if (q3) { values.push(q3) }\n            if (wh) { values.push(wh) }\n        });\n        yMin = d3.min(values);\n        yMax = d3.max(values);\n        var margin = (yMax-yMin)* this.config.y.domainMargin;\n        yMin-=margin;\n        yMax+=margin;\n        var domain = [ yMin, yMax ] ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.label);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBoxPlots() {\n        var self = this,\n            plot = self.plot,\n            config = self.config,\n            boxplotClass = self.prefixClass(\"boxplot-item\")\n        \n        var boxplots = self.svgG.selectAll('.'+boxplotClass).data(plot.data);\n        var boxplotEnter = boxplots.enter()\n            .append('g')\n            .attr('class', boxplotClass)\n            .style('stroke-opacity', 1e-6)\n            .style('fill-opacity', 1e-6);\n\n        var boxplotsMerge = boxplotEnter.merge(boxplots);\n        var duration = 1000;\n        var boxplotsT = boxplotsMerge;\n        if (self.transitionEnabled()) {\n            boxplotsT = boxplotsMerge.transition();\n            boxplotsT.delay(function(d,i) { return i * duration / plot.data.length })\n        }\n\n        boxplotsT\n            .style('fill', plot.color)\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 0.75)\n            .attr('transform', (d,i) =>'translate(' + (plot.x.map(d,i) + plot.x.scale.bandwidth() * 0.05) + ', 0)')\n        boxplots.exit().remove();\n\n        var boxWidth = !config.maxBoxWidth ? plot.x.scale.bandwidth() * 0.9 : Math.min(config.maxBoxWidth, Math.max(config.minBoxWidth, plot.x.scale.bandwidth() * 0.9));\n        var boxLeft  = plot.x.scale.bandwidth() * 0.45 - boxWidth/2;\n        var boxRight = plot.x.scale.bandwidth() * 0.45 + boxWidth/2;\n\n        var boxClass = self.prefixClass(\"box\");\n\n        boxplotEnter.append('rect')\n            .attr('class', boxClass)\n            // tooltip events\n            .on('mouseover', function(d,i) {\n                d3.select(this).classed('hover', true);\n                var html = 'Q3: '+config.Q3(d,i)+'<br/>Q2: '+config.Q2(d,i)+'<br/>Q1: '+config.Q1(d,i);\n                self.showTooltip(html)\n            })\n            .on('mouseout', function(d,i) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var boxRects = boxplotsMerge.select('rect.'+boxClass);\n\n        var boxRectsT = boxRects;\n        if (self.config.transition) {\n            boxRectsT = boxRects.transition();\n        }\n\n        boxRectsT.attr('y', (d,i) => plot.y.scale(config.Q3(d)))\n            .attr('width', boxWidth)\n            .attr('x', boxLeft )\n            .attr('height', (d,i) => Math.abs(plot.y.scale(config.Q3(d)) - plot.y.scale(config.Q1(d))) || 1)\n            .style('stroke', plot.color);\n\n        // median line\n        var medianClass = self.prefixClass('median');\n        boxplotEnter.append('line').attr('class', medianClass);\n\n        var medianLine = boxplotsMerge.select('line.'+medianClass);\n        if (self.config.transition) {\n            medianLine = medianLine.transition();\n        }\n        medianLine\n            .attr('x1', boxLeft)\n            .attr('y1', (d,i) => plot.y.scale(config.Q2(d)))\n            .attr('x2', boxRight)\n            .attr('y2', (d,i) => plot.y.scale(config.Q2(d)));\n\n\n        //whiskers\n\n        var whiskerClass= self.prefixClass(\"whisker\"),\n            tickClass = self.prefixClass(\"boxplot-tick\");\n\n        var whiskers = [{key: 'low', value: config.Wl}, {key: 'high', value: config.Wh}];\n\n        boxplotEnter.each(function(d,i) {\n            var box = d3.select(this);\n\n            whiskers.forEach(f=> {\n                if (f.value(d)) {\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', whiskerClass+' ' + boxplotClass+'-'+f.key);\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', tickClass+' ' + boxplotClass+'-'+f.key);\n                }\n            });\n        });\n\n        whiskers.forEach(f => {\n            var endpoint = (f.key === 'low') ? config.Q1 : config.Q3;\n\n            var whisker = boxplotsMerge.select('.'+whiskerClass+'.'+boxplotClass+'-'+f.key);\n            var tick = boxplotsMerge.select('.'+tickClass+'.'+boxplotClass+'-'+f.key);\n            if (self.config.transition) {\n                whisker = whisker.transition();\n                tick=tick.transition();\n            }\n            whisker\n                .attr('x1', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y2', (d,i) => plot.y.scale(endpoint(d)));\n\n            tick\n                .attr('x1', boxLeft )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', boxRight )\n                .attr('y2', (d,i) => plot.y.scale(f.value(d)));\n\n            boxplotEnter.selectAll('.'+boxplotClass+'-'+f.key)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    self.showTooltip(f.value(d))\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    self.hideTooltip();\n                })\n        });\n\n\n        // outliers\n        var outlierClass = self.prefixClass(\"outlier\");\n        var outliers = boxplotsMerge.selectAll('.'+outlierClass).data((d,i) => config.outliers(d,i) || []);\n\n        var outlierEnterCircle = outliers.enter().append('circle')\n            .attr('class', outlierClass)\n            .style('z-index', 9000);\n\n        outlierEnterCircle\n            .on('mouseover', function (d, i, j) {\n                d3.select(this).classed('hover', true);\n                self.showTooltip(config.outlierLabel(d,i))\n            })\n            .on('mouseout', function (d, i, j) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var outliersMerge = outlierEnterCircle.merge(outliers);\n        var outliersT = outliersMerge;\n        if (self.config.transition) {\n            outliersT = outliersMerge.transition();\n        }\n        outliersT\n            .attr('cx', plot.x.scale.bandwidth() * 0.45)\n            .attr('cy', (d,i) => plot.y.scale(config.outlierValue(d,i)))\n            .attr('r', '3');\n        outliers.exit().remove();\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBoxPlots();\n        return this;\n    };\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.x.value(d));\n        }\n    }\n}\n","import {BoxPlotBase, BoxPlotBaseConfig} from \"./box-plot-base\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotConfig extends BoxPlotBaseConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showLegend = true;\n    showTooltip = true;\n    y = {// Y axis config\n        key: undefined,\n        value: function(d) { return this.y.key===undefined ? d : d[this.y.key]} , // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    series = false;\n    groups={\n        key: undefined,\n        value: function(d) { return this.groups.key===undefined ? '' : d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    tukey= false;\n    \n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class BoxPlot extends BoxPlotBase{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotConfig(config));\n    }\n\n    getDataToPlot(){\n        var self = this;\n        var conf = self.config;\n        self.plot.groupingEnabled = this.isGroupingEnabled();\n\n        var data = this.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.label || s.key || '',\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupValue = d => conf.groups.value.call(conf, d);\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n\n                var getDisplayValue= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getDisplayValue = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getDisplayValue = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                self.plot.groupedData.forEach(g => {\n                    g.key = getDisplayValue(g.key);\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n\n        self.plot.groupedData.forEach(s=>{\n            if(!Array.isArray(s.values)){\n                return;\n            }\n\n            var values = s.values.map(d=>parseFloat(self.config.y.value.call(self.config, d)));\n            s.values.Q1 = StatisticsUtils.quantile(values, 0.25);\n            s.values.Q2 = StatisticsUtils.quantile(values, 0.5);\n            s.values.Q3 = StatisticsUtils.quantile(values, 0.75);\n            var IQR =  s.values.Q3 - s.values.Q1;\n\n            if(!self.config.tukey){\n                s.values.whiskerLow = d3.min(values);\n                s.values.whiskerHigh = d3.max(values);\n            }else{\n                s.values.whiskerLow = s.values.Q1 - 1.5*IQR;\n                s.values.whiskerHigh = s.values.Q3 + 1.5*IQR;\n                s.values.outliers = values.filter(d=> d<s.values.whiskerLow || d>s.values.whiskerHigh);\n            }\n        });\n\n        return self.plot.groupedData;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ChartWithColorGroupsConfig extends ChartConfig{\n\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    groups={\n        key: 2,\n        value: function(d) { return d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    series = false;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ChartWithColorGroups extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ChartWithColorGroupsConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ChartWithColorGroupsConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n       \n        this.plot.showLegend = conf.showLegend;\n        this.setupGroups();\n        this.plot.data = this.getDataToPlot();\n        this.groupData();\n\n        if(this.plot.showLegend){\n            var scale = this.plot.colorCategory;\n            if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n                this.plot.showLegend = false;\n            }else{\n                this.plot.margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\n            }\n        }\n        return this;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n\n    computeGroupColorDomain(){\n        var map = d3.set(this.data, d => this.plot.groupValue(d));\n        return Object.getOwnPropertyNames(map).map(d=>map[d]);\n    }\n\n    setupGroups() {\n        var self=this;\n        var conf = this.config;\n\n        this.plot.groupingEnabled = this.isGroupingEnabled();\n        var domain = [];\n        if(this.plot.groupingEnabled){\n            self.plot.groupToLabel = {};\n            if(this.config.series){\n                this.plot.groupValue = s => s.key;\n                domain = this.computeGroupColorDomain();\n\n                this.data.forEach(s=>{\n                    self.plot.groupToLabel[s.key] = s.label||s.key;\n                })\n            }else{\n                this.plot.groupValue = d => conf.groups.value.call(conf, d);\n                domain = this.computeGroupColorDomain();\n                var getLabel= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getLabel = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getLabel = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                domain.forEach(k=>{\n                    self.plot.groupToLabel[k] = getLabel(k);\n                })\n            }\n\n        }else{\n            this.plot.groupValue = d => null;\n        }\n        this.plot.groupColorDomain = domain;\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n\n        if (colorValue){\n            if(typeof colorValue === 'string' || colorValue instanceof String){\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n            }else{\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n                var range = domain.map(v=>this.plot.seriesColor({key: v}));\n                this.plot.colorCategory = d3.scaleOrdinal(range);\n                this.plot.colorCategory.domain(domain);\n\n            }\n\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            self.plot.colorCategory.domain(domain);\n\n            this.plot.seriesColor = s =>  self.plot.colorCategory(s.key);\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.groupValue(d));\n            \n        }else{\n            this.plot.color = this.plot.seriesColor = s=> 'black'\n        }\n\n    }\n\n    groupData(){\n        var self=this;\n        var data = this.plot.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: null,\n                label: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.key,\n                        label: s.label,\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n                self.plot.groupedData.forEach(g => {\n                    g.label = self.plot.groupToLabel[g.key];\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n        // this.plot.seriesColor\n\n    }\n\n    getDataToPlot(){\n        if(!this.plot.groupingEnabled || !this.enabledGroups){\n            return this.data;\n        }\n        return this.data.filter(d => this.enabledGroups.indexOf(this.plot.groupValue(d))>-1);\n    }\n\n\n\n    update(newData){\n        super.update(newData);\n        this.updateLegend();\n\n        return this;\n    };\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.colorCategory;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n\n        plot.legendColor.on('cellclick', c=> self.onLegendCellClick(c));\n        \n        plot.legend.container\n            .call(plot.legendColor);\n\n        this.updateLegendCellStatuses();\n    }\n\n    onLegendCellClick(cellValue){\n        this.updateEnabledGroups(cellValue);\n        this.init();\n    }\n    updateLegendCellStatuses() {\n        var self = this;\n        this.plot.legend.container.selectAll(\"g.cell\").each(function(cell){\n            var isDisabled = self.enabledGroups && self.enabledGroups.indexOf(cell)<0;\n            d3.select(this).classed(\"odc-disabled\", isDisabled);\n        });\n    }\n\n    updateEnabledGroups(cellValue) {\n        if (!this.enabledGroups) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n        var index = this.enabledGroups.indexOf(cellValue);\n\n        if (index < 0) {\n            this.enabledGroups.push(cellValue);\n        } else {\n            this.enabledGroups.splice(index, 1);\n        }\n\n        if (!this.enabledGroups.length) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n\n    }\n\n    setData(data){\n        super.setData(data);\n        this.enabledGroups = null;\n        return this;\n    }\n}\n","import {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ChartConfig {\n    cssClassPrefix = \"odc-\";\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    showTooltip = false;\n    transition = true;\n\n    title = undefined;\n    titleSize=20;\n    titleMargin={\n        left: 0,\n        right: 0,\n        top: 15,\n        bottom: 20\n    };\n\n    subtitle = undefined;\n    subtitleSize=14;\n    subtitleMargin={\n        left: 0,\n        right: 0,\n        top: 10,\n        bottom: 20\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n\n\n}\n\nexport class Chart {\n    utils = Utils;\n    baseContainer;\n    svg;\n    config;\n    plot = {\n        margin: {}\n    };\n    _attached = {};\n    _layers = {};\n    _events = {};\n    _isAttached;\n    _isInitialized=false;\n\n\n    constructor(base, data, config) {\n        this._id = Utils.guid();\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n        this.init();\n        this.postInit();\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new ChartConfig();\n        } else {\n            this.config = config;\n        }\n        this.initConfigAccessors();\n        return this;\n    }\n\n    setData(data) {\n        this.data = data;\n        return this;\n    }\n\n    init() {\n        var self = this;\n        self.initPlot();\n        self.initSvg();\n\n        if(!this._isInitialized){\n            self.initTooltip();\n        }\n        self.draw();\n        this._isInitialized=true;\n        return this;\n    }\n\n    redraw(){\n        this.initConfigAccessors(true);\n        return this.init();\n    }\n\n    postInit(){\n\n    }\n\n    initSvg() {\n        var self = this;\n        var config = this.config;\n\n        var margin = self.plot.margin;\n        var width = self.svgWidth = self.plot.width + margin.left + margin.right;\n        var height = self.svgHeight =  self.plot.height + margin.top + margin.bottom;\n        var aspect = width / height;\n        if(!self._isAttached){\n            if(!this._isInitialized){\n                d3.select(self.baseContainer).select(\"svg\").remove();\n            }\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\").classed(config.svgClass, true);\n\n            self.svg\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n        }else{\n            // console.log(self.baseContainer);\n            self.svg = self.baseContainer.svg;\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\n        }\n\n        self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (!config.width || config.height) {\n            d3.select(window)\n                .on(\"resize.\"+self._id, function () {\n                    var transition = self.config.transition;\n                    self.config.transition=false;\n                    self.init();\n                    self.config.transition = transition;\n                });\n        }\n    }\n\n    destroy(){\n        d3.select(this.baseContainer).selectAll(\"*\").remove();\n        d3.select(window).on(\"resize.\" + this._id, null);\n    }\n\n    initTooltip(){\n        var self = this;\n        if (self.config.showTooltip) {\n            if(!self._isAttached ){\n                self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\n                    .style(\"opacity\", 0);\n            }else{\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\n            }\n\n        }else{\n            self.plot.tooltip = null;\n        }\n    }\n\n    initPlot() {\n        var margin = this.config.margin;\n        this.plot = this.plot || {};\n        this.plot.margin = {\n            top: margin.top,\n            bottom: margin.bottom,\n            left: margin.left,\n            right: margin.right\n        };\n\n\n        var titleMarginSize = 0;\n        if(this.config.title){\n            titleMarginSize= this.config.titleSize+this.config.titleMargin.top;\n            if(!this.config.subtitle){\n                titleMarginSize += this.config.titleMargin.bottom;\n            }\n\n            this.plot.margin.top=Math.max(this.plot.margin.top,titleMarginSize);\n        }\n\n        if(this.config.subtitle){\n\n            this.plot.margin.top=Math.max(this.plot.margin.top, titleMarginSize+this.config.subtitleMargin.top+this.config.subtitleSize+this.config.subtitleMargin.bottom);\n        }\n\n    }\n\n    update(data) {\n        if (data) {\n            this.setData(data);\n        }\n        this.updateTitle();\n        this.updateSubtitle();\n\n        var layerName, attachmentData;\n        for (var attachmentName in this._attached) {\n\n            attachmentData = data;\n\n            this._attached[attachmentName].update(attachmentData);\n        }\n        return this;\n    }\n\n    updateTitle() {\n        var titleClass = this.prefixClass('plot-title');\n        if(!this.config.title){\n            this.svg.select(\"text.\"+titleClass).remove();\n            return;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+titleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (this.config.titleMargin.top) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.titleSize+\"px\")\n            .text(this.config.title);\n    }\n\n    updateSubtitle() {\n        var subtitleClass = this.prefixClass('plot-subtitle');\n        if(!this.config.subtitle){\n            this.svg.select(\"text.\"+subtitleClass).remove();\n            return;\n        }\n\n        var y = this.config.subtitleMargin.top;\n        if(this.config.title){\n            y+=this.config.titleMargin.top+this.config.titleSize;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+subtitleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (y) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.subtitleSize+\"px\")\n            .text(this.config.subtitle);\n    }\n\n    draw(data) {\n        this.update(data);\n\n\n        return this;\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\n     * method will be invoked whenever the containing chart's `draw` method is\n     * invoked.\n     *\n     * @externalExample chart-attach\n     *\n     * @param {String} attachmentName Name of the attachment\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\n     *        unspecified, this method will return the attachment previously\n     *        registered with the specified `attachmentName` (if any).\n     *\n     * @returns {Chart} Reference to this chart (chainable).\n     */\n    attach(attachmentName, chart) {\n        if (arguments.length === 1) {\n            return this._attached[attachmentName];\n        }\n\n        this._attached[attachmentName] = chart;\n        return chart;\n    };\n\n    \n\n    //Borrowed from d3.chart\n    /**\n     * Subscribe a callback function to an event triggered on the chart. See {@link\n        * Chart#once} to subscribe a callback function to an event for one occurence.\n     *\n     * @externalExample {runnable} chart-on\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    on(name, callback, context) {\n        var events = this._events[name] || (this._events[name] = []);\n        events.push({\n            callback: callback,\n            context: context || this,\n            _chart: this\n        });\n        return this;\n    }\n\n    //Borrowed from d3.chart\n    /**\n     *\n     * Subscribe a callback function to an event triggered on the chart. This\n     * function will be invoked at the next occurance of the event and immediately\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\n     * event indefinitely.\n     *\n     * @externalExample {runnable} chart-once\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance\n     *\n     * @returns {Chart} A reference to this chart (chainable)\n     */\n    once(name, callback, context) {\n        var self = this;\n        var once = function () {\n            self.off(name, once);\n            callback.apply(this, arguments);\n        };\n        return this.on(name, once, context);\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Unsubscribe one or more callback functions from an event triggered on the\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\n     * When only a `name` is specified, all handlers subscribed to that event will\n     * be unsubscribed. When a `name` and `callback` are specified, only that\n     * function will be unsubscribed from that event. When a `name` and `context`\n     * are specified (but `callback` is omitted), all events bound to the given\n     * event with the given context will be unsubscribed.\n     *\n     * @externalExample {runnable} chart-off\n     *\n     * @param {String} [name] Name of the event to be unsubscribed\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\n     * @param {Object} [context] Contexts to be unsubscribe\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n\n    off(name, callback, context) {\n        var names, n, events, event, i, j;\n\n        // remove all events\n        if (arguments.length === 0) {\n            for (name in this._events) {\n                this._events[name].length = 0;\n            }\n            return this;\n        }\n\n        // remove all events for a specific name\n        if (arguments.length === 1) {\n            events = this._events[name];\n            if (events) {\n                events.length = 0;\n            }\n            return this;\n        }\n\n        // remove all events that match whatever combination of name, context\n        // and callback.\n        names = name ? [name] : Object.keys(this._events);\n        for (i = 0; i < names.length; i++) {\n            n = names[i];\n            events = this._events[n];\n            j = events.length;\n            while (j--) {\n                event = events[j];\n                if ((callback && callback === event.callback) ||\n                    (context && context === event.context)) {\n                    events.splice(j, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    //Borrowed from d3.chart\n    /**\n     * Publish an event on this chart with the given `name`.\n     *\n     * @externalExample {runnable} chart-trigger\n     *\n     * @param {String} name Name of the event to publish\n     * @param {...*} arguments Values with which to invoke the registered\n     *        callbacks.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    trigger(name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var events = this._events[name];\n        var i, ev;\n\n        if (events !== undefined) {\n            for (i = 0; i < events.length; i++) {\n                ev = events[i];\n                ev.callback.apply(ev.context, args);\n            }\n        }\n\n        return this;\n    };\n    getBaseContainer(){\n        if(this._isAttached){\n            return this.baseContainer.svg;\n        }\n        return d3.select(this.baseContainer);\n    }\n\n    getBaseContainerNode(){\n\n        return this.getBaseContainer().node();\n    }\n\n    prefixClass(clazz, addDot){\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\n    }\n    computePlotSize() {\n        this.plot.width = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        this.plot.height = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n    }\n\n    transitionEnabled(){\n        return this._isInitialized && this.config.transition;\n    }\n\n    showTooltip(html){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n        this.plot.tooltip.html(html)\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n    }\n\n    hideTooltip(){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n    }\n\n    initConfigAccessors(clean) {\n        if(clean){\n            this.removePropertyAccessors(this,this, this.config, \"$\");\n        }\n        this.initPropertyAccessors(this,this, this.config, \"$\", true);\n    }\n\n    removePropertyAccessors(bindTo,returnObj, source, prefix) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            delete bindTo[prefix + i];\n        }\n    }\n\n    initPropertyAccessors(bindTo,returnObj, source, prefix, recursive) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            var accessor = self.initPropertyAccessor(bindTo,returnObj, source, i, prefix);\n\n            if(recursive && Utils.isObjectNotArray(source[i])){\n                self.initPropertyAccessors(accessor, bindTo, source[i], prefix, recursive)\n            }\n        }\n    }\n\n    initPropertyAccessor(bindTo, returnObj, source, propertyKey, prefix) {\n        return bindTo[prefix + propertyKey] = function (_) {\n            if (!arguments.length) {\n                return source[propertyKey];\n            }\n            source[propertyKey] = _;\n            return returnObj;\n        };\n    }\n\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport {Legend} from './legend'\nimport {ScatterPlot} from './scatterplot'\nimport * as d3 from './d3'\n\nexport class CorrelationMatrixConfig extends ChartConfig {\n\n    svgClass = this.cssClassPrefix+'correlation-matrix';\n    guides = false; //show axis guides\n    showTooltip = true; //show tooltip on dot hover\n    showLegend = true;\n    highlightLabels = true;\n    rotateLabelsX = true;\n    rotateLabelsY = true;\n    variables = {\n        labels: undefined,\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => parseFloat(d[variableKey]), // variable value accessor\n        scale: \"ordinal\"\n    };\n    correlation = {\n        scale: \"linear\",\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\n\n    };\n    cell = {\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\n        size: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 1\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 60\n    };\n    groups={\n        key: null,\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class CorrelationMatrix extends Chart {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new CorrelationMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.correlation = {\n            matrix: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupVariables();\n        var width = conf.width;\n        var placeholderNode = this.getBaseContainerNode();\n        this.plot.placeholderNode = placeholderNode;\n\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\n        if (width) {\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n        } else {\n            this.plot.cellSize = this.config.cell.size;\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n\n        }\n\n        var height = width;\n        if (!height) {\n            height = placeholderNode.getBoundingClientRect().height;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = this.plot.width;\n\n        this.setupVariablesScales();\n        this.setupCorrelationScales();\n        this.setupCorrelationMatrix();\n\n\n        return this;\n    }\n\n    setupVariablesScales() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.variables;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([plot.width, 0]);\n        x.map = d => x.scale(x.value(d));\n\n    };\n\n    setupCorrelationScales() {\n        var plot = this.plot;\n        var corrConf = this.config.correlation;\n\n        plot.correlation.color.scale = Utils.createScale(corrConf.scale).domain(corrConf.domain).range(corrConf.range);\n        var shape = plot.correlation.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = cellConf.shape;\n\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\n        if (shape.type == 'circle') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([2, radiusMax]);\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\n        } else if (shape.type == 'ellipse') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([radiusMax, 2]);\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\n            shape.radiusY = radiusMax;\n\n            shape.rotateVal = v => {\n                if (v == 0) return \"0\";\n                if (v < 0) return \"-45\";\n                return \"45\"\n            }\n        } else if (shape.type == 'rect') {\n            shape.size = shapeSize;\n        }\n\n    }\n\n\n    setupVariables() {\n\n        var variablesConf = this.config.variables;\n\n        var data = this.data;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if (!plot.variables || !plot.variables.length) {\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            plot.domainByVariable[variableKey] = d3.extent(data, (d) => variablesConf.value(d, variableKey));\n            var label = variableKey;\n            if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        // console.log(plot.labelByVariable);\n\n    };\n\n\n    setupCorrelationMatrix() {\n        var self = this;\n        var data = this.data;\n        var matrix = this.plot.correlation.matrix = [];\n        var matrixCells = this.plot.correlation.matrix.cells = [];\n        var plot = this.plot;\n\n        var variableToValues = {};\n        plot.variables.forEach((v, i) => {\n\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\n        });\n\n        plot.variables.forEach((v1, i) => {\n            var row = [];\n            matrix.push(row);\n\n            plot.variables.forEach((v2, j) => {\n                var corr = 1;\n                if (v1 != v2) {\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                }\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: corr\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n\n        });\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        // this.update\n        this.updateCells();\n        this.updateVariableLabels();\n\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n    };\n\n    updateVariableLabels() {\n        this.plot.labelClass = this.prefixClass(\"label\");\n        this.updateAxisX();\n        this.updateAxisY();\n    }\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelXClass = labelClass + \"-x\";\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.variables, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"y\", plot.height)\n            .attr(\"dx\", -2)\n            .attr(\"dy\", 5)\n            .attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsX) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\n        }\n\n        var maxWidth = self.computeXAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelYClass = plot.labelClass + \"-y\";\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.variables);\n\n        var labelsMerge = labels.enter().append(\"text\").merge(labels);\n\n        labelsMerge\n            .attr(\"x\", 0)\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsY) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + 0 + \", \" + (i * plot.cellSize + plot.cellSize / 2) + \")\")\n                .attr(\"text-anchor\", \"end\");\n        }\n\n        var maxWidth = self.computeYAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    computeYAxisLabelsWidth() {\n        var maxWidth = this.plot.margin.left;\n        if (!this.config.rotateLabelsY) {\n            return maxWidth;\n        }\n\n        maxWidth *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        maxWidth -= fontSize / 2;\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.rotateLabelsX) {\n            return this.plot.cellSize - 2;\n        }\n        var size = this.plot.margin.bottom;\n        size *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        size -= fontSize / 2;\n        return size;\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.correlation.shape.type;\n\n        var cells = self.svgG.selectAll(\"g.\" + cellClass)\n            .data(plot.correlation.matrix.cells);\n\n        var cellsEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\n\n        cellsMerge.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n        var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n        var wrongShapes = cells.selectAll(selector);\n        wrongShapes.remove();\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        if (plot.correlation.shape.type == 'circle') {\n\n            shapes\n                .attr(\"r\", plot.correlation.shape.radius)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0);\n        }\n\n        if (plot.correlation.shape.type == 'ellipse') {\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n            shapes\n                .attr(\"rx\", plot.correlation.shape.radiusX)\n                .attr(\"ry\", plot.correlation.shape.radiusY)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\n        }\n\n\n        if (plot.correlation.shape.type == 'rect') {\n            shapes\n                .attr(\"width\", plot.correlation.shape.size)\n                .attr(\"height\", plot.correlation.shape.size)\n                .attr(\"x\", -plot.cellSize / 2)\n                .attr(\"y\", -plot.cellSize / 2);\n        }\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n\n\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n\n    updateLegend() {\n\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var legendY = 0;\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.correlation.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        \n    }\n\n    attachScatterPlot(containerSelector, config) {\n        var self = this;\n\n        config = config || {};\n\n\n        var scatterPlotConfig = {\n            height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            groups: {\n                key: self.config.groups.key,\n                label: self.config.groups.label\n            },\n            guides: true,\n            showLegend: false\n        };\n\n        self.scatterPlot = true;\n\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\n        this.update();\n\n        this.on(\"cell-selected\", c=> {\n\n\n            scatterPlotConfig.x = {\n                key: c.rowVar,\n                label: self.plot.labelByVariable[c.rowVar]\n            };\n            scatterPlotConfig.y = {\n                key: c.colVar,\n                label: self.plot.labelByVariable[c.colVar]\n            };\n            if (self.scatterPlot && self.scatterPlot !== true) {\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\n            } else {\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                this.attach(\"ScatterPlot\", self.scatterPlot);\n            }\n\n\n        });\n\n\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","module.exports = d3","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class DivergingStackedBarChartConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'diverging-stacked-bar-chart';\n    showTooltip = true;\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    x = {// X axis config\n        title: '', // axis label\n        value: d => d.values, // x value accessor\n        guides: true, //show axis guides\n        orient: 'top',\n        scale: \"linear\",\n        domainMargin: 0.02,\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d.key, // y value accessor\n        scale: \"ordinal\",\n        orient: 'left',\n        guides: true //show axis guides\n    };\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n    showBarValues = true;\n\n\n    colorRange = undefined;\n\n    categoryNames = undefined;\n    middleValue = 0;\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class DivergingStackedBarChart extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new DivergingStackedBarChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new DivergingStackedBarChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.plot.showLegend = this.config.showLegend;\n        if(this.plot.showLegend){\n            this.plot.margin.right = this.config.margin.right + this.config.legend.width+this.config.legend.margin*2;\n\n        }\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = d => conf.value.call(this.config, d);\n        x.scale = Utils.createScale(conf.scale).rangeRound([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n\n\n        plot.categoryNames = this.config.categoryNames;\n\n        plot.neutralIndex = Math.floor(plot.categoryNames.length/2);\n\n        plot.rows = data.map(d=> {\n            let originalValues = x.value(d);\n            let x0 = this.config.middleValue - d3.sum(originalValues.map((v,i) =>  i < plot.neutralIndex ? v : 0 ));\n            if (plot.categoryNames.length & 1)\n                x0 += -1 * originalValues[plot.neutralIndex]/2;\n\n            let values = originalValues.map((v, i) => i<plot.neutralIndex ? this.config.middleValue - v : this.config.middleValue + v);\n            let total = d3.sum(originalValues);\n            let categories = plot.categoryNames;\n            if(d.categories){\n                categories = d.categories.map((catIndex, i)=>plot.categoryNames[catIndex])\n            }\n\n            return {\n                datum: d,\n                originalValues: originalValues,\n                values: values,\n                categories: [],\n                min: x0,\n                max: x0+total,\n                total: total,\n                boxes: values.map((v, i)=>{\n                    return {\n                        name: categories[i],\n                        x0: x0,\n                        x1: x0+=originalValues[i],\n                        originalValue: originalValues[i]\n                    }\n                })\n            }\n        });\n\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = d3.extent([].concat(...plot.rows.map(b=>[b.min, b.max])));\n            let margin = ((domain[1]-domain[0])* conf.domainMargin) || conf.domainMargin*domain[0];\n\n            domain[0]-=margin;\n            domain[1]+=margin;\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = d3.scaleBand().range([0, plot.height]).padding(.3);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var domain = data.map(plot.y.value) ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n\n        if(axisConf.orient === 'bottom') {\n            axis.attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        }\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        var titleY = axisConf.orient === 'bottom' ? plot.margin.bottom : 0;\n        var titleDY = axisConf.orient === 'bottom' ? \"-1em\" : \"-1.5em\";\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (titleY) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", titleDY)\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBars() {\n        let self = this,\n            plot = self.plot,\n            config = self.config;\n\n        let rowClass = self.prefixClass(\"row\");\n        let rows = self.svgG.selectAll(\".\"+ rowClass)\n            .data(plot.rows);\n\n        let rowEnter = rows.enter().appendSelector(\"g.\"+rowClass);\n\n        let rowMerge = rowEnter.merge(rows)\n            .attr(\"transform\", d => \"translate(0,\" + plot.y.map(d.datum) + \")\");\n\n        rows.exit().remove();\n\n\n        let barClass = self.prefixClass(\"bar\");\n\n        let bars = rowMerge.selectAll(\"g.\"+ barClass)\n            .data(function(d) { return d.boxes; });\n        bars.exit().remove();\n\n        let barsEnter = bars.enter()\n            .append(\"g\")\n            .attr(\"class\", barClass);\n\n        barsEnter.append(\"rect\");\n        if(config.showBarValues){\n            barsEnter.append(\"text\");\n        }\n\n\n        let barsM =  barsEnter.merge(bars);\n\n        barsM.select(\"rect\").attr(\"height\", plot.y.scale.bandwidth())\n            .attr(\"x\", d =>plot.x.scale(d.x0))\n            .attr(\"width\", d => plot.x.scale(d.x1) - plot.x.scale(d.x0))\n            .style(\"fill\", (d, i) => plot.color(d.name, i));\n\n\n        let textM = barsM.select(\"text\");\n        if(config.showBarValues){\n            textM.attr(\"x\", d => plot.x.scale(d.x0))\n                .attr(\"y\", plot.y.scale.bandwidth()/2)\n                .attr(\"dy\", \"0.5em\")\n                .attr(\"dx\", d=>(plot.x.scale(d.x1)-plot.x.scale(d.x0))/2)\n                .style(\"text-anchor\", \"middle\")\n                .text(d => d.originalValue !== 0 && (d.x1-d.x0)>0.04 ? d.originalValue : \"\");\n        }else{\n            textM.remove();\n        }\n\n\n\n        self.svgG.selectOrAppend(\"line.\"+self.prefixClass(\"middle-line\"))\n            .attr(\"x1\", plot.x.scale(self.config.middleValue))\n            .attr(\"y1\", 0)\n            .attr(\"x2\", plot.x.scale(self.config.middleValue))\n            .attr(\"y2\", plot.height);\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        this.updateLegend();\n        return this;\n    };\n\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if (conf.colorRange){\n            this.plot.color = Utils.createScale(\"ordinal\").domain(this.plot.categoryNames).range(conf.colorRange);\n        }\n        else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = this.plot.colorCategory\n        }\n    }\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.color;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            // .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n        plot.legend.container\n            .call(plot.legendColor);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Heatmap, HeatmapConfig} from \"./heatmap\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class HeatmapTimeSeriesConfig extends HeatmapConfig {\n    x = {\n        fillMissing: false, // fill missing values using interval and intervalStep\n        interval: undefined, //used in filling missing ticks\n        intervalStep: 1,\n        format: undefined, //input data d3 time format\n        displayFormat: undefined,//d3 time format for display\n        intervalToFormats: [ //used to guess interval and format\n            {\n                name: 'year',\n                formats: [\"%Y\"]\n            },\n            {\n                name: 'month',\n                formats: [\"%Y-%m\"]\n            },\n            {\n                name: 'day',\n                formats: [\"%Y-%m-%d\"]\n            },\n            {\n                name: 'hour',\n                formats: ['%H', '%Y-%m-%d %H']\n            },\n            {\n                name: 'minute',\n                formats: ['%H:%M', '%Y-%m-%d %H:%M']\n            },\n            {\n                name: 'second',\n                formats: ['%H:%M:%S', '%Y-%m-%d %H:%M:%S']\n            }\n        ],\n\n        sortComparator: function sortComparator(a, b) {\n            return Utils.isString(a) ?  a.localeCompare(b) :  a - b;\n        },\n        formatter: undefined\n    };\n    z = {\n        fillMissing: true // fiill missing values with nearest previous value\n    };\n\n    legend = {\n        formatter: function (v) {\n            var suffix = \"\";\n            if (v / 1000000 >= 1) {\n                suffix = \" M\";\n                v = Number(v / 1000000).toFixed(3);\n            }\n            var nf = Intl.NumberFormat();\n            return nf.format(v) + suffix;\n        }\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class HeatmapTimeSeries extends Heatmap {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapTimeSeriesConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapTimeSeriesConfig(config));\n    }\n\n\n    setupValuesBeforeGroupsSort() {\n\n        this.plot.x.timeFormat = this.config.x.format;\n        if(this.config.x.displayFormat && !this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n\n        super.setupValuesBeforeGroupsSort();\n        if (!this.config.x.fillMissing) {\n            return;\n        }\n\n        var self = this;\n\n        this.initTimeFormatAndInterval();\n\n        this.plot.x.intervalStep = this.config.x.intervalStep || 1;\n\n        this.plot.x.timeParser = this.getTimeParser();\n\n\n\n        this.plot.x.uniqueValues.sort(this.config.x.sortComparator);\n\n        var prev = null;\n\n        this.plot.x.uniqueValues.forEach((x, i)=> {\n            var current = this.parseTime(x);\n            if (prev === null) {\n                prev = current;\n                return;\n            }\n\n            var next = self.nextTimeTickValue(prev);\n            var missing = [];\n            var iteration = 0;\n            while (self.compareTimeValues(next, current)<=0) {\n                iteration++;\n                if (iteration > 100) {\n                    break;\n                }\n                var d = {};\n                var timeString = self.formatTime(next);\n                d[this.config.x.key] = timeString;\n\n                self.updateGroups(d, timeString, self.plot.x.groups, self.config.x.groups);\n                missing.push(next);\n                next = self.nextTimeTickValue(next);\n            }\n            prev = current;\n        });\n\n    }\n\n    parseTime(x) {\n        var parser = this.getTimeParser();\n        return parser(x);\n    }\n\n    formatTime(date){\n        var formatter = this.getTimeFormatter();\n        return formatter(date);\n    }\n\n    formatValueX(value) { //used only for display\n        if (this.config.x.formatter) return this.config.x.formatter.call(this.config, value);\n\n        if(this.config.x.displayFormat){\n            var date = this.parseTime(value);\n            return d3.timeFormat(this.config.x.displayFormat)(date);\n        }\n\n        if(!this.plot.x.timeFormat) return value;\n\n        if(Utils.isDate(value)){\n            return this.formatTime(value);\n        }\n\n        return value;\n    }\n\n    compareTimeValues(a, b){\n        return a-b;\n    }\n\n    timeValuesEqual(a, b) {\n        var parser = this.plot.x.timeParser;\n        return parser(a) === parser(b);\n    }\n\n    nextTimeTickValue(t) {\n        var interval = 'time'+Utils.capitalizeFirstLetter(this.plot.x.interval);\n\n        return d3[interval].offset(t, this.plot.x.intervalStep);\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        if (this.config.z.fillMissing) {\n            this.plot.matrix.forEach((row, rowIndex) => {\n                var prevRowValue = undefined;\n                row.forEach((cell, colIndex) => {\n                    if (cell.value === undefined && prevRowValue !== undefined) {\n                        cell.value = prevRowValue;\n                        cell.missing = true;\n                    }\n                    prevRowValue = cell.value;\n                });\n            });\n        }\n\n\n    }\n\n    update(newData) {\n        super.update(newData);\n\n    };\n\n\n    initTimeFormatAndInterval() {\n\n        this.plot.x.interval = this.config.x.interval;\n\n        if(!this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n        if(!this.plot.x.interval && this.plot.x.timeFormat){\n            this.guessInterval();\n        }\n    }\n\n    guessTimeFormat() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++){\n            let intervalFormat = self.config.x.intervalToFormats[i];\n            var format = null;\n            var formatMatch = intervalFormat.formats.some(f=>{\n                format = f;\n                var parser = d3.timeParse(f);\n                return self.plot.x.uniqueValues.every(x=>{\n                    return parser(x) !== null\n                });\n            });\n            if(formatMatch){\n                self.plot.x.timeFormat = format;\n                // console.log('Guessed timeFormat', format);\n                if(!self.plot.x.interval){\n                    self.plot.x.interval = intervalFormat.name;\n                    // console.log('Guessed interval', self.plot.x.interval);\n                }\n                return;\n            }\n        }\n    }\n\n    guessInterval() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++) {\n            let intervalFormat = self.config.x.intervalToFormats[i];\n\n            if(intervalFormat.formats.indexOf(self.plot.x.timeFormat) >= 0){\n                self.plot.x.interval = intervalFormat.name;\n                // console.log('Guessed interval', self.plot.x.interval);\n                return;\n            }\n\n        }\n\n    }\n\n    getTimeFormatter() {\n        if(!this.plot.x.timeFormatter){\n            this.plot.x.timeFormatter = d3.timeFormat(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeFormatter;\n    }\n    getTimeParser() {\n        if(!this.plot.x.timeParser){\n            this.plot.x.timeParser = d3.timeParse(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeParser;\n    }\n}\n\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from './legend'\nimport * as d3 from './d3'\n\nexport class HeatmapConfig extends ChartConfig {\n\n    svgClass = 'odc-heatmap';\n    showTooltip = true; //show tooltip on dot hover\n    tooltip = {\n        noDataText: \"N/A\"\n    };\n    showLegend = true;\n    legend = {\n        width: 30,\n        rotateLabels: false,\n        decimalPlaces: undefined,\n        formatter: v => this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(this.legend.decimalPlaces)\n    }\n    highlightLabels = true;\n    x = {// X axis config\n        title: '', // axis title\n        key: 0,\n        value: (d) => d[this.x.key], // x value accessor\n        rotateLabels: true,\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(a) ? a - b : a.localeCompare(b),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                top: 20,\n                bottom: 20\n            }\n        },\n        formatter: undefined // value formatter function\n\n    };\n    y = {// Y axis config\n        title: '', // axis title,\n        rotateLabels: true,\n        key: 1,\n        value: (d) => d[this.y.key], // y value accessor\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(b) ? b - a : b.localeCompare(a),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                left: 20,\n                right: 20\n            }\n        },\n        formatter: undefined// value formatter function\n    };\n    z = {\n        key: 2,\n        value: (d) => d[this.z.key],\n        notAvailableValue: (v) => v === null || v === undefined,\n\n        decimalPlaces: undefined,\n        formatter: v => this.z.decimalPlaces === undefined ? v : Number(v).toFixed(this.z.decimalPlaces)// value formatter function\n\n    };\n    color = {\n        noDataColor: \"white\",\n        scale: \"linear\",\n        reverseScale: false,\n        range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\n    };\n    cell = {\n        width: undefined,\n        height: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 0\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 80\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//TODO refactor\nexport class Heatmap extends Chart {\n\n    static maxGroupGapSize = 24;\n    static groupTitleRectHeight = 6;\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n        this.plot.z = {\n            matrixes: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupValues();\n        this.buildCells();\n\n        var titleRectWidth = 6;\n        this.plot.x.overlap = {\n            top: 0,\n            bottom: 0\n        };\n        if (this.plot.groupByX) {\n            let depth = self.config.x.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n\n            this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\n            this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\n            this.plot.margin.top = this.plot.margin.top + conf.x.groups.overlap.top;\n            this.plot.margin.bottom = this.plot.margin.bottom + conf.x.groups.overlap.bottom;\n        }\n\n\n        this.plot.y.overlap = {\n            left: 0,\n            right: 0\n        };\n\n\n        if (this.plot.groupByY) {\n            let depth = self.config.y.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n            this.plot.y.overlap.right = self.config.y.groups.overlap.left + allTitlesWidth;\n            this.plot.y.overlap.left = self.config.y.groups.overlap.left;\n            this.plot.margin.left = this.plot.margin.left + this.plot.y.overlap.left;\n            this.plot.margin.right = this.plot.margin.right + this.plot.y.overlap.right;\n        }\n        this.plot.showLegend = conf.showLegend;\n        if (this.plot.showLegend) {\n            this.plot.margin.right += conf.legend.width;\n        }\n        this.computePlotSize();\n        this.setupZScale();\n\n        return this;\n    }\n\n    setupValues() {\n        var self = this;\n        var config = self.config;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n\n\n        x.value = d => config.x.value.call(config, d);\n        y.value = d => config.y.value.call(config, d);\n        z.value = d => config.z.value.call(config, d);\n\n        x.uniqueValues = [];\n        y.uniqueValues = [];\n\n\n        self.plot.groupByY = !!config.y.groups.keys.length;\n        self.plot.groupByX = !!config.x.groups.keys.length;\n\n        y.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n        x.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n\n        var valueMap = {};\n        var minZ = undefined;\n        var maxZ = undefined;\n        this.data.forEach(d=> {\n\n            var xVal = x.value(d);\n            var yVal = y.value(d);\n            var zValRaw = z.value(d);\n            var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\n\n\n            if (x.uniqueValues.indexOf(xVal) === -1) {\n                x.uniqueValues.push(xVal);\n            }\n\n            if (y.uniqueValues.indexOf(yVal) === -1) {\n                y.uniqueValues.push(yVal);\n            }\n\n            var groupY = y.groups;\n            if (self.plot.groupByY) {\n                groupY = this.updateGroups(d, yVal, y.groups, config.y.groups);\n            }\n            var groupX = x.groups;\n            if (self.plot.groupByX) {\n\n                groupX = this.updateGroups(d, xVal, x.groups, config.x.groups);\n            }\n\n            if (!valueMap[groupY.index]) {\n                valueMap[groupY.index] = {};\n            }\n\n            if (!valueMap[groupY.index][groupX.index]) {\n                valueMap[groupY.index][groupX.index] = {};\n            }\n            if (!valueMap[groupY.index][groupX.index][yVal]) {\n                valueMap[groupY.index][groupX.index][yVal] = {};\n            }\n            valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\n\n\n            if (minZ === undefined || zVal < minZ) {\n                minZ = zVal;\n            }\n            if (maxZ === undefined || zVal > maxZ) {\n                maxZ = zVal;\n            }\n        });\n        self.plot.valueMap = valueMap;\n\n\n        if (!self.plot.groupByX) {\n            x.groups.values = x.uniqueValues;\n        }\n\n        if (!self.plot.groupByY) {\n            y.groups.values = y.uniqueValues;\n        }\n\n        this.setupValuesBeforeGroupsSort();\n\n        x.gaps = [];\n        x.totalValuesCount = 0;\n        x.allValuesList = [];\n        this.sortGroups(x, x.groups, config.x);\n\n        y.gaps = [];\n        y.totalValuesCount = 0;\n        y.allValuesList = [];\n        this.sortGroups(y, y.groups, config.y);\n\n        z.min = minZ;\n        z.max = maxZ;\n\n    }\n\n    setupValuesBeforeGroupsSort() {\n    }\n\n    buildCells() {\n        var self = this;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n        var valueMap = self.plot.valueMap;\n\n        var matrixCells = self.plot.cells = [];\n        var matrix = self.plot.matrix = [];\n\n        y.allValuesList.forEach((v1, i)=> {\n            var row = [];\n            matrix.push(row);\n\n            x.allValuesList.forEach((v2, j) => {\n                var zVal = undefined;\n                try {\n                    zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val]\n                } catch (e) {\n                }\n\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: zVal\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n        });\n\n    }\n\n    updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\n\n        var config = this.config;\n        var currentGroup = rootGroup;\n        axisGroupsConfig.keys.forEach((groupKey, groupKeyIndex) => {\n            currentGroup.key = groupKey;\n\n            if (!currentGroup.children) {\n                currentGroup.children = {};\n            }\n\n            var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\n\n            if (!currentGroup.children.hasOwnProperty(groupingValue)) {\n                rootGroup.lastIndex++;\n                currentGroup.children[groupingValue] = {\n                    values: [],\n                    children: null,\n                    groupingValue: groupingValue,\n                    level: currentGroup.level + 1,\n                    index: rootGroup.lastIndex,\n                    key: groupKey\n                }\n            }\n\n            currentGroup = currentGroup.children[groupingValue];\n        });\n\n        if (currentGroup.values.indexOf(axisVal) === -1) {\n            currentGroup.values.push(axisVal);\n        }\n\n        return currentGroup;\n    }\n\n    sortGroups(axis, group, axisConfig, gaps) {\n        if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\n            group.label = axisConfig.groups.labels[group.level];\n        } else {\n            group.label = group.key;\n        }\n\n        if (!gaps) {\n            gaps = [0];\n        }\n        if (gaps.length <= group.level) {\n            gaps.push(0);\n        }\n\n        group.allValuesCount = group.allValuesCount || 0;\n        group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\n\n        group.gaps = gaps.slice();\n        group.gapsBefore = gaps.slice();\n\n\n        group.gapsSize = Heatmap.computeGapsSize(group.gaps);\n        group.gapsBeforeSize = group.gapsSize;\n        if (group.values) {\n            if (axisConfig.sortLabels) {\n                group.values.sort(axisConfig.sortComparator);\n            }\n            group.values.forEach(v=>axis.allValuesList.push({val: v, group: group}));\n            group.allValuesBeforeCount = axis.totalValuesCount;\n            axis.totalValuesCount += group.values.length;\n            group.allValuesCount += group.values.length;\n        }\n\n        group.childrenList = [];\n        if (group.children) {\n            var childrenCount = 0;\n\n            for (var childProp in group.children) {\n                if (group.children.hasOwnProperty(childProp)) {\n                    var child = group.children[childProp];\n                    group.childrenList.push(child);\n                    childrenCount++;\n\n                    this.sortGroups(axis, child, axisConfig, gaps);\n                    group.allValuesCount += child.allValuesCount;\n                    gaps[group.level] += 1;\n                }\n            }\n\n            if (gaps && childrenCount > 1) {\n                gaps[group.level] -= 1;\n            }\n\n            group.gapsInside = [];\n            gaps.forEach((d, i)=> {\n                group.gapsInside.push(d - (group.gapsBefore[i] || 0));\n            });\n            group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\n\n            if (axis.gaps.length < gaps.length) {\n                axis.gaps = gaps;\n            }\n        }\n\n    }\n\n    computeYAxisLabelsWidth(offset) {\n        var maxWidth = this.plot.margin.left;\n        if (this.config.y.title) {\n            maxWidth -= 15;\n        }\n        if (offset && offset.x) {\n            maxWidth += offset.x;\n        }\n\n        if (this.config.y.rotateLabels) {\n            maxWidth *= Utils.SQRT_2;\n            var fontSize = 11; //todo check actual font size\n            maxWidth -=fontSize/2;\n        }\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.x.rotateLabels) {\n            return this.plot.cellWidth - 2;\n        }\n        var size = this.plot.margin.bottom;\n        if (this.config.x.title) {\n            size -= 15;\n        }\n        if (offset && offset.y) {\n            size -= offset.y;\n        }\n\n        size *= Utils.SQRT_2;\n\n        var fontSize = 11; //todo check actual font size\n        size -=fontSize/2;\n\n        return size;\n    }\n\n    static computeGapSize(gapLevel) {\n        return Heatmap.maxGroupGapSize / (gapLevel + 1);\n    }\n\n    static computeGapsSize(gaps) {\n        var gapsSize = 0;\n        gaps.forEach((gapsNumber, gapsLevel)=> gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel));\n        return gapsSize;\n    }\n\n    computePlotSize() {\n\n        var plot = this.plot;\n        var conf = this.config;\n        var margin = plot.margin;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n        var width = availableWidth;\n        var height = availableHeight;\n\n        var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\n\n\n        var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\n        if (this.config.width) {\n\n            if (!this.config.cell.width) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        } else {\n            this.plot.cellWidth = this.config.cell.width;\n\n            if (!this.plot.cellWidth) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        }\n        width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\n\n        var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\n        var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\n        if (this.config.height) {\n            if (!this.config.cell.height) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n        } else {\n            this.plot.cellHeight = this.config.cell.height;\n\n            if (!this.plot.cellHeight) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n\n        }\n\n        height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\n\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n    }\n\n\n    setupZScale() {\n\n        var self = this;\n        var config = self.config;\n        var z = self.plot.z;\n        var range = config.color.range;\n        var extent = z.max - z.min;\n        var scale;\n        z.domain = [];\n        if (config.color.scale == \"pow\") {\n            var exponent = 10;\n            range.forEach((c, i)=> {\n                var v = z.max - (extent / Math.pow(10, i));\n                z.domain.push(v)\n            });\n            scale = d3.scalePow().exponent(exponent);\n        } else if (config.color.scale == \"log\") {\n\n            range.forEach((c, i)=> {\n                var v = z.min + (extent / Math.pow(10, i));\n                z.domain.unshift(v)\n\n            });\n\n            scale = d3.scaleLog()\n        } else {\n            range.forEach((c, i)=> {\n                var v = z.min + (extent * (i / (range.length - 1)));\n                z.domain.push(v)\n            });\n            scale = Utils.createScale(config.color.scale);\n\n        }\n\n\n        z.domain[0] = z.min; //removing unnecessary floating points\n        z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\n        // console.log(z.domain);\n\n        if (config.color.reverseScale) {\n            z.domain.reverse();\n        }\n\n        var plot = this.plot;\n\n        // console.log(range);\n\n        plot.z.color.scale = scale.domain(z.domain).range(range);\n        var shape = plot.z.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = \"rect\";\n\n        plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\n        plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        if (this.plot.groupByY) {\n            this.drawGroupsY(this.plot.y.groups, this.svgG);\n        }\n        if (this.plot.groupByX) {\n            this.drawGroupsX(this.plot.x.groups, this.svgG);\n        }\n\n        this.updateCells();\n\n        // this.updateVariableLabels();\n\n        this.updateAxisX();\n        this.updateAxisY();\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n\n        this.updateAxisTitles();\n    };\n\n    updateAxisTitles() {\n        var self = this;\n        var plot = self.plot;\n\n\n    }\n\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelXClass = labelClass + \"-x\";\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n        var offsetX = {\n            x: 0,\n            y: 0\n        };\n        let gapSize = Heatmap.computeGapSize(0);\n        if (plot.groupByX) {\n            let overlap = self.config.x.groups.overlap;\n\n            offsetX.x = gapSize / 2;\n            offsetX.y = overlap.bottom + gapSize / 2 + 6;\n        } else if (plot.groupByY) {\n            offsetX.y = gapSize;\n        }\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.x.allValuesList, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => (i * plot.cellWidth + plot.cellWidth / 2) + (d.group.gapsSize) + offsetX.x)\n            .attr(\"y\", plot.height + offsetX.y)\n            .attr(\"dy\", 10)\n\n            .attr(\"text-anchor\", \"middle\")\n            .text(d=>self.formatValueX(d.val));\n\n\n\n        var maxWidth = self.computeXAxisLabelsWidth(offsetX);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueX(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.x.rotateLabels) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + ((i * plot.cellWidth + plot.cellWidth / 2) + d.group.gapsSize + offsetX.x ) + \", \" + ( plot.height + offsetX.y) + \")\")\n                .attr(\"dx\", -2)\n                .attr(\"dy\", 8)\n                .attr(\"text-anchor\", \"end\");\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.height + plot.margin.bottom) + \")\")\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n\n            .attr(\"dy\", \"-0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.x.title);\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.y.allValuesList);\n\n        var labelsEnter = labels.enter().append(\"text\");\n        var labelsMerge = labelsEnter.merge(labels);\n\n        var offsetY = {\n            x: 0,\n            y: 0\n        };\n        if (plot.groupByY) {\n            let overlap = self.config.y.groups.overlap;\n            let gapSize = Heatmap.computeGapSize(0);\n            offsetY.x = -overlap.left;\n\n            offsetY.y = gapSize / 2;\n        }\n        labelsMerge\n            .attr(\"x\", offsetY.x)\n            .attr(\"y\", (d, i) => (i * plot.cellHeight + plot.cellHeight / 2) + d.group.gapsSize + offsetY.y)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n\n            .text(function (d) {\n                var formatted = self.formatValueY(d.val);\n                return formatted\n            });\n\n        var maxWidth = self.computeYAxisLabelsWidth(offsetY);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueY(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.y.rotateLabels) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + (offsetY.x  ) + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\")\n                .attr(\"text-anchor\", \"end\");\n            // .attr(\"dx\", -7);\n        } else {\n            labelsMerge.attr(\"dominant-baseline\", \"middle\")\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y'))\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.y.title);\n\n    }\n\n\n    drawGroupsY(parentGroup, container, availableWidth) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupYClass = groupClass + \"-y\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupYClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n\n        var titleRectWidth = Heatmap.groupTitleRectHeight;\n        var depth = self.config.y.groups.keys.length - parentGroup.level;\n        var overlap = {\n            left: 0,\n            right: 0\n        };\n\n        if (!availableWidth) {\n            overlap.right = plot.y.overlap.left;\n            overlap.left = plot.y.overlap.left;\n            availableWidth = plot.width + gapSize + overlap.left + overlap.right;\n        }\n\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + (padding - overlap.left) + \",\" + ((plot.cellHeight * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n\n        var groupWidth = availableWidth - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\");\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"width\", titleRectWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"width\", groupWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\")\n\n\n        groupsMerge.each(function (group) {\n\n            self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\n        });\n\n        groups.exit().remove();\n    }\n\n    drawGroupsX(parentGroup, container, availableHeight) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupXClass = groupClass + \"-x\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupXClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n        var titleRectHeight = Heatmap.groupTitleRectHeight;\n\n        var depth = self.config.x.groups.keys.length - parentGroup.level;\n\n        var overlap = {\n            top: 0,\n            bottom: 0\n        };\n\n        if (!availableHeight) {\n            overlap.bottom = plot.x.overlap.bottom;\n            overlap.top = plot.x.overlap.top;\n            availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\n\n        } else {\n            overlap.top = -titleRectHeight;\n        }\n        // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + ((plot.cellWidth * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n        var groupHeight = availableHeight - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(0, \" + (0) + \")\");\n\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"height\", titleRectHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"height\", groupHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\");\n\n        groupsMerge.each(function (group) {\n            self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\n        });\n\n        groups.exit().remove();\n\n    }\n\n    setGroupMouseCallbacks(parentGroup, tileRects) {\n        var plot = this.plot;\n        var self = this;\n        var mouseoverCallbacks = [];\n        mouseoverCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', true);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\n        });\n\n        var mouseoutCallbacks = [];\n        mouseoutCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', false);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\n        });\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(d=> {\n                var html = parentGroup.label + \": \" + d.groupingValue;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(d=> {\n                self.hideTooltip();\n            });\n\n\n        }\n        tileRects.on(\"mouseover\", function (d) {\n            var self = this;\n            mouseoverCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n        tileRects.on(\"mouseout\", function (d) {\n            var self = this;\n            mouseoutCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellContainerClass = self.prefixClass(\"cells\");\n        var gapSize = Heatmap.computeGapSize(0);\n        var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\n        var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\n        var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\n        cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\n\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.z.shape.type;\n\n        var cells = cellContainer.selectAll(\"g.\" + cellClass)\n            .data(self.plot.cells);\n\n        var cellEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n\n        var cellsMerge = cellEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + ((plot.cellWidth * c.col + plot.cellWidth / 2) + c.colVar.group.gapsSize) + \",\" + ((plot.cellHeight * c.row + plot.cellHeight / 2) + c.rowVar.group.gapsSize) + \")\");\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        shapes\n            .attr(\"width\", plot.z.shape.width)\n            .attr(\"height\", plot.z.shape.height)\n            .attr(\"x\", -plot.cellWidth / 2)\n            .attr(\"y\", -plot.cellHeight / 2);\n\n        shapes.style(\"fill\", c=> c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value));\n        shapes.attr(\"fill-opacity\", d=> d.value === undefined ? 0 : 1);\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\n                self.showTooltip(html);\n\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n    formatValueX(value) {\n        if (!this.config.x.formatter) return value;\n\n        return this.config.x.formatter.call(this.config, value);\n    }\n\n    formatValueY(value) {\n        if (!this.config.y.formatter) return value;\n\n        return this.config.y.formatter.call(this.config, value);\n    }\n\n    formatValueZ(value) {\n        if (!this.config.z.formatter) return value;\n\n        return this.config.z.formatter.call(this.config, value);\n    }\n\n    formatLegendValue(value) {\n        if (!this.config.legend.formatter) return value;\n\n        return this.config.legend.formatter.call(this.config, value);\n    }\n\n    updateLegend() {\n        var self = this;\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var gapSize = Heatmap.computeGapSize(0);\n        if (this.plot.groupByY) {\n            legendX += gapSize / 2 + plot.y.overlap.right;\n        } else if (this.plot.groupByX) {\n            legendX += gapSize;\n        }\n        var legendY = 0;\n        if (this.plot.groupByX || this.plot.groupByY) {\n            legendY += gapSize / 2;\n        }\n\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.z.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY, v => self.formatLegendValue(v)).setRotateLabels(self.config.legend.rotateLabels).linearGradientBar(barWidth, barHeight);\n    }\n\n\n}\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class HistogramConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'histogram';\n    showLegend=true;\n    showTooltip =true;\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : parseFloat(d[key]), // x value accessor\n        scale: \"linear\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    frequency=true;\n    groups={\n        key: 1\n    };\n    transition= true;\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Histogram extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HistogramConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new HistogramConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.bar={\n            color: null//color scale mapping function\n        };\n        \n        this.computePlotSize();\n        \n        this.setupX();\n        this.setupHistogram();\n        this.setupGroupStacks();\n        this.setupY();\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        if(conf.ticks){\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.groupedData;\n        plot.x.scale.domain([d3.min(data, s=>d3.min(s.values, plot.x.value)), d3.max(data, s=>d3.max(s.values, plot.x.value))]);\n        \n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        var data = this.plot.data;\n        var yStackMax = d3.max(plot.stackedHistograms, layer => d3.max(layer.histogramBins, d => d.y0 + d.y));\n        plot.y.scale.domain([0, yStackMax]);\n\n    };\n\n\n    setupHistogram() {\n        var plot = this.plot;\n        var x = plot.x;\n        var y = plot.y;\n        var ticks = this.config.x.ticks ? x.scale.ticks(this.config.x.ticks) : x.scale.ticks();\n\n        plot.histogram = d3.histogram()\n            .domain(x.scale.domain())\n            .value(x.value)\n            .thresholds(ticks);\n    }\n\n    setupGroupStacks() {\n        var self=this;\n        var y0s = [];\n        this.plot.groupedData.forEach(d=>{\n            d.histogramBins = this.plot.histogram(d.values);\n\n                d.histogramBins.forEach((b,i) => {\n                    b.x =b.x0;\n                    b.dx = b.x1-b.x0;\n                    b.y = b.length;\n                    var prevY0 = y0s[i];\n                    if(!prevY0) prevY0 = 0;\n                    b.y0 = prevY0;\n\n                    if(!this.config.frequency){\n                        b.y/=this.plot.dataLength\n                    }\n                    y0s[i] = b.y+prevY0;\n                });\n\n\n        });\n        var keys = this.plot.groupedData.map(d=>d.key);\n        // console.log(this.plot.groupedData);\n\n        this.plot.stack = d3.stack().keys(keys).value(d=>d.histogramBins);\n        this.plot.stackedHistograms = this.plot.groupedData;\n    }\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawHistogram() {\n        var self = this;\n        var plot = self.plot;\n        \n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\"+layerClass)\n            .data(plot.stackedHistograms);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n\n        var bar = layerMerge.selectAll(\".\"+barClass)\n            .data(d => d.histogramBins);\n\n        var barEnter = bar.enter().append(\"g\");\n        barEnter\n            .attr(\"class\", barClass)\n            .append(\"rect\")\n            .attr(\"x\", 1);\n\n        var barMerge = barEnter.merge(bar);\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT= layerMerge.transition();\n        }\n\n        barT.attr(\"transform\", function(d) { return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 +d.y)) + \")\"; });\n        var rectWidth = plot.stackedHistograms.length ? (plot.stackedHistograms[0].histogramBins.length ?  plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x1)-plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x0)-1 : 0) : 0;\n\n\n        barRectT\n            .attr(\"width\",  d=>  Math.max(0, plot.x.scale(d.x1)-plot.x.scale(d.x0)-1) )\n            .attr(\"height\", d =>   plot.height - plot.y.scale(d.y));\n\n        if(this.plot.color){\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.drawHistogram();\n        return this;\n    };\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\nexport {Regression, RegressionConfig} from './regression'\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\nexport {Heatmap, HeatmapConfig} from './heatmap'\nexport {HeatmapTimeSeries, HeatmapTimeSeriesConfig} from './heatmap-timeseries'\nexport {Histogram, HistogramConfig} from './histogram'\nexport {BarChart, BarChartConfig} from './bar-chart'\nexport {BoxPlotBase, BoxPlotBaseConfig} from './box-plot-base'\nexport {BoxPlot, BoxPlotConfig} from './box-plot'\nexport {DivergingStackedBarChart, DivergingStackedBarChartConfig} from './diverging-stacked-bar-chart'\nexport {LineChart, LineChartConfig} from './line-chart'\nexport {StatisticsUtils} from './statistics-utils'\nexport {Utils} from './utils'\nexport {Legend} from './legend'\n\n\n\n\n\n","import {Utils} from \"./utils\";\n\nimport {legendColor, legendSize, legendSymbol} from 'd3-svg-legend'\n\n\n/*var d3 = require('../bower_components/d3');\n*/\n// var legend = require('../bower_components/d3-legend/no-extend');\n//\n// module.exports.legend = legend;\n\nexport class Legend {\n\n    cssClassPrefix=\"odc-\";\n    legendClass=this.cssClassPrefix+\"legend\";\n    container;\n    scale;\n    color= legendColor;\n    size = legendSize;\n    symbol= legendSymbol;\n    guid;\n\n    labelFormat = undefined;\n\n    constructor(svg, legendParent, scale, legendX, legendY, labelFormat){\n        this.scale=scale;\n        this.svg = svg;\n        this.guid = Utils.guid();\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\n            .classed(this.legendClass, true);\n\n        this.labelFormat = labelFormat;\n    }\n\n\n\n    linearGradientBar(barWidth, barHeight, title){\n        var gradientId = this.cssClassPrefix+\"linear-gradient\"+\"-\"+this.guid;\n        var scale= this.scale;\n        var self = this;\n\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n        this.container.selectOrAppend(\"rect\")\n            .attr(\"width\", barWidth)\n            .attr(\"height\", barHeight)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\n\n\n        var ticks = this.container.selectAll(\"text\")\n            .data( scale.domain() );\n        var ticksNumber =scale.domain().length-1;\n        var ticksMerge = ticks.enter().append(\"text\").merge(ticks);\n\n        ticksMerge.attr(\"x\", barWidth)\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\n            .attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(d=> self.labelFormat ? self.labelFormat(d) : d);\n        ticksMerge.attr(\"dominant-baseline\", \"middle\")\n        if(this.rotateLabels){\n            ticksMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + barWidth + \", \" + (barHeight -(i*barHeight/ticksNumber)) + \")\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"dx\", 5)\n                .attr(\"dy\", 5);\n\n        }else{\n\n        }\n\n        ticks.exit().remove();\n\n        return this;\n    }\n\n    setRotateLabels(rotateLabels) {\n        this.rotateLabels = rotateLabels;\n        return this;\n    }\n\n    \n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class LineChartConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'line-chart';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n    lineId = (d, i)=> undefined;\n    transition= true;\n    onLineHover = (d, i) => {};\n    onLineHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LineChart extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LineChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new LineChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.updateLines();\n    };\n\n    updateLines() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var lineClass = this.lineClass = self.prefixClass('line');\n        self.linesContainerClass = self.prefixClass('lines-container');\n\n        var linesContainer = self.svgG.selectOrAppend(\"g.\" + self.linesContainerClass);\n\n        var layer = linesContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n        var linePathEnter = layerEnter.append(\"path\")\n            .attr(\"class\", lineClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var linePath = layerMerge.select('.' + lineClass)\n            .datum(d=>d.values);\n\n        var linePathMerge = linePathEnter.merge(linePath);\n\n        var linePathT = linePathMerge;\n        if (self.transitionEnabled()) {\n            linePathT = linePathMerge.transition();\n        }\n\n        var line = d3.line()\n            .x(plot.x.map)\n            .y(plot.y.map);\n\n        linePathT\n            .attr(\"fill\", \"none\")\n            // .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"id\", this.config.lineId)\n            .attr(\"d\", line);\n\n\n        //TODO add tooltip\n\n        linePathMerge.on(\"mouseover.onLineHover\", this.config.onLineHover);\n        linePathMerge.on(\"mouseout.onLineHoverOut\", this.config.onLineHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"stroke\", plot.seriesColor)\n        }else if(plot.color){\n            linePathMerge.style(\"stroke\", plot.color)\n        }\n\n        linePath.exit().remove();\n        var dotClass = this.dotClass = self.prefixClass('dot');\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values);\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n\n\n\n        layer.exit().remove();\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class RegressionConfig extends ScatterPlotConfig{\n\n    mainRegression = true;\n    groupRegression = true;\n    confidence={\n        level: 0.95,\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\n        marginOfError: undefined, //custom  margin Of Error function (x, points)\n        areaCurve: d3.curveNatural\n    };\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Regression extends ScatterPlot{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new RegressionConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new RegressionConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.initRegressionLines();\n    }\n\n    initRegressionLines(){\n\n        var self = this;\n        var groupsAvailable = self.plot.groupingEnabled;\n\n        self.plot.regressions= [];\n\n\n        if(groupsAvailable && self.config.mainRegression){\n            var regression = this.initRegression(this.plot.data, false);\n            self.plot.regressions.push(regression);\n        }\n\n        if(self.config.groupRegression){\n            this.initGroupRegression();\n        }\n\n    }\n\n    initGroupRegression() {\n        var self = this;\n\n        self.plot.groupedData.forEach(group=>{\n            if(group.values.length<2){\n                return;\n            }\n\n            var regression = this.initRegression(group.values, group.key);\n            self.plot.regressions.push(regression);\n        });\n    }\n\n    initRegression(values, groupVal){\n        var self = this;\n\n        var points = values.map(d=>{\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n        });\n\n        // points.sort((a,b) => a[0]-b[0]);\n\n        var linearRegression =  StatisticsUtils.linearRegression(points);\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\n\n\n        var extentX = d3.extent(points, d=>d[0]);\n\n\n        var linePoints = [\n            {\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            },\n            {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }\n        ];\n\n        var line = d3.line()\n            .curve(d3.curveBasis)\n            .x(d => self.plot.x.scale(d.x))\n            .y(d => self.plot.y.scale(d.y));\n\n        var color = self.plot.color;\n\n        var defaultColor = \"black\";\n        if(Utils.isFunction(color)){\n            if(values.length && groupVal!==false){\n                if(self.config.series){\n                    color =self.plot.colorCategory(groupVal);\n                }else{\n                    color = color(values[0]);\n                }\n\n            }else{\n                color = defaultColor;\n            }\n        }else if(!color && groupVal===false){\n            color = defaultColor;\n        }\n\n\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\n        return {\n            group: groupVal || false,\n            line: line,\n            linePoints: linePoints,\n            color: color,\n            confidence: confidence\n        };\n    }\n\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\n        var self = this;\n        var slope = linearRegression.m;\n        var n = points.length;\n        var degreesOfFreedom = Math.max(0, n-2);\n\n        var alpha = 1 - self.config.confidence.level;\n        var criticalProbability  = 1 - alpha/2;\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\n\n        var xValues = points.map(d=>d[0]);\n        var meanX = StatisticsUtils.mean(xValues);\n        var xMySum=0;\n        var xSum=0;\n        var xPowSum=0;\n        var ySum=0;\n        var yPowSum=0;\n        points.forEach(p=>{\n            var x = p[0];\n            var y = p[1];\n\n            xMySum += x*y;\n            xSum+=x;\n            ySum+=y;\n            xPowSum+= x*x;\n            yPowSum+= y*y;\n        });\n        var a = linearRegression.m;\n        var b = linearRegression.b;\n\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\n\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n        var marginOfError =  x=> criticalValue* errorFn(x);\n\n\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n\n        var computeConfidenceAreaPoint = x=>{\n            var linearRegression = linearRegressionLine(x);\n            var moe = marginOfError(x);\n            var confDown = linearRegression - moe;\n            var confUp = linearRegression + moe;\n            return {\n                x: x,\n                y0: confDown,\n                y1: confUp\n            }\n\n        };\n\n        var centerX = (extentX[1]+extentX[0])/2;\n\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n\n        var fitInPlot = y => y;\n\n        var confidenceArea =  d3.area()\n        .curve(self.config.confidence.areaCurve)\n            .x(d => self.plot.x.scale(d.x))\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\n\n        return {\n            area:confidenceArea,\n            points:confidenceAreaPoints\n        };\n    }\n\n    update(newData){\n        super.update(newData);\n        this.updateRegressionLines();\n\n    };\n\n    updateRegressionLines() {\n        var self = this;\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\n\n        var clipPathId = self.prefixClass(\"clip\");\n\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\n            .attr(\"id\", clipPathId);\n\n\n        regressionContainerClip.selectOrAppend('rect')\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        regressionContainer.attr(\"clip-path\", (d,i) => \"url(#\"+clipPathId+\")\");\n\n        var regressionClass = this.prefixClass(\"regression\");\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\n        var regressionSelector = \"g.\"+regressionClass;\n        var regression = regressionContainer.selectAll(regressionSelector)\n            .data(self.plot.regressions, (d,i)=> d.group);\n\n\n        var regressionEnter = regression.enter().appendSelector(regressionSelector);\n        var regressionMerge = regressionEnter.merge(regression);\n        var lineClass = self.prefixClass(\"line\");\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", lineClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\");\n\n        var line = regressionMerge.select(\"path.\"+lineClass)\n            .style(\"stroke\", r => r.color);\n        \n        var lineT = line;\n        if (self.transitionEnabled()) {\n            lineT = line.transition();\n        }\n\n        lineT.attr(\"d\", r => r.line(r.linePoints))\n\n\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", confidenceAreaClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .style(\"opacity\", \"0.4\");\n\n\n\n        var area = regressionMerge.select(\"path.\"+confidenceAreaClass);\n\n        var areaT = area;\n        if (self.transitionEnabled()) {\n            areaT = area.transition();\n        }\n        areaT.attr(\"d\", r => r.confidence.area(r.confidence.points));\n        areaT.style(\"fill\", r => r.color)\n        regression.exit().remove();\n\n    }\n\n\n\n}\n\n","import {ChartWithColorGroups} from \"./chart-with-color-groups\";\nimport {ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\n    size= undefined; //scatter plot cell size\n    minCellSize = 50;\n    maxCellSize = 1000;\n    padding= 20; //scatter plot cell padding\n    brush= true;\n    guides= true; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n    ticks= undefined; //ticks number, (default: computed using cell size)\n    x={// X axis config\n        orient: \"bottom\",\n        scale: \"linear\"\n    };\n    y={// Y axis config\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    groups={\n        key: undefined, //object property name or array index with grouping variable\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\n    };\n    variables= {\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => d[variableKey] // variable value accessor\n    };\n\n    constructor(custom){\n        super();\n        Utils.deepExtend(this, custom);\n    }\n\n\n}\n\nexport class ScatterPlotMatrix extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        var self = this;\n        var margin = this.plot.margin;\n        var conf = this.config;\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.dot={\n            color: null//color scale mapping function\n        };\n        \n        this.setupVariables();\n\n        this.plot.size = conf.size;\n\n\n        var width = conf.width;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), margin);\n        if (!width) {\n            if(!this.plot.size){\n                this.plot.size =  Math.min(conf.maxCellSize, Math.max(conf.minCellSize, availableWidth/this.plot.variables.length));\n            }\n            width = margin.left + margin.right + this.plot.variables.length*this.plot.size;\n        }\n        if(!this.plot.size){\n            this.plot.size = (width - (margin.left + margin.right)) / this.plot.variables.length;\n        }\n\n        var height = width;\n        if (!height) {\n            height = availableHeight;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n\n\n        this.plot.ticks = conf.ticks;\n\n        if(this.plot.ticks===undefined){\n            this.plot.ticks = this.plot.size / 40;\n        }\n\n        this.setupX();\n        this.setupY();\n\n        return this;\n\n    };\n\n    setupVariables() {\n        var variablesConf = this.config.variables;\n\n        var data = this.plot.groupedData;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if(!plot.variables || !plot.variables.length){\n\n            plot.variables = data.length ? Utils.inferVariables(data[0].values, this.config.groups.key, this.config.includeInPlot) : [];\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            var min = d3.min(data, s=>d3.min(s.values, d=>variablesConf.value(d, variableKey)));\n            var max = d3.max(data, s=>d3.max(s.values, d=>variablesConf.value(d, variableKey)));\n            plot.domainByVariable[variableKey] = [min,max];\n            var label = variableKey;\n            if(variablesConf.labels && variablesConf.labels.length>index){\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        plot.subplots = [];\n    };\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config;\n\n        \n        x.value = conf.variables.value;\n        x.scale = Utils.createScale(conf.x.scale).range([conf.padding / 2, plot.size - conf.padding / 2]);\n        x.map = (d, variable) => x.scale(x.value(d, variable));\n\n        x.axis = Utils.createAxis(conf.x.orient, x.scale).ticks(plot.ticks);\n        x.axis.tickSize(plot.size * plot.variables.length);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config;\n\n        y.value = conf.variables.value;\n        y.scale = Utils.createScale(conf.y.scale).range([ plot.size - conf.padding / 2, conf.padding / 2]);\n\n        y.map = (d, variable) => y.scale(y.value(d, variable));\n        y.axis = Utils.createAxis(conf.y.orient, y.scale).ticks(plot.ticks);\n        y.axis.tickSize(-plot.size * plot.variables.length);\n    };\n\n    update( newData) {\n        super.update(newData);\n\n        var self =this;\n        var n = self.plot.variables.length;\n        var conf = this.config;\n\n        var axisClass = self.prefixClass(\"axis\");\n        var axisXClass = axisClass+\"-x\";\n        var axisYClass = axisClass+\"-y\";\n\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\n\n        var noGuidesClass = self.prefixClass(\"no-guides\");\n        var xAxis = self.svgG.selectAll(xAxisSelector)\n            .data(self.plot.variables);\n\n        var xAxisMerge = xAxis.enter().appendSelector(xAxisSelector)\n            .classed(noGuidesClass, !conf.guides).merge(xAxis);\n\n\n        xAxisMerge.attr(\"transform\", (d, i) => \"translate(\" + (n - i - 1) * self.plot.size + \",0)\")\n            .each(function(d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);\n                var axis = d3.select(this);\n                if (self.transitionEnabled()) {\n                    axis = axis.transition();\n                }\n                axis.call(self.plot.x.axis);\n\n            });\n\n        xAxis.exit().remove();\n\n        var yAxis = self.svgG.selectAll(yAxisSelector)\n            .data(self.plot.variables);\n        var yAxisMerge = yAxis.enter().appendSelector(yAxisSelector).merge(yAxis);\n        yAxisMerge.classed(noGuidesClass, !conf.guides)\n            .attr(\"transform\", (d, i) => \"translate(0,\" + i * self.plot.size + \")\");\n        yAxisMerge.each(function(d) {\n            self.plot.y.scale.domain(self.plot.domainByVariable[d]);\n            var axis = d3.select(this);\n            if (self.transitionEnabled()) {\n                axis = axis.transition();\n            }\n            axis.call(self.plot.y.axis);\n\n        });\n\n        yAxis.exit().remove();\n\n        var cellClass =  self.prefixClass(\"cell\");\n        var cell = self.svgG.selectAll(\".\"+cellClass)\n            .data(self.utils.cross(self.plot.variables, self.plot.variables));\n\n        var cellEnter =  cell.enter().appendSelector(\"g.\"+cellClass);\n        cellEnter.filter(d => d.i === d.j).append(\"text\");\n\n        var cellMerge = cellEnter.merge(cell);\n        cellMerge.attr(\"transform\", d => \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\");\n\n        if(conf.brush){\n            this.drawBrush(cellMerge);\n        }\n\n\n        cellMerge.each(plotSubplot);\n\n        //Labels\n        cellMerge.select(\"text\")\n            .attr(\"x\", conf.padding)\n            .attr(\"y\", conf.padding)\n            .attr(\"dy\", \".71em\")\n            .text( d => self.plot.labelByVariable[d.x]);\n\n        cell.exit().remove();\n\n        function plotSubplot(p) {\n            var plot = self.plot;\n            plot.subplots.push(p);\n            var cell = d3.select(this);\n\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n            var frameClass =  self.prefixClass(\"frame\");\n            cell.selectOrAppend(\"rect.\"+frameClass)\n                .attr(\"class\", frameClass)\n                .attr(\"x\", conf.padding / 2)\n                .attr(\"y\", conf.padding / 2)\n                .attr(\"width\", plot.size - conf.padding)\n                .attr(\"height\", plot.size - conf.padding);\n            \n            p.update = function() {\n\n                var subplot = this;\n                var layerClass = self.prefixClass('layer');\n\n\n                var layer = cell.selectAll(\"g.\"+layerClass).data(self.plot.groupedData);\n\n                var layerMerge = layer.enter().appendSelector(\"g.\"+layerClass).merge(layer);\n\n                var dots = layerMerge.selectAll(\"circle\")\n                    .data(d=>d.values);\n\n                var dotsMerge = dots.enter().append(\"circle\").merge(dots);\n\n                var dotsT = dotsMerge;\n                if (self.transitionEnabled()) {\n                    dotsT = dotsMerge.transition();\n                }\n\n                dotsT.attr(\"cx\", (d) => plot.x.map(d, subplot.x))\n                    .attr(\"cy\", (d) => plot.y.map(d, subplot.y))\n                    .attr(\"r\", self.config.dotRadius);\n\n\n                if (plot.seriesColor) {\n                    layerMerge.style(\"fill\", plot.seriesColor)\n                }else if(plot.color){\n                    dotsMerge.style(\"fill\", plot.color)\n                }\n\n\n                if (plot.tooltip) {\n                    dotsMerge.on(\"mouseover\", (d) => {\n\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                        var group = self.config.groups ? self.config.groups.value.call(self.config, d) : null;\n                        if (group || group === 0) {\n                            group = plot.groupToLabel[group];\n                            html += \"<br/>\";\n                            var label = self.config.groups.label;\n                            if (label) {\n                                html += label + \": \";\n                            }\n                            html += group\n                        }\n                        self.showTooltip(html);\n                    })\n                        .on(\"mouseout\", (d)=> {\n                            self.hideTooltip();\n                        });\n                }\n\n                dots.exit().remove();\n                layer.exit().remove();\n            };\n            p.update();\n\n        }\n    };\n\n    drawBrush(cell) {\n        var self = this;\n        var hiddenClass = self.plot.hiddenClass =  self.prefixClass(\"hidden\");\n        var brush = d3.brush()\n            // .x(self.plot.x.scale)\n            // .y(self.plot.y.scale)\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n        brush.extent([[0, 0], [self.plot.size, self.plot.size]]);\n        cell.selectOrAppend(\"g.brush-container\").call(brush);\n\n        self.clearBrush();\n\n        // Clear the previously-active brush, if any.\n        function brushstart(p) {\n            if (self.plot.brushCell !== this) {\n                self.clearBrush();\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                self.plot.brushCell = this;\n                self.plot.brush = brush;\n            }\n        }\n\n        // Highlight the selected circles.\n        function brushmove(p) {\n            var s = d3.event.selection;\n            if(!s)return;\n            var e = s.map(_=> [self.plot.x.scale.invert(_[0]), self.plot.y.scale.invert(_[1])]);\n            // console.log(e);\n\n            self.svgG.selectAll(\"circle\").classed(hiddenClass, function (d) {\n                var x = parseFloat(d[p.x]),\n                    y = parseFloat(d[p.y]);\n\n                return e[0][0] > x || x > e[1][0]\n                    || e[1][1] > y || y > e[0][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) self.svgG.selectAll(\".\"+hiddenClass).classed(hiddenClass, false);\n        }\n    };\n\n    clearBrush(){\n        var self = this;\n        if(!self.plot.brushCell){\n            return;\n        }\n        \n        self.plot.brush.move(d3.select(self.plot.brushCell), null);\n        self.svgG.selectAll(\".\"+self.plot.hiddenClass).classed(self.plot.hiddenClass, false);\n        self.plot.brushCell=null;\n\n    }\n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ScatterPlotConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ScatterPlot extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ScatterPlotConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.updateDots();\n    };\n\n    updateDots() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var dotClass = this.dotClass = self.prefixClass('dot');\n        self.dotsContainerClass = self.prefixClass('dots-container');\n\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n        var layer = dotsContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values)\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n        layer.exit().remove();\n    }\n}\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\n\nvar su = module.exports.StatisticsUtils ={};\nsu.sampleCorrelation = require('simple-statistics/src/sample_correlation');\nsu.linearRegression = require('simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('simple-statistics/src/error_function');\nsu.standardDeviation = require('simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('simple-statistics/src/sample_standard_deviation');\nsu.variance = require('simple-statistics/src/variance');\nsu.mean = require('simple-statistics/src/mean');\nsu.zScore = require('simple-statistics/src/z_score');\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\nsu.quantile = require('simple-statistics/src/quantile');\n\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return tdistr(degreesOfFreedom, criticalProbability);\n};","import * as d3 from './d3'\n\nexport class Utils {\n    static SQRT_2 = 1.41421356237;\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n    static deepExtend(out) {\n\n        var utils = this;\n        var emptyOut = {};\n\n\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n            out = [];\n        }\n        out = out || {};\n\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            if (!source)\n                continue;\n\n            for (var key in source) {\n                if (!source.hasOwnProperty(key)) {\n                    continue;\n                }\n                var isArray = Array.isArray(out[key]);\n                var isObject = utils.isObject(out[key]);\n                var srcObj = utils.isObject(source[key]);\n\n                if (isObject && !isArray && srcObj) {\n                    utils.deepExtend(out[key], source[key]);\n                } else {\n                    out[key] = source[key];\n                }\n            }\n        }\n\n        return out;\n    };\n\n    static mergeDeep(target, source) {\n        let output = Object.assign({}, target);\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n            Object.keys(source).forEach(key => {\n                if (Utils.isObjectNotArray(source[key])) {\n                    if (!(key in target))\n                        Object.assign(output, {[key]: source[key]});\n                    else\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\n                } else {\n                    Object.assign(output, {[key]: source[key]});\n                }\n            });\n        }\n        return output;\n    }\n\n    static cross(a, b) {\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\n        return c;\n    };\n\n    static inferVariables(data, groupKey, includeGroup) {\n        var res = [];\n        if(!data){\n            return res;\n        }\n\n        if (data.length) {\n            var d = data[0];\n            if (d instanceof Array) {\n                res = d.map(function (v, i) {\n                    return i;\n                });\n            } else if (typeof d === 'object') {\n\n                for (var prop in d) {\n                    if (!d.hasOwnProperty(prop)) continue;\n\n                    res.push(prop);\n                }\n            }\n        }\n        if (groupKey !== null && groupKey !== undefined && !includeGroup) {\n            var index = res.indexOf(groupKey);\n            if (index > -1) {\n                res.splice(index, 1);\n            }\n        }\n        return res\n    };\n\n    static isObjectNotArray(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\n    };\n\n    static isArray(item) {\n        return Array.isArray(item);\n    };\n\n    static isObject(a) {\n        return a !== null && typeof a === 'object';\n    };\n\n    static isNumber(a) {\n        return !isNaN(a) && typeof a === 'number';\n    };\n\n    static isFunction(a) {\n        return typeof a === 'function';\n    };\n\n    static isDate(a){\n        return Object.prototype.toString.call(a) === '[object Date]'\n    }\n\n    static isString(a){\n        return typeof a === 'string' || a instanceof String\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n        \n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return Utils.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return Utils.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n        var defs = Utils.selectOrAppend(svg, \"defs\");\n        var linearGradient = defs.append(\"linearGradient\")\n            .attr(\"id\", gradientId);\n\n        linearGradient\n            .attr(\"x1\", x1 + \"%\")\n            .attr(\"y1\", y1 + \"%\")\n            .attr(\"x2\", x2 + \"%\")\n            .attr(\"y2\", y2 + \"%\");\n\n        //Append multiple color stops by using D3's data/enter step\n        var stops = linearGradient.selectAll(\"stop\")\n            .data(range);\n\n        var stopsMerge = stops.enter().append(\"stop\").merge(stops);\n\n        stopsMerge.attr(\"offset\", (d, i) => i / (range.length - 1))\n            .attr(\"stop-color\", d => d);\n\n        stops.exit().remove();\n    }\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width){\n        var textObj = textD3Obj.node();\n        textObj.textContent=textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength()>width+margin){\n            for (var x=textString.length-3;x>0;x-=1){\n                if (textObj.getSubStringLength(0,x)+ellipsisLength<=width+margin){\n                    textObj.textContent=textString.substring(0,x)+\"...\";\n                    return true;\n                }\n            }\n            textObj.textContent=\"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip){\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if(ellipsisPlaced && tooltip){\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element){\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    static createScale(scaleName) {\n        var scaleFunctionName = 'scale'+Utils.capitalizeFirstLetter(scaleName);\n        try{\n            return d3[scaleFunctionName]();\n        }catch (e){\n            throw 'ODC-D3 - scale not supported: '+scaleName+ ' ('+scaleFunctionName+')';\n        }\n    }\n\n    static createAxis(orient, scale){\n        var axisFnName = 'axis'+Utils.capitalizeFirstLetter(orient);\n        try{\n            return d3[axisFnName](scale)\n        }catch (e){\n            throw 'ODC-D3 - axis orient not supported: '+orient;\n        }\n    }\n}\n"]}