{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-svg-legend/indexRollup.js","node_modules/d3-svg-legend/node_modules/d3-array/build/d3-array.js","node_modules/d3-svg-legend/node_modules/d3-dispatch/build/d3-dispatch.js","node_modules/d3-svg-legend/node_modules/d3-format/build/d3-format.js","node_modules/d3-svg-legend/node_modules/d3-scale/build/d3-scale.js","node_modules/d3-svg-legend/node_modules/d3-selection/build/d3-selection.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/simple-statistics/src/error_function.js","node_modules/simple-statistics/src/linear_regression.js","node_modules/simple-statistics/src/linear_regression_line.js","node_modules/simple-statistics/src/mean.js","node_modules/simple-statistics/src/quantile.js","node_modules/simple-statistics/src/quantile_sorted.js","node_modules/simple-statistics/src/quickselect.js","node_modules/simple-statistics/src/sample_correlation.js","node_modules/simple-statistics/src/sample_covariance.js","node_modules/simple-statistics/src/sample_standard_deviation.js","node_modules/simple-statistics/src/sample_variance.js","node_modules/simple-statistics/src/standard_deviation.js","node_modules/simple-statistics/src/sum.js","node_modules/simple-statistics/src/sum_nth_power_deviations.js","node_modules/simple-statistics/src/variance.js","node_modules/simple-statistics/src/z_score.js","src/bar-chart.js","src/box-plot-base.js","src/box-plot.js","src/chart-with-color-groups.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/d3.js","src/diverging-stacked-bar-chart.js","src/heatmap-timeseries.js","src/heatmap.js","src/histogram.js","src/index.js","src/legend.js","src/line-chart.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","window","global","self","this","ODCD3","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","prefix","Map","map","object","each","value","key","set","Array","isArray","createObject","setObject","createMap","setMap","map$$1","Set","prototype","constructor","has","get","remove","property","clear","keys","push","slice","values","entries","size","empty","proto","add","nest","sortValues","rollup","sortKeys","apply","array","depth","createResult","setResult","sort","keyValue","valuesByKey","result","sortKey","v","k","b","d","order","Object","defineProperty","factory","d3","extend","parent","definition","create","Color","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","format","m","trim","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","NaN","g","rgbConvert","rgb","opacity","arguments","hex","Math","max","min","round","toString","h","s","l","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","pow","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","x","z","rgb2lrgb","y","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","sqrt","hcl","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","cosh","sinh","lch","d3Color","basis","v0","v1","v2","v3","basis$1","floor","basisClosed","constant","linear","hue","gamma","nogamma","exponential","rgbGamma","start","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","nb","na","date","Date","setTime","number","reA","reB","source","string","am","bm","bs","bi","lastIndex","q","index","one","zero","join","valueOf","cssNode","cssRoot","cssView","svgNode","degrees","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","document","createElement","documentElement","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","interpolateTransformSvg","createElementNS","setAttribute","baseVal","consolidate","matrix","rho","SQRT2","exp","hue$$1","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolate","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateDiscrete","range","interpolateHue","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","log","d1","b0","b1","r0","r1","coshr0","tanh","duration","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","piecewise","I","quantize","interpolator","samples","d3Selection","d3Format","d3Dispatch","d3Scale","d3Array","d3_identity","d3_reverse","arr","mirror","d3_textWrapping","text","width","word","select","words","reverse","line","attr","parseFloat","tspan","append","node","getComputedTextLength","_typeof","Symbol","iterator","obj","helper","d3_drawShapes","shape","shapes","shapeHeight","shapeWidth","shapeRadius","path","d3_addText","svg","enter","labels","classPrefix","labelWidth","selectAll","data","d3_calcType","ascending","cells","labelFormat","labelDelimiter","type","invertExtent","invert","feature","d3_quantLegend","ticks","domain","increment","d3_linearLegend","d3_ordinalLegend","gen","undefined","customLabels","genLength","_i","generatedLabels","d3_mergeLabels","d3_filterCells","cellFilter","filterCells","label","filter","dataValues","labelValues","indexOf","d3_placement","orient","cell","cellTrans","textTrans","labelAlign","d3_addEvents","dispatcher","on","cellDispatcher","d3_cellOver","d3_cellOut","d3_cellClick","d3_title","title","titleWidth","cellsSvg","yOffset","nodes","getBBox","height","xOffset","d3_defaultLocale","formatPrefix","d3_defaultFormatSpecifier","d3_defaultDelimiter","scaleLinear","shapePadding","useClass","locale","specifier","labelOffset","labelWrap","legendDispatcher","dispatch","legend","cellEnter","exit","transition","merge","textSize","shapeSize","cellSize","textAlign","sum","_","formatLocale","formatSpecifier","textWrap","legendG","bbox","stroke","maxH","maxW","offset","symbol","legendHelpers","thresholdLabels","_ref","legendColor","legendSize","legendSymbol","indexRollup","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","variance","j","deviation","extent","stop","step","ceil","e10","e5","e2","count","tickStep","step0","abs","step1","LN10","error","sturges","LN2","quantile","transpose","row","bisect","descending","histogram","threshold","xz","x0","x1","tz","shift","bin","bins","thresholds","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","mean","median","numbers","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","random","zip","noop","Dispatch","name","callback","concat","typename","T","typenames","types","parseTypenames","copy","that","args","formatDecimal","toExponential","coefficient","exponent","prefixExponent","formatRounded","formatTypes","","out","toPrecision","%","toFixed","X","toUpperCase","re","FormatSpecifier","match","fill","align","sign","comma","precision","prefixes","group","grouping","thousands","substring","formatGroup","currency","decimal","newFormat","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","d3Collection","d3Interpolate","d3Time","d3TimeFormat","map$1","implicit","ordinal","unknown","band","bandwidth","ordinalRange","paddingInner","paddingOuter","rescale","rangeRound","unit","deinterpolate","bimap","reinterpolate","d0","polymap","target","clamp","continuous","deinterpolate$$","output","input","deinterpolateClamp","reinterpolateClamp","linearish","tickFormat","nice","interval","deinterpolate$1","pow10","isFinite","powp","base","logp","log10","log2","reflect","raise","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","every","category10","category20b","category20c","category20","warm","cool","rainbow","ramp","viridis","magma","inferno","plasma","scaleBand","scalePoint","pointish","scaleIdentity","scaleLog","logs","pows","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","quantile$1","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","sequential","xhtml","namespaces","xlink","xml","xmlns","namespace","space","local","creator","fullname","ownerDocument","uri","namespaceURI","nextId","Local","id","parentNode","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","sourceEvent","current","point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","none","querySelector","selectorAll","querySelectorAll","sparse","update","EnterNode","datum","_next","_parent","child","insertBefore","next","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","nextSibling","lower","previousSibling","firstChild","constantNull","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","splice","contains","root","Selection","groups","parents","_groups","_parents","selection","subgroups","subnode","subgroup","bind","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","insert","before","mouse","changedTouches","touch","touches","identifier","points","customEvent","localDate","H","M","L","setFullYear","utcDate","setUTCFullYear","newYear","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","A","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","getHours","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","w","formatWeekdayNumberSunday","W","formatWeekNumberMonday","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","getUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","getUTCHours","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","utcMonday","getUTCFullYear","getUTCDate","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","replace","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","timeParse","isoSpecifier","formatIso","toISOString","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","newInterval","floori","offseti","field","milliseconds","seconds","minutes","hours","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","tau","sumX","sumY","sumXX","sumXY","mb","quantileSorted","quickselect","quantileSelect","quantileIndex","len","idx","indices","stack","multiQuantileSelect","results","swap","tmp","sd","newLeft","newRight","sampleCovariance","sampleStandardDeviation","xmean","ymean","sampleVariance","sampleVarianceX","sumNthPowerDeviations","correction","tempValue","meanValue","standardDeviation","_chartWithColorGroups","_utils","_interopRequireWildcard","BarChartConfig","custom","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","svgClass","cssClassPrefix","showLegend","showTooltip","Utils","isNumber","_assertThisInitialized","deepExtend","ChartWithColorGroupsConfig","BarChart","placeholderSelector","config","ChartWithColorGroups","_get","plot","computePlotSize","setupY","setupX","setupGroupStacks","setupYDomain","conf","axis","createAxis","series","createScale","layers","layer","y0","groupData","y0s","groupedData","forEach","mapToPoint","prevY0","axisConf","svgG","selectOrAppend","prefixClass","guides","axisT","ease","easeSinInOut","margin","bottom","layerClass","barClass","layerMerge","bar","barEnter","barRectEnter","barMerge","barRect","barRectT","barT","layerT","transitionEnabled","yDomain","seriesColor","tooltip","hideTooltip","newData","drawAxisX","drawAxisY","drawBars","_chart","BoxPlotBaseConfig","domainMargin","Q1","Q2","Q3","Wl","whiskerLow","Wh","whiskerHigh","outliers","outlierValue","outlierLabel","minBoxWidth","maxBoxWidth","d3ColorCategory","ChartConfig","BoxPlotBase","Chart","getDataToPlot","setupColor","tickSize","_this2","yMin","yMax","q1","q3","wl","wh","boxplotClass","boxplots","boxplotEnter","boxplotsMerge","boxplotsT","delay","boxWidth","boxLeft","boxRight","boxClass","boxRects","boxRectsT","medianClass","medianLine","whiskerClass","tickClass","whiskers","box","endpoint","whisker","tick","outlierClass","outlierEnterCircle","outliersMerge","outliersT","drawBoxPlots","_this3","colorSchemeCategory","capitalizeFirstLetter","colorCategory","colorValue","String","_boxPlotBase","_statisticsUtils","BoxPlotConfig","displayValue","tukey","BoxPlot","groupingEnabled","isGroupingEnabled","groupValue","getDisplayValue","isFunction","isObject","StatisticsUtils","IQR","_legend","forceLegend","setupGroups","getOwnPropertyNames","groupToLabel","computeGroupColorDomain","getLabel","groupColorDomain","_this4","enabledGroups","updateLegend","legendX","legendY","Legend","onLegendCellClick","container","updateLegendCellStatuses","cellValue","updateEnabledGroups","init","isDisabled","titleSize","titleMargin","subtitle","subtitleSize","subtitleMargin","utils","_attached","_layers","_events","_isInitialized","_id","guid","_isAttached","baseContainer","setConfig","setData","postInit","initConfigAccessors","initPlot","initSvg","initTooltip","draw","svgWidth","svgHeight","titleMarginSize","attachmentData","attachmentName","updateTitle","updateSubtitle","titleClass","subtitleClass","chart","context","once","off","events","ev","getBaseContainer","clazz","addDot","availableWidth","availableHeight","pageX","pageY","clean","removePropertyAccessors","initPropertyAccessors","bindTo","returnObj","recursive","accessor","initPropertyAccessor","isObjectNotArray","propertyKey","_scatterplot","CorrelationMatrixConfig","highlightLabels","rotateLabelsX","rotateLabelsY","variables","variableKey","correlation","xValues","yValues","sampleCorrelation","sizeMin","sizeMax","CorrelationMatrix","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","corrConf","cellConf","radiusMax","radiusScale","radius","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","includeInPlot","labelByVariable","matrixCells","variableToValues","corr","rowVar","colVar","col","updateCells","updateVariableLabels","labelClass","updateAxisX","updateAxisY","labelXClass","labelsMerge","maxWidth","computeXAxisLabelsWidth","placeTextWithEllipsisAndTooltip","labelYClass","computeYAxisLabelsWidth","SQRT_2","fontSize","cellClass","cellShape","cellsMerge","scatterPlot","mouseoverCallbacks","mouseoutCallbacks","highlightClass","xLabelClass","yLabelClass","trigger","barHeight","linearGradientBar","containerSelector","scatterPlotConfig","ScatterPlot","attach","D3Extensions","insertSelector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","DivergingStackedBarChartConfig","showBarValues","colorRange","categoryNames","middleValue","DivergingStackedBarChart","neutralIndex","rows","originalValues","total","categories","catIndex","boxes","originalValue","_toConsumableArray","titleY","titleDY","rowClass","rowMerge","bars","barsEnter","barsM","textM","_heatmap","HeatmapTimeSeriesConfig","fillMissing","intervalStep","displayFormat","intervalToFormats","sortComparator","isString","localeCompare","formatter","Number","Intl","NumberFormat","HeatmapConfig","HeatmapTimeSeries","Heatmap","guessTimeFormat","initTimeFormatAndInterval","timeParser","getTimeParser","uniqueValues","prev","parseTime","nextTimeTickValue","missing","iteration","compareTimeValues","timeString","formatTime","updateGroups","parser","getTimeFormatter","isDate","rowIndex","prevRowValue","colIndex","guessInterval","intervalFormat","some","timeFormatter","noDataText","rotateLabels","decimalPlaces","sortLabels","overlap","notAvailableValue","noDataColor","reverseScale","matrixes","setupValues","buildCells","groupByX","allTitlesWidth","groupByY","_allTitlesWidth","setupZScale","children","level","valueMap","minZ","maxZ","xVal","yVal","zValRaw","zVal","groupY","groupX","setupValuesBeforeGroupsSort","gaps","totalValuesCount","allValuesList","sortGroups","val","axisVal","rootGroup","axisGroupsConfig","currentGroup","groupKey","groupKeyIndex","groupingValue","axisConfig","allValuesCount","allValuesBeforeCount","gapsBefore","gapsSize","computeGapsSize","gapsBeforeSize","childrenList","childrenCount","childProp","gapsInside","gapsInsideSize","cellWidth","xGapsSize","computedCellWidth","yGapsSize","computedCellHeight","cellHeight","unshift","drawGroupsY","drawGroupsX","updateAxisTitles","offsetX","gapSize","computeGapSize","formatValueX","elem","offsetY","formatValueY","parentGroup","groupClass","groupYClass","valuesBeforeCount","groupsEnter","titleGroupEnter","titleRectWidth","groupTitleRectHeight","groupsMerge","groupWidth","tileRects","setGroupMouseCallbacks","groupXClass","titleRectHeight","groupHeight","cellContainerClass","paddingX","paddingY","cellContainer","formatValueZ","formatLegendValue","setRotateLabels","gapLevel","maxGroupGapSize","gapsNumber","gapsLevel","HistogramConfig","frequency","Histogram","setupHistogram","yStackMax","stackedHistograms","histogramBins","drawHistogram","_d3Extensions","_scatterplotMatrix","_regression","_correlationMatrix","_heatmapTimeseries","_histogram","_barChart","_boxPlot","_divergingStackedBarChart","_lineChart","_d3SvgLegend","legendParent","legendClass","barWidth","gradientId","linearGradient","ticksNumber","ticksMerge","LineChartConfig","dotRadius","dotId","onDotHover","onDotHoverOut","lineId","onLineHover","onLineHoverOut","LineChart","updateLines","lineClass","linesContainerClass","layerEnter","linePathEnter","linePath","linePathMerge","linePathT","dotClass","dots","dotsMerge","dotsT","RegressionConfig","mainRegression","groupRegression","confidence","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","areaCurve","curveNatural","ScatterPlotConfig","Regression","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","groupVal","linearRegression","linearRegressionLine","extentX","linePoints","curve","curveBasis","computeConfidence","meanX","xMySum","xSum","xPowSum","ySum","yPowSum","Sy2","Sa2","errorFn","fitInPlot","centerX","confidenceAreaPoints","moe","y1","area","updateRegressionLines","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionClass","confidenceAreaClass","regressionSelector","regressionEnter","regressionMerge","lineT","areaT","ScatterPlotMatrixConfig","minCellSize","maxCellSize","brush","ScatterPlotMatrix","dot","subplots","variable","axisClass","xAxisSelector","yAxisSelector","noGuidesClass","xAxis","yAxis","yAxisMerge","cross","cellMerge","drawBrush","frameClass","subplot","hiddenClass","brushCell","clearBrush","move","updateDots","$n","$p","integer","precision_string","_subt","SIGNIFICANT","_subu","$y","$x","$round","$u","$u2","$n1","$delta","_subtprob","round_to_precision","$a","$w","$z","$i","$max","_statisticsDistributions","su","errorFunction","zScore","standardError","tdistr","srcObj","assign","mergeDeep","_defineProperty","includeGroup","res","prop","item","x2","y2","stops","s4","textD3Obj","textString","textObj","getSubStringLength","placeTextWithEllipsis","scaleName","scaleFunctionName","axisFnName","sanitizeHeight","sanitizeWidth"],"mappings":"CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,MAAAT,KAAA,CAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAf,GAAA,IAAAY,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAjB,GAAAgB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAd,QAAA,IAAAU,EAAAI,GAAA,GAAAQ,KAAAD,EAAArB,QAAA,SAAAS,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAd,QAAA,IAAA,IAAAiB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAW,EAAA,CAAA,SAAAR,EAAAf,EAAAD,GCCA,IAAAK,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAEA,IAAAyB,EAAA,IAEA,SAAAC,KAkDA,SAAAC,EAAAC,EAAA7B,GACA,IAAA4B,EAAA,IAAAD,EAGA,GAAAE,aAAAF,EAAAE,EAAAC,KAAA,SAAAC,EAAAC,GAAAJ,EAAAK,IAAAD,EAAAD,UAGA,GAAAG,MAAAC,QAAAN,GAAA,CACA,IAEAf,EAFAC,GAAA,EACAH,EAAAiB,EAAAL,OAGA,GAAA,MAAAxB,EAAA,OAAAe,EAAAH,GAAAgB,EAAAK,IAAAlB,EAAAc,EAAAd,SACA,OAAAA,EAAAH,GAAAgB,EAAAK,IAAAjC,EAAAc,EAAAe,EAAAd,GAAAA,EAAAc,GAAAf,QAIA,GAAAe,EAAA,IAAA,IAAAG,KAAAH,EAAAD,EAAAK,IAAAD,EAAAH,EAAAG,IAEA,OAAAJ,EA2DA,SAAAQ,IACA,MAAA,GAGA,SAAAC,EAAAR,EAAAG,EAAAD,GACAF,EAAAG,GAAAD,EAGA,SAAAO,IACA,OAAAV,IAGA,SAAAW,EAAAC,EAAAR,EAAAD,GACAS,EAAAP,IAAAD,EAAAD,GAGA,SAAAU,KA9IAd,EAAAe,UAAAd,EAAAc,UAAA,CACAC,YAAAhB,EACAiB,IAAA,SAAAZ,GACA,OAAAN,EAAAM,KAAAxB,MAEAqC,IAAA,SAAAb,GACA,OAAAxB,KAAAkB,EAAAM,IAEAC,IAAA,SAAAD,EAAAD,GAEA,OADAvB,KAAAkB,EAAAM,GAAAD,EACAvB,MAEAsC,OAAA,SAAAd,GACA,IAAAe,EAAArB,EAAAM,EACA,OAAAe,KAAAvC,aAAAA,KAAAuC,IAEAC,MAAA,WACA,IAAA,IAAAD,KAAAvC,KAAAuC,EAAA,KAAArB,UAAAlB,KAAAuC,IAEAE,KAAA,WACA,IAAAA,EAAA,GACA,IAAA,IAAAF,KAAAvC,KAAAuC,EAAA,KAAArB,GAAAuB,EAAAC,KAAAH,EAAAI,MAAA,IACA,OAAAF,GAEAG,OAAA,WACA,IAAAA,EAAA,GACA,IAAA,IAAAL,KAAAvC,KAAAuC,EAAA,KAAArB,GAAA0B,EAAAF,KAAA1C,KAAAuC,IACA,OAAAK,GAEAC,QAAA,WACA,IAAAA,EAAA,GACA,IAAA,IAAAN,KAAAvC,KAAAuC,EAAA,KAAArB,GAAA2B,EAAAH,KAAA,CAAAlB,IAAAe,EAAAI,MAAA,GAAApB,MAAAvB,KAAAuC,KACA,OAAAM,GAEAC,KAAA,WACA,IAAAA,EAAA,EACA,IAAA,IAAAP,KAAAvC,KAAAuC,EAAA,KAAArB,KAAA4B,EACA,OAAAA,GAEAC,MAAA,WACA,IAAA,IAAAR,KAAAvC,KAAA,GAAAuC,EAAA,KAAArB,EAAA,OAAA,EACA,OAAA,GAEAI,KAAA,SAAA9B,GACA,IAAA,IAAA+C,KAAAvC,KAAAuC,EAAA,KAAArB,GAAA1B,EAAAQ,KAAAuC,GAAAA,EAAAI,MAAA,GAAA3C,QAoGA,IAAAgD,EAAA5B,EAAAc,UAkBA,SAAAT,EAAAJ,EAAA7B,GACA,IAAAiC,EAAA,IAAAQ,EAGA,GAAAZ,aAAAY,EAAAZ,EAAAC,KAAA,SAAAC,GAAAE,EAAAwB,IAAA1B,UAGA,GAAAF,EAAA,CACA,IAAAd,GAAA,EAAAH,EAAAiB,EAAAL,OACA,GAAA,MAAAxB,EAAA,OAAAe,EAAAH,GAAAqB,EAAAwB,IAAA5B,EAAAd,SACA,OAAAA,EAAAH,GAAAqB,EAAAwB,IAAAzD,EAAA6B,EAAAd,GAAAA,EAAAc,IAGA,OAAAI,EA7BAQ,EAAAC,UAAAT,EAAAS,UAAA,CACAC,YAAAF,EACAG,IAAAY,EAAAZ,IACAa,IAAA,SAAA1B,GAGA,OADAvB,KAAAkB,GADAK,GAAA,KACAA,EACAvB,MAEAsC,OAAAU,EAAAV,OACAE,MAAAQ,EAAAR,MACAI,OAAAI,EAAAP,KACAK,KAAAE,EAAAF,KACAC,MAAAC,EAAAD,MACAzB,KAAA0B,EAAA1B,MAqCA7B,EAAAyD,KA9HA,WACA,IAEAC,EACAC,EACAF,EAJAT,EAAA,GACAY,EAAA,GAKA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAF,GAAAf,EAAAzB,OAEA,OADA,MAAAmC,GAAAI,EAAAI,KAAAR,GACA,MAAAC,EAAAA,EAAAG,GAAAA,EAYA,IATA,IAGAK,EACArC,EAEAqB,EANArC,GAAA,EACAH,EAAAmD,EAAAvC,OACAQ,EAAAiB,EAAAe,KAGAK,EAAAzC,IAEA0C,EAAAL,MAEAlD,EAAAH,IACAwC,EAAAiB,EAAAxB,IAAAuB,EAAApC,EAAAD,EAAAgC,EAAAhD,IAAA,KACAqC,EAAAF,KAAAnB,GAEAsC,EAAApC,IAAAmC,EAAA,CAAArC,IAQA,OAJAsC,EAAAvC,KAAA,SAAAsB,EAAApB,GACAkC,EAAAI,EAAAtC,EAAA8B,EAAAV,EAAAY,EAAAC,EAAAC,MAGAI,EAWA,OAAAZ,EAAA,CACA7B,OAAA,SAAAkC,GAAA,OAAAD,EAAAC,EAAA,EAAA3B,EAAAC,IACAT,IAAA,SAAAmC,GAAA,OAAAD,EAAAC,EAAA,EAAAzB,EAAAC,IACAc,QAAA,SAAAU,GAAA,OAXA,SAAAV,EAAAb,EAAAwB,GACA,KAAAA,EAAAf,EAAAzB,OAAA,OAAAgB,EACA,IAAAuB,EAAAQ,EAAAV,EAAAG,EAAA,GAGA,OAFA,MAAAJ,GAAAI,GAAAf,EAAAzB,OAAAuC,EAAAvB,EAAAa,WACAU,EAAA,GAAAvB,EAAAV,KAAA,SAAA0C,EAAAC,GAAAV,EAAAb,KAAA,CAAAlB,IAAAyC,EAAArB,OAAAC,EAAAmB,EAAAR,QACA,MAAAO,EAAAR,EAAAI,KAAA,SAAAhD,EAAAuD,GAAA,OAAAH,EAAApD,EAAAa,IAAA0C,EAAA1C,OAAA+B,EAMAV,CAAAS,EAAAC,EAAA,EAAAzB,EAAAC,GAAA,IACAP,IAAA,SAAA2C,GAAA,OAAA1B,EAAAC,KAAAyB,GAAAjB,GACAG,SAAA,SAAAe,GAAA,OAAAf,EAAAZ,EAAAzB,OAAA,GAAAoD,EAAAlB,GACAC,WAAA,SAAAiB,GAAA,OAAAjB,EAAAiB,EAAAlB,GACAE,OAAA,SAAA5D,GAAA,OAAA4D,EAAA5D,EAAA0D,KA2EAzD,EAAAgC,IAAAA,EACAhC,EAAA2B,IAAAA,EACA3B,EAAAgD,KArBA,SAAArB,GACA,IAAAqB,EAAA,GACA,IAAA,IAAAjB,KAAAJ,EAAAqB,EAAAC,KAAAlB,GACA,OAAAiB,GAmBAhD,EAAAmD,OAhBA,SAAAxB,GACA,IAAAwB,EAAA,GACA,IAAA,IAAApB,KAAAJ,EAAAwB,EAAAF,KAAAtB,EAAAI,IACA,OAAAoB,GAcAnD,EAAAoD,QAXA,SAAAzB,GACA,IAAAyB,EAAA,GACA,IAAA,IAAArB,KAAAJ,EAAAyB,EAAAH,KAAA,CAAAlB,IAAAA,EAAAD,MAAAH,EAAAI,KACA,OAAAqB,GAUAwB,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IApNAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,4BCHA,IAAA1E,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAEA,SAAAE,EAAAwC,EAAAoC,EAAArC,GACAC,EAAAD,UAAAqC,EAAArC,UAAAA,EACAA,EAAAC,YAAAA,EAGA,SAAAsC,EAAAC,EAAAC,GACA,IAAAzC,EAAAmC,OAAAO,OAAAF,EAAAxC,WACA,IAAA,IAAAV,KAAAmD,EAAAzC,EAAAV,GAAAmD,EAAAnD,GACA,OAAAU,EAGA,SAAA2C,KAEA,IACAC,EAAA,EADA,GAGAC,EAAA,sBACAC,EAAA,gDACAC,EAAA,iDACAC,EAAA,mBACAC,EAAA,mBACAC,EAAA,IAAAC,OAAA,UAAA,CAAAN,EAAAA,EAAAA,GAAA,QACAO,EAAA,IAAAD,OAAA,UAAA,CAAAJ,EAAAA,EAAAA,GAAA,QACAM,EAAA,IAAAF,OAAA,WAAA,CAAAN,EAAAA,EAAAA,EAAAC,GAAA,QACAQ,EAAA,IAAAH,OAAA,WAAA,CAAAJ,EAAAA,EAAAA,EAAAD,GAAA,QACAS,EAAA,IAAAJ,OAAA,UAAA,CAAAL,EAAAC,EAAAA,GAAA,QACAS,EAAA,IAAAL,OAAA,WAAA,CAAAL,EAAAC,EAAAA,EAAAD,GAAA,QAEAW,EAAA,CACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAeA,SAAAC,EAAAC,GACA,IAAAC,EAEA,OADAD,GAAAA,EAAA,IAAAE,OAAAC,eACAF,EAAAhK,EAAAmK,KAAAJ,IAAA,IAAAK,GAAAJ,EAAAK,SAAAL,EAAA,GAAA,MAAA,EAAA,GAAAA,GAAA,EAAA,IAAAA,GAAA,EAAA,GAAA,IAAAA,GAAA,GAAAA,IAAA,EAAA,GAAAA,EAAA,IACAA,EAAA/J,EAAAkK,KAAAJ,IAAAO,EAAAD,SAAAL,EAAA,GAAA,MACAA,EAAA9J,EAAAiK,KAAAJ,IAAA,IAAAK,EAAAJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAA,IACAA,EAAA5J,EAAA+J,KAAAJ,IAAA,IAAAK,EAAA,IAAAJ,EAAA,GAAA,IAAA,IAAAA,EAAA,GAAA,IAAA,IAAAA,EAAA,GAAA,IAAA,IACAA,EAAA3J,EAAA8J,KAAAJ,IAAAQ,EAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAA1J,EAAA6J,KAAAJ,IAAAQ,EAAA,IAAAP,EAAA,GAAA,IAAA,IAAAA,EAAA,GAAA,IAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,KACAA,EAAAzJ,EAAA4J,KAAAJ,IAAAS,EAAAR,EAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAA,IACAA,EAAAxJ,EAAA2J,KAAAJ,IAAAS,EAAAR,EAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,IAAAA,EAAA,IACAvJ,EAAAgK,eAAAV,GAAAO,EAAA7J,EAAAsJ,IACA,gBAAAA,EAAA,IAAAK,EAAAM,IAAAA,IAAAA,IAAA,GACA,KAGA,SAAAJ,EAAApP,GACA,OAAA,IAAAkP,EAAAlP,GAAA,GAAA,IAAAA,GAAA,EAAA,IAAA,IAAAA,EAAA,GAGA,SAAAqP,EAAAvP,EAAA2P,EAAA3L,EAAAvD,GAEA,OADAA,GAAA,IAAAT,EAAA2P,EAAA3L,EAAA0L,KACA,IAAAN,EAAApP,EAAA2P,EAAA3L,EAAAvD,GAGA,SAAAmP,EAAAxP,GAEA,OADAA,aAAAuE,IAAAvE,EAAA0O,EAAA1O,IACAA,EAEA,IAAAgP,GADAhP,EAAAA,EAAAyP,OACA7P,EAAAI,EAAAuP,EAAAvP,EAAA4D,EAAA5D,EAAA0P,SAFA,IAAAV,EAKA,SAAAS,EAAA7P,EAAA2P,EAAA3L,EAAA8L,GACA,OAAA,IAAAC,UAAAjP,OAAA8O,EAAA5P,GAAA,IAAAoP,EAAApP,EAAA2P,EAAA3L,EAAA,MAAA8L,EAAA,EAAAA,GAGA,SAAAV,EAAApP,EAAA2P,EAAA3L,EAAA8L,GACAhQ,KAAAE,GAAAA,EACAF,KAAA6P,GAAAA,EACA7P,KAAAkE,GAAAA,EACAlE,KAAAgQ,SAAAA,EAkCA,SAAAE,EAAA3O,GAEA,QADAA,EAAA4O,KAAAC,IAAA,EAAAD,KAAAE,IAAA,IAAAF,KAAAG,MAAA/O,IAAA,KACA,GAAA,IAAA,IAAAA,EAAAgP,SAAA,IAGA,SAAAb,EAAAc,EAAAC,EAAAC,EAAA/P,GAIA,OAHAA,GAAA,EAAA6P,EAAAC,EAAAC,EAAAd,IACAc,GAAA,GAAA,GAAAA,EAAAF,EAAAC,EAAAb,IACAa,GAAA,IAAAD,EAAAZ,KACA,IAAAe,EAAAH,EAAAC,EAAAC,EAAA/P,GA6BA,SAAAiQ,EAAAJ,EAAAC,EAAAC,EAAAV,GACA,OAAA,IAAAC,UAAAjP,OA3BA,SAAAV,GACA,GAAAA,aAAAqQ,EAAA,OAAA,IAAAA,EAAArQ,EAAAkQ,EAAAlQ,EAAAmQ,EAAAnQ,EAAAoQ,EAAApQ,EAAA0P,SAEA,GADA1P,aAAAuE,IAAAvE,EAAA0O,EAAA1O,KACAA,EAAA,OAAA,IAAAqQ,EACA,GAAArQ,aAAAqQ,EAAA,OAAArQ,EAEA,IAAAJ,GADAI,EAAAA,EAAAyP,OACA7P,EAAA,IACA2P,EAAAvP,EAAAuP,EAAA,IACA3L,EAAA5D,EAAA4D,EAAA,IACAmM,EAAAF,KAAAE,IAAAnQ,EAAA2P,EAAA3L,GACAkM,EAAAD,KAAAC,IAAAlQ,EAAA2P,EAAA3L,GACAsM,EAAAZ,IACAa,EAAAL,EAAAC,EACAK,GAAAN,EAAAC,GAAA,EAUA,OATAI,GACAD,EAAAtQ,IAAAkQ,GAAAP,EAAA3L,GAAAuM,EAAA,GAAAZ,EAAA3L,GACA2L,IAAAO,GAAAlM,EAAAhE,GAAAuQ,EAAA,GACAvQ,EAAA2P,GAAAY,EAAA,EACAA,GAAAC,EAAA,GAAAN,EAAAC,EAAA,EAAAD,EAAAC,EACAG,GAAA,IAEAC,EAAA,EAAAC,GAAAA,EAAA,EAAA,EAAAF,EAEA,IAAAG,EAAAH,EAAAC,EAAAC,EAAApQ,EAAA0P,SAIAa,CAAAL,GAAA,IAAAG,EAAAH,EAAAC,EAAAC,EAAA,MAAAV,EAAA,EAAAA,GAGA,SAAAW,EAAAH,EAAAC,EAAAC,EAAAV,GACAhQ,KAAAwQ,GAAAA,EACAxQ,KAAAyQ,GAAAA,EACAzQ,KAAA0Q,GAAAA,EACA1Q,KAAAgQ,SAAAA,EAiCA,SAAAc,EAAAN,EAAAO,EAAAC,GACA,OAGA,KAHAR,EAAA,GAAAO,GAAAC,EAAAD,GAAAP,EAAA,GACAA,EAAA,IAAAQ,EACAR,EAAA,IAAAO,GAAAC,EAAAD,IAAA,IAAAP,GAAA,GACAO,GAzKApR,EAAAkF,EAAAmK,EAAA,CACAiC,YAAA,WACA,OAAAjR,KAAA+P,MAAAkB,eAEAf,IAAA,WACA,OAAAlQ,KAAA+P,MAAAG,OAEAK,SAAA,WACA,OAAAvQ,KAAA+P,MAAA,MA+CApQ,EAAA2P,EAAAS,EAAAtL,EAAAI,EAAA,CACAC,SAAA,SAAAb,GAEA,OADAA,EAAA,MAAAA,EAAAa,EAAAqL,KAAAe,IAAApM,EAAAb,GACA,IAAAqL,EAAAtP,KAAAE,EAAA+D,EAAAjE,KAAA6P,EAAA5L,EAAAjE,KAAAkE,EAAAD,EAAAjE,KAAAgQ,UAEAmB,OAAA,SAAAlN,GAEA,OADAA,EAAA,MAAAA,EAnOA,GAmOAkM,KAAAe,IAnOA,GAmOAjN,GACA,IAAAqL,EAAAtP,KAAAE,EAAA+D,EAAAjE,KAAA6P,EAAA5L,EAAAjE,KAAAkE,EAAAD,EAAAjE,KAAAgQ,UAEAD,IAAA,WACA,OAAA/P,MAEAiR,YAAA,WACA,OAAA,GAAAjR,KAAAE,GAAAF,KAAAE,GAAA,KACA,GAAAF,KAAA6P,GAAA7P,KAAA6P,GAAA,KACA,GAAA7P,KAAAkE,GAAAlE,KAAAkE,GAAA,KACA,GAAAlE,KAAAgQ,SAAAhQ,KAAAgQ,SAAA,GAEAE,IAAA,WACA,MAAA,IAAAA,EAAAlQ,KAAAE,GAAAgQ,EAAAlQ,KAAA6P,GAAAK,EAAAlQ,KAAAkE,IAEAqM,SAAA,WACA,IAAA5P,EAAAX,KAAAgQ,QACA,OAAA,KADArP,EAAAyQ,MAAAzQ,GAAA,EAAAwP,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAA1P,KACA,OAAA,SACAwP,KAAAC,IAAA,EAAAD,KAAAE,IAAA,IAAAF,KAAAG,MAAAtQ,KAAAE,IAAA,IAAA,KACAiQ,KAAAC,IAAA,EAAAD,KAAAE,IAAA,IAAAF,KAAAG,MAAAtQ,KAAA6P,IAAA,IAAA,KACAM,KAAAC,IAAA,EAAAD,KAAAE,IAAA,IAAAF,KAAAG,MAAAtQ,KAAAkE,IAAA,KACA,IAAAvD,EAAA,IAAA,KAAAA,EAAA,SAqDAhB,EAAAgR,EAAAC,EAAAnM,EAAAI,EAAA,CACAC,SAAA,SAAAb,GAEA,OADAA,EAAA,MAAAA,EAAAa,EAAAqL,KAAAe,IAAApM,EAAAb,GACA,IAAA0M,EAAA3Q,KAAAwQ,EAAAxQ,KAAAyQ,EAAAzQ,KAAA0Q,EAAAzM,EAAAjE,KAAAgQ,UAEAmB,OAAA,SAAAlN,GAEA,OADAA,EAAA,MAAAA,EAnTA,GAmTAkM,KAAAe,IAnTA,GAmTAjN,GACA,IAAA0M,EAAA3Q,KAAAwQ,EAAAxQ,KAAAyQ,EAAAzQ,KAAA0Q,EAAAzM,EAAAjE,KAAAgQ,UAEAD,IAAA,WACA,IAAAS,EAAAxQ,KAAAwQ,EAAA,IAAA,KAAAxQ,KAAAwQ,EAAA,GACAC,EAAAW,MAAAZ,IAAAY,MAAApR,KAAAyQ,GAAA,EAAAzQ,KAAAyQ,EACAC,EAAA1Q,KAAA0Q,EACAM,EAAAN,GAAAA,EAAA,GAAAA,EAAA,EAAAA,GAAAD,EACAM,EAAA,EAAAL,EAAAM,EACA,OAAA,IAAA1B,EACAwB,EAAA,KAAAN,EAAAA,EAAA,IAAA,IAAAA,EAAAO,EAAAC,GACAF,EAAAN,EAAAO,EAAAC,GACAF,EAAAN,EAAA,IAAA,IAAAA,EAAAA,EAAA,IAAAO,EAAAC,GACAhR,KAAAgQ,UAGAiB,YAAA,WACA,OAAA,GAAAjR,KAAAyQ,GAAAzQ,KAAAyQ,GAAA,GAAAW,MAAApR,KAAAyQ,KACA,GAAAzQ,KAAA0Q,GAAA1Q,KAAA0Q,GAAA,GACA,GAAA1Q,KAAAgQ,SAAAhQ,KAAAgQ,SAAA,MAYA,IAAAqB,EAAAlB,KAAAmB,GAAA,IACAC,EAAA,IAAApB,KAAAmB,GAIAE,EAAA,OACAC,EAAA,EACAC,EAAA,OACAC,EAAA,EAAA,GACAC,EAAA,EAAA,GACAC,EAAA,EAAAD,EAAAA,EACAE,EAAAF,EAAAA,EAAAA,EAEA,SAAAG,EAAAzR,GACA,GAAAA,aAAA0R,EAAA,OAAA,IAAAA,EAAA1R,EAAAoQ,EAAApQ,EAAAK,EAAAL,EAAA4D,EAAA5D,EAAA0P,SACA,GAAA1P,aAAA2R,EAAA,CACA,GAAAb,MAAA9Q,EAAAkQ,GAAA,OAAA,IAAAwB,EAAA1R,EAAAoQ,EAAA,EAAA,EAAApQ,EAAA0P,SACA,IAAAQ,EAAAlQ,EAAAkQ,EAAAa,EACA,OAAA,IAAAW,EAAA1R,EAAAoQ,EAAAP,KAAA+B,IAAA1B,GAAAlQ,EAAAE,EAAA2P,KAAAgC,IAAA3B,GAAAlQ,EAAAE,EAAAF,EAAA0P,SAEA1P,aAAAgP,IAAAhP,EAAAwP,EAAAxP,IACA,IAGA8R,EAAAC,EAHAnS,EAAAoS,EAAAhS,EAAAJ,GACA2P,EAAAyC,EAAAhS,EAAAuP,GACA3L,EAAAoO,EAAAhS,EAAA4D,GACAqO,EAAAC,GAAA,SAAAtS,EAAA,SAAA2P,EAAA,SAAA3L,GAAAuN,GAKA,OAJAvR,IAAA2P,GAAAA,IAAA3L,EAAAkO,EAAAC,EAAAE,GACAH,EAAAI,GAAA,SAAAtS,EAAA,SAAA2P,EAAA,SAAA3L,GAAAsN,GACAa,EAAAG,GAAA,SAAAtS,EAAA,SAAA2P,EAAA,SAAA3L,GAAAwN,IAEA,IAAAM,EAAA,IAAAO,EAAA,GAAA,KAAAH,EAAAG,GAAA,KAAAA,EAAAF,GAAA/R,EAAA0P,SAOA,SAAAyC,EAAA/B,EAAA/P,EAAAuD,EAAA8L,GACA,OAAA,IAAAC,UAAAjP,OAAA+Q,EAAArB,GAAA,IAAAsB,EAAAtB,EAAA/P,EAAAuD,EAAA,MAAA8L,EAAA,EAAAA,GAGA,SAAAgC,EAAAtB,EAAA/P,EAAAuD,EAAA8L,GACAhQ,KAAA0Q,GAAAA,EACA1Q,KAAAW,GAAAA,EACAX,KAAAkE,GAAAA,EACAlE,KAAAgQ,SAAAA,EA0BA,SAAAwC,EAAAnS,GACA,OAAAyR,EAAAzR,EAAA8P,KAAAe,IAAA7Q,EAAA,EAAA,GAAAA,EAAAwR,EAAAF,EAGA,SAAAe,EAAArS,GACA,OAAAuR,EAAAvR,EAAAA,EAAAA,EAAAA,EAAAwR,GAAAxR,EAAAsR,GAGA,SAAAgB,EAAAP,GACA,OAAA,KAAAA,GAAA,SAAA,MAAAA,EAAA,MAAAjC,KAAAe,IAAAkB,EAAA,EAAA,KAAA,MAGA,SAAAE,EAAAF,GACA,OAAAA,GAAA,MAAA,OAAAA,EAAA,MAAAjC,KAAAe,KAAAkB,EAAA,MAAA,MAAA,KAGA,SAAAQ,EAAAtS,GACA,GAAAA,aAAA2R,EAAA,OAAA,IAAAA,EAAA3R,EAAAkQ,EAAAlQ,EAAAE,EAAAF,EAAAoQ,EAAApQ,EAAA0P,SAEA,GADA1P,aAAA0R,IAAA1R,EAAAyR,EAAAzR,IACA,IAAAA,EAAAK,GAAA,IAAAL,EAAA4D,EAAA,OAAA,IAAA+N,EAAArC,IAAA,EAAAtP,EAAAoQ,EAAApQ,EAAA0P,SACA,IAAAQ,EAAAL,KAAA0C,MAAAvS,EAAA4D,EAAA5D,EAAAK,GAAA4Q,EACA,OAAA,IAAAU,EAAAzB,EAAA,EAAA,IAAAA,EAAAA,EAAAL,KAAA2C,KAAAxS,EAAAK,EAAAL,EAAAK,EAAAL,EAAA4D,EAAA5D,EAAA4D,GAAA5D,EAAAoQ,EAAApQ,EAAA0P,SAOA,SAAA+C,EAAAvC,EAAAhQ,EAAAkQ,EAAAV,GACA,OAAA,IAAAC,UAAAjP,OAAA4R,EAAApC,GAAA,IAAAyB,EAAAzB,EAAAhQ,EAAAkQ,EAAA,MAAAV,EAAA,EAAAA,GAGA,SAAAiC,EAAAzB,EAAAhQ,EAAAkQ,EAAAV,GACAhQ,KAAAwQ,GAAAA,EACAxQ,KAAAQ,GAAAA,EACAR,KAAA0Q,GAAAA,EACA1Q,KAAAgQ,SAAAA,EA3DArQ,EAAAqS,EAAAS,EAAAhO,EAAAI,EAAA,CACAC,SAAA,SAAAb,GACA,OAAA,IAAA+N,EAAAhS,KAAA0Q,EA7CA,IA6CA,MAAAzM,EAAA,EAAAA,GAAAjE,KAAAW,EAAAX,KAAAkE,EAAAlE,KAAAgQ,UAEAmB,OAAA,SAAAlN,GACA,OAAA,IAAA+N,EAAAhS,KAAA0Q,EAhDA,IAgDA,MAAAzM,EAAA,EAAAA,GAAAjE,KAAAW,EAAAX,KAAAkE,EAAAlE,KAAAgQ,UAEAD,IAAA,WACA,IAAAwC,GAAAvS,KAAA0Q,EAAA,IAAA,IACA0B,EAAAhB,MAAApR,KAAAW,GAAA4R,EAAAA,EAAAvS,KAAAW,EAAA,IACA0R,EAAAjB,MAAApR,KAAAkE,GAAAqO,EAAAA,EAAAvS,KAAAkE,EAAA,IAIA,OAAA,IAAAoL,EACAqD,EAAA,WAJAP,EAAAZ,EAAAkB,EAAAN,IAIA,WAHAG,EAAAd,EAAAiB,EAAAH,IAGA,UAFAF,EAAAX,EAAAgB,EAAAL,KAGAM,GAAA,SAAAP,EAAA,UAAAG,EAAA,QAAAF,GACAM,EAAA,SAAAP,EAAA,SAAAG,EAAA,UAAAF,GACArS,KAAAgQ,aA4CArQ,EAAAsS,EAAAc,EAAAtO,EAAAI,EAAA,CACAC,SAAA,SAAAb,GACA,OAAA,IAAAgO,EAAAjS,KAAAwQ,EAAAxQ,KAAAQ,EAAAR,KAAA0Q,EA3GA,IA2GA,MAAAzM,EAAA,EAAAA,GAAAjE,KAAAgQ,UAEAmB,OAAA,SAAAlN,GACA,OAAA,IAAAgO,EAAAjS,KAAAwQ,EAAAxQ,KAAAQ,EAAAR,KAAA0Q,EA9GA,IA8GA,MAAAzM,EAAA,EAAAA,GAAAjE,KAAAgQ,UAEAD,IAAA,WACA,OAAAgC,EAAA/R,MAAA+P,UAIA,IACAiD,EAAA,QACAC,GAAA,OACAC,GAAA,OACAC,EAAA,QACAC,EAAAD,EAAAD,EACAG,EAAAF,EAAAH,EACAM,EAAAN,EAAAC,IAPA,OAOAC,EAgBA,SAAAK,GAAA/C,EAAAC,EAAAC,EAAAV,GACA,OAAA,IAAAC,UAAAjP,OAfA,SAAAV,GACA,GAAAA,aAAAkT,GAAA,OAAA,IAAAA,GAAAlT,EAAAkQ,EAAAlQ,EAAAmQ,EAAAnQ,EAAAoQ,EAAApQ,EAAA0P,SACA1P,aAAAgP,IAAAhP,EAAAwP,EAAAxP,IACA,IAAAJ,EAAAI,EAAAJ,EAAA,IACA2P,EAAAvP,EAAAuP,EAAA,IACA3L,EAAA5D,EAAA4D,EAAA,IACAwM,GAAA4C,EAAApP,EAAAkP,EAAAlT,EAAAmT,EAAAxD,IAAAyD,EAAAF,EAAAC,GACAI,EAAAvP,EAAAwM,EACAzM,GAAAkP,GAAAtD,EAAAa,GAAAuC,EAAAQ,GAAAP,EACAzC,EAAAN,KAAA2C,KAAA7O,EAAAA,EAAAwP,EAAAA,IAAAN,EAAAzC,GAAA,EAAAA,IACAF,EAAAC,EAAAN,KAAA0C,MAAA5O,EAAAwP,GAAAlC,EAAA,IAAA3B,IACA,OAAA,IAAA4D,GAAAhD,EAAA,EAAAA,EAAA,IAAAA,EAAAC,EAAAC,EAAApQ,EAAA0P,SAIA0D,CAAAlD,GAAA,IAAAgD,GAAAhD,EAAAC,EAAAC,EAAA,MAAAV,EAAA,EAAAA,GAGA,SAAAwD,GAAAhD,EAAAC,EAAAC,EAAAV,GACAhQ,KAAAwQ,GAAAA,EACAxQ,KAAAyQ,GAAAA,EACAzQ,KAAA0Q,GAAAA,EACA1Q,KAAAgQ,SAAAA,EAGArQ,EAAA6T,GAAAD,GAAA9O,EAAAI,EAAA,CACAC,SAAA,SAAAb,GAEA,OADAA,EAAA,MAAAA,EAAAa,EAAAqL,KAAAe,IAAApM,EAAAb,GACA,IAAAuP,GAAAxT,KAAAwQ,EAAAxQ,KAAAyQ,EAAAzQ,KAAA0Q,EAAAzM,EAAAjE,KAAAgQ,UAEAmB,OAAA,SAAAlN,GAEA,OADAA,EAAA,MAAAA,EAnfA,GAmfAkM,KAAAe,IAnfA,GAmfAjN,GACA,IAAAuP,GAAAxT,KAAAwQ,EAAAxQ,KAAAyQ,EAAAzQ,KAAA0Q,EAAAzM,EAAAjE,KAAAgQ,UAEAD,IAAA,WACA,IAAAS,EAAAY,MAAApR,KAAAwQ,GAAA,GAAAxQ,KAAAwQ,EAAA,KAAAa,EACAX,GAAA1Q,KAAA0Q,EACA/P,EAAAyQ,MAAApR,KAAAyQ,GAAA,EAAAzQ,KAAAyQ,EAAAC,GAAA,EAAAA,GACAiD,EAAAxD,KAAA+B,IAAA1B,GACAoD,EAAAzD,KAAAgC,IAAA3B,GACA,OAAA,IAAAlB,EACA,KAAAoB,EAAA/P,IAlDA,OAkDAgT,EAAAX,EAAAY,IACA,KAAAlD,EAAA/P,GAAAsS,EAAAU,EAAAT,EAAAU,IACA,KAAAlD,EAAAyC,EAAAQ,EAAAhT,GACAX,KAAAgQ,aAKAvQ,EAAAuP,MAAAA,EACAvP,EAAAsQ,IAAAA,EACAtQ,EAAAmR,IAAAA,EACAnR,EAAAgT,IAAAA,EACAhT,EAAAsT,IAAAA,EACAtT,EAAAoU,IA1FA,SAAAnD,EAAAlQ,EAAAgQ,EAAAR,GACA,OAAA,IAAAC,UAAAjP,OAAA4R,EAAAlC,GAAA,IAAAuB,EAAAzB,EAAAhQ,EAAAkQ,EAAA,MAAAV,EAAA,EAAAA,IA0FAvQ,EAAAwJ,KAzJA,SAAAyH,EAAAV,GACA,OAAA,IAAAgC,EAAAtB,EAAA,EAAA,EAAA,MAAAV,EAAA,EAAAA,IAyJAvQ,EAAA8T,UAAAA,GAEAlP,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IAhiBAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,4BCHA,IAAA1E,EAAAyE,EAAAzE,EAIAE,KAJAuE,EAIA,SAAA9E,EAAAqU,GAAA,aAEA,SAAAC,EAAAnC,EAAAoC,EAAAC,EAAAC,EAAAC,GACA,IAAAtC,EAAAD,EAAAA,EAAAE,EAAAD,EAAAD,EACA,QAAA,EAAA,EAAAA,EAAA,EAAAC,EAAAC,GAAAkC,GACA,EAAA,EAAAnC,EAAA,EAAAC,GAAAmC,GACA,EAAA,EAAArC,EAAA,EAAAC,EAAA,EAAAC,GAAAoC,EACApC,EAAAqC,GAAA,EAGA,SAAAC,EAAAxR,GACA,IAAAxC,EAAAwC,EAAA5B,OAAA,EACA,OAAA,SAAAX,GACA,IAAAE,EAAAF,GAAA,EAAAA,EAAA,EAAA,GAAAA,EAAAD,GAAAC,EAAA,GAAA8P,KAAAkE,MAAAhU,EAAAD,GACA6T,EAAArR,EAAArC,GACA2T,EAAAtR,EAAArC,EAAA,GACAyT,EAAA,EAAAzT,EAAAqC,EAAArC,EAAA,GAAA,EAAA0T,EAAAC,EACAC,EAAA5T,EAAAH,EAAA,EAAAwC,EAAArC,EAAA,GAAA,EAAA2T,EAAAD,EACA,OAAAF,GAAA1T,EAAAE,EAAAH,GAAAA,EAAA4T,EAAAC,EAAAC,EAAAC,IAIA,SAAAG,EAAA1R,GACA,IAAAxC,EAAAwC,EAAA5B,OACA,OAAA,SAAAX,GACA,IAAAE,EAAA4P,KAAAkE,QAAAhU,GAAA,GAAA,IAAAA,EAAAA,GAAAD,GACA4T,EAAApR,GAAArC,EAAAH,EAAA,GAAAA,GACA6T,EAAArR,EAAArC,EAAAH,GACA8T,EAAAtR,GAAArC,EAAA,GAAAH,GACA+T,EAAAvR,GAAArC,EAAA,GAAAH,GACA,OAAA2T,GAAA1T,EAAAE,EAAAH,GAAAA,EAAA4T,EAAAC,EAAAC,EAAAC,IAIA,SAAAI,EAAAnC,GACA,OAAA,WACA,OAAAA,GAIA,SAAAoC,EAAA7T,EAAAwD,GACA,OAAA,SAAA9D,GACA,OAAAM,EAAAN,EAAA8D,GAUA,SAAAsQ,EAAA9T,EAAAuD,GACA,IAAAC,EAAAD,EAAAvD,EACA,OAAAwD,EAAAqQ,EAAA7T,EAAA,IAAAwD,GAAAA,GAAA,IAAAA,EAAA,IAAAgM,KAAAG,MAAAnM,EAAA,KAAAA,GAAAoQ,EAAAnD,MAAAzQ,GAAAuD,EAAAvD,GAGA,SAAA+T,EAAAnC,GACA,OAAA,IAAAA,GAAAA,GAAAoC,EAAA,SAAAhU,EAAAuD,GACA,OAAAA,EAAAvD,EAbA,SAAAA,EAAAuD,EAAAqO,GACA,OAAA5R,EAAAwP,KAAAe,IAAAvQ,EAAA4R,GAAArO,EAAAiM,KAAAe,IAAAhN,EAAAqO,GAAA5R,EAAA4R,EAAA,EAAAA,EAAA,SAAAlS,GACA,OAAA8P,KAAAe,IAAAvQ,EAAAN,EAAA6D,EAAAqO,IAWAqC,CAAAjU,EAAAuD,EAAAqO,GAAAgC,EAAAnD,MAAAzQ,GAAAuD,EAAAvD,IAIA,SAAAgU,EAAAhU,EAAAuD,GACA,IAAAC,EAAAD,EAAAvD,EACA,OAAAwD,EAAAqQ,EAAA7T,EAAAwD,GAAAoQ,EAAAnD,MAAAzQ,GAAAuD,EAAAvD,GAGA,IAAAoP,EAAA,SAAA8E,EAAAtC,GACA,IAAAvD,EAAA0F,EAAAnC,GAEA,SAAAxC,EAAA+E,EAAAC,GACA,IAAA7U,EAAA8O,GAAA8F,EAAAhB,EAAA/D,IAAA+E,IAAA5U,GAAA6U,EAAAjB,EAAA/D,IAAAgF,IAAA7U,GACA2P,EAAAb,EAAA8F,EAAAjF,EAAAkF,EAAAlF,GACA3L,EAAA8K,EAAA8F,EAAA5Q,EAAA6Q,EAAA7Q,GACA8L,EAAA2E,EAAAG,EAAA9E,QAAA+E,EAAA/E,SACA,OAAA,SAAA3P,GAKA,OAJAyU,EAAA5U,EAAAA,EAAAG,GACAyU,EAAAjF,EAAAA,EAAAxP,GACAyU,EAAA5Q,EAAAA,EAAA7D,GACAyU,EAAA9E,QAAAA,EAAA3P,GACAyU,EAAA,IAMA,OAFA/E,EAAA2E,MAAAG,EAEA9E,EAnBA,CAoBA,GAEA,SAAAiF,EAAAC,GACA,OAAA,SAAAC,GACA,IAIA3U,EAAAyO,EAJA5O,EAAA8U,EAAAlU,OACAd,EAAA,IAAAwB,MAAAtB,GACAyP,EAAA,IAAAnO,MAAAtB,GACA8D,EAAA,IAAAxC,MAAAtB,GAEA,IAAAG,EAAA,EAAAA,EAAAH,IAAAG,EACAyO,EAAA8E,EAAA/D,IAAAmF,EAAA3U,IACAL,EAAAK,GAAAyO,EAAA9O,GAAA,EACA2P,EAAAtP,GAAAyO,EAAAa,GAAA,EACA3L,EAAA3D,GAAAyO,EAAA9K,GAAA,EAMA,OAJAhE,EAAA+U,EAAA/U,GACA2P,EAAAoF,EAAApF,GACA3L,EAAA+Q,EAAA/Q,GACA8K,EAAAgB,QAAA,EACA,SAAA3P,GAIA,OAHA2O,EAAA9O,EAAAA,EAAAG,GACA2O,EAAAa,EAAAA,EAAAxP,GACA2O,EAAA9K,EAAAA,EAAA7D,GACA2O,EAAA,KAKA,IAAAmG,EAAAH,EAAAZ,GACAgB,EAAAJ,EAAAV,GAEA,SAAA/Q,EAAA5C,EAAAuD,GACA,IAIA3D,EAJA8U,EAAAnR,EAAAA,EAAAlD,OAAA,EACAsU,EAAA3U,EAAAwP,KAAAE,IAAAgF,EAAA1U,EAAAK,QAAA,EACAoR,EAAA,IAAA1Q,MAAA4T,GACA9U,EAAA,IAAAkB,MAAA2T,GAGA,IAAA9U,EAAA,EAAAA,EAAA+U,IAAA/U,EAAA6R,EAAA7R,GAAAgB,EAAAZ,EAAAJ,GAAA2D,EAAA3D,IACA,KAAAA,EAAA8U,IAAA9U,EAAAC,EAAAD,GAAA2D,EAAA3D,GAEA,OAAA,SAAAF,GACA,IAAAE,EAAA,EAAAA,EAAA+U,IAAA/U,EAAAC,EAAAD,GAAA6R,EAAA7R,GAAAF,GACA,OAAAG,GAIA,SAAA+U,EAAA5U,EAAAuD,GACA,IAAAC,EAAA,IAAAqR,KACA,OAAAtR,GAAAvD,GAAAA,EAAA,SAAAN,GACA,OAAA8D,EAAAsR,QAAA9U,EAAAuD,EAAA7D,GAAA8D,GAIA,SAAAuR,EAAA/U,EAAAuD,GACA,OAAAA,GAAAvD,GAAAA,EAAA,SAAAN,GACA,OAAAM,EAAAuD,EAAA7D,GAIA,SAAAgB,EAAAV,EAAAuD,GACA,IAEAD,EAFA1D,EAAA,GACAC,EAAA,GAMA,IAAAyD,KAHA,OAAAtD,GAAA,iBAAAA,IAAAA,EAAA,IACA,OAAAuD,GAAA,iBAAAA,IAAAA,EAAA,IAEAA,EACAD,KAAAtD,EACAJ,EAAA0D,GAAA1C,EAAAZ,EAAAsD,GAAAC,EAAAD,IAEAzD,EAAAyD,GAAAC,EAAAD,GAIA,OAAA,SAAA5D,GACA,IAAA4D,KAAA1D,EAAAC,EAAAyD,GAAA1D,EAAA0D,GAAA5D,GACA,OAAAG,GAIA,IAAAmV,EAAA,8CACAC,EAAA,IAAAvQ,OAAAsQ,EAAAE,OAAA,KAcA,SAAAC,EAAAnV,EAAAuD,GACA,IACA6R,EACAC,EACAC,EAHAC,EAAAP,EAAAQ,UAAAP,EAAAO,UAAA,EAIA5V,GAAA,EACAkQ,EAAA,GACA2F,EAAA,GAMA,IAHAzV,GAAA,GAAAuD,GAAA,IAGA6R,EAAAJ,EAAAtG,KAAA1O,MACAqV,EAAAJ,EAAAvG,KAAAnL,MACA+R,EAAAD,EAAAK,OAAAH,IACAD,EAAA/R,EAAAvB,MAAAuT,EAAAD,GACAxF,EAAAlQ,GAAAkQ,EAAAlQ,IAAA0V,EACAxF,IAAAlQ,GAAA0V,IAEAF,EAAAA,EAAA,OAAAC,EAAAA,EAAA,IACAvF,EAAAlQ,GAAAkQ,EAAAlQ,IAAAyV,EACAvF,IAAAlQ,GAAAyV,GAEAvF,IAAAlQ,GAAA,KACA6V,EAAA1T,KAAA,CAAAnC,EAAAA,EAAA6R,EAAAsD,EAAAK,EAAAC,MAEAE,EAAAN,EAAAO,UAYA,OARAD,EAAAhS,EAAAlD,SACAiV,EAAA/R,EAAAvB,MAAAuT,GACAzF,EAAAlQ,GAAAkQ,EAAAlQ,IAAA0V,EACAxF,IAAAlQ,GAAA0V,GAKAxF,EAAAzP,OAAA,EAAAoV,EAAA,GA7CA,SAAAlS,GACA,OAAA,SAAA7D,GACA,OAAA6D,EAAA7D,GAAA,IA4CAiW,CAAAF,EAAA,GAAAhE,GApDA,SAAAlO,GACA,OAAA,WACA,OAAAA,GAmDAqS,CAAArS,IACAA,EAAAkS,EAAApV,OAAA,SAAAX,GACA,IAAA,IAAAC,EAAAC,EAAA,EAAAA,EAAA2D,IAAA3D,EAAAkQ,GAAAnQ,EAAA8V,EAAA7V,IAAAA,GAAAD,EAAA8R,EAAA/R,GACA,OAAAoQ,EAAA+F,KAAA,MAIA,SAAAjV,EAAAZ,EAAAuD,GACA,IAAA1D,EAAAH,SAAA6D,EACA,OAAA,MAAAA,GAAA,WAAA7D,EAAAkU,EAAArQ,IACA,UAAA7D,EAAAqV,EACA,UAAArV,GAAAG,EAAAsT,EAAA9E,MAAA9K,KAAAA,EAAA1D,EAAAuP,GAAA+F,EACA5R,aAAA4P,EAAA9E,MAAAe,EACA7L,aAAAsR,KAAAD,EACA7T,MAAAC,QAAAuC,GAAAX,EACA,mBAAAW,EAAAuS,SAAA,mBAAAvS,EAAAqM,UAAAa,MAAAlN,GAAA7C,EACAqU,GAAA/U,EAAAuD,GAwBA,IA2BAwS,EACAC,EACAC,EACAC,EA9BAC,EAAA,IAAA3G,KAAAmB,GAEAyF,EAAA,CACAC,WAAA,EACAC,WAAA,EACAC,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGA,SAAAC,EAAA3W,EAAAuD,EAAA1D,EAAA2D,EAAAhE,EAAAX,GACA,IAAA4X,EAAAC,EAAAF,EAKA,OAJAC,EAAAjH,KAAA2C,KAAAnS,EAAAA,EAAAuD,EAAAA,MAAAvD,GAAAyW,EAAAlT,GAAAkT,IACAD,EAAAxW,EAAAH,EAAA0D,EAAAC,KAAA3D,GAAAG,EAAAwW,EAAAhT,GAAAD,EAAAiT,IACAE,EAAAlH,KAAA2C,KAAAtS,EAAAA,EAAA2D,EAAAA,MAAA3D,GAAA6W,EAAAlT,GAAAkT,EAAAF,GAAAE,GACA1W,EAAAwD,EAAAD,EAAA1D,IAAAG,GAAAA,EAAAuD,GAAAA,EAAAiT,GAAAA,EAAAC,GAAAA,GACA,CACAJ,WAAA7W,EACA8W,WAAAzX,EACA0X,OAAA/G,KAAA0C,MAAA3O,EAAAvD,GAAAmW,EACAK,MAAAhH,KAAAoH,KAAAJ,GAAAL,EACAM,OAAAA,EACAC,OAAAA,GA4BA,SAAAG,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,SAAAC,EAAApH,GACA,OAAAA,EAAAzP,OAAAyP,EAAAoH,MAAA,IAAA,GAsCA,OAAA,SAAAlX,EAAAuD,GACA,IAAAuM,EAAA,GACA2F,EAAA,GAOA,OANAzV,EAAA8W,EAAA9W,GAAAuD,EAAAuT,EAAAvT,GAtCA,SAAA4T,EAAAC,EAAAC,EAAAC,EAAAxH,EAAA2F,GACA,GAAA0B,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAA1X,EAAAkQ,EAAA/N,KAAA,aAAA,KAAAgV,EAAA,KAAAC,GACAvB,EAAA1T,KAAA,CAAAnC,EAAAA,EAAA,EAAA6R,EAAAsD,EAAAoC,EAAAE,IAAA,CAAAzX,EAAAA,EAAA,EAAA6R,EAAAsD,EAAAqC,EAAAE,UACAD,GAAAC,IACAxH,EAAA/N,KAAA,aAAAsV,EAAAN,EAAAO,EAAAN,GAkCAO,CAAAvX,EAAAqW,WAAArW,EAAAsW,WAAA/S,EAAA8S,WAAA9S,EAAA+S,WAAAxG,EAAA2F,GA9BA,SAAAzV,EAAAuD,EAAAuM,EAAA2F,GACAzV,IAAAuD,GACA,IAAAvD,EAAAuD,EAAAA,GAAA,IAAA,IAAAA,EAAAvD,IAAAA,GAAA,KACAyV,EAAA1T,KAAA,CAAAnC,EAAAkQ,EAAA/N,KAAAmV,EAAApH,GAAA,UAAA,KAAAmH,GAAA,EAAAxF,EAAAsD,EAAA/U,EAAAuD,MACAA,GACAuM,EAAA/N,KAAAmV,EAAApH,GAAA,UAAAvM,EAAA0T,GA0BAV,CAAAvW,EAAAuW,OAAAhT,EAAAgT,OAAAzG,EAAA2F,GAtBA,SAAAzV,EAAAuD,EAAAuM,EAAA2F,GACAzV,IAAAuD,EACAkS,EAAA1T,KAAA,CAAAnC,EAAAkQ,EAAA/N,KAAAmV,EAAApH,GAAA,SAAA,KAAAmH,GAAA,EAAAxF,EAAAsD,EAAA/U,EAAAuD,KACAA,GACAuM,EAAA/N,KAAAmV,EAAApH,GAAA,SAAAvM,EAAA0T,GAmBAT,CAAAxW,EAAAwW,MAAAjT,EAAAiT,MAAA1G,EAAA2F,GAfA,SAAA0B,EAAAC,EAAAC,EAAAC,EAAAxH,EAAA2F,GACA,GAAA0B,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAA1X,EAAAkQ,EAAA/N,KAAAmV,EAAApH,GAAA,SAAA,KAAA,IAAA,KAAA,KACA2F,EAAA1T,KAAA,CAAAnC,EAAAA,EAAA,EAAA6R,EAAAsD,EAAAoC,EAAAE,IAAA,CAAAzX,EAAAA,EAAA,EAAA6R,EAAAsD,EAAAqC,EAAAE,UACA,IAAAD,GAAA,IAAAC,GACAxH,EAAA/N,KAAAmV,EAAApH,GAAA,SAAAuH,EAAA,IAAAC,EAAA,KAWAE,CAAAxX,EAAAyW,OAAAzW,EAAA0W,OAAAnT,EAAAkT,OAAAlT,EAAAmT,OAAA5G,EAAA2F,GACAzV,EAAAuD,EAAA,KACA,SAAA7D,GAEA,IADA,IAAAC,EAAAC,GAAA,EAAAH,EAAAgW,EAAApV,SACAT,EAAAH,GAAAqQ,GAAAnQ,EAAA8V,EAAA7V,IAAAA,GAAAD,EAAA8R,EAAA/R,GACA,OAAAoQ,EAAA+F,KAAA,MAKA,IAAA4B,EAAAZ,EA7EA,SAAAjW,GACA,MAAA,SAAAA,EAAAwV,GACAL,IAAAA,EAAA2B,SAAAC,cAAA,OAAA3B,EAAA0B,SAAAE,gBAAA3B,EAAAyB,SAAAG,aACA9B,EAAA+B,MAAAC,UAAAnX,EACAA,EAAAqV,EAAA+B,iBAAAhC,EAAAiC,YAAAlC,GAAA,MAAAmC,iBAAA,aACAlC,EAAAmC,YAAApC,GAEAY,IADA/V,EAAAA,EAAAoB,MAAA,GAAA,GAAAoW,MAAA,MACA,IAAAxX,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAsEA,OAAA,MAAA,QACAyX,EAAAxB,EApEA,SAAAjW,GACA,OAAA,MAAAA,EAAAwV,IACAF,EAAAA,GAAAwB,SAAAY,gBAAA,6BAAA,MACAC,aAAA,YAAA3X,IACAA,EAAAsV,EAAA6B,UAAAS,QAAAC,eAEA9B,GADA/V,EAAAA,EAAA8X,QACA1Y,EAAAY,EAAA2C,EAAA3C,EAAAf,EAAAe,EAAA4C,EAAA5C,EAAApB,EAAAoB,EAAA/B,GAFAuX,IAgEA,KAAA,IAAA,KAEAuC,EAAAnJ,KAAAoJ,MAKA,SAAA5F,EAAAvB,GACA,QAAAA,EAAAjC,KAAAqJ,IAAApH,IAAA,EAAAA,GAAA,EA2DA,SAAAxB,EAAA6I,GACA,OAAA,SAAA3E,EAAAC,GACA,IAAAvE,EAAAiJ,GAAA3E,EAAAhB,EAAAlD,IAAAkE,IAAAtE,GAAAuE,EAAAjB,EAAAlD,IAAAmE,IAAAvE,GACAC,EAAAkE,EAAAG,EAAArE,EAAAsE,EAAAtE,GACAC,EAAAiE,EAAAG,EAAApE,EAAAqE,EAAArE,GACAV,EAAA2E,EAAAG,EAAA9E,QAAA+E,EAAA/E,SACA,OAAA,SAAA3P,GAKA,OAJAyU,EAAAtE,EAAAA,EAAAnQ,GACAyU,EAAArE,EAAAA,EAAApQ,GACAyU,EAAApE,EAAAA,EAAArQ,GACAyU,EAAA9E,QAAAA,EAAA3P,GACAyU,EAAA,KAKA,IAAA4E,EAAA9I,EAAA6D,GACAkF,EAAA/I,EAAA+D,GAgBA,SAAA5B,EAAA0G,GACA,OAAA,SAAA3E,EAAAC,GACA,IAAAvE,EAAAiJ,GAAA3E,EAAAhB,EAAAf,IAAA+B,IAAAtE,GAAAuE,EAAAjB,EAAAf,IAAAgC,IAAAvE,GACAhQ,EAAAmU,EAAAG,EAAAtU,EAAAuU,EAAAvU,GACAkQ,EAAAiE,EAAAG,EAAApE,EAAAqE,EAAArE,GACAV,EAAA2E,EAAAG,EAAA9E,QAAA+E,EAAA/E,SACA,OAAA,SAAA3P,GAKA,OAJAyU,EAAAtE,EAAAA,EAAAnQ,GACAyU,EAAAtU,EAAAA,EAAAH,GACAyU,EAAApE,EAAAA,EAAArQ,GACAyU,EAAA9E,QAAAA,EAAA3P,GACAyU,EAAA,KAKA,IAAA8E,EAAA7G,EAAA0B,GACAoF,EAAA9G,EAAA4B,GAEA,SAAApB,EAAAkG,GACA,OAAA,SAAAK,EAAAvH,GAGA,SAAAgB,EAAAuB,EAAAC,GACA,IAAAvE,EAAAiJ,GAAA3E,EAAAhB,EAAAP,UAAAuB,IAAAtE,GAAAuE,EAAAjB,EAAAP,UAAAwB,IAAAvE,GACAC,EAAAkE,EAAAG,EAAArE,EAAAsE,EAAAtE,GACAC,EAAAiE,EAAAG,EAAApE,EAAAqE,EAAArE,GACAV,EAAA2E,EAAAG,EAAA9E,QAAA+E,EAAA/E,SACA,OAAA,SAAA3P,GAKA,OAJAyU,EAAAtE,EAAAA,EAAAnQ,GACAyU,EAAArE,EAAAA,EAAApQ,GACAyU,EAAApE,EAAAA,EAAAP,KAAAe,IAAA7Q,EAAAkS,IACAuC,EAAA9E,QAAAA,EAAA3P,GACAyU,EAAA,IAMA,OAlBAvC,GAAAA,EAgBAgB,EAAAmB,MAAAoF,EAEAvG,EAnBA,CAoBA,GAGA,IAAAwG,EAAAxG,EAAAkB,GACAuF,EAAAzG,EAAAoB,GAiBAlV,EAAAwa,YAAA1Y,EACA9B,EAAAya,iBAAA3W,EACA9D,EAAA0a,iBAAA/F,EACA3U,EAAA2a,uBAAA9F,EACA7U,EAAA4a,gBAAA9E,EACA9V,EAAA6a,oBAzSA,SAAAC,GACA,IAAAna,EAAAma,EAAAvZ,OACA,OAAA,SAAAX,GACA,OAAAka,EAAApK,KAAAC,IAAA,EAAAD,KAAAE,IAAAjQ,EAAA,EAAA+P,KAAAkE,MAAAhU,EAAAD,QAuSAX,EAAA+a,eAnSA,SAAA7Z,EAAAuD,GACA,IAAA3D,EAAAkU,GAAA9T,GAAAuD,GACA,OAAA,SAAA7D,GACA,IAAA+R,EAAA7R,EAAAF,GACA,OAAA+R,EAAA,IAAAjC,KAAAkE,MAAAjC,EAAA,OAgSA3S,EAAAgb,kBAAA/E,EACAjW,EAAAib,kBAAArZ,EACA5B,EAAAkb,iBA9RA,SAAAha,EAAAuD,GACA,OAAAA,GAAAvD,GAAAA,EAAA,SAAAN,GACA,OAAA8P,KAAAG,MAAA3P,EAAAuD,EAAA7D,KA6RAZ,EAAAmb,kBAAA9E,EACArW,EAAA2Y,wBAAAA,EACA3Y,EAAAuZ,wBAAAA,EACAvZ,EAAAob,gBAzJA,SAAAC,EAAAC,GACA,IAKAxa,EACAya,EANAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GACAM,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GACAQ,EAAAH,EAAAH,EACAO,EAAAH,EAAAH,EACAO,EAAAF,EAAAA,EAAAC,EAAAA,EAKA,GAAAC,EA1BA,MA2BAT,EAAA7K,KAAAuL,IAAAJ,EAAAH,GAAA7B,EACA/Y,EAAA,SAAAF,GACA,MAAA,CACA4a,EAAA5a,EAAAkb,EACAL,EAAA7a,EAAAmb,EACAL,EAAAhL,KAAAqJ,IAAAF,EAAAjZ,EAAA2a,SAMA,CACA,IAAAW,EAAAxL,KAAA2C,KAAA2I,GACAG,GAAAN,EAAAA,EAAAH,EAAAA,EAzCA,EAyCAM,IAAA,EAAAN,EA1CA,EA0CAQ,GACAE,GAAAP,EAAAA,EAAAH,EAAAA,EA1CA,EA0CAM,IAAA,EAAAH,EA3CA,EA2CAK,GACAG,EAAA3L,KAAAuL,IAAAvL,KAAA2C,KAAA8I,EAAAA,EAAA,GAAAA,GACAG,EAAA5L,KAAAuL,IAAAvL,KAAA2C,KAAA+I,EAAAA,EAAA,GAAAA,GACAb,GAAAe,EAAAD,GAAAxC,EACA/Y,EAAA,SAAAF,GACA,IAAAoQ,EAAApQ,EAAA2a,EACAgB,EAAArI,EAAAmI,GACApb,EAAAya,GAlDA,EAkDAQ,IAAAK,EAtCA,SAAA5J,GACA,QAAAA,EAAAjC,KAAAqJ,IAAA,EAAApH,IAAA,IAAAA,EAAA,GAqCA6J,CAAA3C,EAAA7I,EAAAqL,GA1CA,SAAA1J,GACA,QAAAA,EAAAjC,KAAAqJ,IAAApH,IAAA,EAAAA,GAAA,EAyCAwB,CAAAkI,IACA,MAAA,CACAb,EAAAva,EAAA6a,EACAL,EAAAxa,EAAA8a,EACAL,EAAAa,EAAArI,EAAA2F,EAAA7I,EAAAqL,KAOA,OAFAvb,EAAA2b,SAAA,IAAAlB,EAEAza,GA+GAd,EAAA0c,eAAApM,EACAtQ,EAAA2c,oBAAAjH,EACA1V,EAAA4c,0BAAAjH,EACA3V,EAAA6c,eAAA5C,EACAja,EAAA8c,mBAAA5C,EACAla,EAAA+c,eA9FA,SAAA1H,EAAAC,GACA,IAAArE,EAAAiE,GAAAG,EAAAhB,EAAArB,IAAAqC,IAAApE,GAAAqE,EAAAjB,EAAArB,IAAAsC,IAAArE,GACA/P,EAAAgU,EAAAG,EAAAnU,EAAAoU,EAAApU,GACAuD,EAAAyQ,EAAAG,EAAA5Q,EAAA6Q,EAAA7Q,GACA8L,EAAA2E,EAAAG,EAAA9E,QAAA+E,EAAA/E,SACA,OAAA,SAAA3P,GAKA,OAJAyU,EAAApE,EAAAA,EAAArQ,GACAyU,EAAAnU,EAAAA,EAAAN,GACAyU,EAAA5Q,EAAAA,EAAA7D,GACAyU,EAAA9E,QAAAA,EAAA3P,GACAyU,EAAA,KAqFArV,EAAAgd,eAAA7C,EACAna,EAAAid,mBAAA7C,EACApa,EAAAkd,qBAAA5C,EACAta,EAAAmd,yBAAA5C,EACAva,EAAAod,UAvCA,SAAA5C,EAAArX,GAEA,IADA,IAAArC,EAAA,EAAAH,EAAAwC,EAAA5B,OAAA,EAAAgD,EAAApB,EAAA,GAAAka,EAAA,IAAApb,MAAAtB,EAAA,EAAA,EAAAA,GACAG,EAAAH,GAAA0c,EAAAvc,GAAA0Z,EAAAjW,EAAAA,EAAApB,IAAArC,IACA,OAAA,SAAAF,GACA,IAAAE,EAAA4P,KAAAC,IAAA,EAAAD,KAAAE,IAAAjQ,EAAA,EAAA+P,KAAAkE,MAAAhU,GAAAD,KACA,OAAA0c,EAAAvc,GAAAF,EAAAE,KAmCAd,EAAAsd,SA/BA,SAAAC,EAAA5c,GAEA,IADA,IAAA6c,EAAA,IAAAvb,MAAAtB,GACAG,EAAA,EAAAA,EAAAH,IAAAG,EAAA0c,EAAA1c,GAAAyc,EAAAzc,GAAAH,EAAA,IACA,OAAA6c,GA8BA5Y,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,KAvjBA,iBAAA9B,QAAA,IAAAC,EAAA6E,EAAA9E,EAAAgB,EAAA,aAEA8D,EAAAzE,EAAA0E,GAAA1E,EAAA0E,IAAA,GAAA1E,EAAA0E,wCCJA,IAAA1E,EAAAyE,EAAAzE,EAIAE,KAJAuE,EAIA,SAAA9E,EAAAyd,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,aAQA,SAAAC,EAAApZ,GACA,OAAAA,EAGA,SAAAqZ,EAAAC,GAEA,IADA,IAAAC,EAAA,GACAnd,EAAA,EAAAmQ,EAAA+M,EAAAzc,OAAAT,EAAAmQ,EAAAnQ,IACAmd,EAAAnd,GAAAkd,EAAA/M,EAAAnQ,EAAA,GAEA,OAAAmd,EAIA,SAAAC,EAAAC,EAAAC,GACAD,EAAAtc,KAAA,WAYA,IAXA,IAEAwc,EAFAF,EAAAV,EAAAa,OAAA/d,MACAge,EAAAJ,EAAAA,OAAA7E,MAAA,OAAAkF,UAEAC,EAAA,GAKA1C,GADAoC,EAAAO,KAAA,KACAC,WAAAR,EAAAO,KAAA,QAAA,GACAE,EAAAT,EAAAA,KAAA,MAAAU,OAAA,SAAAH,KAAA,IAAA,GAAAA,KAAA,KAAA3C,EAAA,MAEAsC,EAAAE,EAAAnG,OACAqG,EAAAxb,KAAAob,GACAO,EAAAT,KAAAM,EAAA1H,KAAA,MACA6H,EAAAE,OAAAC,wBAAAX,GAAA,EAAAK,EAAAld,SACAkd,EAAArG,MACAwG,EAAAT,KAAAM,EAAA1H,KAAA,MACA0H,EAAA,CAAAJ,GACAO,EAAAT,EAAAU,OAAA,SAAAH,KAAA,IAAA,GAAAA,KAAA,KAbA,IAaA3C,EAAA,MAAAoC,KAAAE,MAvCA,IAAAW,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GACA,cAAAA,GACA,SAAAA,GACA,OAAAA,GAAA,mBAAAF,QAAAE,EAAAzc,cAAAuc,QAAAE,IAAAF,OAAAxc,UAAA,gBAAA0c,GAwIAC,EAAA,CACAC,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,SAAAL,EACAC,EAAAb,KAAA,SAAAc,GAAAd,KAAA,QAAAe,GACA,WAAAH,EACAC,EAAAb,KAAA,IAAAgB,GACA,SAAAJ,EACAC,EAAAb,KAAA,KAAA,GAAAA,KAAA,KAAAe,GAAAf,KAAA,KAAA,GAAAA,KAAA,KAAA,GACA,SAAAY,GACAC,EAAAb,KAAA,IAAAiB,IAIAC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAH,EAAAjB,OAAA,QAAAH,KAAA,QAAAsB,EAAA,SACA,IAAA7B,EAAA0B,EAAAK,UAAA,KAAAF,EAAA,aAAAA,EAAA,SAAAG,KAAAJ,GAAA5B,KAAAL,GAMA,OAJAmC,GACAJ,EAAAK,UAAA,KAAAF,EAAA,aAAAA,EAAA,SAAA1e,KAAA4c,EAAA+B,GAGA9B,GAGAiC,YAAA,SAAA1H,EAAA2H,EAAAC,EAAAP,EAAAQ,EAAAC,GACA,IAAAC,EAAA/H,EAAAgI,aA5DA,SAAAhI,EAAA6H,EAAAC,GACA,IAAAT,EAAArH,EAAAoC,QAAAnZ,IAAA,SAAA+C,GACA,IAAAic,EAAAjI,EAAAgI,aAAAhc,GACA,OAAA6b,EAAAI,EAAA,IAAA,IAAAH,EAAA,IAAAD,EAAAI,EAAA,MAGA,MAAA,CACAR,KAAAzH,EAAAoC,QACAiF,OAAAA,EACAa,QAAA9C,GAmDA+C,CAAAnI,EAAA6H,EAAAC,GAAA9H,EAAAoI,MArFA,SAAApI,EAAA4H,EAAAC,GACA,IAAAJ,EAAA,GAEA,GAAA,EAAAG,EAAA/e,OACA4e,EAAAG,OAMA,IAJA,IAAAS,EAAArI,EAAAqI,SACAC,GAAAD,EAAAA,EAAAxf,OAAA,GAAAwf,EAAA,KAAAT,EAAA,GACAxf,EAAA,EAEAA,EAAAwf,EAAAxf,IACAqf,EAAAld,KAAA8d,EAAA,GAAAjgB,EAAAkgB,GAIA,IAAAjB,EAAAI,EAAAxe,IAAA4e,GACA,MAAA,CACAJ,KAAAA,EACAJ,OAAAA,EACAa,QAAA,SAAAlc,GACA,OAAAgU,EAAAhU,KAiEAuc,CAAAvI,EAAA4H,EAAAC,GA/CA,SAAA7H,GACA,MAAA,CACAyH,KAAAzH,EAAAqI,SACAhB,OAAArH,EAAAqI,SACAH,QAAA,SAAAlc,GACA,OAAAgU,EAAAhU,KA0CAwc,CAAAxI,GAGAoC,EAAApC,EAAAoC,OAAApC,EAAAoC,SAAApC,EAAAqI,SAQA,OAPAN,EAAAV,OA3HA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAAoB,EAAA,EAAA3Q,UAAAjP,aAAA6f,IADA,EAAA,EACA,GACArB,EAFA,EAGAgB,EAHA,EAIAjG,EAJA,EAKA0F,EALA,EAOA,GAAA,iBAAA,IAAAT,EAAA,YAAAf,EAAAe,IAAA,CACA,GAAA,IAAAA,EAAAxe,OAAA,OAAA4f,EAGA,IADA,IAAArgB,EAAAif,EAAAxe,OACAT,EAAAqgB,EAAA5f,OAAAT,IACAif,EAAA9c,KAAAke,EAAArgB,IAEA,OAAAif,EACA,GAAA,mBAAAA,EAgBA,OAAAoB,EAbA,IAFA,IAAAE,EAAA,GACAC,EAAAH,EAAA5f,OACAggB,EAAA,EAAAA,EAAAD,EAAAC,IACAF,EAAApe,KAAA8c,EAAA,CACAjf,EAAAygB,EACAD,UAAAA,EACAE,gBAAAL,EACAJ,OAAAA,EACAjG,MAAAA,EACA0F,eAAAA,KAGA,OAAAa,EA+FAI,CAAAhB,EAAAV,OAAAA,EAAArH,EAAAqI,SAAAjG,EAAA0F,GAEAH,IACAI,EAAAV,OAAAhC,EAAA0C,EAAAV,QACAU,EAAAN,KAAApC,EAAA0C,EAAAN,OAGAM,GAGAiB,eAAA,SAAAjB,EAAAkB,GACA,IAAAC,EAAAnB,EAAAN,KAAAxe,IAAA,SAAA+C,EAAA5D,GACA,MAAA,CAAAqf,KAAAzb,EAAAmd,MAAApB,EAAAV,OAAAjf,MACAghB,OAAAH,GACAI,EAAAH,EAAAjgB,IAAA,SAAA+C,GACA,OAAAA,EAAAyb,OAEA6B,EAAAJ,EAAAjgB,IAAA,SAAA+C,GACA,OAAAA,EAAAmd,QAQA,OANApB,EAAAN,KAAAM,EAAAN,KAAA2B,OAAA,SAAApd,GACA,OAAA,IAAAqd,EAAAE,QAAAvd,KAEA+b,EAAAV,OAAAU,EAAAV,OAAA+B,OAAA,SAAApd,GACA,OAAA,IAAAsd,EAAAC,QAAAvd,KAEA+b,GAGAyB,aAAA,SAAAC,EAAAC,EAAAC,EAAAlE,EAAAmE,EAAAC,GACAH,EAAA1D,KAAA,YAAA2D,GACAlE,EAAAO,KAAA,YAAA4D,GACA,eAAAH,GACAhE,EAAAnF,MAAA,cAAAuJ,IAIAC,aAAA,SAAAlC,EAAAmC,GACAnC,EAAAoC,GAAA,mBAAA,SAAAhe,IA/EA,SAAAie,EAAAje,EAAAya,GACAwD,EAAArhB,KAAA,WAAA6d,EAAAza,GA+EAke,CAAAH,EAAA/d,EAAAnE,QACAmiB,GAAA,kBAAA,SAAAhe,IA7EA,SAAAie,EAAAje,EAAAya,GACAwD,EAAArhB,KAAA,UAAA6d,EAAAza,GA6EAme,CAAAJ,EAAA/d,EAAAnE,QACAmiB,GAAA,eAAA,SAAAhe,IA3EA,SAAAie,EAAAje,EAAAya,GACAwD,EAAArhB,KAAA,YAAA6d,EAAAza,GA2EAoe,CAAAL,EAAA/d,EAAAnE,SAIAwiB,SAAA,SAAAlD,EAAAmD,EAAAhD,EAAAiD,GACA,GAAA,KAAAD,EAAA,CACAnD,EAAAK,UAAA,QAAAF,EAAA,eAEAG,KAAA,CAAA6C,IAAAlD,QAAAjB,OAAA,QAAAH,KAAA,QAAAsB,EAAA,eAEAH,EAAAK,UAAA,QAAAF,EAAA,eAAA7B,KAAA6E,GAEAC,GACApD,EAAAK,UAAA,QAAAF,EAAA,eAAA1e,KAAA4c,EAAA+E,GAGA,IAAAC,EAAArD,EAAAvB,OAAA,IAAA0B,EAAA,eACAmD,EAAAtD,EAAAvB,OAAA,IAAA0B,EAAA,eAAAoD,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,UAAAC,SACA,GACAC,GAAAL,EAAAE,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,UAAA1Q,IACA,GACAuQ,EAAAxE,KAAA,YAAA,aAAA6E,EAAA,IAAAJ,EAAA,OAIAK,iBAAA,CACAhU,OAAAkO,EAAAlO,OACAiU,aAAA/F,EAAA+F,cAGAC,0BAAA,OAEAC,oBAAA,MAGA,SAAApU,IACA,IAAAmJ,EAAAkF,EAAAgG,cACAtE,EAAA,OACAG,EAAA,GACAD,EAAA,GACAE,EAAA,GACAmE,EAAA,EACAvD,EAAA,CAAA,GACAqB,OAAA,EACA5B,EAAA,GACAC,EAAA,GACA8D,GAAA,EACAd,EAAA,GACAe,EAAA3E,EAAAoE,iBACAQ,EAAA5E,EAAAsE,0BACAO,EAAA,GACA1B,EAAA,SACA/B,EAAApB,EAAAuE,oBACAO,OAAA,EACA/B,EAAA,WACA9B,GAAA,EACAV,OAAA,EACAsD,OAAA,EACAkB,EAAAxG,EAAAyG,SAAA,WAAA,UAAA,aAEA,SAAAC,EAAAxE,GACA,IAAAY,EAAArB,EAAAgB,YAAA1H,EAAA2H,EAAAC,EAAAP,EAAAgE,EAAAvU,OAAAwU,GAAAxD,GACAX,EAAAK,UAAA,KAAAC,KAAA,CAAAzH,IAEAoH,QAAAjB,OAAA,KAAAH,KAAA,QAAAsB,EAAA,eAEA2B,GACAvC,EAAAsC,eAAAjB,EAAAkB,GAGA,IAAAS,EAAAvC,EAAAvB,OAAA,IAAA0B,EAAA,eAAAE,UAAA,IAAAF,EAAA,QAAAG,KAAAM,EAAAN,MAEAmE,EAAAlC,EAAAtC,QAAAjB,OAAA,KAAAH,KAAA,QAAAsB,EAAA,QACAsE,EAAAzF,OAAAS,GAAAZ,KAAA,QAAAsB,EAAA,UAEA,IAAAT,EAAAM,EAAAK,UAAA,KAAAF,EAAA,QAAAV,EAAA,IAAAU,EAAA,UAAAG,KAAAM,EAAAN,MAGAf,EAAAoD,aAAA8B,EAAAH,GAEA/B,EAAAmC,OAAAC,aAAAxL,MAAA,UAAA,GAAAnW,SACA0c,EAAAgF,OAAAC,aAAAxL,MAAA,UAAA,GAAAnW,SAEA0c,EAAAA,EAAAkF,MAAAlF,GAEAH,EAAAC,cAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAxB,EAAAiB,EAAAQ,WAAAC,EAAAyE,EAAA7D,EAAAV,OAAAC,EAAAkE,GAGA9B,EAAAkC,EAAAG,MAAArC,GAGA,IAAAsC,EAAAvG,EAAAiF,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,YAEAsB,EAAApF,EAAA6D,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,YAIAS,EAOAvE,EAAAb,KAAA,QAAA,SAAAha,GACA,OAAAsb,EAAA,UAAAS,EAAAG,QAAAlc,KAPA,QAAA4a,EACAC,EAAAvG,MAAA,SAAAyH,EAAAG,SAEArB,EAAAvG,MAAA,OAAAyH,EAAAG,SAQA,IAOAgE,EAPAvC,OAAA,EACAC,OAAA,EACAuC,EAAA,SAAAtC,EAAA,EAAA,UAAAA,EAAA,GAAA,EAGA,aAAAJ,GAEAyC,EAAAF,EAAA/iB,IAAA,SAAA+C,EAAA5D,GACA,OAAA4P,KAAAC,IAAAjM,EAAA4e,OAAAqB,EAAA7jB,GAAAwiB,UAGAjB,EAAA,SAAA3d,EAAA5D,GAEA,MAAA,iBADA+c,EAAAiH,IAAAF,EAAA1hB,MAAA,EAAApC,IACAA,EAAA+iB,GAAA,KAGAvB,EAAA,SAAA5d,EAAA5D,GACA,MAAA,eAAA6jB,EAAA7jB,GAAAsd,MAAAuG,EAAA7jB,GAAA6R,EAAAsR,GAAA,MAAAU,EAAA7jB,GAAAgS,EAAA6R,EAAA7jB,GAAAwiB,OAAA,EAAA,GAAA,MAGA,eAAAnB,IACAE,EAAA,SAAA3d,EAAA5D,GACA,MAAA,aAAAA,GAAA6jB,EAAA7jB,GAAAsd,MAAAyF,GAAA,OAEAvB,EAAA,SAAA5d,EAAA5D,GACA,MAAA,cAAA6jB,EAAA7jB,GAAAsd,MAAAyG,EAAAF,EAAA7jB,GAAA6R,GAAA,iBAAAgS,EAAA7jB,GAAAwiB,OAAAqB,EAAA7jB,GAAAgS,EAAAmR,EAAA,GAAA,MAIA7E,EAAA8C,aAAAC,EAAAC,EAAAC,EAAAlE,EAAAmE,EAAAC,GACAnD,EAAA2D,SAAAlD,EAAAmD,EAAAhD,EAAAiD,GAEAb,EAAAoC,aAAAxL,MAAA,UAAA,GAwJA,OArJAqL,EAAA3L,MAAA,SAAAqM,GACA,OAAAvU,UAAAjP,QACAmX,EAAAqM,EACAV,GAFA3L,GAKA2L,EAAA/D,MAAA,SAAAyE,GACA,OAAAvU,UAAAjP,SACA,EAAAwjB,EAAAxjB,QAAA,GAAAwjB,KACAzE,EAAAyE,GAEAV,GAJA/D,GAOA+D,EAAA1C,WAAA,SAAAoD,GACA,OAAAvU,UAAAjP,QACAogB,EAAAoD,EACAV,GAFA1C,GAKA0C,EAAA/E,MAAA,SAAAyF,EAAArgB,GACA,OAAA8L,UAAAjP,SACA,QAAAwjB,GAAA,UAAAA,GAAA,QAAAA,GAAA,QAAAA,GAAA,iBAAArgB,KACA4a,EAAAyF,EACApF,EAAAjb,GAEA2f,GALA/E,GAQA+E,EAAA5E,WAAA,SAAAsF,GACA,OAAAvU,UAAAjP,QACAke,GAAAsF,EACAV,GAFA5E,GAKA4E,EAAA7E,YAAA,SAAAuF,GACA,OAAAvU,UAAAjP,QACAie,GAAAuF,EACAV,GAFA7E,GAKA6E,EAAA3E,YAAA,SAAAqF,GACA,OAAAvU,UAAAjP,QACAme,GAAAqF,EACAV,GAFA3E,GAKA2E,EAAAR,aAAA,SAAAkB,GACA,OAAAvU,UAAAjP,QACAsiB,GAAAkB,EACAV,GAFAR,GAKAQ,EAAAtE,OAAA,SAAAgF,GACA,OAAAvU,UAAAjP,QACAwe,EAAAgF,EACAV,GAFAtE,GAKAsE,EAAA9B,WAAA,SAAAwC,GACA,OAAAvU,UAAAjP,QACA,SAAAwjB,GAAA,OAAAA,GAAA,UAAAA,IACAxC,EAAAwC,GAEAV,GAJA9B,GAOA8B,EAAAN,OAAA,SAAAgB,GACA,OAAAvU,UAAAjP,QACAwiB,EAAArG,EAAAsH,aAAAD,GACAV,GAFAN,GAKAM,EAAA9D,YAAA,SAAAwE,GACA,OAAAvU,UAAAjP,QACAyiB,EAAAtG,EAAAuH,gBAAAF,GACAV,GAFAA,EAAAN,SAAAvU,OAAAwU,IAKAK,EAAAJ,YAAA,SAAAc,GACA,OAAAvU,UAAAjP,QACA0iB,GAAAc,EACAV,GAFAJ,GAKAI,EAAA7D,eAAA,SAAAuE,GACA,OAAAvU,UAAAjP,QACAif,EAAAuE,EACAV,GAFA7D,GAKA6D,EAAAH,UAAA,SAAAa,GACA,OAAAvU,UAAAjP,QACA2iB,EAAAa,EACAV,GAFAH,GAKAG,EAAAP,SAAA,SAAAiB,GACA,OAAAvU,UAAAjP,SACA,IAAAwjB,IAAA,IAAAA,IACAjB,EAAAiB,GAEAV,GAJAP,GAOAO,EAAAlC,OAAA,SAAA4C,GACA,OAAAvU,UAAAjP,QAEA,eADAwjB,EAAAA,EAAApV,gBACA,YAAAoV,IACA5C,EAAA4C,GAEAV,GALAlC,GAQAkC,EAAAhE,UAAA,SAAA0E,GACA,OAAAvU,UAAAjP,QACA8e,IAAA0E,EACAV,GAFAhE,GAKAgE,EAAArE,YAAA,SAAA+E,GACA,OAAAvU,UAAAjP,QACAye,EAAA+E,EACAV,GAFArE,GAKAqE,EAAArB,MAAA,SAAA+B,GACA,OAAAvU,UAAAjP,QACAyhB,EAAA+B,EACAV,GAFArB,GAKAqB,EAAApB,WAAA,SAAA8B,GACA,OAAAvU,UAAAjP,QACA0hB,EAAA8B,EACAV,GAFApB,GAKAoB,EAAAa,SAAA,SAAAH,GACA,OAAAvU,UAAAjP,QACA2jB,SAAAH,EACAV,GAFAa,UAKAb,EAAA3B,GAAA,WACA,IAAA5gB,EAAAqiB,EAAAzB,GAAA7e,MAAAsgB,EAAA3T,WACA,OAAA1O,IAAAqiB,EAAAE,EAAAviB,GAGAuiB,EAGA,SAAAhhB,IACA,IAAAqV,EAAAkF,EAAAgG,cACAtE,EAAA,OACAG,EAAA,GACAoE,EAAA,EACAvD,EAAA,CAAA,GACAqB,OAAA,EACA5B,EAAA,GACAC,EAAA,GACAgD,EAAA,GACAe,EAAA3E,EAAAoE,iBACAQ,EAAA5E,EAAAsE,0BACAO,EAAA,GACA1B,EAAA,SACA/B,EAAApB,EAAAuE,oBACAO,OAAA,EACA/B,EAAA,WACA9B,GAAA,EACAV,OAAA,EACAsD,OAAA,EACAkB,EAAAxG,EAAAyG,SAAA,WAAA,UAAA,aAEA,SAAAC,EAAAxE,GACA,IAAAY,EAAArB,EAAAgB,YAAA1H,EAAA2H,EAAAC,EAAAP,EAAAgE,EAAAvU,OAAAwU,GAAAxD,GACA2E,EAAAtF,EAAAK,UAAA,KAAAC,KAAA,CAAAzH,IAEAiJ,GACAvC,EAAAsC,eAAAjB,EAAAkB,GAGAwD,EAAArF,QAAAjB,OAAA,KAAAH,KAAA,QAAAsB,EAAA,eAEA,IAAAoC,EAAAvC,EAAAvB,OAAA,IAAA0B,EAAA,eAAAE,UAAA,IAAAF,EAAA,QAAAG,KAAAM,EAAAN,MACAmE,EAAAlC,EAAAtC,QAAAjB,OAAA,KAAAH,KAAA,QAAAsB,EAAA,QACAsE,EAAAzF,OAAAS,GAAAZ,KAAA,QAAAsB,EAAA,UAEA,IAAAT,EAAAM,EAAAK,UAAA,KAAAF,EAAA,QAAAV,EAAA,IAAAU,EAAA,UAGAZ,EAAAoD,aAAA8B,EAAAH,GAEA/B,EAAAmC,OAAAC,aAAAxL,MAAA,UAAA,GAAAnW,SAEA0c,EAAAgF,OAAAC,aAAAxL,MAAA,UAAA,GAAAnW,SACA0c,EAAAA,EAAAkF,MAAAlF,GAGA,SAAAD,GACAF,EAAAC,cAAAC,EAAAC,EAAA,EAAAE,GACAF,EAAAb,KAAA,eAAA+B,EAAAG,UAEAxB,EAAAC,cAAAC,EAAAC,EAAAkB,EAAAG,QAAAH,EAAAG,QAAAH,EAAAG,QAAAjB,GAGA,IAAAxB,EAAAiB,EAAAQ,WAAAC,EAAAyE,EAAA7D,EAAAV,OAAAC,EAAAkE,GAGA9B,EAAAkC,EAAAG,MAAArC,GAIA,IA6BAwC,EAGA9R,EAhCA4R,EAAAvG,EAAAiF,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,YAEAsB,EAAApF,EAAA6D,QAAAzhB,IAAA,SAAA+C,EAAA5D,GACA,IAAAskB,EAAA1gB,EAAA2e,UACAgC,EAAA3M,EAAA+H,EAAAN,KAAArf,IAOA,MALA,SAAAwe,GAAA,eAAA6C,EACAiD,EAAA9B,OAAA8B,EAAA9B,OAAA+B,EACA,SAAA/F,GAAA,aAAA6C,IACAiD,EAAAhH,MAAAgH,EAAAhH,OAEAgH,IAGAE,EAAAzH,EAAAlN,IAAAgU,EAAA,SAAAjgB,GACA,OAAAA,EAAA4e,OAAA5e,EAAAoO,IAEAyS,EAAA1H,EAAAlN,IAAAgU,EAAA,SAAAjgB,GACA,OAAAA,EAAA0Z,MAAA1Z,EAAAiO,IAGA0P,OAAA,EACAC,OAAA,EACAuC,EAAA,SAAAtC,EAAA,EAAA,UAAAA,EAAA,GAAA,EAGA,aAAAJ,GAEAyC,EAAAF,EAAA/iB,IAAA,SAAA+C,EAAA5D,GACA,OAAA4P,KAAAC,IAAAjM,EAAA4e,OAAAqB,EAAA7jB,GAAAwiB,UAEAxQ,EAAA,UAAAwM,GAAA,QAAAA,EAAAqF,EAAA,GAAArB,OAAA,EAAA,EACAjB,EAAA,SAAA3d,EAAA5D,GACA,IAAAwiB,EAAAzF,EAAAiH,IAAAF,EAAA1hB,MAAA,EAAApC,IAEA,MAAA,iBAAAgS,EAAAwQ,EAAAxiB,EAAA+iB,GAAA,KAGAvB,EAAA,SAAA5d,EAAA5D,GACA,MAAA,eAAAykB,EAAAtB,GAAA,iBAAAU,EAAA7jB,GAAAgS,EAAA6R,EAAA7jB,GAAAwiB,OAAA,EAAA,GAAA,MAGA,eAAAnB,GACA,WACAE,EAAA,SAAA3d,EAAA5D,GAKA,MAAA,cAJA+c,EAAAiH,IAAAH,EAAAzhB,MAAA,EAAApC,GAAA,SAAA4D,GACA,OAAAA,EAAA0Z,QAGAtd,EAAA+iB,GAAA,MADA,UAAAvE,GAAA,QAAAA,EAAAgG,EAAA,EAAA,GACA,KAGA,IAAAE,EAAA,QAAAlG,EAAAgG,EAAA,EAAAA,EACAhD,EAAA,SAAA5d,EAAA5D,GACA,MAAA,eAAA6jB,EAAA7jB,GAAAsd,MAAAyG,EAAAF,EAAA7jB,GAAA6R,GAAA,qBAAA6S,EAAAvB,GAAA,KAXA,GAgBA7E,EAAA8C,aAAAC,EAAAC,EAAAC,EAAAlE,EAAAmE,EAAAC,GACAnD,EAAA2D,SAAAlD,EAAAmD,EAAAhD,EAAAiD,GAEAb,EAAAoC,aAAAxL,MAAA,UAAA,GA8HA,OA3HAqL,EAAA3L,MAAA,SAAAqM,GACA,OAAAvU,UAAAjP,QACAmX,EAAAqM,EACAV,GAFA3L,GAKA2L,EAAA/D,MAAA,SAAAyE,GACA,OAAAvU,UAAAjP,SACA,EAAAwjB,EAAAxjB,QAAA,GAAAwjB,KACAzE,EAAAyE,GAEAV,GAJA/D,GAOA+D,EAAA1C,WAAA,SAAAoD,GACA,OAAAvU,UAAAjP,QACAogB,EAAAoD,EACAV,GAFA1C,GAKA0C,EAAA/E,MAAA,SAAAyF,EAAArgB,GACA,OAAA8L,UAAAjP,QACA,QAAAwjB,GAAA,UAAAA,GAAA,QAAAA,IACAzF,EAAAyF,EACApF,EAAAjb,GAEA2f,GALA/E,GAQA+E,EAAA5E,WAAA,SAAAsF,GACA,OAAAvU,UAAAjP,QACAke,GAAAsF,EACAV,GAFA5E,GAKA4E,EAAAR,aAAA,SAAAkB,GACA,OAAAvU,UAAAjP,QACAsiB,GAAAkB,EACAV,GAFAR,GAKAQ,EAAAtE,OAAA,SAAAgF,GACA,OAAAvU,UAAAjP,QACAwe,EAAAgF,EACAV,GAFAtE,GAKAsE,EAAA9B,WAAA,SAAAwC,GACA,OAAAvU,UAAAjP,QACA,SAAAwjB,GAAA,OAAAA,GAAA,UAAAA,IACAxC,EAAAwC,GAEAV,GAJA9B,GAOA8B,EAAAN,OAAA,SAAAgB,GACA,OAAAvU,UAAAjP,QACAwiB,EAAArG,EAAAsH,aAAAD,GACAV,GAFAN,GAKAM,EAAA9D,YAAA,SAAAwE,GACA,OAAAvU,UAAAjP,QACAyiB,EAAAtG,EAAAuH,gBAAAF,GACAV,GAFAA,EAAAN,SAAAvU,OAAAwU,IAKAK,EAAAJ,YAAA,SAAAc,GACA,OAAAvU,UAAAjP,QACA0iB,GAAAc,EACAV,GAFAJ,GAKAI,EAAA7D,eAAA,SAAAuE,GACA,OAAAvU,UAAAjP,QACAif,EAAAuE,EACAV,GAFA7D,GAKA6D,EAAAH,UAAA,SAAAa,GACA,OAAAvU,UAAAjP,QACA2iB,EAAAa,EACAV,GAFAH,GAKAG,EAAAlC,OAAA,SAAA4C,GACA,OAAAvU,UAAAjP,QAEA,eADAwjB,EAAAA,EAAApV,gBACA,YAAAoV,IACA5C,EAAA4C,GAEAV,GALAlC,GAQAkC,EAAAhE,UAAA,SAAA0E,GACA,OAAAvU,UAAAjP,QACA8e,IAAA0E,EACAV,GAFAhE,GAKAgE,EAAArE,YAAA,SAAA+E,GACA,OAAAvU,UAAAjP,QACAye,EAAA+E,EACAV,GAFArE,GAKAqE,EAAArB,MAAA,SAAA+B,GACA,OAAAvU,UAAAjP,QACAyhB,EAAA+B,EACAV,GAFArB,GAKAqB,EAAApB,WAAA,SAAA8B,GACA,OAAAvU,UAAAjP,QACA0hB,EAAA8B,EACAV,GAFApB,GAKAoB,EAAA3B,GAAA,WACA,IAAA5gB,EAAAqiB,EAAAzB,GAAA7e,MAAAsgB,EAAA3T,WACA,OAAA1O,IAAAqiB,EAAAE,EAAAviB,GAGAuiB,EAGA,SAAAoB,IACA,IAAA/M,EAAAkF,EAAAgG,cACAtE,EAAA,OAIAuE,EAAA,EACAvD,EAAA,CAAA,GACAqB,OAAA,EACA5B,EAAA,GACAC,EAAA,GACAgD,EAAA,GACAe,EAAA3E,EAAAoE,iBACAQ,EAAA5E,EAAAsE,0BACAnB,EAAA,SACA0B,EAAA,GACAzD,EAAApB,EAAAuE,oBACAO,OAAA,EACA/B,EAAA,WACA9B,GAAA,EACA4C,OAAA,EACAkB,EAAAxG,EAAAyG,SAAA,WAAA,UAAA,aAEA,SAAAC,EAAAxE,GACA,IAAAY,EAAArB,EAAAgB,YAAA1H,EAAA2H,EAAAC,EAAAP,EAAAgE,EAAAvU,OAAAwU,GAAAxD,GACA2E,EAAAtF,EAAAK,UAAA,KAAAC,KAAA,CAAAzH,IAEAiJ,GACAvC,EAAAsC,eAAAjB,EAAAkB,GAGAwD,EAAArF,QAAAjB,OAAA,KAAAH,KAAA,QAAAsB,EAAA,eAEA,IAAAoC,EAAAvC,EAAAvB,OAAA,IAAA0B,EAAA,eAAAE,UAAA,IAAAF,EAAA,QAAAG,KAAAM,EAAAN,MACAmE,EAAAlC,EAAAtC,QAAAjB,OAAA,KAAAH,KAAA,QAAAsB,EAAA,QACAsE,EAAAzF,OAAAS,GAAAZ,KAAA,QAAAsB,EAAA,UAEA,IAAAT,EAAAM,EAAAK,UAAA,KAAAF,EAAA,QAAAV,EAAA,IAAAU,EAAA,UAGAZ,EAAAoD,aAAA8B,EAAAH,GAGA/B,EAAAmC,OAAAC,aAAAxL,MAAA,UAAA,GAAAnW,SACA0c,EAAAgF,OAAAC,aAAAxL,MAAA,UAAA,GAAAnW,SACA0c,EAAAA,EAAAkF,MAAAlF,GAEAH,EAAAC,cAAAC,EAAAC,EA3CA,GADA,GAEA,GA0CAkB,EAAAG,SACA,IAAAzC,EAAAiB,EAAAQ,WAAAC,EAAAyE,EAAA7D,EAAAV,OAAAC,EAAAkE,GAGA9B,EAAAkC,EAAAG,MAAArC,GAGA,IAqBAwC,EArBAF,EAAAvG,EAAAiF,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,YAEAsB,EAAApF,EAAA6D,QAAAzhB,IAAA,SAAA+C,GACA,OAAAA,EAAA2e,YAGAiC,EAAAzH,EAAAlN,IAAAgU,EAAA,SAAAjgB,GACA,OAAAA,EAAA4e,SAEAiC,EAAA1H,EAAAlN,IAAAgU,EAAA,SAAAjgB,GACA,OAAAA,EAAA0Z,QAGAiE,OAAA,EACAC,OAAA,EACAuC,EAAA,SAAAtC,EAAA,EAAA,UAAAA,EAAA,GAAA,EAGA,aAAAJ,GAEAyC,EAAAF,EAAA/iB,IAAA,SAAA+C,EAAA5D,GACA,OAAA4P,KAAAC,IAAA2U,EAAA5gB,EAAA4e,UAGAjB,EAAA,SAAA3d,EAAA5D,GAEA,MAAA,iBADA+c,EAAAiH,IAAAF,EAAA1hB,MAAA,EAAApC,IACAA,EAAA+iB,GAAA,MAEAvB,EAAA,SAAA5d,EAAA5D,GACA,MAAA,eAAAykB,EAAAtB,GAAA,qBAAAU,EAAA7jB,GAAAgS,EAAA6R,EAAA7jB,GAAAwiB,OAAA,EAAA,GAAA,MAGA,eAAAnB,IACAE,EAAA,SAAA3d,EAAA5D,GACA,MAAA,cAAAA,GAAAykB,EAAA1B,GAAA,OAEAvB,EAAA,SAAA5d,EAAA5D,GACA,MAAA,eAAA6jB,EAAA7jB,GAAAsd,MAAAyG,EAAAF,EAAA7jB,GAAA6R,GAAA,qBAAA2S,EAAArB,GAAA,MAIA7E,EAAA8C,aAAAC,EAAAC,EAAAC,EAAAlE,EAAAmE,EAAAC,GACAnD,EAAA2D,SAAAlD,EAAAmD,EAAAhD,EAAAiD,GACAb,EAAAoC,aAAAxL,MAAA,UAAA,GA+GA,OA5GAqL,EAAA3L,MAAA,SAAAqM,GACA,OAAAvU,UAAAjP,QACAmX,EAAAqM,EACAV,GAFA3L,GAKA2L,EAAA/D,MAAA,SAAAyE,GACA,OAAAvU,UAAAjP,SACA,EAAAwjB,EAAAxjB,QAAA,GAAAwjB,KACAzE,EAAAyE,GAEAV,GAJA/D,GAOA+D,EAAA1C,WAAA,SAAAoD,GACA,OAAAvU,UAAAjP,QACAogB,EAAAoD,EACAV,GAFA1C,GAKA0C,EAAAR,aAAA,SAAAkB,GACA,OAAAvU,UAAAjP,QACAsiB,GAAAkB,EACAV,GAFAR,GAKAQ,EAAAtE,OAAA,SAAAgF,GACA,OAAAvU,UAAAjP,QACAwe,EAAAgF,EACAV,GAFAtE,GAKAsE,EAAA9B,WAAA,SAAAwC,GACA,OAAAvU,UAAAjP,QACA,SAAAwjB,GAAA,OAAAA,GAAA,UAAAA,IACAxC,EAAAwC,GAEAV,GAJA9B,GAOA8B,EAAAN,OAAA,SAAAgB,GACA,OAAAvU,UAAAjP,QACAwiB,EAAArG,EAAAsH,aAAAD,GACAV,GAFAN,GAKAM,EAAA9D,YAAA,SAAAwE,GACA,OAAAvU,UAAAjP,QACAyiB,EAAAtG,EAAAuH,gBAAAF,GACAV,GAFAA,EAAAN,SAAAvU,OAAAwU,IAKAK,EAAAJ,YAAA,SAAAc,GACA,OAAAvU,UAAAjP,QACA0iB,GAAAc,EACAV,GAFAJ,GAKAI,EAAA7D,eAAA,SAAAuE,GACA,OAAAvU,UAAAjP,QACAif,EAAAuE,EACAV,GAFA7D,GAKA6D,EAAAH,UAAA,SAAAa,GACA,OAAAvU,UAAAjP,QACA2iB,EAAAa,EACAV,GAFAH,GAKAG,EAAAlC,OAAA,SAAA4C,GACA,OAAAvU,UAAAjP,QAEA,eADAwjB,EAAAA,EAAApV,gBACA,YAAAoV,IACA5C,EAAA4C,GAEAV,GALAlC,GAQAkC,EAAAhE,UAAA,SAAA0E,GACA,OAAAvU,UAAAjP,QACA8e,IAAA0E,EACAV,GAFAhE,GAKAgE,EAAArE,YAAA,SAAA+E,GACA,OAAAvU,UAAAjP,QACAye,EAAA+E,EACAV,GAFArE,GAKAqE,EAAArB,MAAA,SAAA+B,GACA,OAAAvU,UAAAjP,QACAyhB,EAAA+B,EACAV,GAFArB,GAKAqB,EAAApB,WAAA,SAAA8B,GACA,OAAAvU,UAAAjP,QACA0hB,EAAA8B,EACAV,GAFApB,GAKAoB,EAAA3B,GAAA,WACA,IAAA5gB,EAAAqiB,EAAAzB,GAAA7e,MAAAsgB,EAAA3T,WACA,OAAA1O,IAAAqiB,EAAAE,EAAAviB,GAGAuiB,EAGA,IAgBAqB,EAAA,CACAC,gBAjBA,SAAAC,GACA,IAAA9kB,EAAA8kB,EAAA9kB,EACAwgB,EAAAsE,EAAAtE,UACAE,EAAAoE,EAAApE,gBACAhB,EAAAoF,EAAApF,eAEA,OAAA,IAAA1f,EAEA,aADA0gB,EAAA1gB,GAAAwY,MAAA,IAAAkH,EAAA,KACA,GACA1f,IAAAwgB,EAAA,EACAE,EAAA1gB,GAAAwY,MAAA,IAAAkH,EAAA,KACA,GAAA,WAEAgB,EAAA1gB,KAOA8V,EAAA,CACAiP,YAAAtW,EACAuW,WAAAziB,EACA0iB,aAAAN,EACAC,cAAAA,GAGA1lB,EAAA6lB,YAAAtW,EACAvP,EAAA8lB,WAAAziB,EACArD,EAAA+lB,aAAAN,EACAzlB,EAAA0lB,cAAAA,EACA1lB,EAAA,QAAA4W,EAEAhS,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,KAv/BA,iBAAA9B,QAAA,IAAAC,EAAA6E,EAAA9E,EAAAgB,EAAA,gBAAAA,EAAA,aAAAA,EAAA,eAAAA,EAAA,YAAAA,EAAA,aAEA8D,EAAAzE,EAAA2lB,YAAA3lB,EAAA2lB,aAAA,GAAA3lB,EAAAod,YAAApd,EAAAqd,SAAArd,EAAAsd,WAAAtd,EAAAud,QAAAvd,EAAAwd,yGCFA,IAAAxd,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAEA,SAAAqgB,EAAAnf,EAAAuD,GACA,OAAAvD,EAAAuD,GAAA,EAAAA,EAAAvD,EAAA,EAAAuD,GAAAvD,EAAA,EAAAiP,IAGA,SAAA8V,EAAAC,GAEA,OADA,IAAAA,EAAA3kB,SAAA2kB,EAyBA,SAAAnmB,GACA,OAAA,SAAA2E,EAAAiO,GACA,OAAA0N,EAAAtgB,EAAA2E,GAAAiO,IA3BAwT,CAAAD,IACA,CACAE,KAAA,SAAAllB,EAAAyR,EAAA0T,EAAAC,GAGA,IAFA,MAAAD,IAAAA,EAAA,GACA,MAAAC,IAAAA,EAAAplB,EAAAK,QACA8kB,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAJ,EAAAhlB,EAAAqlB,GAAA5T,GAAA,EAAA0T,EAAA,EAAAE,EACAD,EAAAC,EAEA,OAAAF,GAEAG,MAAA,SAAAtlB,EAAAyR,EAAA0T,EAAAC,GAGA,IAFA,MAAAD,IAAAA,EAAA,GACA,MAAAC,IAAAA,EAAAplB,EAAAK,QACA8kB,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACA,EAAAJ,EAAAhlB,EAAAqlB,GAAA5T,GAAA2T,EAAAC,EACAF,EAAA,EAAAE,EAEA,OAAAF,IAWA,IAAAI,EAAAR,EAAA5F,GACAqG,EAAAD,EAAAD,MACAG,EAAAF,EAAAL,KAMA,SAAAnQ,EAAAtD,GACA,OAAA,OAAAA,EAAAxC,KAAAwC,EAGA,SAAAiU,EAAA9iB,EAAA/D,GACA,IAEAmB,EACAwD,EAHA/D,EAAAmD,EAAAvC,OACAkO,EAAA,EAGAuB,EAAA,EACAlQ,GAAA,EACA+lB,EAAA,EAEA,GAAA,MAAA9mB,EACA,OAAAe,EAAAH,GACAgR,MAAAzQ,EAAA+U,EAAAnS,EAAAhD,OAGAkQ,IAFAtM,EAAAxD,EAAAuO,IAEAvO,GADAuO,GAAA/K,IAAAmiB,UAOA,OAAA/lB,EAAAH,GACAgR,MAAAzQ,EAAA+U,EAAAlW,EAAA+D,EAAAhD,GAAAA,EAAAgD,OAGAkN,IAFAtM,EAAAxD,EAAAuO,IAEAvO,GADAuO,GAAA/K,IAAAmiB,KAMA,GAAA,EAAAA,EAAA,OAAA7V,GAAA6V,EAAA,GAGA,SAAAC,EAAAhjB,EAAA/D,GACA,IAAAwE,EAAAqiB,EAAA9iB,EAAA/D,GACA,OAAAwE,EAAAmM,KAAA2C,KAAA9O,GAAAA,EAGA,SAAAwiB,EAAAjjB,EAAA/D,GACA,IAEAmB,EACAuD,EACA1D,EAJAD,GAAA,EACAH,EAAAmD,EAAAvC,OAKA,GAAA,MAAAxB,EAAA,CACA,OAAAe,EAAAH,GAAA,GAAA,OAAA8D,EAAAX,EAAAhD,KAAA2D,GAAAA,EAAA,CAAAvD,EAAAH,EAAA0D,EAAA,MACA,OAAA3D,EAAAH,GAAA,OAAA8D,EAAAX,EAAAhD,MACA2D,EAAAvD,IAAAA,EAAAuD,GACA1D,EAAA0D,IAAA1D,EAAA0D,QAIA,CACA,OAAA3D,EAAAH,GAAA,GAAA,OAAA8D,EAAA1E,EAAA+D,EAAAhD,GAAAA,EAAAgD,KAAAW,GAAAA,EAAA,CAAAvD,EAAAH,EAAA0D,EAAA,MACA,OAAA3D,EAAAH,GAAA,OAAA8D,EAAA1E,EAAA+D,EAAAhD,GAAAA,EAAAgD,MACAW,EAAAvD,IAAAA,EAAAuD,GACA1D,EAAA0D,IAAA1D,EAAA0D,IAIA,MAAA,CAAAvD,EAAAH,GAGA,IAAA+C,EAAA7B,MAAAQ,UAEAS,EAAAY,EAAAZ,MACAvB,EAAAmC,EAAAnC,IAEA,SAAAmT,EAAAnC,GACA,OAAA,WACA,OAAAA,GAIA,SAAA2E,EAAA3E,GACA,OAAAA,EAGA,SAAAmI,EAAAzF,EAAA2R,EAAAC,GACA5R,GAAAA,EAAA2R,GAAAA,EAAAC,GAAAtmB,EAAA6P,UAAAjP,QAAA,GAAAylB,EAAA3R,EAAAA,EAAA,EAAA,GAAA1U,EAAA,EAAA,GAAAsmB,EAMA,IAJA,IAAAnmB,GAAA,EACAH,EAAA,EAAA+P,KAAAC,IAAA,EAAAD,KAAAwW,MAAAF,EAAA3R,GAAA4R,IACAnM,EAAA,IAAA7Y,MAAAtB,KAEAG,EAAAH,GACAma,EAAAha,GAAAuU,EAAAvU,EAAAmmB,EAGA,OAAAnM,EAGA,IAAAqM,EAAAzW,KAAA2C,KAAA,IACA+T,EAAA1W,KAAA2C,KAAA,IACAgU,EAAA3W,KAAA2C,KAAA,GACA,SAAAyN,EAAAzL,EAAA2R,EAAAM,GACA,IAAAL,EAAAM,EAAAlS,EAAA2R,EAAAM,GACA,OAAAxM,EACApK,KAAAwW,KAAA7R,EAAA4R,GAAAA,EACAvW,KAAAkE,MAAAoS,EAAAC,GAAAA,EAAAA,EAAA,EACAA,GAIA,SAAAM,EAAAlS,EAAA2R,EAAAM,GACA,IAAAE,EAAA9W,KAAA+W,IAAAT,EAAA3R,GAAA3E,KAAAC,IAAA,EAAA2W,GACAI,EAAAhX,KAAAe,IAAA,GAAAf,KAAAkE,MAAAlE,KAAAuL,IAAAuL,GAAA9W,KAAAiX,OACAC,EAAAJ,EAAAE,EAIA,OAHAP,GAAAS,EAAAF,GAAA,GACAN,GAAAQ,EAAAF,GAAA,EACAL,GAAAO,IAAAF,GAAA,GACAV,EAAA3R,GAAAqS,EAAAA,EAGA,SAAAG,EAAA1kB,GACA,OAAAuN,KAAAwW,KAAAxW,KAAAuL,IAAA9Y,EAAA5B,QAAAmP,KAAAoX,KAAA,EAmEA,SAAAC,EAAAjkB,EAAAzC,EAAAtB,GAEA,GADA,MAAAA,IAAAA,EAAAkW,GACAtV,EAAAmD,EAAAvC,OAAA,CACA,IAAAF,GAAAA,IAAA,GAAAV,EAAA,EAAA,OAAAZ,EAAA+D,EAAA,GAAA,EAAAA,GACA,GAAA,GAAAzC,EAAA,OAAAtB,EAAA+D,EAAAnD,EAAA,GAAAA,EAAA,EAAAmD,GACA,IAAAnD,EACAoQ,GAAApQ,EAAA,GAAAU,EACAP,EAAA4P,KAAAkE,MAAA7D,GACA7P,GAAAnB,EAAA+D,EAAAhD,GAAAA,EAAAgD,GAEA,OAAA5C,IADAnB,EAAA+D,EAAAhD,EAAA,GAAAA,EAAA,EAAAgD,GACA5C,IAAA6P,EAAAjQ,IAwFA,SAAA8P,EAAA9M,EAAA/D,GACA,IAEAmB,EACAuD,EAHA3D,GAAA,EACAH,EAAAmD,EAAAvC,OAIA,GAAA,MAAAxB,EAAA,CACA,OAAAe,EAAAH,GAAA,GAAA,OAAA8D,EAAAX,EAAAhD,KAAA2D,GAAAA,EAAA,CAAAvD,EAAAuD,EAAA,MACA,OAAA3D,EAAAH,GAAA,OAAA8D,EAAAX,EAAAhD,KAAA2D,EAAAvD,IAAAA,EAAAuD,OAGA,CACA,OAAA3D,EAAAH,GAAA,GAAA,OAAA8D,EAAA1E,EAAA+D,EAAAhD,GAAAA,EAAAgD,KAAAW,GAAAA,EAAA,CAAAvD,EAAAuD,EAAA,MACA,OAAA3D,EAAAH,GAAA,OAAA8D,EAAA1E,EAAA+D,EAAAhD,GAAAA,EAAAgD,KAAAW,EAAAvD,IAAAA,EAAAuD,GAGA,OAAAvD,EA8DA,SAAA8mB,EAAApO,GACA,KAAAjZ,EAAAiZ,EAAArY,QAAA,MAAA,GACA,IAAA,IAAAT,GAAA,EAAA2O,EAAAmB,EAAAgJ,EAAArY,GAAAymB,EAAA,IAAA/lB,MAAAwN,KAAA3O,EAAA2O,GACA,IAAA,IAAA9O,EAAAkmB,GAAA,EAAAoB,EAAAD,EAAAlnB,GAAA,IAAAmB,MAAAtB,KAAAkmB,EAAAlmB,GACAsnB,EAAApB,GAAAjN,EAAAiN,GAAA/lB,GAGA,OAAAknB,EAGA,SAAAzmB,EAAAmD,GACA,OAAAA,EAAAnD,OAOAvB,EAAAkoB,OAAAxB,EACA1mB,EAAA0mB,YAAAA,EACA1mB,EAAA2mB,WAAAA,EACA3mB,EAAAqgB,UAAAA,EACArgB,EAAAimB,SAAAA,EACAjmB,EAAAmoB,WArYA,SAAAjnB,EAAAuD,GACA,OAAAA,EAAAvD,GAAA,EAAAA,EAAAuD,EAAA,EAAAvD,GAAAuD,EAAA,EAAA0L,KAqYAnQ,EAAA8mB,UAAAA,EACA9mB,EAAA+mB,OAAAA,EACA/mB,EAAAooB,UA1QA,WACA,IAAAtmB,EAAAwV,EACAyJ,EAAAgG,EACAsB,EAAAR,EAEA,SAAAO,EAAAjI,GACA,IAAArf,EAEA6R,EADAhS,EAAAwf,EAAA5e,OAEA4B,EAAA,IAAAlB,MAAAtB,GAEA,IAAAG,EAAA,EAAAA,EAAAH,IAAAG,EACAqC,EAAArC,GAAAgB,EAAAqe,EAAArf,GAAAA,EAAAqf,GAGA,IAAAmI,EAAAvH,EAAA5d,GACAolB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAJ,EAAAllB,EAAAolB,EAAAC,GAGAvmB,MAAAC,QAAAumB,KAAAA,EAAA3H,EAAAyH,EAAAC,EAAAC,IAIA,IADA,IAAAhZ,EAAAgZ,EAAAlnB,OACAknB,EAAA,IAAAF,GAAAE,EAAAC,UAAAjZ,EACA,KAAAgZ,EAAAhZ,EAAA,IAAA+Y,GAAAC,EAAArQ,QAAA3I,EAEA,IACAkZ,EADAC,EAAA,IAAA3mB,MAAAwN,EAAA,GAIA,IAAA3O,EAAA,EAAAA,GAAA2O,IAAA3O,GACA6nB,EAAAC,EAAA9nB,GAAA,IACAynB,GAAA,EAAAznB,EAAA2nB,EAAA3nB,EAAA,GAAAynB,EACAI,EAAAH,GAAA1nB,EAAA2O,EAAAgZ,EAAA3nB,GAAA0nB,EAIA,IAAA1nB,EAAA,EAAAA,EAAAH,IAAAG,EAEAynB,IADA5V,EAAAxP,EAAArC,KACA6R,GAAA6V,GACAI,EAAAlC,EAAA+B,EAAA9V,EAAA,EAAAlD,IAAAxM,KAAAkd,EAAArf,IAIA,OAAA8nB,EAeA,OAZAR,EAAAtmB,MAAA,SAAAijB,GACA,OAAAvU,UAAAjP,QAAAO,EAAA,mBAAAijB,EAAAA,EAAAjQ,EAAAiQ,GAAAqD,GAAAtmB,GAGAsmB,EAAArH,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAwf,EAAA,mBAAAgE,EAAAA,EAAAjQ,EAAA,CAAAiQ,EAAA,GAAAA,EAAA,KAAAqD,GAAArH,GAGAqH,EAAAS,WAAA,SAAA9D,GACA,OAAAvU,UAAAjP,QAAA8mB,EAAA,mBAAAtD,EAAAA,EAAA9iB,MAAAC,QAAA6iB,GAAAjQ,EAAA5R,EAAA5B,KAAAyjB,IAAAjQ,EAAAiQ,GAAAqD,GAAAC,GAGAD,GA8MApoB,EAAA8oB,0BA9LA,SAAA3lB,EAAAyN,EAAAD,GAEA,OADAxN,EAAAxB,EAAAL,KAAA6B,EAAA8S,GAAA/R,KAAAmc,GACA3P,KAAAwW,MAAAvW,EAAAC,IAAA,GAAAmX,EAAA5kB,EAAA,KAAA4kB,EAAA5kB,EAAA,MAAAuN,KAAAe,IAAAtO,EAAA5B,QAAA,EAAA,MA6LAvB,EAAA+oB,eA1LA,SAAA5lB,EAAAyN,EAAAD,GACA,OAAAD,KAAAwW,MAAAvW,EAAAC,IAAA,IAAAkW,EAAA3jB,GAAAuN,KAAAe,IAAAtO,EAAA5B,QAAA,EAAA,MA0LAvB,EAAAgpB,iBAAAnB,EACA7nB,EAAA2Q,IAxLA,SAAA7M,EAAA/D,GACA,IAEAmB,EACAuD,EAHA3D,GAAA,EACAH,EAAAmD,EAAAvC,OAIA,GAAA,MAAAxB,EAAA,CACA,OAAAe,EAAAH,GAAA,GAAA,OAAA8D,EAAAX,EAAAhD,KAAA2D,GAAAA,EAAA,CAAAvD,EAAAuD,EAAA,MACA,OAAA3D,EAAAH,GAAA,OAAA8D,EAAAX,EAAAhD,KAAAI,EAAAuD,IAAAvD,EAAAuD,OAGA,CACA,OAAA3D,EAAAH,GAAA,GAAA,OAAA8D,EAAA1E,EAAA+D,EAAAhD,GAAAA,EAAAgD,KAAAW,GAAAA,EAAA,CAAAvD,EAAAuD,EAAA,MACA,OAAA3D,EAAAH,GAAA,OAAA8D,EAAA1E,EAAA+D,EAAAhD,GAAAA,EAAAgD,KAAA5C,EAAAuD,IAAAvD,EAAAuD,GAGA,OAAAvD,GAyKAlB,EAAAipB,KAtKA,SAAAnlB,EAAA/D,GACA,IAEAmB,EAFA8P,EAAA,EACArQ,EAAAmD,EAAAvC,OAEAT,GAAA,EACA+lB,EAAAlmB,EAEA,GAAA,MAAAZ,EACA,OAAAe,EAAAH,GAAAgR,MAAAzQ,EAAA+U,EAAAnS,EAAAhD,OAAA+lB,EAAA7V,GAAA9P,OAIA,OAAAJ,EAAAH,GAAAgR,MAAAzQ,EAAA+U,EAAAlW,EAAA+D,EAAAhD,GAAAA,EAAAgD,OAAA+iB,EAAA7V,GAAA9P,EAGA,GAAA2lB,EAAA,OAAA7V,EAAA6V,GAwJA7mB,EAAAkpB,OArJA,SAAAplB,EAAA/D,GACA,IAEAmB,EAFAioB,EAAA,GACAxoB,EAAAmD,EAAAvC,OAEAT,GAAA,EAEA,GAAA,MAAAf,EACA,OAAAe,EAAAH,GAAAgR,MAAAzQ,EAAA+U,EAAAnS,EAAAhD,MAAAqoB,EAAAlmB,KAAA/B,QAIA,OAAAJ,EAAAH,GAAAgR,MAAAzQ,EAAA+U,EAAAlW,EAAA+D,EAAAhD,GAAAA,EAAAgD,MAAAqlB,EAAAlmB,KAAA/B,GAGA,OAAA6mB,EAAAoB,EAAAjlB,KAAAmc,GAAA,KAwIArgB,EAAAykB,MArIA,SAAA2E,GAQA,IAPA,IACA3Z,EAGA4Z,EACAvlB,EALAnD,EAAAyoB,EAAA7nB,OAEAT,GAAA,EACA+lB,EAAA,IAIA/lB,EAAAH,GAAAkmB,GAAAuC,EAAAtoB,GAAAS,OAGA,IAFA8nB,EAAA,IAAApnB,MAAA4kB,GAEA,KAAAlmB,GAGA,IADA8O,GADA3L,EAAAslB,EAAAzoB,IACAY,OACA,KAAAkO,GACA4Z,IAAAxC,GAAA/iB,EAAA2L,GAIA,OAAA4Z,GAmHArpB,EAAA4Q,IAAAA,EACA5Q,EAAAspB,MA9FA,SAAAxlB,GAEA,IADA,IAAAhD,EAAA,EAAAH,EAAAmD,EAAAvC,OAAA,EAAAF,EAAAyC,EAAA,GAAAwlB,EAAA,IAAArnB,MAAAtB,EAAA,EAAA,EAAAA,GACAG,EAAAH,GAAA2oB,EAAAxoB,GAAA,CAAAO,EAAAA,EAAAyC,IAAAhD,IACA,OAAAwoB,GA4FAtpB,EAAAupB,QAzFA,SAAAzlB,EAAA0lB,GAEA,IADA,IAAA1oB,EAAA0oB,EAAAjoB,OAAAkoB,EAAA,IAAAxnB,MAAAnB,GACAA,KAAA2oB,EAAA3oB,GAAAgD,EAAA0lB,EAAA1oB,IACA,OAAA2oB,GAuFAzpB,EAAA+nB,SAAAA,EACA/nB,EAAA8a,MAAAA,EACA9a,EAAA0pB,KAtFA,SAAA5lB,EAAAoiB,GACA,GAAAvlB,EAAAmD,EAAAvC,OAAA,CACA,IACAZ,EAEAgpB,EAHA7oB,EAAA,EAEA+lB,EAAA,EAEA+C,EAAA9lB,EAAA+iB,GAIA,IAFAX,EAAAA,GAAA7F,IAEAvf,EAAAH,IAAAulB,EAAAyD,EAAA7lB,EAAAhD,GAAA8oB,GAAA,GAAA,IAAA1D,EAAA0D,EAAAA,MAAAA,EAAAD,EAAA9C,EAAA/lB,GAEA,OAAA,IAAAolB,EAAA0D,EAAAA,GAAA/C,OAAA,IA2EA7mB,EAAA6pB,QAxEA,SAAA/lB,EAAAgmB,EAAAC,GAKA,IAJA,IACAnpB,EACAE,EAFA2O,GAAA,MAAAsa,EAAAjmB,EAAAvC,OAAAwoB,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIAra,GACA3O,EAAA4P,KAAAsZ,SAAAva,IAAA,EACA7O,EAAAkD,EAAA2L,EAAAqa,GACAhmB,EAAA2L,EAAAqa,GAAAhmB,EAAAhD,EAAAgpB,GACAhmB,EAAAhD,EAAAgpB,GAAAlpB,EAGA,OAAAkD,GA6DA9D,EAAA8kB,IA1DA,SAAAhhB,EAAA/D,GACA,IAEAmB,EAFA8P,EAAA,EACArQ,EAAAmD,EAAAvC,OAEAT,GAAA,EAEA,GAAA,MAAAf,EACA,OAAAe,EAAAH,IAAAO,GAAA4C,EAAAhD,MAAAkQ,GAAA9P,QAIA,OAAAJ,EAAAH,IAAAO,GAAAnB,EAAA+D,EAAAhD,GAAAA,EAAAgD,MAAAkN,GAAA9P,GAGA,OAAA8P,GA6CAhR,EAAA8gB,MAAAA,EACA9gB,EAAAunB,SAAAA,EACAvnB,EAAAgoB,UAAAA,EACAhoB,EAAA4mB,SAAAA,EACA5mB,EAAAiqB,IAhCA,WACA,OAAAjC,EAAAxX,YAiCA5L,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IA3cAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,4BCHA,IAAA1E,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAEA,IAAAkqB,EAAA,CAAApoB,MAAA,cAEA,SAAAsiB,IACA,IAAA,IAAAxjB,EAAAE,EAAA,EAAAH,EAAA6P,UAAAjP,OAAAwjB,EAAA,GAAAjkB,EAAAH,IAAAG,EAAA,CACA,KAAAF,EAAA4P,UAAA1P,GAAA,KAAAF,KAAAmkB,EAAA,MAAA,IAAA5jB,MAAA,iBAAAP,GACAmkB,EAAAnkB,GAAA,GAEA,OAAA,IAAAupB,EAAApF,GAGA,SAAAoF,EAAApF,GACAxkB,KAAAwkB,EAAAA,EAqDA,SAAAniB,EAAA6d,EAAA2J,GACA,IAAA,IAAArpB,EAAAD,EAAA,EAAAH,EAAA8f,EAAAlf,OAAAT,EAAAH,IAAAG,EACA,IAAAC,EAAA0f,EAAA3f,IAAAspB,OAAAA,EACA,OAAArpB,EAAAe,MAKA,SAAAE,EAAAye,EAAA2J,EAAAC,GACA,IAAA,IAAAvpB,EAAA,EAAAH,EAAA8f,EAAAlf,OAAAT,EAAAH,IAAAG,EACA,GAAA2f,EAAA3f,GAAAspB,OAAAA,EAAA,CACA3J,EAAA3f,GAAAopB,EAAAzJ,EAAAA,EAAAvd,MAAA,EAAApC,GAAAwpB,OAAA7J,EAAAvd,MAAApC,EAAA,IACA,MAIA,OADA,MAAAupB,GAAA5J,EAAAxd,KAAA,CAAAmnB,KAAAA,EAAAtoB,MAAAuoB,IACA5J,EAzDA0J,EAAA1nB,UAAA2hB,EAAA3hB,UAAA,CACAC,YAAAynB,EACAzH,GAAA,SAAA6H,EAAAF,GACA,IAEAzpB,EAFAmkB,EAAAxkB,KAAAwkB,EACAyF,EAbA,SAAAC,EAAAC,GACA,OAAAD,EAAA/a,OAAA4J,MAAA,SAAA3X,IAAA,SAAAf,GACA,IAAAwpB,EAAA,GAAAtpB,EAAAF,EAAAqhB,QAAA,KAEA,GADA,GAAAnhB,IAAAspB,EAAAxpB,EAAAsC,MAAApC,EAAA,GAAAF,EAAAA,EAAAsC,MAAA,EAAApC,IACAF,IAAA8pB,EAAAxa,eAAAtP,GAAA,MAAA,IAAAO,MAAA,iBAAAP,GACA,MAAA,CAAA6f,KAAA7f,EAAAwpB,KAAAA,KAQAO,CAAAJ,EAAA,GAAAxF,GAEAjkB,GAAA,EACAH,EAAA6pB,EAAAjpB,OAGA,KAAAiP,UAAAjP,OAAA,GAAA,CAOA,GAAA,MAAA8oB,GAAA,mBAAAA,EAAA,MAAA,IAAAlpB,MAAA,qBAAAkpB,GACA,OAAAvpB,EAAAH,GACA,GAAAC,GAAA2pB,EAAAC,EAAA1pB,IAAA2f,KAAAsE,EAAAnkB,GAAAoB,EAAA+iB,EAAAnkB,GAAA2pB,EAAAH,KAAAC,QACA,GAAA,MAAAA,EAAA,IAAAzpB,KAAAmkB,EAAAA,EAAAnkB,GAAAoB,EAAA+iB,EAAAnkB,GAAA2pB,EAAAH,KAAA,MAGA,OAAA7pB,KAZA,OAAAO,EAAAH,GAAA,IAAAC,GAAA2pB,EAAAC,EAAA1pB,IAAA2f,QAAA7f,EAAAgC,EAAAmiB,EAAAnkB,GAAA2pB,EAAAH,OAAA,OAAAxpB,GAcAgqB,KAAA,WACA,IAAAA,EAAA,GAAA7F,EAAAxkB,KAAAwkB,EACA,IAAA,IAAAnkB,KAAAmkB,EAAA6F,EAAAhqB,GAAAmkB,EAAAnkB,GAAAsC,QACA,OAAA,IAAAinB,EAAAS,IAEAtpB,KAAA,SAAAmf,EAAAoK,GACA,GAAA,GAAAlqB,EAAA6P,UAAAjP,OAAA,GAAA,IAAA,IAAAZ,EAAAC,EAAAkqB,EAAA,IAAA7oB,MAAAtB,GAAAG,EAAA,EAAAA,EAAAH,IAAAG,EAAAgqB,EAAAhqB,GAAA0P,UAAA1P,EAAA,GACA,IAAAP,KAAAwkB,EAAA7U,eAAAuQ,GAAA,MAAA,IAAAtf,MAAA,iBAAAsf,GACA,IAAA3f,EAAA,EAAAH,GAAAC,EAAAL,KAAAwkB,EAAAtE,IAAAlf,OAAAT,EAAAH,IAAAG,EAAAF,EAAAE,GAAAgB,MAAA+B,MAAAgnB,EAAAC,IAEAjnB,MAAA,SAAA4c,EAAAoK,EAAAC,GACA,IAAAvqB,KAAAwkB,EAAA7U,eAAAuQ,GAAA,MAAA,IAAAtf,MAAA,iBAAAsf,GACA,IAAA,IAAA7f,EAAAL,KAAAwkB,EAAAtE,GAAA3f,EAAA,EAAAH,EAAAC,EAAAW,OAAAT,EAAAH,IAAAG,EAAAF,EAAAE,GAAAgB,MAAA+B,MAAAgnB,EAAAC,KAuBA9qB,EAAAokB,SAAAA,EAEAxf,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IA1FAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,4BCHA,IAAA1E,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAKA,SAAA+qB,EAAApY,EAAAtR,GACA,IAAAP,GAAA6R,EAAAtR,EAAAsR,EAAAqY,cAAA3pB,EAAA,GAAAsR,EAAAqY,iBAAA/I,QAAA,MAAA,EAAA,OAAA,KACA,IAAAnhB,EAAAmqB,EAAAtY,EAAAzP,MAAA,EAAApC,GAIA,MAAA,CACA,EAAAmqB,EAAA1pB,OAAA0pB,EAAA,GAAAA,EAAA/nB,MAAA,GAAA+nB,GACAtY,EAAAzP,MAAApC,EAAA,IAIA,SAAAoqB,EAAAvY,GACA,OAAAA,EAAAoY,EAAAra,KAAA+W,IAAA9U,KAAAA,EAAA,GAAAxC,IAqCA,IAAAgb,EAeA,SAAAC,EAAAzY,EAAAtR,GACA,IAAAqD,EAAAqmB,EAAApY,EAAAtR,GACA,IAAAqD,EAAA,OAAAiO,EAAA,GACA,IAAAsY,EAAAvmB,EAAA,GACAwmB,EAAAxmB,EAAA,GACA,OAAAwmB,EAAA,EAAA,KAAA,IAAAjpB,OAAAipB,GAAAnU,KAAA,KAAAkU,EACAA,EAAA1pB,OAAA2pB,EAAA,EAAAD,EAAA/nB,MAAA,EAAAgoB,EAAA,GAAA,IAAAD,EAAA/nB,MAAAgoB,EAAA,GACAD,EAAA,IAAAhpB,MAAAipB,EAAAD,EAAA1pB,OAAA,GAAAwV,KAAA,KAGA,IAAAsU,EAAA,CACAC,GAzCA,SAAA3Y,EAAAtR,GAGAkqB,EAAA,IAAA,IAAAxB,EAAAppB,GAFAgS,EAAAA,EAAA6Y,YAAAnqB,IAEAE,OAAAT,EAAA,EAAAgpB,GAAA,EAAAhpB,EAAAH,IAAAG,EACA,OAAA6R,EAAA7R,IACA,IAAA,IAAAgpB,EAAAC,EAAAjpB,EAAA,MACA,IAAA,IAAA,IAAAgpB,IAAAA,EAAAhpB,GAAAipB,EAAAjpB,EAAA,MACA,IAAA,IAAA,MAAAyqB,EACA,QAAA,EAAAzB,IAAAA,EAAA,GAIA,OAAA,EAAAA,EAAAnX,EAAAzP,MAAA,EAAA4mB,GAAAnX,EAAAzP,MAAA6mB,EAAA,GAAApX,GA8BA8Y,IAAA,SAAA9Y,EAAAtR,GAAA,OAAA,IAAAsR,GAAA+Y,QAAArqB,IACAoD,EAAA,SAAAkO,GAAA,OAAAjC,KAAAG,MAAA8B,GAAA7B,SAAA,IACA/P,EAAA,SAAA4R,GAAA,OAAAA,EAAA,IACAjO,EAAA,SAAAiO,GAAA,OAAAjC,KAAAG,MAAA8B,GAAA7B,SAAA,KACApQ,EAAA,SAAAiS,EAAAtR,GAAA,OAAAsR,EAAAqY,cAAA3pB,IACAtB,EAAA,SAAA4S,EAAAtR,GAAA,OAAAsR,EAAA+Y,QAAArqB,IACA+O,EAAA,SAAAuC,EAAAtR,GAAA,OAAAsR,EAAA6Y,YAAAnqB,IACAR,EAAA,SAAA8R,GAAA,OAAAjC,KAAAG,MAAA8B,GAAA7B,SAAA,IACAzP,EAAA,SAAAsR,EAAAtR,GAAA,OAAA+pB,EAAA,IAAAzY,EAAAtR,IACAZ,EAAA2qB,EACApa,EAnCA,SAAA2B,EAAAtR,GACA,IAAAqD,EAAAqmB,EAAApY,EAAAtR,GACA,IAAAqD,EAAA,OAAAiO,EAAA,GACA,IAAAsY,EAAAvmB,EAAA,GACAwmB,EAAAxmB,EAAA,GACA5D,EAAAoqB,GAAAC,EAAA,EAAAza,KAAAC,KAAA,EAAAD,KAAAE,IAAA,EAAAF,KAAAkE,MAAAsW,EAAA,MAAA,EACAvqB,EAAAsqB,EAAA1pB,OACA,OAAAT,IAAAH,EAAAsqB,EACAtqB,EAAAG,EAAAmqB,EAAA,IAAAhpB,MAAAnB,EAAAH,EAAA,GAAAoW,KAAA,KACA,EAAAjW,EAAAmqB,EAAA/nB,MAAA,EAAApC,GAAA,IAAAmqB,EAAA/nB,MAAApC,GACA,KAAA,IAAAmB,MAAA,EAAAnB,GAAAiW,KAAA,KAAAgU,EAAApY,EAAAjC,KAAAC,IAAA,EAAAtP,EAAAP,EAAA,IAAA,IA0BA6qB,EAAA,SAAAhZ,GAAA,OAAAjC,KAAAG,MAAA8B,GAAA7B,SAAA,IAAA8a,eACAjZ,EAAA,SAAAA,GAAA,OAAAjC,KAAAG,MAAA8B,GAAA7B,SAAA,MAIA+a,EAAA,wEAEA,SAAA5G,EAAAjB,GACA,OAAA,IAAA8H,EAAA9H,GAGA,SAAA8H,EAAA9H,GACA,KAAA+H,EAAAF,EAAAjc,KAAAoU,IAAA,MAAA,IAAA7iB,MAAA,mBAAA6iB,GAEA,IAAA+H,EACAC,EAAAD,EAAA,IAAA,IACAE,EAAAF,EAAA,IAAA,IACAG,EAAAH,EAAA,IAAA,IACAtG,EAAAsG,EAAA,IAAA,GACAjV,IAAAiV,EAAA,GACA3N,EAAA2N,EAAA,KAAAA,EAAA,GACAI,IAAAJ,EAAA,GACAK,EAAAL,EAAA,KAAAA,EAAA,GAAA7oB,MAAA,GACAud,EAAAsL,EAAA,IAAA,GAGA,MAAAtL,GAAA0L,GAAA,EAAA1L,EAAA,KAGA4K,EAAA5K,KAAAA,EAAA,KAGA3J,GAAA,MAAAkV,GAAA,MAAAC,KAAAnV,GAAA,EAAAkV,EAAA,IAAAC,EAAA,KAEA1rB,KAAAyrB,KAAAA,EACAzrB,KAAA0rB,MAAAA,EACA1rB,KAAA2rB,KAAAA,EACA3rB,KAAAklB,OAAAA,EACAllB,KAAAuW,KAAAA,EACAvW,KAAA6d,MAAAA,EACA7d,KAAA4rB,MAAAA,EACA5rB,KAAA6rB,UAAAA,EACA7rB,KAAAkgB,KAAAA,EAGAqL,EAAArpB,UAAAqO,SAAA,WACA,OAAAvQ,KAAAyrB,KACAzrB,KAAA0rB,MACA1rB,KAAA2rB,KACA3rB,KAAAklB,QACAllB,KAAAuW,KAAA,IAAA,KACA,MAAAvW,KAAA6d,MAAA,GAAA1N,KAAAC,IAAA,EAAA,EAAApQ,KAAA6d,SACA7d,KAAA4rB,MAAA,IAAA,KACA,MAAA5rB,KAAA6rB,UAAA,GAAA,IAAA1b,KAAAC,IAAA,EAAA,EAAApQ,KAAA6rB,YACA7rB,KAAAkgB,MAGA,IAwIAsD,EAxIAsI,EAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAEA,SAAA/U,EAAA3E,GACA,OAAAA,EAGA,SAAAqS,EAAAjB,GACA,IAAAuI,EAAAvI,EAAAwI,UAAAxI,EAAAyI,UAxIA,SAAAD,EAAAC,GACA,OAAA,SAAA1qB,EAAAsc,GAOA,IANA,IAAAtd,EAAAgB,EAAAP,OACAX,EAAA,GACAimB,EAAA,EACAzW,EAAAmc,EAAA,GACAhrB,EAAA,EAEA,EAAAT,GAAA,EAAAsP,IACAgO,EAAA7c,EAAA6O,EAAA,IAAAA,EAAAM,KAAAC,IAAA,EAAAyN,EAAA7c,IACAX,EAAAqC,KAAAnB,EAAA2qB,UAAA3rB,GAAAsP,EAAAtP,EAAAsP,OACA7O,GAAA6O,EAAA,GAAAgO,KACAhO,EAAAmc,EAAA1F,GAAAA,EAAA,GAAA0F,EAAAhrB,QAGA,OAAAX,EAAA4d,UAAAzH,KAAAyV,IAyHAE,CAAA3I,EAAAwI,SAAAxI,EAAAyI,WAAAlV,EACAqV,EAAA5I,EAAA4I,SACAC,EAAA7I,EAAA6I,QAEA,SAAAC,EAAA7I,GAGA,IAAAgI,GAFAhI,EAAAiB,EAAAjB,IAEAgI,KACAC,EAAAjI,EAAAiI,MACAC,EAAAlI,EAAAkI,KACAzG,EAAAzB,EAAAyB,OACA3O,EAAAkN,EAAAlN,KACAsH,EAAA4F,EAAA5F,MACA+N,EAAAnI,EAAAmI,MACAC,EAAApI,EAAAoI,UACA3L,EAAAuD,EAAAvD,KAIAhf,EAAA,MAAAgkB,EAAAkH,EAAA,GAAA,MAAAlH,GAAA,SAAAqH,KAAArM,GAAA,IAAAA,EAAA9Q,cAAA,GACAod,EAAA,MAAAtH,EAAAkH,EAAA,GAAA,OAAAG,KAAArM,GAAA,IAAA,GAKAuM,EAAA3B,EAAA5K,GACAwM,GAAAxM,GAAA,aAAAqM,KAAArM,GAUA,SAAAjR,EAAA1N,GACA,IAEAhB,EAAAH,EAAAI,EAFAmsB,EAAAzrB,EACA0rB,EAAAJ,EAGA,GAAA,MAAAtM,EACA0M,EAAAH,EAAAlrB,GAAAqrB,EACArrB,EAAA,OACA,CAKA,IAAAsrB,IAJAtrB,GAAAA,GAIA,GAAA,EAAAA,EAAA,KAAAA,IAAA,GAAA,GAOA,GAJAA,EAAAkrB,EAAAlrB,EAAAsqB,GAIAgB,EAGA,IAFAtsB,GAAA,EAAAH,EAAAmB,EAAAP,OACA6rB,GAAA,IACAtsB,EAAAH,GACA,GAAA,IAAAI,EAAAe,EAAAurB,WAAAvsB,KAAAC,EAAA,IACA,MAAA0f,GAAA,GAAA1f,GAAAA,EAAA,KACA,MAAA0f,GAAA,GAAA1f,GAAAA,EAAA,GAAA,CACAqsB,GAAA,EACA,MAWA,GALAF,GAAAE,EAAA,MAAAlB,EAAAA,EAAA,IAAA,MAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAgB,EACAC,EAAAA,GAAA,MAAA1M,EAAA4L,EAAA,EAAAlB,EAAA,GAAA,KAAAiC,GAAA,MAAAlB,EAAA,IAAA,IAIAe,EAEA,IADAnsB,GAAA,EAAAH,EAAAmB,EAAAP,SACAT,EAAAH,GACA,IAAAI,EAAAe,EAAAurB,WAAAvsB,IAAA,IAAA,GAAAC,EAAA,CACAosB,GAAA,KAAApsB,EAAA6rB,EAAA9qB,EAAAoB,MAAApC,EAAA,GAAAgB,EAAAoB,MAAApC,IAAAqsB,EACArrB,EAAAA,EAAAoB,MAAA,EAAApC,GACA,OAOAqrB,IAAArV,IAAAhV,EAAAwqB,EAAAxqB,EAAAwrB,EAAAA,IAGA,IAAA/rB,EAAA2rB,EAAA3rB,OAAAO,EAAAP,OAAA4rB,EAAA5rB,OACAgsB,EAAAhsB,EAAA6c,EAAA,IAAAnc,MAAAmc,EAAA7c,EAAA,GAAAwV,KAAAiV,GAAA,GAMA,OAHAG,GAAArV,IAAAhV,EAAAwqB,EAAAiB,EAAAzrB,EAAAyrB,EAAAhsB,OAAA6c,EAAA+O,EAAA5rB,OAAA+rB,EAAAA,GAAAC,EAAA,IAGAtB,GACA,IAAA,IAAA,OAAAiB,EAAAprB,EAAAqrB,EAAAI,EACA,IAAA,IAAA,OAAAL,EAAAK,EAAAzrB,EAAAqrB,EACA,IAAA,IAAA,OAAAI,EAAArqB,MAAA,EAAA3B,EAAAgsB,EAAAhsB,QAAA,GAAA2rB,EAAAprB,EAAAqrB,EAAAI,EAAArqB,MAAA3B,GAEA,OAAAgsB,EAAAL,EAAAprB,EAAAqrB,EAOA,OA9EAf,EAAA,MAAAA,EAAA3L,EAAA,EAAA,GACA,SAAAqM,KAAArM,GAAA/P,KAAAC,IAAA,EAAAD,KAAAE,IAAA,GAAAwb,IACA1b,KAAAC,IAAA,EAAAD,KAAAE,IAAA,GAAAwb,IAwEA5c,EAAAsB,SAAA,WACA,OAAAkT,EAAA,IAGAxU,EAaA,MAAA,CACAA,OAAAqd,EACApJ,aAZA,SAAAO,EAAAliB,GACA,IAAA/B,EAAA8sB,IAAA7I,EAAAiB,EAAAjB,IAAAvD,KAAA,IAAAuD,IACAtjB,EAAA,EAAAgQ,KAAAC,KAAA,EAAAD,KAAAE,IAAA,EAAAF,KAAAkE,MAAAsW,EAAAppB,GAAA,KACA0C,EAAAkM,KAAAe,IAAA,IAAA/Q,GACAe,EAAA4qB,EAAA,EAAA3rB,EAAA,GACA,OAAA,SAAAoB,GACA,OAAA/B,EAAAyE,EAAA1C,GAAAL,KAkBA,SAAA+rB,EAAAtoB,GAIA,OAHA6e,EAAAiB,EAAA9f,GACAlF,EAAAwP,OAAAuU,EAAAvU,OACAxP,EAAAyjB,aAAAM,EAAAN,aACAM,EAXAyJ,EAAA,CACAZ,QAAA,IACAJ,UAAA,IACAD,SAAA,CAAA,GACAI,SAAA,CAAA,IAAA,MAuBA3sB,EAAAytB,oBAAAD,EACAxtB,EAAAglB,aAAAA,EACAhlB,EAAAilB,gBAAAA,EACAjlB,EAAA0tB,eAhBA,SAAAzG,GACA,OAAAvW,KAAAC,IAAA,GAAAua,EAAAxa,KAAA+W,IAAAR,MAgBAjnB,EAAA2tB,gBAbA,SAAA1G,EAAAnlB,GACA,OAAA4O,KAAAC,IAAA,EAAA,EAAAD,KAAAC,KAAA,EAAAD,KAAAE,IAAA,EAAAF,KAAAkE,MAAAsW,EAAAppB,GAAA,KAAAopB,EAAAxa,KAAA+W,IAAAR,MAaAjnB,EAAA4tB,eAVA,SAAA3G,EAAAtW,GAEA,OADAsW,EAAAvW,KAAA+W,IAAAR,GAAAtW,EAAAD,KAAA+W,IAAA9W,GAAAsW,EACAvW,KAAAC,IAAA,EAAAua,EAAAva,GAAAua,EAAAjE,IAAA,GAUAriB,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IApUAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,4BCHA,IAAA1E,EAAAyE,EAAAzE,EAIAE,KAJAuE,EAIA,SAAA9E,EAAA6d,EAAAgQ,EAAAC,EAAApQ,EAAAqQ,EAAAC,EAAA3Z,GAAA,aAEA,IAAAvQ,EAAA7B,MAAAQ,UAEAwrB,EAAAnqB,EAAAnC,IACAuB,EAAAY,EAAAZ,MAEAgrB,EAAA,CAAA9D,KAAA,YAEA,SAAA+D,EAAArT,GACA,IAAAlE,EAAAiX,EAAAlsB,MACAof,EAAA,GACAqN,EAAAF,EAIA,SAAAxV,EAAAhU,GACA,IAAA3C,EAAA2C,EAAA,GAAA5D,EAAA8V,EAAAhU,IAAAb,GACA,IAAAjB,EAAA,CACA,GAAAstB,IAAAF,EAAA,OAAAE,EACAxX,EAAA5U,IAAAD,EAAAjB,EAAAigB,EAAA9d,KAAAyB,IAEA,OAAAoW,GAAAha,EAAA,GAAAga,EAAAvZ,QA0BA,OAlCAuZ,EAAA,MAAAA,EAAA,GAAA5X,EAAA5B,KAAAwZ,GAWApC,EAAAqI,OAAA,SAAAgE,GACA,IAAAvU,UAAAjP,OAAA,OAAAwf,EAAA7d,QACA6d,EAAA,GAAAnK,EAAAiX,EAAAlsB,MAEA,IADA,IAAA+C,EAAA3C,EAAAjB,GAAA,EAAAH,EAAAokB,EAAAxjB,SACAT,EAAAH,GAAAiW,EAAAjU,IAAAZ,GAAA2C,EAAAqgB,EAAAjkB,IAAA,KAAA8V,EAAA5U,IAAAD,EAAAgf,EAAA9d,KAAAyB,IACA,OAAAgU,GAGAA,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAuZ,EAAA5X,EAAA5B,KAAAyjB,GAAArM,GAAAoC,EAAA5X,SAGAwV,EAAA0V,QAAA,SAAArJ,GACA,OAAAvU,UAAAjP,QAAA6sB,EAAArJ,EAAArM,GAAA0V,GAGA1V,EAAAkS,KAAA,WACA,OAAAuD,IACApN,OAAAA,GACAjG,MAAAA,GACAsT,QAAAA,IAGA1V,EAGA,SAAA2V,IACA,IAIApH,EACAqH,EALA5V,EAAAyV,IAAAC,aAAAhN,GACAL,EAAArI,EAAAqI,OACAwN,EAAA7V,EAAAoC,MACAA,EAAA,CAAA,EAAA,GAGAjK,GAAA,EACA2d,EAAA,EACAC,EAAA,EACAxC,EAAA,GAIA,SAAAyC,IACA,IAAA/tB,EAAAogB,IAAAxf,OACAid,EAAA1D,EAAA,GAAAA,EAAA,GACAzF,EAAAyF,EAAA0D,EAAA,GACAwI,EAAAlM,EAAA,EAAA0D,GACAyI,GAAAD,EAAA3R,GAAA3E,KAAAC,IAAA,EAAAhQ,EAAA6tB,EAAA,EAAAC,GACA5d,IAAAoW,EAAAvW,KAAAkE,MAAAqS,IACA5R,IAAA2R,EAAA3R,EAAA4R,GAAAtmB,EAAA6tB,IAAAvC,EACAqC,EAAArH,GAAA,EAAAuH,GACA3d,IAAAwE,EAAA3E,KAAAG,MAAAwE,GAAAiZ,EAAA5d,KAAAG,MAAAyd,IACA,IAAAnrB,EAAA0a,EAAA/C,MAAAna,GAAAgB,IAAA,SAAAb,GAAA,OAAAuU,EAAA4R,EAAAnmB,IACA,OAAAytB,EAAA/P,EAAArb,EAAAqb,UAAArb,GAqDA,cAlEAuV,EAAA0V,QAgBA1V,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAwf,EAAAgE,GAAA2J,KAAA3N,KAGArI,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAuZ,EAAA,EAAAiK,EAAA,IAAAA,EAAA,IAAA2J,KAAA5T,EAAA5X,SAGAwV,EAAAiW,WAAA,SAAA5J,GACA,OAAAjK,EAAA,EAAAiK,EAAA,IAAAA,EAAA,IAAAlU,GAAA,EAAA6d,KAGAhW,EAAA4V,UAAA,WACA,OAAAA,GAGA5V,EAAAuO,KAAA,WACA,OAAAA,GAGAvO,EAAA7H,MAAA,SAAAkU,GACA,OAAAvU,UAAAjP,QAAAsP,IAAAkU,EAAA2J,KAAA7d,GAGA6H,EAAA6U,QAAA,SAAAxI,GACA,OAAAvU,UAAAjP,QAAAitB,EAAAC,EAAA/d,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAmU,IAAA2J,KAAAF,GAGA9V,EAAA8V,aAAA,SAAAzJ,GACA,OAAAvU,UAAAjP,QAAAitB,EAAA9d,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAmU,IAAA2J,KAAAF,GAGA9V,EAAA+V,aAAA,SAAA1J,GACA,OAAAvU,UAAAjP,QAAAktB,EAAA/d,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAmU,IAAA2J,KAAAD,GAGA/V,EAAAuT,MAAA,SAAAlH,GACA,OAAAvU,UAAAjP,QAAA0qB,EAAAvb,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAmU,IAAA2J,KAAAzC,GAGAvT,EAAAkS,KAAA,WACA,OAAAyD,IACAtN,OAAAA,KACAjG,MAAAA,GACAjK,MAAAA,GACA2d,aAAAA,GACAC,aAAAA,GACAxC,MAAAA,IAGAyC,IAqBA,SAAA5Z,EAAAnC,GACA,OAAA,WACA,OAAAA,GAIA,SAAAsD,EAAAtD,GACA,OAAAA,EAGA,IAAAic,EAAA,CAAA,EAAA,GAEA,SAAAC,EAAA3tB,EAAAuD,GACA,OAAAA,GAAAvD,GAAAA,GACA,SAAAyR,GAAA,OAAAA,EAAAzR,GAAAuD,GACAqQ,EAAArQ,GAiBA,SAAAqqB,EAAA/N,EAAAjG,EAAA+T,EAAAE,GACA,IAAAC,EAAAjO,EAAA,GAAA7E,EAAA6E,EAAA,GAAA1E,EAAAvB,EAAA,GAAAwB,EAAAxB,EAAA,GAGA,OAFAuB,EAAAH,EAAA8S,GAAAA,EAAAH,EAAA3S,EAAA8S,GAAAD,EAAAzS,EAAAD,KACA2S,EAAAH,EAAAG,EAAA9S,GAAA6S,EAAA1S,EAAAC,IACA,SAAA3J,GAAA,OAAA0J,EAAA2S,EAAArc,KAGA,SAAAsc,EAAAlO,EAAAjG,EAAA+T,EAAAE,GACA,IAAAlI,EAAAnW,KAAAE,IAAAmQ,EAAAxf,OAAAuZ,EAAAvZ,QAAA,EACAmD,EAAA,IAAAzC,MAAA4kB,GACApmB,EAAA,IAAAwB,MAAA4kB,GACA/lB,GAAA,EAQA,IALAigB,EAAA8F,GAAA9F,EAAA,KACAA,EAAAA,EAAA7d,QAAAsb,UACA1D,EAAAA,EAAA5X,QAAAsb,aAGA1d,EAAA+lB,GACAniB,EAAA5D,GAAA+tB,EAAA9N,EAAAjgB,GAAAigB,EAAAjgB,EAAA,IACAL,EAAAK,GAAAiuB,EAAAjU,EAAAha,GAAAga,EAAAha,EAAA,IAGA,OAAA,SAAA6R,GACA,IAAA7R,EAAA+c,EAAAqK,OAAAnH,EAAApO,EAAA,EAAAkU,GAAA,EACA,OAAApmB,EAAAK,GAAA4D,EAAA5D,GAAA6R,KAIA,SAAAiY,EAAAxU,EAAA8Y,GACA,OAAAA,EACAnO,OAAA3K,EAAA2K,UACAjG,MAAA1E,EAAA0E,SACAN,YAAApE,EAAAoE,eACA2U,MAAA/Y,EAAA+Y,SAKA,SAAAC,EAAAC,EAAAN,GACA,IAIA3R,EACAkS,EACAC,EANAxO,EAAA6N,EACA9T,EAAA8T,EACApU,EAAAsT,EAAAtT,YACA2U,GAAA,EAKA,SAAAT,IAGA,OAFAtR,EAAA,EAAA1M,KAAAE,IAAAmQ,EAAAxf,OAAAuZ,EAAAvZ,QAAA0tB,EAAAH,EACAQ,EAAAC,EAAA,KACA7W,EAGA,SAAAA,EAAA/F,GACA,OAAA2c,EAAAA,GAAAlS,EAAA2D,EAAAjG,EAAAqU,EAtEA,SAAAN,GACA,OAAA,SAAA3tB,EAAAuD,GACA,IAAAC,EAAAmqB,EAAA3tB,GAAAA,EAAAuD,GAAAA,GACA,OAAA,SAAAkO,GAAA,OAAAA,GAAAzR,EAAA,EAAAuD,GAAAkO,EAAA,EAAAjO,EAAAiO,KAmEA6c,CAAAH,GAAAA,EAAA7U,KAAA7H,GA2BA,OAxBA+F,EAAAiI,OAAA,SAAA7N,GACA,OAAAyc,EAAAA,GAAAnS,EAAAtC,EAAAiG,EAAA8N,EAAAM,EAnEA,SAAAJ,GACA,OAAA,SAAA7tB,EAAAuD,GACA,IAAAhE,EAAAsuB,EAAA7tB,GAAAA,EAAAuD,GAAAA,GACA,OAAA,SAAA7D,GAAA,OAAAA,GAAA,EAAAM,EAAA,GAAAN,EAAA6D,EAAAhE,EAAAG,KAgEA6uB,CAAAV,GAAAA,KAAAjc,IAGA4F,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAwf,EAAAkN,EAAA3sB,KAAAyjB,EAAA9O,GAAAyY,KAAA3N,EAAA7d,SAGAwV,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAuZ,EAAA5X,EAAA5B,KAAAyjB,GAAA2J,KAAA5T,EAAA5X,SAGAwV,EAAAiW,WAAA,SAAA5J,GACA,OAAAjK,EAAA5X,EAAA5B,KAAAyjB,GAAAvK,EAAAsT,EAAA5S,iBAAAwT,KAGAhW,EAAAyW,MAAA,SAAApK,GACA,OAAAvU,UAAAjP,QAAA4tB,IAAApK,EAAA2J,KAAAS,GAGAzW,EAAA8B,YAAA,SAAAuK,GACA,OAAAvU,UAAAjP,QAAAiZ,EAAAuK,EAAA2J,KAAAlU,GAGAkU,IAgCA,SAAAgB,EAAAhX,GACA,IAAAqI,EAAArI,EAAAqI,OA6BA,OA3BArI,EAAAoI,MAAA,SAAAwG,GACA,IAAA5iB,EAAAqc,IACA,OAAAlD,EAAAiD,MAAApc,EAAA,GAAAA,EAAAA,EAAAnD,OAAA,GAAA,MAAA+lB,EAAA,GAAAA,IAGA5O,EAAAiX,WAAA,SAAArI,EAAAtD,GACA,OAtCA,SAAAjD,EAAAuG,EAAAtD,GACA,IAGAoI,EAHA/W,EAAA0L,EAAA,GACAiG,EAAAjG,EAAAA,EAAAxf,OAAA,GACA0lB,EAAApJ,EAAA0J,SAAAlS,EAAA2R,EAAA,MAAAM,EAAA,GAAAA,GAGA,QADAtD,EAAAtG,EAAAuH,gBAAA,MAAAjB,EAAA,KAAAA,IACAvD,MACA,IAAA,IACA,IAAA3e,EAAA4O,KAAAC,IAAAD,KAAA+W,IAAApS,GAAA3E,KAAA+W,IAAAT,IAEA,OADA,MAAAhD,EAAAoI,WAAAza,MAAAya,EAAA1O,EAAAiQ,gBAAA1G,EAAAnlB,MAAAkiB,EAAAoI,UAAAA,GACA1O,EAAA+F,aAAAO,EAAAliB,GAEA,IAAA,GACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAAkiB,EAAAoI,WAAAza,MAAAya,EAAA1O,EAAAkQ,eAAA3G,EAAAvW,KAAAC,IAAAD,KAAA+W,IAAApS,GAAA3E,KAAA+W,IAAAT,QAAAhD,EAAAoI,UAAAA,GAAA,MAAApI,EAAAvD,OACA,MAEA,IAAA,IACA,IAAA,IACA,MAAAuD,EAAAoI,WAAAza,MAAAya,EAAA1O,EAAAgQ,eAAAzG,MAAAjD,EAAAoI,UAAAA,EAAA,GAAA,MAAApI,EAAAvD,OAIA,OAAA/C,EAAAlO,OAAAwU,GAYA2L,CAAA5O,IAAAuG,EAAAtD,IAGAtL,EAAAkX,KAAA,SAAAtI,GACA,IAAA5iB,EAAAqc,IACAjgB,EAAA4D,EAAAnD,OAAA,EACAZ,EAAA,MAAA2mB,EAAA,GAAAA,EACAjS,EAAA3Q,EAAA,GACAsiB,EAAAtiB,EAAA5D,GACAmmB,EAAApJ,EAAA0J,SAAAlS,EAAA2R,EAAArmB,GASA,OAPAsmB,IACAA,EAAApJ,EAAA0J,SAAA7W,KAAAkE,MAAAS,EAAA4R,GAAAA,EAAAvW,KAAAwW,KAAAF,EAAAC,GAAAA,EAAAtmB,GACA+D,EAAA,GAAAgM,KAAAkE,MAAAS,EAAA4R,GAAAA,EACAviB,EAAA5D,GAAA4P,KAAAwW,KAAAF,EAAAC,GAAAA,EACAlG,EAAArc,IAGAgU,GAGAA,EAiCA,SAAAkX,EAAA7O,EAAA8O,GAGA,IAIAjvB,EAJAkpB,EAAA,EACAC,GAHAhJ,EAAAA,EAAA7d,SAGA3B,OAAA,EACAgnB,EAAAxH,EAAA+I,GACAtB,EAAAzH,EAAAgJ,GAUA,OAPAvB,EAAAD,IACA3nB,EAAAkpB,EAAAA,EAAAC,EAAAA,EAAAnpB,EACAA,EAAA2nB,EAAAA,EAAAC,EAAAA,EAAA5nB,GAGAmgB,EAAA+I,GAAA+F,EAAAjb,MAAA2T,GACAxH,EAAAgJ,GAAA8F,EAAA3I,KAAAsB,GACAzH,EAGA,SAAA+O,EAAA5uB,EAAAuD,GACA,OAAAA,EAAAiM,KAAAuL,IAAAxX,EAAAvD,IACA,SAAAyR,GAAA,OAAAjC,KAAAuL,IAAAtJ,EAAAzR,GAAAuD,GACAqQ,EAAArQ,GAGA,SAAAsqB,EAAA7tB,EAAAuD,GACA,OAAAvD,EAAA,EACA,SAAAN,GAAA,OAAA8P,KAAAe,KAAAhN,EAAA7D,GAAA8P,KAAAe,KAAAvQ,EAAA,EAAAN,IACA,SAAAA,GAAA,OAAA8P,KAAAe,IAAAhN,EAAA7D,GAAA8P,KAAAe,IAAAvQ,EAAA,EAAAN,IAGA,SAAAmvB,EAAApd,GACA,OAAAqd,SAAArd,KAAA,KAAAA,GAAAA,EAAA,EAAA,EAAAA,EAGA,SAAAsd,EAAAC,GACA,OAAA,KAAAA,EAAAH,EACAG,IAAAxf,KAAAgD,EAAAhD,KAAAqJ,IACA,SAAApH,GAAA,OAAAjC,KAAAe,IAAAye,EAAAvd,IAGA,SAAAwd,EAAAD,GACA,OAAAA,IAAAxf,KAAAgD,EAAAhD,KAAAuL,IACA,KAAAiU,GAAAxf,KAAA0f,OACA,IAAAF,GAAAxf,KAAA2f,OACAH,EAAAxf,KAAAuL,IAAAiU,GAAA,SAAAvd,GAAA,OAAAjC,KAAAuL,IAAAtJ,GAAAud,IAGA,SAAAI,EAAAvwB,GACA,OAAA,SAAA4S,GACA,OAAA5S,GAAA4S,IA4FA,SAAA4d,EAAA5d,EAAAuY,GACA,OAAAvY,EAAA,GAAAjC,KAAAe,KAAAkB,EAAAuY,GAAAxa,KAAAe,IAAAkB,EAAAuY,GAGA,SAAAzZ,IACA,IAAAyZ,EAAA,EACAxS,EAAA0W,EAGA,SAAAluB,EAAAuD,GACA,OAAAA,EAAA8rB,EAAA9rB,EAAAymB,IAAAhqB,EAAAqvB,EAAArvB,EAAAgqB,KACA,SAAAvY,GAAA,OAAA4d,EAAA5d,EAAAuY,GAAAhqB,GAAAuD,GACAqQ,EAAArQ,IAGA,SAAAvD,EAAAuD,GAEA,OADAA,EAAA8rB,EAAA9rB,EAAAymB,IAAAhqB,EAAAqvB,EAAArvB,EAAAgqB,IACA,SAAAtqB,GAAA,OAAA2vB,EAAArvB,EAAAuD,EAAA7D,EAAA,EAAAsqB,MAVAnK,EAAArI,EAAAqI,OAqBA,OARArI,EAAAwS,SAAA,SAAAnG,GACA,OAAAvU,UAAAjP,QAAA2pB,GAAAnG,EAAAhE,EAAAA,MAAAmK,GAGAxS,EAAAkS,KAAA,WACA,OAAAA,EAAAlS,EAAAjH,IAAAyZ,SAAAA,KAGAwE,EAAAhX,GAkIA,IAAA8X,EAAA,IACAC,EAAA,GAAAD,EACAE,EAAA,GAAAD,EACAE,EAAA,GAAAD,EACAE,EAAA,EAAAD,EACAE,EAAA,GAAAF,EACAG,EAAA,IAAAH,EACA,SAAA7a,EAAAlV,GACA,OAAA,IAAAmV,KAAAnV,GAGA,SAAAmwB,EAAAnwB,GACA,OAAAA,aAAAmV,MAAAnV,GAAA,IAAAmV,MAAAnV,GAGA,SAAAowB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhiB,GACA,IAAAkJ,EAAA0W,EAAAP,EAAAf,EAAA9S,mBACA2F,EAAAjI,EAAAiI,OACAI,EAAArI,EAAAqI,OAEA0Q,EAAAjiB,EAAA,OACAkiB,EAAAliB,EAAA,OACAmiB,EAAAniB,EAAA,SACAoiB,EAAApiB,EAAA,SACAqiB,EAAAriB,EAAA,SACAsiB,EAAAtiB,EAAA,SACAuiB,EAAAviB,EAAA,MACAwiB,EAAAxiB,EAAA,MAEAyiB,EAAA,CACA,CAAAV,EAAA,EAAAf,GACA,CAAAe,EAAA,EAAA,EAAAf,GACA,CAAAe,EAAA,GAAA,GAAAf,GACA,CAAAe,EAAA,GAAA,GAAAf,GACA,CAAAc,EAAA,EAAAb,GACA,CAAAa,EAAA,EAAA,EAAAb,GACA,CAAAa,EAAA,GAAA,GAAAb,GACA,CAAAa,EAAA,GAAA,GAAAb,GACA,CAAAY,EAAA,EAAAX,GACA,CAAAW,EAAA,EAAA,EAAAX,GACA,CAAAW,EAAA,EAAA,EAAAX,GACA,CAAAW,EAAA,GAAA,GAAAX,GACA,CAAAU,EAAA,EAAAT,GACA,CAAAS,EAAA,EAAA,EAAAT,GACA,CAAAQ,EAAA,EAAAP,GACA,CAAAM,EAAA,EAAAL,GACA,CAAAK,EAAA,EAAA,EAAAL,GACA,CAAAI,EAAA,EAAAH,IAGA,SAAAnB,EAAA7Z,GACA,OAAAyb,EAAAzb,GAAAA,EAAA2b,EACAH,EAAAxb,GAAAA,EAAA4b,EACAL,EAAAvb,GAAAA,EAAA6b,EACAP,EAAAtb,GAAAA,EAAA8b,EACAV,EAAApb,GAAAA,EAAAqb,EAAArb,GAAAA,EAAA+b,EAAAC,EACAb,EAAAnb,GAAAA,EAAAic,EACAC,GAAAlc,GAGA,SAAAoc,EAAArC,EAAAxa,EAAA2R,EAAAC,GAMA,GALA,MAAA4I,IAAAA,EAAA,IAKA,iBAAAA,EAAA,CACA,IAAAX,EAAAxe,KAAA+W,IAAAT,EAAA3R,GAAAwa,EACA/uB,EAAA+c,EAAAoI,SAAA,SAAAnlB,GAAA,OAAAA,EAAA,KAAA0lB,MAAAyL,EAAA/C,GAGAW,EAFA/uB,IAAAmxB,EAAA1wB,QACA0lB,EAAApJ,EAAA0J,SAAAlS,EAAAyb,EAAA9J,EAAA8J,EAAAjB,GACAoB,GACAnwB,GAEAmmB,GADAnmB,EAAAmxB,EAAA/C,EAAA+C,EAAAnxB,EAAA,GAAA,GAAAmxB,EAAAnxB,GAAA,GAAAouB,EAAApuB,EAAA,EAAAA,IACA,GACAA,EAAA,KAEAmmB,EAAApJ,EAAA0J,SAAAlS,EAAA2R,EAAA6I,GACA2B,GAIA,OAAA,MAAAvK,EAAA4I,EAAAA,EAAAsC,MAAAlL,GAsCA,OAnCAvO,EAAAiI,OAAA,SAAA7N,GACA,OAAA,IAAAiD,KAAA4K,EAAA7N,KAGA4F,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,OAAAwf,EAAAkN,EAAA3sB,KAAAyjB,EAAAgM,IAAAhQ,IAAApf,IAAAmU,IAGA4C,EAAAoI,MAAA,SAAA+O,EAAA5I,GACA,IAIArmB,EAJA8D,EAAAqc,IACA7O,EAAAxN,EAAA,GACAyN,EAAAzN,EAAAA,EAAAnD,OAAA,GACAd,EAAA0R,EAAAD,EAKA,OAHAzR,IAAAG,EAAAsR,EAAAA,EAAAC,EAAAA,EAAAvR,GAEAA,GADAA,EAAAsxB,EAAArC,EAAA3d,EAAAC,EAAA8U,IACArmB,EAAAka,MAAA5I,EAAAC,EAAA,GAAA,GACA1R,EAAAG,EAAA4d,UAAA5d,GAGA8X,EAAAiX,WAAA,SAAArI,EAAAtD,GACA,OAAA,MAAAA,EAAA2L,EAAAngB,EAAAwU,IAGAtL,EAAAkX,KAAA,SAAAC,EAAA5I,GACA,IAAAviB,EAAAqc,IACA,OAAA8O,EAAAqC,EAAArC,EAAAnrB,EAAA,GAAAA,EAAAA,EAAAnD,OAAA,GAAA0lB,IACAlG,EAAA6O,EAAAlrB,EAAAmrB,IACAnX,GAGAA,EAAAkS,KAAA,WACA,OAAAA,EAAAlS,EAAAsY,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhiB,KAGAkJ,EAWA,SAAAjD,EAAAzE,GACA,OAAAA,EAAA+a,MAAA,SAAApqB,IAAA,SAAAgR,GACA,MAAA,IAAAA,IAIA,IAAAyf,EAAA3c,EAAA,gEAEA4c,EAAA5c,EAAA,4HAEA6c,EAAA7c,EAAA,4HAEA8c,EAAA9c,EAAA,4HAEA6E,EAAAwT,EAAA3Q,yBAAA9I,EAAAP,UAAA,IAAA,GAAA,GAAAO,EAAAP,WAAA,IAAA,GAAA,IAEA0e,EAAA1E,EAAA3Q,yBAAA9I,EAAAP,WAAA,IAAA,IAAA,KAAAO,EAAAP,UAAA,GAAA,IAAA,KAEA2e,EAAA3E,EAAA3Q,yBAAA9I,EAAAP,UAAA,IAAA,IAAA,KAAAO,EAAAP,UAAA,GAAA,IAAA,KAEA4e,EAAAre,EAAAP,YAWA,SAAA6e,EAAA7X,GACA,IAAAna,EAAAma,EAAAvZ,OACA,OAAA,SAAAX,GACA,OAAAka,EAAApK,KAAAC,IAAA,EAAAD,KAAAE,IAAAjQ,EAAA,EAAA+P,KAAAkE,MAAAhU,EAAAD,OAIA,IAAAiyB,EAAAD,EAAAld,EAAA,qgDAEAod,EAAAF,EAAAld,EAAA,qgDAEAqd,GAAAH,EAAAld,EAAA,qgDAEAsd,GAAAJ,EAAAld,EAAA,qgDA+BAzV,EAAAgzB,UAAA3E,EACAruB,EAAAizB,WAjtBA,WACA,OAfA,SAAAC,EAAAxa,GACA,IAAAkS,EAAAlS,EAAAkS,KAUA,OARAlS,EAAA6U,QAAA7U,EAAA+V,oBACA/V,EAAA8V,oBACA9V,EAAA+V,aAEA/V,EAAAkS,KAAA,WACA,OAAAsI,EAAAtI,MAGAlS,EAIAwa,CAAA7E,IAAAG,aAAA,KAitBAxuB,EAAAmzB,cAhhBA,SAAA7b,IACA,IAAAyJ,EAAA,CAAA,EAAA,GAEA,SAAArI,EAAA/F,GACA,OAAAA,EAaA,OAVA+F,EAAAiI,OAAAjI,GAEAqI,OAAArI,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAwf,EAAAkN,EAAA3sB,KAAAyjB,EAAA9O,GAAAyC,GAAAqI,EAAA7d,SAGAwV,EAAAkS,KAAA,WACA,OAAAtT,IAAAyJ,OAAAA,IAGA2O,EAAAhX,IAggBA1Y,EAAA4jB,YA3hBA,SAAA7O,IACA,IAAA2D,EAAA0W,EAAAP,EAAAf,EAAA9S,mBAMA,OAJAtC,EAAAkS,KAAA,WACA,OAAAA,EAAAlS,EAAA3D,MAGA2a,EAAAhX,IAqhBA1Y,EAAAozB,SAxcA,SAAAnX,IACA,IAAAvD,EAAA0W,EAAAU,EAAAf,GAAAhO,OAAA,CAAA,EAAA,KACAA,EAAArI,EAAAqI,OACAmP,EAAA,GACAmD,EAAAlD,EAAA,IACAmD,EAAArD,EAAA,IAEA,SAAAvB,IAGA,OAFA2E,EAAAlD,EAAAD,GAAAoD,EAAArD,EAAAC,GACAnP,IAAA,GAAA,IAAAsS,EAAA/C,EAAA+C,GAAAC,EAAAhD,EAAAgD,IACA5a,EA2EA,OAxEAA,EAAAwX,KAAA,SAAAnL,GACA,OAAAvU,UAAAjP,QAAA2uB,GAAAnL,EAAA2J,KAAAwB,GAGAxX,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAwf,EAAAgE,GAAA2J,KAAA3N,KAGArI,EAAAoI,MAAA,SAAAwG,GACA,IAGA7mB,EAHAiE,EAAAqc,IACA9f,EAAAyD,EAAA,GACAH,EAAAG,EAAAA,EAAAnD,OAAA,IAGAd,EAAA8D,EAAAtD,KAAAH,EAAAG,EAAAA,EAAAsD,EAAAA,EAAAzD,GAEA,IAEAO,EACAmD,EACA5D,EAJAE,EAAAuyB,EAAApyB,GACA4lB,EAAAwM,EAAA9uB,GAIA5D,EAAA,MAAA2mB,EAAA,IAAAA,EACA1U,EAAA,GAEA,KAAAsd,EAAA,IAAArJ,EAAA/lB,EAAAH,GAEA,GADAG,EAAA4P,KAAAG,MAAA/P,GAAA,EAAA+lB,EAAAnW,KAAAG,MAAAgW,GAAA,EACA,EAAA5lB,GAAA,KAAAH,EAAA+lB,IAAA/lB,EACA,IAAA0D,EAAA,EAAAnD,EAAAiyB,EAAAxyB,GAAA0D,EAAA0rB,IAAA1rB,EAEA,MADA5D,EAAAS,EAAAmD,GACAvD,GAAA,CACA,GAAAsD,EAAA3D,EAAA,MACAgS,EAAA3P,KAAArC,SAEA,KAAAE,EAAA+lB,IAAA/lB,EACA,IAAA0D,EAAA0rB,EAAA,EAAA7uB,EAAAiyB,EAAAxyB,GAAA,GAAA0D,IAAAA,EAEA,MADA5D,EAAAS,EAAAmD,GACAvD,GAAA,CACA,GAAAsD,EAAA3D,EAAA,MACAgS,EAAA3P,KAAArC,SAIAgS,EAAAiL,EAAAiD,MAAAhgB,EAAA+lB,EAAAnW,KAAAE,IAAAiW,EAAA/lB,EAAAH,IAAAgB,IAAA2xB,GAGA,OAAA7yB,EAAAmS,EAAA4L,UAAA5L,GAGA8F,EAAAiX,WAAA,SAAArI,EAAAtD,GAGA,GAFA,MAAAA,IAAAA,EAAA,KAAAkM,EAAA,MAAA,KACA,mBAAAlM,IAAAA,EAAAtG,EAAAlO,OAAAwU,IACAsD,IAAAgG,EAAAA,EAAA,OAAAtJ,EACA,MAAAsD,IAAAA,EAAA,IACA,IAAA9iB,EAAAkM,KAAAC,IAAA,EAAAuf,EAAA5I,EAAA5O,EAAAoI,QAAAvf,QACA,OAAA,SAAAmD,GACA,IAAA5D,EAAA4D,EAAA4uB,EAAA5iB,KAAAG,MAAAwiB,EAAA3uB,KAEA,OADA5D,EAAAovB,EAAAA,EAAA,KAAApvB,GAAAovB,GACApvB,GAAA0D,EAAAwf,EAAAtf,GAAA,KAIAgU,EAAAkX,KAAA,WACA,OAAA7O,EAAA6O,EAAA7O,IAAA,CACAnM,MAAA,SAAAjC,GAAA,OAAA2gB,EAAA5iB,KAAAkE,MAAAye,EAAA1gB,MACAuU,KAAA,SAAAvU,GAAA,OAAA2gB,EAAA5iB,KAAAwW,KAAAmM,EAAA1gB,UAIA+F,EAAAkS,KAAA,WACA,OAAAA,EAAAlS,EAAAuD,IAAAiU,KAAAA,KAGAxX,GAoXA1Y,EAAAuzB,aAAApF,EACAnuB,EAAAwzB,cAAAtF,EACAluB,EAAAyzB,SAAAhiB,EACAzR,EAAA0zB,UArVA,WACA,OAAAjiB,IAAAyZ,SAAA,KAqVAlrB,EAAA2zB,cAlVA,SAAAC,IACA,IAAA7S,EAAA,GACAjG,EAAA,GACA+N,EAAA,GAEA,SAAA6F,IACA,IAAA5tB,EAAA,EAAAH,EAAA+P,KAAAC,IAAA,EAAAmK,EAAAvZ,QAEA,IADAsnB,EAAA,IAAA5mB,MAAAtB,EAAA,KACAG,EAAAH,GAAAkoB,EAAA/nB,EAAA,GAAA+c,EAAAkK,SAAAhH,EAAAjgB,EAAAH,GACA,OAAA+X,EAGA,SAAAA,EAAA/F,GACA,IAAAhB,MAAAgB,GAAAA,GAAA,OAAAmI,EAAA+C,EAAAqK,OAAAW,EAAAlW,IAiCA,OA9BA+F,EAAAgI,aAAA,SAAA5N,GACA,IAAAhS,EAAAga,EAAAmH,QAAAnP,GACA,OAAAhS,EAAA,EAAA,CAAAqP,IAAAA,KAAA,CACA,EAAArP,EAAA+nB,EAAA/nB,EAAA,GAAAigB,EAAA,GACAjgB,EAAA+nB,EAAAtnB,OAAAsnB,EAAA/nB,GAAAigB,EAAAA,EAAAxf,OAAA,KAIAmX,EAAAqI,OAAA,SAAAgE,GACA,IAAAvU,UAAAjP,OAAA,OAAAwf,EAAA7d,QACA6d,EAAA,GACA,IAAA,IAAArc,EAAA5D,EAAA,EAAAH,EAAAokB,EAAAxjB,OAAAT,EAAAH,IAAAG,EAAA,OAAA4D,EAAAqgB,EAAAjkB,KAAA6Q,MAAAjN,GAAAA,IAAAqc,EAAA9d,KAAAyB,GAEA,OADAqc,EAAA7c,KAAA2Z,EAAAwC,WACAqO,KAGAhW,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAuZ,EAAA5X,EAAA5B,KAAAyjB,GAAA2J,KAAA5T,EAAA5X,SAGAwV,EAAAmb,UAAA,WACA,OAAAhL,EAAA3lB,SAGAwV,EAAAkS,KAAA,WACA,OAAAgJ,IACA7S,OAAAA,GACAjG,MAAAA,IAGApC,GAqSA1Y,EAAA8zB,cAlSA,SAAAxW,IACA,IAAAiL,EAAA,EACAC,EAAA,EACA7nB,EAAA,EACAogB,EAAA,CAAA,IACAjG,EAAA,CAAA,EAAA,GAEA,SAAApC,EAAA/F,GACA,GAAAA,GAAAA,EAAA,OAAAmI,EAAA+C,EAAAqK,OAAAnH,EAAApO,EAAA,EAAAhS,IAGA,SAAA+tB,IACA,IAAA5tB,GAAA,EAEA,IADAigB,EAAA,IAAA9e,MAAAtB,KACAG,EAAAH,GAAAogB,EAAAjgB,KAAAA,EAAA,GAAA0nB,GAAA1nB,EAAAH,GAAA4nB,IAAA5nB,EAAA,GACA,OAAA+X,EAyBA,OAtBAA,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAgnB,GAAAxD,EAAA,GAAAyD,GAAAzD,EAAA,GAAA2J,KAAA,CAAAnG,EAAAC,IAGA9P,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAZ,GAAAma,EAAA5X,EAAA5B,KAAAyjB,IAAAxjB,OAAA,EAAAmtB,KAAA5T,EAAA5X,SAGAwV,EAAAgI,aAAA,SAAA5N,GACA,IAAAhS,EAAAga,EAAAmH,QAAAnP,GACA,OAAAhS,EAAA,EAAA,CAAAqP,IAAAA,KACArP,EAAA,EAAA,CAAAynB,EAAAxH,EAAA,IACApgB,GAAAG,EAAA,CAAAigB,EAAApgB,EAAA,GAAA6nB,GACA,CAAAzH,EAAAjgB,EAAA,GAAAigB,EAAAjgB,KAGA4X,EAAAkS,KAAA,WACA,OAAAtN,IACAyD,OAAA,CAAAwH,EAAAC,IACA1N,MAAAA,IAGA4U,EAAAhX,IA2PA1Y,EAAA+zB,eAxPA,SAAA1L,IACA,IAAAtH,EAAA,CAAA,IACAjG,EAAA,CAAA,EAAA,GACAna,EAAA,EAEA,SAAA+X,EAAA/F,GACA,GAAAA,GAAAA,EAAA,OAAAmI,EAAA+C,EAAAqK,OAAAnH,EAAApO,EAAA,EAAAhS,IAsBA,OAnBA+X,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAwf,EAAA7d,EAAA5B,KAAAyjB,GAAApkB,EAAA+P,KAAAE,IAAAmQ,EAAAxf,OAAAuZ,EAAAvZ,OAAA,GAAAmX,GAAAqI,EAAA7d,SAGAwV,EAAAoC,MAAA,SAAAiK,GACA,OAAAvU,UAAAjP,QAAAuZ,EAAA5X,EAAA5B,KAAAyjB,GAAApkB,EAAA+P,KAAAE,IAAAmQ,EAAAxf,OAAAuZ,EAAAvZ,OAAA,GAAAmX,GAAAoC,EAAA5X,SAGAwV,EAAAgI,aAAA,SAAA5N,GACA,IAAAhS,EAAAga,EAAAmH,QAAAnP,GACA,MAAA,CAAAiO,EAAAjgB,EAAA,GAAAigB,EAAAjgB,KAGA4X,EAAAkS,KAAA,WACA,OAAAvC,IACAtH,OAAAA,GACAjG,MAAAA,IAGApC,GA6NA1Y,EAAAg0B,UA/FA,WACA,OAAAhD,EAAAjD,EAAAkG,SAAAlG,EAAAmG,UAAAnG,EAAAoG,SAAApG,EAAAqG,QAAArG,EAAAsG,SAAAtG,EAAAuG,WAAAvG,EAAAwG,WAAAxG,EAAAyG,gBAAAxG,EAAAyG,YAAA1T,OAAA,CAAA,IAAAhL,KAAA,IAAA,EAAA,GAAA,IAAAA,KAAA,IAAA,EAAA,MA+FA/V,EAAA00B,SA5FA,WACA,OAAA1D,EAAAjD,EAAA4G,QAAA5G,EAAA6G,SAAA7G,EAAA8G,QAAA9G,EAAA+G,OAAA/G,EAAAgH,QAAAhH,EAAAiH,UAAAjH,EAAAkH,UAAAlH,EAAAmH,eAAAlH,EAAAmH,WAAApU,OAAA,CAAAhL,KAAAqf,IAAA,IAAA,EAAA,GAAArf,KAAAqf,IAAA,IAAA,EAAA,MA4FAp1B,EAAAq1B,iBAAAjD,EACApyB,EAAAs1B,kBAAAjD,EACAryB,EAAAu1B,kBAAAjD,EACAtyB,EAAAw1B,iBAAAjD,EACAvyB,EAAAy1B,4BAAAnb,EACAta,EAAA01B,mBAxEA,SAAA90B,IACAA,EAAA,GAAA,EAAAA,KAAAA,GAAA8P,KAAAkE,MAAAhU,IACA,IAAA+0B,EAAAjlB,KAAA+W,IAAA7mB,EAAA,IAIA,OAHA8xB,EAAA3hB,EAAA,IAAAnQ,EAAA,IACA8xB,EAAA1hB,EAAA,IAAA,IAAA2kB,EACAjD,EAAAzhB,EAAA,GAAA,GAAA0kB,EACAjD,EAAA,IAmEA1yB,EAAA41B,gBAAApD,EACAxyB,EAAA61B,gBAAApD,EACAzyB,EAAA81B,mBAAAlD,EACA5yB,EAAA+1B,iBAAAlD,EACA7yB,EAAAg2B,mBAAAlD,GACA9yB,EAAAi2B,kBAAAlD,GACA/yB,EAAAk2B,gBAvDA,SAAAC,EAAA5Y,GACA,IAAAgL,EAAA,EACAC,EAAA,EACA2G,GAAA,EAEA,SAAAzW,EAAA/F,GACA,IAAA/R,GAAA+R,EAAA4V,IAAAC,EAAAD,GACA,OAAAhL,EAAA4R,EAAAze,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAhQ,IAAAA,GAmBA,OAhBA8X,EAAAqI,OAAA,SAAAgE,GACA,OAAAvU,UAAAjP,QAAAgnB,GAAAxD,EAAA,GAAAyD,GAAAzD,EAAA,GAAArM,GAAA,CAAA6P,EAAAC,IAGA9P,EAAAyW,MAAA,SAAApK,GACA,OAAAvU,UAAAjP,QAAA4tB,IAAApK,EAAArM,GAAAyW,GAGAzW,EAAA6E,aAAA,SAAAwH,GACA,OAAAvU,UAAAjP,QAAAgc,EAAAwH,EAAArM,GAAA6E,GAGA7E,EAAAkS,KAAA,WACA,OAAAuL,EAAA5Y,GAAAwD,OAAA,CAAAwH,EAAAC,IAAA2G,MAAAA,IAGAO,EAAAhX,IA+BA9T,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,KAj4BA,iBAAA9B,QAAA,IAAAC,EAAA6E,EAAA9E,EAAAgB,EAAA,YAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,aAAAA,EAAA,WAAAA,EAAA,kBAAAA,EAAA,aAEA8D,EAAAzE,EAAA0E,GAAA1E,EAAA0E,IAAA,GAAA1E,EAAA0E,GAAA1E,EAAA0E,GAAA1E,EAAA0E,GAAA1E,EAAA0E,GAAA1E,EAAA0E,GAAA1E,EAAA0E,GAAA1E,EAAA0E,yICHA,IAAA1E,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAEA,IAAAo2B,EAAA,+BAEAC,EAAA,CACAxW,IAAA,6BACAuW,MAAAA,EACAE,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCAGA,SAAAC,EAAArM,GACA,IAAA3oB,EAAA2oB,GAAA,GAAAtpB,EAAAW,EAAAwgB,QAAA,KAEA,OADA,GAAAnhB,GAAA,WAAAW,EAAA2oB,EAAAlnB,MAAA,EAAApC,MAAAspB,EAAAA,EAAAlnB,MAAApC,EAAA,IACAu1B,EAAAnmB,eAAAzO,GAAA,CAAAi1B,MAAAL,EAAA50B,GAAAk1B,MAAAvM,GAAAA,EAmBA,SAAAwM,EAAAxM,GACA,IAAAyM,EAAAJ,EAAArM,GACA,OAAAyM,EAAAF,MARA,SAAAE,GACA,OAAA,WACA,OAAAt2B,KAAAu2B,cAAAtd,gBAAAqd,EAAAH,MAAAG,EAAAF,SAZA,SAAAvM,GACA,OAAA,WACA,IAAAxR,EAAArY,KAAAu2B,cACAC,EAAAx2B,KAAAy2B,aACA,OAAAD,IAAAX,GAAAxd,EAAAE,gBAAAke,eAAAZ,EACAxd,EAAAC,cAAAuR,GACAxR,EAAAY,gBAAAud,EAAA3M,MAcAyM,GAGA,IAAAI,EAAA,EAEA,SAAAN,IACA,OAAA,IAAAO,EAGA,SAAAA,IACA32B,KAAAwkB,EAAA,OAAAkS,GAAAnmB,SAAA,IAGAomB,EAAAz0B,UAAAk0B,EAAAl0B,UAAA,CACAC,YAAAw0B,EACAt0B,IAAA,SAAAkc,GAEA,IADA,IAAAqY,EAAA52B,KAAAwkB,IACAoS,KAAArY,IAAA,KAAAA,EAAAA,EAAAsY,YAAA,OACA,OAAAtY,EAAAqY,IAEAn1B,IAAA,SAAA8c,EAAAhd,GACA,OAAAgd,EAAAve,KAAAwkB,GAAAjjB,GAEAe,OAAA,SAAAic,GACA,OAAAve,KAAAwkB,KAAAjG,UAAAA,EAAAve,KAAAwkB,IAEAjU,SAAA,WACA,OAAAvQ,KAAAwkB,IAIA,IAAAsS,EAAA,SAAAC,GACA,OAAA,WACA,OAAA/2B,KAAAg3B,QAAAD,KAIA,GAAA,oBAAA1e,SAAA,CACA,IAAA4e,EAAA5e,SAAAE,gBACA,IAAA0e,EAAAD,QAAA,CACA,IAAAE,EAAAD,EAAAE,uBACAF,EAAAG,mBACAH,EAAAI,oBACAJ,EAAAK,iBACAR,EAAA,SAAAC,GACA,OAAA,WACA,OAAAG,EAAAn2B,KAAAf,KAAA+2B,MAMA,IAAAQ,EAAAT,EAEAU,EAAA,GAEA/3B,EAAAg4B,MAAA,KAEA,oBAAApf,WAEA,iBADAA,SAAAE,kBAEAif,EAAA,CAAAE,WAAA,YAAAC,WAAA,cAIA,SAAAC,EAAAC,EAAAxhB,EAAA0V,GAEA,OADA8L,EAAAC,EAAAD,EAAAxhB,EAAA0V,GACA,SAAA0L,GACA,IAAAM,EAAAN,EAAAO,cACAD,IAAAA,IAAA/3B,MAAA,EAAA+3B,EAAAE,wBAAAj4B,QACA63B,EAAA92B,KAAAf,KAAAy3B,IAKA,SAAAK,EAAAD,EAAAxhB,EAAA0V,GACA,OAAA,SAAAmM,GACA,IAAAC,EAAA14B,EAAAg4B,MACAh4B,EAAAg4B,MAAAS,EACA,IACAL,EAAA92B,KAAAf,KAAAA,KAAAo4B,SAAA/hB,EAAA0V,GACA,QACAtsB,EAAAg4B,MAAAU,IAaA,SAAAE,EAAArO,GACA,OAAA,WACA,IAAA7H,EAAAniB,KAAAs4B,KACA,GAAAnW,EAAA,CACA,IAAA,IAAA7hB,EAAAgmB,EAAA,EAAA/lB,GAAA,EAAA2O,EAAAiT,EAAAnhB,OAAAslB,EAAApX,IAAAoX,EACAhmB,EAAA6hB,EAAAmE,GAAA0D,EAAA9J,MAAA5f,EAAA4f,OAAA8J,EAAA9J,MAAA5f,EAAAupB,OAAAG,EAAAH,KAGA1H,IAAA5hB,GAAAD,EAFAN,KAAAu4B,oBAAAj4B,EAAA4f,KAAA5f,EAAAu3B,SAAAv3B,EAAAk4B,WAKAj4B,EAAA4hB,EAAAnhB,OAAAT,SACAP,KAAAs4B,OAIA,SAAAG,EAAAzO,EAAAzoB,EAAAi3B,GACA,IAAAE,EAAAlB,EAAA7nB,eAAAqa,EAAA9J,MAAA0X,EAAAE,EACA,OAAA,SAAA3zB,EAAA5D,EAAAwrB,GACA,IAAAzrB,EAAA6hB,EAAAniB,KAAAs4B,KAAAT,EAAAa,EAAAn3B,EAAAhB,EAAAwrB,GACA,GAAA5J,EAAA,IAAA,IAAAmE,EAAA,EAAApX,EAAAiT,EAAAnhB,OAAAslB,EAAApX,IAAAoX,EACA,IAAAhmB,EAAA6hB,EAAAmE,IAAApG,OAAA8J,EAAA9J,MAAA5f,EAAAupB,OAAAG,EAAAH,KAIA,OAHA7pB,KAAAu4B,oBAAAj4B,EAAA4f,KAAA5f,EAAAu3B,SAAAv3B,EAAAk4B,SACAx4B,KAAA24B,iBAAAr4B,EAAA4f,KAAA5f,EAAAu3B,SAAAA,EAAAv3B,EAAAk4B,QAAAA,QACAl4B,EAAAiB,MAAAA,GAIAvB,KAAA24B,iBAAA3O,EAAA9J,KAAA2X,EAAAW,GACAl4B,EAAA,CAAA4f,KAAA8J,EAAA9J,KAAA2J,KAAAG,EAAAH,KAAAtoB,MAAAA,EAAAs2B,SAAAA,EAAAW,QAAAA,GACArW,EACAA,EAAAzf,KAAApC,GADAN,KAAAs4B,KAAA,CAAAh4B,IAqCA,SAAAs4B,IAEA,IADA,IAAA/iB,EAAAgjB,EAAAp5B,EAAAg4B,MACA5hB,EAAAgjB,EAAAD,aAAAC,EAAAhjB,EACA,OAAAgjB,EAGA,SAAAC,EAAAva,EAAAkZ,GACA,IAAAnY,EAAAf,EAAAwa,iBAAAxa,EAEA,GAAAe,EAAA0Z,eAAA,CACA,IAAAF,EAAAxZ,EAAA0Z,iBAGA,OAFAF,EAAA1mB,EAAAqlB,EAAAwB,QAAAH,EAAAvmB,EAAAklB,EAAAyB,QAEA,EADAJ,EAAAA,EAAAK,gBAAA5a,EAAA6a,eAAAC,YACAjnB,EAAA0mB,EAAAvmB,GAGA,IAAA+mB,EAAA/a,EAAAgb,wBACA,MAAA,CAAA9B,EAAAwB,QAAAK,EAAAzT,KAAAtH,EAAAib,WAAA/B,EAAAyB,QAAAI,EAAAG,IAAAlb,EAAAmb,WASA,SAAAC,KAEA,SAAA5C,EAAAA,GACA,OAAA,MAAAA,EAAA4C,EAAA,WACA,OAAA35B,KAAA45B,cAAA7C,IAmBA,SAAAh0B,IACA,MAAA,GAGA,SAAA82B,EAAA9C,GACA,OAAA,MAAAA,EAAAh0B,EAAA,WACA,OAAA/C,KAAA85B,iBAAA/C,IAiCA,SAAAgD,EAAAC,GACA,OAAA,IAAAt4B,MAAAs4B,EAAAh5B,QAOA,SAAAi5B,EAAAv1B,EAAAw1B,GACAl6B,KAAAu2B,cAAA7xB,EAAA6xB,cACAv2B,KAAAy2B,aAAA/xB,EAAA+xB,aACAz2B,KAAAm6B,MAAA,KACAn6B,KAAAo6B,QAAA11B,EACA1E,KAAAo4B,SAAA8B,EAGAD,EAAA/3B,UAAA,CACAC,YAAA83B,EACArhB,YAAA,SAAAyhB,GAAA,OAAAr6B,KAAAo6B,QAAAE,aAAAD,EAAAr6B,KAAAm6B,QACAG,aAAA,SAAAD,EAAAE,GAAA,OAAAv6B,KAAAo6B,QAAAE,aAAAD,EAAAE,IACAX,cAAA,SAAA7C,GAAA,OAAA/2B,KAAAo6B,QAAAR,cAAA7C,IACA+C,iBAAA,SAAA/C,GAAA,OAAA/2B,KAAAo6B,QAAAN,iBAAA/C,KASA,IAAAyD,EAAA,IAEA,SAAAC,EAAA/1B,EAAAqnB,EAAAxM,EAAAya,EAAAhW,EAAApE,GASA,IARA,IACArB,EADAhe,EAAA,EAEAm6B,EAAA3O,EAAA/qB,OACA25B,EAAA/a,EAAA5e,OAKAT,EAAAo6B,IAAAp6B,GACAge,EAAAwN,EAAAxrB,KACAge,EAAA6Z,SAAAxY,EAAArf,GACAy5B,EAAAz5B,GAAAge,GAEAgB,EAAAhf,GAAA,IAAA05B,EAAAv1B,EAAAkb,EAAArf,IAKA,KAAAA,EAAAm6B,IAAAn6B,GACAge,EAAAwN,EAAAxrB,MACAyjB,EAAAzjB,GAAAge,GAKA,SAAAqc,EAAAl2B,EAAAqnB,EAAAxM,EAAAya,EAAAhW,EAAApE,EAAApe,GACA,IAAAjB,EACAge,EAKA3a,EAJAi3B,EAAA,GACAH,EAAA3O,EAAA/qB,OACA25B,EAAA/a,EAAA5e,OACA85B,EAAA,IAAAp5B,MAAAg5B,GAKA,IAAAn6B,EAAA,EAAAA,EAAAm6B,IAAAn6B,GACAge,EAAAwN,EAAAxrB,MACAu6B,EAAAv6B,GAAAqD,EAAA42B,EAAAh5B,EAAAT,KAAAwd,EAAAA,EAAA6Z,SAAA73B,EAAAwrB,GACAnoB,KAAAi3B,EACA7W,EAAAzjB,GAAAge,EAEAsc,EAAAj3B,GAAA2a,GAQA,IAAAhe,EAAA,EAAAA,EAAAo6B,IAAAp6B,GAEAge,EAAAsc,EADAj3B,EAAA42B,EAAAh5B,EAAAT,KAAA2D,EAAAkb,EAAArf,GAAAA,EAAAqf,OAEAoa,EAAAz5B,GAAAge,GACA6Z,SAAAxY,EAAArf,GACAs6B,EAAAj3B,GAAA,MAEA2b,EAAAhf,GAAA,IAAA05B,EAAAv1B,EAAAkb,EAAArf,IAKA,IAAAA,EAAA,EAAAA,EAAAm6B,IAAAn6B,GACAge,EAAAwN,EAAAxrB,KAAAs6B,EAAAC,EAAAv6B,MAAAge,IACAyF,EAAAzjB,GAAAge,GAsGA,SAAAuB,EAAAnf,EAAAuD,GACA,OAAAvD,EAAAuD,GAAA,EAAAA,EAAAvD,EAAA,EAAAuD,GAAAvD,EAAA,EAAAiP,IAyGA,SAAA4I,EAAA+F,GACA,OAAAA,EAAAgY,eAAAhY,EAAAgY,cAAA/d,aACA+F,EAAAlG,UAAAkG,GACAA,EAAA/F,YAgEA,SAAAuiB,EAAAjlB,GACA,OAAAA,EAAA3G,OAAA4J,MAAA,SAGA,SAAAiiB,EAAAzc,GACA,OAAAA,EAAAyc,WAAA,IAAAC,EAAA1c,GAGA,SAAA0c,EAAA1c,GACAve,KAAAk7B,MAAA3c,EACAve,KAAAm7B,OAAAJ,EAAAxc,EAAA6c,aAAA,UAAA,IAuBA,SAAAC,EAAA9c,EAAA+c,GAEA,IADA,IAAAC,EAAAP,EAAAzc,GAAAhe,GAAA,EAAAH,EAAAk7B,EAAAt6B,SACAT,EAAAH,GAAAm7B,EAAAt4B,IAAAq4B,EAAA/6B,IAGA,SAAAi7B,EAAAjd,EAAA+c,GAEA,IADA,IAAAC,EAAAP,EAAAzc,GAAAhe,GAAA,EAAAH,EAAAk7B,EAAAt6B,SACAT,EAAAH,GAAAm7B,EAAAj5B,OAAAg5B,EAAA/6B,IAoCA,SAAAk7B,IACAz7B,KAAA07B,YAAA,GAyBA,SAAAC,IACA37B,KAAA47B,UAAA,GAyBA,SAAA5L,IACAhwB,KAAA67B,aAAA77B,KAAA62B,WAAAje,YAAA5Y,MAOA,SAAA87B,IACA97B,KAAA+7B,iBAAA/7B,KAAA62B,WAAAyD,aAAAt6B,KAAAA,KAAA62B,WAAAmF,YAcA,SAAAC,IACA,OAAA,KAWA,SAAA35B,IACA,IAAAoC,EAAA1E,KAAA62B,WACAnyB,GAAAA,EAAAoU,YAAA9Y,MAaA,SAAAk8B,EAAA3d,EAAA2B,EAAAic,GACA,IAAAt8B,EAAA2Y,EAAA+F,GACAkZ,EAAA53B,EAAAu8B,YAEA3E,EACAA,EAAA,IAAAA,EAAAvX,EAAAic,IAEA1E,EAAA53B,EAAAwY,SAAAgkB,YAAA,SACAF,GAAA1E,EAAA6E,UAAApc,EAAAic,EAAAI,QAAAJ,EAAAK,YAAA/E,EAAAgF,OAAAN,EAAAM,QACAhF,EAAA6E,UAAApc,GAAA,GAAA,IAGA3B,EAAA2d,cAAAzE,GAjLAwD,EAAA/4B,UAAA,CACAe,IAAA,SAAA4mB,GACA7pB,KAAAm7B,OAAAzZ,QAAAmI,GACA,IACA7pB,KAAAm7B,OAAAz4B,KAAAmnB,GACA7pB,KAAAk7B,MAAAhiB,aAAA,QAAAlZ,KAAAm7B,OAAA3kB,KAAA,QAGAlU,OAAA,SAAAunB,GACA,IAAAtpB,EAAAP,KAAAm7B,OAAAzZ,QAAAmI,GACA,GAAAtpB,IACAP,KAAAm7B,OAAAuB,OAAAn8B,EAAA,GACAP,KAAAk7B,MAAAhiB,aAAA,QAAAlZ,KAAAm7B,OAAA3kB,KAAA,QAGAmmB,SAAA,SAAA9S,GACA,OAAA,GAAA7pB,KAAAm7B,OAAAzZ,QAAAmI,KAsLA,IAAA+S,EAAA,CAAA,MAEA,SAAAC,EAAAC,EAAAC,GACA/8B,KAAAg9B,QAAAF,EACA98B,KAAAi9B,SAAAF,EAGA,SAAAG,IACA,OAAA,IAAAL,EAAA,CAAA,CAAAxkB,SAAAE,kBAAAqkB,GAGAC,EAAA36B,UAAAg7B,EAAAh7B,UAAA,CACAC,YAAA06B,EACA9e,OA1oBA,SAAAA,GACA,mBAAAA,IAAAA,EAAAgZ,EAAAhZ,IAEA,IAAA,IAAA+e,EAAA98B,KAAAg9B,QAAA9tB,EAAA4tB,EAAA97B,OAAAm8B,EAAA,IAAAz7B,MAAAwN,GAAAoX,EAAA,EAAAA,EAAApX,IAAAoX,EACA,IAAA,IAAA/H,EAAA6e,EAAArR,EAAA+Q,EAAAxW,GAAAlmB,EAAA2rB,EAAA/qB,OAAAq8B,EAAAF,EAAA7W,GAAA,IAAA5kB,MAAAtB,GAAAG,EAAA,EAAAA,EAAAH,IAAAG,GACAge,EAAAwN,EAAAxrB,MAAA68B,EAAArf,EAAAhd,KAAAwd,EAAAA,EAAA6Z,SAAA73B,EAAAwrB,MACA,aAAAxN,IAAA6e,EAAAhF,SAAA7Z,EAAA6Z,UACAiF,EAAA98B,GAAA68B,GAKA,OAAA,IAAAP,EAAAM,EAAAn9B,KAAAi9B,WA+nBAtd,UAlnBA,SAAA5B,GACA,mBAAAA,IAAAA,EAAA8b,EAAA9b,IAEA,IAAA,IAAA+e,EAAA98B,KAAAg9B,QAAA9tB,EAAA4tB,EAAA97B,OAAAm8B,EAAA,GAAAJ,EAAA,GAAAzW,EAAA,EAAAA,EAAApX,IAAAoX,EACA,IAAA,IAAA/H,EAAAwN,EAAA+Q,EAAAxW,GAAAlmB,EAAA2rB,EAAA/qB,OAAAT,EAAA,EAAAA,EAAAH,IAAAG,GACAge,EAAAwN,EAAAxrB,MACA48B,EAAAz6B,KAAAqb,EAAAhd,KAAAwd,EAAAA,EAAA6Z,SAAA73B,EAAAwrB,IACAgR,EAAAr6B,KAAA6b,IAKA,OAAA,IAAAse,EAAAM,EAAAJ,IAumBAxb,OApmBA,SAAAiK,GACA,mBAAAA,IAAAA,EAAA+L,EAAA/L,IAEA,IAAA,IAAAsR,EAAA98B,KAAAg9B,QAAA9tB,EAAA4tB,EAAA97B,OAAAm8B,EAAA,IAAAz7B,MAAAwN,GAAAoX,EAAA,EAAAA,EAAApX,IAAAoX,EACA,IAAA,IAAA/H,EAAAwN,EAAA+Q,EAAAxW,GAAAlmB,EAAA2rB,EAAA/qB,OAAAq8B,EAAAF,EAAA7W,GAAA,GAAA/lB,EAAA,EAAAA,EAAAH,IAAAG,GACAge,EAAAwN,EAAAxrB,KAAAirB,EAAAzqB,KAAAwd,EAAAA,EAAA6Z,SAAA73B,EAAAwrB,IACAsR,EAAA36B,KAAA6b,GAKA,OAAA,IAAAse,EAAAM,EAAAn9B,KAAAi9B,WA0lBArd,KAjfA,SAAAre,EAAAC,GACA,IAAAD,EAGA,OAFAqe,EAAA,IAAAle,MAAA1B,KAAA8C,QAAAwjB,GAAA,EACAtmB,KAAAsB,KAAA,SAAA6C,GAAAyb,IAAA0G,GAAAniB,IACAyb,EAGA,IAAA0d,EAAA97B,EAAAo5B,EAAAH,EACAsC,EAAA/8B,KAAAi9B,SACAH,EAAA98B,KAAAg9B,QAEA,mBAAAz7B,IAAAA,EAzFA,SAAA6Q,GACA,OAAA,WACA,OAAAA,GAuFAmC,CAAAhT,IAEA,IAAA,IAAA2N,EAAA4tB,EAAA97B,OAAAg5B,EAAA,IAAAt4B,MAAAwN,GAAAqQ,EAAA,IAAA7d,MAAAwN,GAAA8U,EAAA,IAAAtiB,MAAAwN,GAAAoX,EAAA,EAAAA,EAAApX,IAAAoX,EAAA,CACA,IAAA5hB,EAAAq4B,EAAAzW,GACAyF,EAAA+Q,EAAAxW,GACAoU,EAAA3O,EAAA/qB,OACA4e,EAAAre,EAAAR,KAAA2D,EAAAA,GAAAA,EAAA0zB,SAAA9R,EAAAyW,GACApC,EAAA/a,EAAA5e,OACAu8B,EAAAhe,EAAA+G,GAAA,IAAA5kB,MAAAi5B,GACA6C,EAAAxD,EAAA1T,GAAA,IAAA5kB,MAAAi5B,GAGA2C,EAAA54B,EAAAqnB,EAAAwR,EAAAC,EAFAxZ,EAAAsC,GAAA,IAAA5kB,MAAAg5B,GAEA9a,EAAApe,GAKA,IAAA,IAAAi8B,EAAAlD,EAAAhR,EAAA,EAAAC,EAAA,EAAAD,EAAAoR,IAAApR,EACA,GAAAkU,EAAAF,EAAAhU,GAAA,CAEA,IADAC,GAAAD,IAAAC,EAAAD,EAAA,KACAgR,EAAAiD,EAAAhU,OAAAA,EAAAmR,IACA8C,EAAAtD,MAAAI,GAAA,MAQA,OAHAP,EAAA,IAAA6C,EAAA7C,EAAA+C,IACAW,OAAAne,EACAya,EAAA2D,MAAA3Z,EACAgW,GA0cAza,MAplBA,WACA,OAAA,IAAAsd,EAAA78B,KAAA09B,QAAA19B,KAAAg9B,QAAA57B,IAAA24B,GAAA/5B,KAAAi9B,WAolBAjZ,KAxcA,WACA,OAAA,IAAA6Y,EAAA78B,KAAA29B,OAAA39B,KAAAg9B,QAAA57B,IAAA24B,GAAA/5B,KAAAi9B,WAwcA/Y,MArcA,SAAAgZ,GAEA,IAAA,IAAAU,EAAA59B,KAAAg9B,QAAAa,EAAAX,EAAAF,QAAAc,EAAAF,EAAA58B,OAAA+P,EAAA8sB,EAAA78B,OAAAkO,EAAAiB,KAAAE,IAAAytB,EAAA/sB,GAAAgtB,EAAA,IAAAr8B,MAAAo8B,GAAAxX,EAAA,EAAAA,EAAApX,IAAAoX,EACA,IAAA,IAAA/H,EAAAyf,EAAAJ,EAAAtX,GAAA2X,EAAAJ,EAAAvX,GAAAlmB,EAAA49B,EAAAh9B,OAAAkjB,EAAA6Z,EAAAzX,GAAA,IAAA5kB,MAAAtB,GAAAG,EAAA,EAAAA,EAAAH,IAAAG,GACAge,EAAAyf,EAAAz9B,IAAA09B,EAAA19B,MACA2jB,EAAA3jB,GAAAge,GAKA,KAAA+H,EAAAwX,IAAAxX,EACAyX,EAAAzX,GAAAsX,EAAAtX,GAGA,OAAA,IAAAuW,EAAAkB,EAAA/9B,KAAAi9B,WAwbA74B,MArbA,WAEA,IAAA,IAAA04B,EAAA98B,KAAAg9B,QAAA1W,GAAA,EAAApX,EAAA4tB,EAAA97B,SAAAslB,EAAApX,GACA,IAAA,IAAAqP,EAAAwN,EAAA+Q,EAAAxW,GAAA/lB,EAAAwrB,EAAA/qB,OAAA,EAAAu5B,EAAAxO,EAAAxrB,GAAA,KAAAA,IACAge,EAAAwN,EAAAxrB,MACAg6B,GAAAA,IAAAhc,EAAAsd,aAAAtB,EAAA1D,WAAAyD,aAAA/b,EAAAgc,GACAA,EAAAhc,GAKA,OAAAve,MA2aA2D,KAxaA,SAAAgiB,GAGA,SAAAuY,EAAAv9B,EAAAuD,GACA,OAAAvD,GAAAuD,EAAAyhB,EAAAhlB,EAAAy3B,SAAAl0B,EAAAk0B,WAAAz3B,GAAAuD,EAHAyhB,EAAAA,GAAA7F,EAMA,IAAA,IAAAgd,EAAA98B,KAAAg9B,QAAA9tB,EAAA4tB,EAAA97B,OAAAm9B,EAAA,IAAAz8B,MAAAwN,GAAAoX,EAAA,EAAAA,EAAApX,IAAAoX,EAAA,CACA,IAAA,IAAA/H,EAAAwN,EAAA+Q,EAAAxW,GAAAlmB,EAAA2rB,EAAA/qB,OAAAo9B,EAAAD,EAAA7X,GAAA,IAAA5kB,MAAAtB,GAAAG,EAAA,EAAAA,EAAAH,IAAAG,GACAge,EAAAwN,EAAAxrB,MACA69B,EAAA79B,GAAAge,GAGA6f,EAAAz6B,KAAAu6B,GAGA,OAAA,IAAArB,EAAAsB,EAAAn+B,KAAAi9B,UAAA74B,SAyZArD,KAlZA,WACA,IAAA+oB,EAAA7Z,UAAA,GAGA,OAFAA,UAAA,GAAAjQ,KACA8pB,EAAAxmB,MAAA,KAAA2M,WACAjQ,MA+YA6iB,MA5YA,WACA,IAAAA,EAAA,IAAAnhB,MAAA1B,KAAA8C,QAAAvC,GAAA,EAEA,OADAP,KAAAsB,KAAA,WAAAuhB,IAAAtiB,GAAAP,OACA6iB,GA0YAtE,KAvYA,WAEA,IAAA,IAAAue,EAAA98B,KAAAg9B,QAAA1W,EAAA,EAAApX,EAAA4tB,EAAA97B,OAAAslB,EAAApX,IAAAoX,EACA,IAAA,IAAAyF,EAAA+Q,EAAAxW,GAAA/lB,EAAA,EAAAH,EAAA2rB,EAAA/qB,OAAAT,EAAAH,IAAAG,EAAA,CACA,IAAAge,EAAAwN,EAAAxrB,GACA,GAAAge,EAAA,OAAAA,EAIA,OAAA,MA+XAzb,KA5XA,WACA,IAAAA,EAAA,EAEA,OADA9C,KAAAsB,KAAA,aAAAwB,IACAA,GA0XAC,MAvXA,WACA,OAAA/C,KAAAue,QAuXAjd,KApXA,SAAAwoB,GAEA,IAAA,IAAAgT,EAAA98B,KAAAg9B,QAAA1W,EAAA,EAAApX,EAAA4tB,EAAA97B,OAAAslB,EAAApX,IAAAoX,EACA,IAAA,IAAA/H,EAAAwN,EAAA+Q,EAAAxW,GAAA/lB,EAAA,EAAAH,EAAA2rB,EAAA/qB,OAAAT,EAAAH,IAAAG,GACAge,EAAAwN,EAAAxrB,KAAAupB,EAAA/oB,KAAAwd,EAAAA,EAAA6Z,SAAA73B,EAAAwrB,GAIA,OAAA/rB,MA6WAme,KAlUA,SAAA0L,EAAAtoB,GACA,IAAA+0B,EAAAJ,EAAArM,GAEA,GAAA5Z,UAAAjP,OAAA,EAAA,CACA,IAAAud,EAAAve,KAAAue,OACA,OAAA+X,EAAAF,MACA7X,EAAA8f,eAAA/H,EAAAH,MAAAG,EAAAF,OACA7X,EAAA6c,aAAA9E,GAGA,OAAAt2B,KAAAsB,MAAA,MAAAC,EACA+0B,EAAAF,MA7CA,SAAAE,GACA,OAAA,WACAt2B,KAAAs+B,kBAAAhI,EAAAH,MAAAG,EAAAF,SARA,SAAAvM,GACA,OAAA,WACA7pB,KAAAu+B,gBAAA1U,KAiDA,mBAAAtoB,EACA+0B,EAAAF,MApBA,SAAAE,EAAA/0B,GACA,OAAA,WACA,IAAAyC,EAAAzC,EAAA+B,MAAAtD,KAAAiQ,WACA,MAAAjM,EAAAhE,KAAAs+B,kBAAAhI,EAAAH,MAAAG,EAAAF,OACAp2B,KAAAw+B,eAAAlI,EAAAH,MAAAG,EAAAF,MAAApyB,KAZA,SAAA6lB,EAAAtoB,GACA,OAAA,WACA,IAAAyC,EAAAzC,EAAA+B,MAAAtD,KAAAiQ,WACA,MAAAjM,EAAAhE,KAAAu+B,gBAAA1U,GACA7pB,KAAAkZ,aAAA2Q,EAAA7lB,KAyBAsyB,EAAAF,MAnCA,SAAAE,EAAA/0B,GACA,OAAA,WACAvB,KAAAw+B,eAAAlI,EAAAH,MAAAG,EAAAF,MAAA70B,KARA,SAAAsoB,EAAAtoB,GACA,OAAA,WACAvB,KAAAkZ,aAAA2Q,EAAAtoB,MAuCA+0B,EAAA/0B,KAsTAkX,MAzRA,SAAAoR,EAAAtoB,EAAAk9B,GACA,IAAAlgB,EACA,OAAA,EAAAtO,UAAAjP,OACAhB,KAAAsB,MAAA,MAAAC,EAvBA,SAAAsoB,GACA,OAAA,WACA7pB,KAAAyY,MAAAimB,eAAA7U,KAsBA,mBAAAtoB,EAZA,SAAAsoB,EAAAtoB,EAAAk9B,GACA,OAAA,WACA,IAAAz6B,EAAAzC,EAAA+B,MAAAtD,KAAAiQ,WACA,MAAAjM,EAAAhE,KAAAyY,MAAAimB,eAAA7U,GACA7pB,KAAAyY,MAAAkmB,YAAA9U,EAAA7lB,EAAAy6B,KAVA,SAAA5U,EAAAtoB,EAAAk9B,GACA,OAAA,WACAz+B,KAAAyY,MAAAkmB,YAAA9U,EAAAtoB,EAAAk9B,MAkBA5U,EAAAtoB,EAAA,MAAAk9B,EAAA,GAAAA,IACAjmB,EAAA+F,EAAAve,KAAAue,QACA5F,iBAAA4F,EAAA,MACA1F,iBAAAgR,IAiRAtnB,SA1PA,SAAAsnB,EAAAtoB,GACA,OAAA,EAAA0O,UAAAjP,OACAhB,KAAAsB,MAAA,MAAAC,EAtBA,SAAAsoB,GACA,OAAA,kBACA7pB,KAAA6pB,KAqBA,mBAAAtoB,EAXA,SAAAsoB,EAAAtoB,GACA,OAAA,WACA,IAAAyC,EAAAzC,EAAA+B,MAAAtD,KAAAiQ,WACA,MAAAjM,SAAAhE,KAAA6pB,GACA7pB,KAAA6pB,GAAA7lB,IAVA,SAAA6lB,EAAAtoB,GACA,OAAA,WACAvB,KAAA6pB,GAAAtoB,KAiBAsoB,EAAAtoB,IACAvB,KAAAue,OAAAsL,IAqPA+U,QArLA,SAAA/U,EAAAtoB,GACA,IAAA+5B,EAAAP,EAAAlR,EAAA,IAEA,GAAA5Z,UAAAjP,OAAA,EAAA,CAEA,IADA,IAAAu6B,EAAAP,EAAAh7B,KAAAue,QAAAhe,GAAA,EAAAH,EAAAk7B,EAAAt6B,SACAT,EAAAH,GAAA,IAAAm7B,EAAAoB,SAAArB,EAAA/6B,IAAA,OAAA,EACA,OAAA,EAGA,OAAAP,KAAAsB,MAAA,mBAAAC,EAfA,SAAA+5B,EAAA/5B,GACA,OAAA,YACAA,EAAA+B,MAAAtD,KAAAiQ,WAAAorB,EAAAG,GAAAx7B,KAAAs7B,KAcA/5B,EA5BA,SAAA+5B,GACA,OAAA,WACAD,EAAAr7B,KAAAs7B,KAIA,SAAAA,GACA,OAAA,WACAE,EAAAx7B,KAAAs7B,MAsBAA,EAAA/5B,KA0KAqc,KAtJA,SAAArc,GACA,OAAA0O,UAAAjP,OACAhB,KAAAsB,KAAA,MAAAC,EACAk6B,GAAA,mBAAAl6B,EAVA,SAAAA,GACA,OAAA,WACA,IAAAyC,EAAAzC,EAAA+B,MAAAtD,KAAAiQ,WACAjQ,KAAA07B,YAAA,MAAA13B,EAAA,GAAAA,IATA,SAAAzC,GACA,OAAA,WACAvB,KAAA07B,YAAAn6B,KAgBAA,IACAvB,KAAAue,OAAAmd,aAiJAmD,KA7HA,SAAAt9B,GACA,OAAA0O,UAAAjP,OACAhB,KAAAsB,KAAA,MAAAC,EACAo6B,GAAA,mBAAAp6B,EAVA,SAAAA,GACA,OAAA,WACA,IAAAyC,EAAAzC,EAAA+B,MAAAtD,KAAAiQ,WACAjQ,KAAA47B,UAAA,MAAA53B,EAAA,GAAAA,IATA,SAAAzC,GACA,OAAA,WACAvB,KAAA47B,UAAAr6B,KAgBAA,IACAvB,KAAAue,OAAAqd,WAwHA5L,MAjHA,WACA,OAAAhwB,KAAAsB,KAAA0uB,IAiHA8L,MA1GA,WACA,OAAA97B,KAAAsB,KAAAw6B,IA0GAxd,OAvGA,SAAAuL,GACA,IAAAjlB,EAAA,mBAAAilB,EAAAA,EAAAwM,EAAAxM,GACA,OAAA7pB,KAAA+d,OAAA,WACA,OAAA/d,KAAA4Y,YAAAhU,EAAAtB,MAAAtD,KAAAiQ,eAqGA6uB,OA7FA,SAAAjV,EAAAkV,GACA,IAAAn6B,EAAA,mBAAAilB,EAAAA,EAAAwM,EAAAxM,GACA9L,EAAA,MAAAghB,EAAA9C,EAAA,mBAAA8C,EAAAA,EAAAhI,EAAAgI,GACA,OAAA/+B,KAAA+d,OAAA,WACA,OAAA/d,KAAAs6B,aAAA11B,EAAAtB,MAAAtD,KAAAiQ,WAAA8N,EAAAza,MAAAtD,KAAAiQ,YAAA,SA0FA3N,OAjFA,WACA,OAAAtC,KAAAsB,KAAAgB,IAiFA43B,MA9EA,SAAA34B,GACA,OAAA0O,UAAAjP,OACAhB,KAAAuC,SAAA,WAAAhB,GACAvB,KAAAue,OAAA6Z,UA4EAjW,GAvuBA,SAAA6H,EAAAzoB,EAAAi3B,GACA,IAAAj4B,EAAAF,EAAA6pB,EA5CA,SAAAA,GACA,OAAAA,EAAA/a,OAAA4J,MAAA,SAAA3X,IAAA,SAAAf,GACA,IAAAwpB,EAAA,GAAAtpB,EAAAF,EAAAqhB,QAAA,KAEA,OADA,GAAAnhB,IAAAspB,EAAAxpB,EAAAsC,MAAApC,EAAA,GAAAF,EAAAA,EAAAsC,MAAA,EAAApC,IACA,CAAA2f,KAAA7f,EAAAwpB,KAAAA,KAwCAO,CAAAJ,EAAA,IAAA5pB,EAAA8pB,EAAAlpB,OAEA,KAAAiP,UAAAjP,OAAA,GAAA,CAcA,IAFAmhB,EAAA5gB,EAAAk3B,EAAAJ,EACA,MAAAG,IAAAA,GAAA,GACAj4B,EAAA,EAAAA,EAAAH,IAAAG,EAAAP,KAAAsB,KAAA6gB,EAAA+H,EAAA3pB,GAAAgB,EAAAi3B,IACA,OAAAx4B,KAdA,IAAAmiB,EAAAniB,KAAAue,OAAA+Z,KACA,GAAAnW,EAAA,IAAA,IAAA7hB,EAAAgmB,EAAA,EAAApX,EAAAiT,EAAAnhB,OAAAslB,EAAApX,IAAAoX,EACA,IAAA/lB,EAAA,EAAAD,EAAA6hB,EAAAmE,GAAA/lB,EAAAH,IAAAG,EACA,IAAAF,EAAA6pB,EAAA3pB,IAAA2f,OAAA5f,EAAA4f,MAAA7f,EAAAwpB,OAAAvpB,EAAAupB,KACA,OAAAvpB,EAAAiB,OAguBAsiB,SA/CA,SAAA3D,EAAAic,GACA,OAAAn8B,KAAAsB,MAAA,mBAAA66B,EAPA,SAAAjc,EAAAic,GACA,OAAA,WACA,OAAAD,EAAAl8B,KAAAkgB,EAAAic,EAAA74B,MAAAtD,KAAAiQ,cARA,SAAAiQ,EAAAic,GACA,OAAA,WACA,OAAAD,EAAAl8B,KAAAkgB,EAAAic,MAaAjc,EAAAic,MAiFA18B,EAAA42B,QAAAA,EACA52B,EAAA22B,MAAAA,EACA32B,EAAAq3B,QAAAS,EACA93B,EAAAu/B,MA5tBA,SAAAzgB,GACA,IAAAkZ,EAAAmB,IAEA,OADAnB,EAAAwH,iBAAAxH,EAAAA,EAAAwH,eAAA,IACAnG,EAAAva,EAAAkZ,IA0tBAh4B,EAAAy2B,UAAAA,EACAz2B,EAAAq2B,WAAAA,EACAr2B,EAAAse,OAxCA,SAAAgZ,GACA,MAAA,iBAAAA,EACA,IAAA8F,EAAA,CAAA,CAAAxkB,SAAAuhB,cAAA7C,KAAA,CAAA1e,SAAAE,kBACA,IAAAskB,EAAA,CAAA,CAAA9F,IAAA6F,IAsCAn9B,EAAAkgB,UAnCA,SAAAoX,GACA,MAAA,iBAAAA,EACA,IAAA8F,EAAA,CAAAxkB,SAAAyhB,iBAAA/C,IAAA,CAAA1e,SAAAE,kBACA,IAAAskB,EAAA,CAAA,MAAA9F,EAAA,GAAAA,GAAA6F,IAiCAn9B,EAAAy9B,UAAAA,EACAz9B,EAAAs3B,SAAAA,EACAt3B,EAAAo6B,YAAAA,EACAp6B,EAAAy/B,MAjCA,SAAA3gB,EAAA4gB,EAAAC,GACAnvB,UAAAjP,OAAA,IAAAo+B,EAAAD,EAAAA,EAAAvG,IAAAqG,gBAEA,IAAA,IAAAC,EAAA3+B,EAAA,EAAAH,EAAA++B,EAAAA,EAAAn+B,OAAA,EAAAT,EAAAH,IAAAG,EACA,IAAA2+B,EAAAC,EAAA5+B,IAAA6+B,aAAAA,EACA,OAAAtG,EAAAva,EAAA2gB,GAIA,OAAA,MAyBAz/B,EAAA0/B,QAtBA,SAAA5gB,EAAA4gB,GACA,MAAAA,IAAAA,EAAAvG,IAAAuG,SAEA,IAAA,IAAA5+B,EAAA,EAAAH,EAAA++B,EAAAA,EAAAn+B,OAAA,EAAAq+B,EAAA,IAAA39B,MAAAtB,GAAAG,EAAAH,IAAAG,EACA8+B,EAAA9+B,GAAAu4B,EAAAva,EAAA4gB,EAAA5+B,IAGA,OAAA8+B,GAgBA5/B,EAAAI,OAAA2Y,EACA/Y,EAAA6/B,YAtwBA,SAAApH,EAAAL,EAAAvN,EAAAC,GACA,IAAA4N,EAAA14B,EAAAg4B,MACAS,EAAAU,YAAAn5B,EAAAg4B,MACAh4B,EAAAg4B,MAAAS,EACA,IACA,OAAAL,EAAAv0B,MAAAgnB,EAAAC,GACA,QACA9qB,EAAAg4B,MAAAU,IAiwBA9zB,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IAx8BAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,6BCHA,IAAA1E,EAAAyE,EAAAzE,EAIAE,KAJAuE,EAIA,SAAA9E,EAAA+tB,GAAA,aAEA,SAAA+R,EAAAp7B,GACA,GAAA,GAAAA,EAAAoO,GAAApO,EAAAoO,EAAA,IAAA,CACA,IAAAgD,EAAA,IAAAC,MAAA,EAAArR,EAAA+K,EAAA/K,EAAAA,EAAAA,EAAAq7B,EAAAr7B,EAAAs7B,EAAAt7B,EAAA6W,EAAA7W,EAAAu7B,GAEA,OADAnqB,EAAAoqB,YAAAx7B,EAAAoO,GACAgD,EAEA,OAAA,IAAAC,KAAArR,EAAAoO,EAAApO,EAAA+K,EAAA/K,EAAAA,EAAAA,EAAAq7B,EAAAr7B,EAAAs7B,EAAAt7B,EAAA6W,EAAA7W,EAAAu7B,GAGA,SAAAE,EAAAz7B,GACA,GAAA,GAAAA,EAAAoO,GAAApO,EAAAoO,EAAA,IAAA,CACA,IAAAgD,EAAA,IAAAC,KAAAA,KAAAqf,KAAA,EAAA1wB,EAAA+K,EAAA/K,EAAAA,EAAAA,EAAAq7B,EAAAr7B,EAAAs7B,EAAAt7B,EAAA6W,EAAA7W,EAAAu7B,IAEA,OADAnqB,EAAAsqB,eAAA17B,EAAAoO,GACAgD,EAEA,OAAA,IAAAC,KAAAA,KAAAqf,IAAA1wB,EAAAoO,EAAApO,EAAA+K,EAAA/K,EAAAA,EAAAA,EAAAq7B,EAAAr7B,EAAAs7B,EAAAt7B,EAAA6W,EAAA7W,EAAAu7B,IAGA,SAAAI,EAAAvtB,GACA,MAAA,CAAAA,EAAAA,EAAArD,EAAA,EAAA/K,EAAA,EAAAq7B,EAAA,EAAAC,EAAA,EAAAzkB,EAAA,EAAA0kB,EAAA,GAGA,SAAAjb,EAAAjB,GACA,IAAAuc,EAAAvc,EAAAwc,SACAC,EAAAzc,EAAAjO,KACA2qB,EAAA1c,EAAA2c,KACAC,EAAA5c,EAAA6c,QACAC,EAAA9c,EAAA+c,KACAC,EAAAhd,EAAAid,UACAC,EAAAld,EAAAmd,OACAC,EAAApd,EAAAqd,YAEAC,EAAAC,EAAAX,GACAY,EAAAC,EAAAb,GACAc,EAAAH,EAAAT,GACAa,EAAAF,EAAAX,GACAc,EAAAL,EAAAP,GACAa,EAAAJ,EAAAT,GACAc,EAAAP,EAAAL,GACAa,EAAAN,EAAAP,GACAc,EAAAT,EAAAH,GACAa,EAAAR,EAAAL,GAEAc,EAAA,CACA/gC,EAkPA,SAAAwD,GACA,OAAAq8B,EAAAr8B,EAAAw9B,WAlPAC,EAqPA,SAAAz9B,GACA,OAAAm8B,EAAAn8B,EAAAw9B,WArPAz9B,EAwPA,SAAAC,GACA,OAAAy8B,EAAAz8B,EAAA09B,aAxPA7uB,EA2PA,SAAA7O,GACA,OAAAu8B,EAAAv8B,EAAA09B,aA3PArhC,EAAA,KACA2D,EAAA29B,EACA3hC,EAAA2hC,EACAtiC,EAAAuiC,GACAvC,EAAAwC,EACAllB,EAAAmlB,EACA3b,EAAA4b,GACAxC,EAAAyC,GACAjzB,EAAAkzB,GACA3C,EAAA4C,GACAvhC,EAoPA,SAAAqD,GACA,OAAAi8B,IAAA,IAAAj8B,EAAAm+B,cApPAC,EAAAC,GACA/xB,EAAAgyB,GACAznB,EAAA0nB,GACAhiC,EAAAiiC,GACAC,EAAAC,GACAC,EAAAC,GACAC,EAAAC,GACAC,EAAAC,GACA/wB,EAAA,KACAgZ,EAAA,KACA7Y,EAAAkf,GACA2R,EAAAC,GACAC,EAAAC,GACArY,IAAAsY,IAGAC,EAAA,CACA9iC,EAsOA,SAAAwD,GACA,OAAAq8B,EAAAr8B,EAAAu/B,cAtOA9B,EAyOA,SAAAz9B,GACA,OAAAm8B,EAAAn8B,EAAAu/B,cAzOAx/B,EA4OA,SAAAC,GACA,OAAAy8B,EAAAz8B,EAAAw/B,gBA5OA3wB,EA+OA,SAAA7O,GACA,OAAAu8B,EAAAv8B,EAAAw/B,gBA/OAnjC,EAAA,KACA2D,EAAAy/B,GACAzjC,EAAAyjC,GACApkC,EAAAqkC,GACArE,EAAAsE,GACAhnB,EAAAinB,GACAzd,EAAA0d,GACAtE,EAAAuE,GACA/0B,EAAAg1B,GACAzE,EAAA0E,GACArjC,EAwOA,SAAAqD,GACA,OAAAi8B,IAAA,IAAAj8B,EAAAigC,iBAxOA7B,EAAAC,GACA/xB,EAAAgyB,GACAznB,EAAAqpB,GACA3jC,EAAA4jC,GACA1B,EAAA2B,GACAzB,EAAA0B,GACAxB,EAAAyB,GACAvB,EAAAwB,GACAtyB,EAAA,KACAgZ,EAAA,KACA7Y,EAAAoyB,GACAvB,EAAAwB,GACAtB,EAAAuB,GACA3Z,IAAAsY,IAGAsB,EAAA,CACAnkC,EAkJA,SAAAwD,EAAA2R,EAAAvV,GACA,IAAAH,EAAAghC,EAAA/xB,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAA6+B,EAAA3B,EAAAjhC,EAAA,GAAAgP,eAAA7O,EAAAH,EAAA,GAAAY,SAAA,GAnJA4gC,EAsJA,SAAAz9B,EAAA2R,EAAAvV,GACA,IAAAH,EAAA8gC,EAAA7xB,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAA6+B,EAAA7B,EAAA/gC,EAAA,GAAAgP,eAAA7O,EAAAH,EAAA,GAAAY,SAAA,GAvJAkD,EA0JA,SAAAC,EAAA2R,EAAAvV,GACA,IAAAH,EAAAohC,EAAAnyB,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAA+K,EAAAuyB,EAAArhC,EAAA,GAAAgP,eAAA7O,EAAAH,EAAA,GAAAY,SAAA,GA3JAgS,EA8JA,SAAA7O,EAAA2R,EAAAvV,GACA,IAAAH,EAAAkhC,EAAAjyB,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAA+K,EAAAqyB,EAAAnhC,EAAA,GAAAgP,eAAA7O,EAAAH,EAAA,GAAAY,SAAA,GA/JAR,EAkKA,SAAA2D,EAAA2R,EAAAvV,GACA,OAAAwkC,EAAA5gC,EAAA47B,EAAAjqB,EAAAvV,IAlKA4D,EAAA6gC,EACA7kC,EAAA6kC,EACAxlC,EAAAylC,EACAzF,EAAA0F,EACApoB,EAAAooB,EACA5e,EAAA6e,EACAzF,EAAA0F,EACAl2B,EAAAm2B,EACA5F,EAAA6F,EACAxkC,EA+HA,SAAAqD,EAAA2R,EAAAvV,GACA,IAAAH,EAAA0gC,EAAAzxB,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAArD,EAAAkgC,EAAA5gC,EAAA,GAAAgP,eAAA7O,EAAAH,EAAA,GAAAY,SAAA,GAhIAuhC,EAAAgD,EACA90B,EAAA+0B,EACAxqB,EAAAyqB,EACA/kC,EAAAglC,EACA9C,EAAA+C,EACA7C,EAAA8C,EACA5C,EAAA6C,EACA3C,EAAA4C,EACA1zB,EAmJA,SAAAjO,EAAA2R,EAAAvV,GACA,OAAAwkC,EAAA5gC,EAAA87B,EAAAnqB,EAAAvV,IAnJA6qB,EAsJA,SAAAjnB,EAAA2R,EAAAvV,GACA,OAAAwkC,EAAA5gC,EAAA+7B,EAAApqB,EAAAvV,IAtJAgS,EAAAwzB,EACA3C,EAAA4C,EACA1C,EAAA2C,EACA/a,IAAAgb,GAWA,SAAA5Z,EAAA7I,EAAAie,GACA,OAAA,SAAAnsB,GACA,IAIA/U,EACA2lC,EACAl3B,EANA6G,EAAA,GACAvV,GAAA,EACA+lB,EAAA,EACAlmB,EAAAqjB,EAAAziB,OAOA,IAFAuU,aAAAC,OAAAD,EAAA,IAAAC,MAAAD,MAEAhV,EAAAH,GACA,KAAAqjB,EAAAqJ,WAAAvsB,KACAuV,EAAApT,KAAA+gB,EAAA9gB,MAAA2jB,EAAA/lB,IACA,OAAA4lC,EAAAC,EAAA5lC,EAAAijB,EAAA4iB,SAAA9lC,KAAAC,EAAAijB,EAAA4iB,SAAA9lC,GACA4lC,EAAA,MAAA3lC,EAAA,IAAA,KACAyO,EAAAyyB,EAAAlhC,MAAAA,EAAAyO,EAAAsG,EAAA4wB,IACArwB,EAAApT,KAAAlC,GACA8lB,EAAA/lB,EAAA,GAKA,OADAuV,EAAApT,KAAA+gB,EAAA9gB,MAAA2jB,EAAA/lB,IACAuV,EAAAU,KAAA,KAIA,SAAA8vB,EAAA7iB,EAAA8iB,GACA,OAAA,SAAAzwB,GACA,IAEA8a,EAAAC,EAFA1sB,EAAA27B,EAAA,MAGA,GAFAiF,EAAA5gC,EAAAsf,EAAA3N,GAAA,GAAA,IAEAA,EAAA9U,OAAA,OAAA,KAGA,GAAA,MAAAmD,EAAA,OAAA,IAAAqR,KAAArR,EAAAo+B,GAMA,GAHA,MAAAp+B,IAAAA,EAAAq7B,EAAAr7B,EAAAq7B,EAAA,GAAA,GAAAr7B,EAAArD,GAGA,MAAAqD,EAAA,CACA,GAAAA,EAAA2+B,EAAA,GAAA,GAAA3+B,EAAA2+B,EAAA,OAAA,KACA,MAAA3+B,IAAAA,EAAA6+B,EAAA,GACA,MAAA7+B,GAEAysB,EAAA,GADAC,GAAAD,EAAAgP,EAAAE,EAAA37B,EAAAoO,KAAAmxB,cACA,IAAA7S,EAAArD,EAAAgZ,UAAA7f,KAAAiK,GAAApD,EAAAgZ,UAAA5V,GACAA,EAAApD,EAAA+G,OAAAtP,OAAA2L,EAAA,GAAAzsB,EAAA2+B,EAAA,IACA3+B,EAAAoO,EAAAqe,EAAA6V,iBACAtiC,EAAA+K,EAAA0hB,EAAA+S,cACAx/B,EAAAA,EAAAysB,EAAA8V,cAAAviC,EAAA6+B,EAAA,GAAA,IAGApS,EAAA,GADAC,GAAAD,EAAA2V,EAAAzG,EAAA37B,EAAAoO,KAAAovB,WACA,IAAA9Q,EAAArD,EAAAmZ,WAAAhgB,KAAAiK,GAAApD,EAAAmZ,WAAA/V,GACAA,EAAApD,EAAAqG,QAAA5O,OAAA2L,EAAA,GAAAzsB,EAAA2+B,EAAA,IACA3+B,EAAAoO,EAAAqe,EAAAgW,cACAziC,EAAA+K,EAAA0hB,EAAAiR,WACA19B,EAAAA,EAAAysB,EAAAiW,WAAA1iC,EAAA6+B,EAAA,GAAA,QAEA,MAAA7+B,GAAA,MAAAA,KACA,MAAAA,IAAAA,EAAA6+B,EAAA,MAAA7+B,EAAAA,EAAAzD,EAAA,EAAA,MAAAyD,EAAA,EAAA,GACA0sB,EAAA,MAAA1sB,EAAAy7B,EAAAE,EAAA37B,EAAAoO,IAAAmxB,YAAA6C,EAAAzG,EAAA37B,EAAAoO,IAAAovB,SACAx9B,EAAA+K,EAAA,EACA/K,EAAAA,EAAA,MAAAA,GAAAA,EAAA6+B,EAAA,GAAA,EAAA,EAAA7+B,EAAA++B,GAAArS,EAAA,GAAA,EAAA1sB,EAAA6+B,EAAA,EAAA7+B,EAAAy+B,GAAA/R,EAAA,GAAA,GAKA,MAAA,MAAA1sB,GACAA,EAAAq7B,GAAAr7B,EAAAm/B,EAAA,IAAA,EACAn/B,EAAAs7B,GAAAt7B,EAAAm/B,EAAA,IACA1D,EAAAz7B,IAIAoiC,EAAApiC,IAIA,SAAA4gC,EAAA5gC,EAAAsf,EAAA3N,EAAAwQ,GAOA,IANA,IAGA9lB,EACAiX,EAJAlX,EAAA,EACAH,EAAAqjB,EAAAziB,OACAkO,EAAA4G,EAAA9U,OAIAT,EAAAH,GAAA,CACA,GAAA8O,GAAAoX,EAAA,OAAA,EAEA,GAAA,MADA9lB,EAAAijB,EAAAqJ,WAAAvsB,OAIA,GAFAC,EAAAijB,EAAA4iB,OAAA9lC,OACAkX,EAAAqtB,EAAAtkC,KAAA4lC,EAAA3iB,EAAA4iB,OAAA9lC,KAAAC,MACA8lB,EAAA7O,EAAAtT,EAAA2R,EAAAwQ,IAAA,EAAA,OAAA,OACA,GAAA9lB,GAAAsV,EAAAgX,WAAAxG,KACA,OAAA,EAIA,OAAAA,EAgFA,OA1LAob,EAAAtvB,EAAAka,EAAA2T,EAAAyB,GACAA,EAAAtW,EAAAkB,EAAA4T,EAAAwB,GACAA,EAAAlhC,EAAA8rB,EAAAyT,EAAA2B,GACA+B,EAAArxB,EAAAka,EAAA2T,EAAAwD,GACAA,EAAArY,EAAAkB,EAAA4T,EAAAuD,GACAA,EAAAjjC,EAAA8rB,EAAAyT,EAAA0D,GAqLA,CACAx0B,OAAA,SAAAwU,GACA,IAAAjkB,EAAA8sB,EAAA7I,GAAA,GAAAie,GAEA,OADAliC,EAAA+Q,SAAA,WAAA,OAAAkT,GACAjkB,GAEAiY,MAAA,SAAAgM,GACA,IAAA3iB,EAAAwlC,EAAA7iB,GAAA,GAAA8b,GAEA,OADAz+B,EAAAyP,SAAA,WAAA,OAAAkT,GACA3iB,GAEA8zB,UAAA,SAAAnR,GACA,IAAAjkB,EAAA8sB,EAAA7I,GAAA,GAAAggB,GAEA,OADAjkC,EAAA+Q,SAAA,WAAA,OAAAkT,GACAjkB,GAEAsnC,SAAA,SAAArjB,GACA,IAAA3iB,EAAAwlC,EAAA7iB,EAAAmc,GAEA,OADA9+B,EAAAyP,SAAA,WAAA,OAAAkT,GACA3iB,IAKA,IAsRA0iB,EAtRA4iB,EAAA,CAAAW,IAAA,GAAAviB,EAAA,IAAAwiB,EAAA,KACAC,EAAA,UACAC,EAAA,KACAC,EAAA,sBAEA,SAAAhB,EAAA5kC,EAAAkqB,EAAA5N,GACA,IAAA8N,EAAApqB,EAAA,EAAA,IAAA,GACAuU,GAAA6V,GAAApqB,EAAAA,GAAA,GACAP,EAAA8U,EAAA9U,OACA,OAAA2qB,GAAA3qB,EAAA6c,EAAA,IAAAnc,MAAAmc,EAAA7c,EAAA,GAAAwV,KAAAiV,GAAA3V,EAAAA,GAGA,SAAAsxB,EAAA32B,GACA,OAAAA,EAAA42B,QAAAF,EAAA,QAGA,SAAApG,EAAAzF,GACA,OAAA,IAAAj2B,OAAA,OAAAi2B,EAAAl6B,IAAAgmC,GAAA5wB,KAAA,KAAA,IAAA,KAGA,SAAAyqB,EAAA3F,GAEA,IADA,IAAAl6B,EAAA,GAAAb,GAAA,EAAAH,EAAAk7B,EAAAt6B,SACAT,EAAAH,GAAAgB,EAAAk6B,EAAA/6B,GAAA6O,eAAA7O,EACA,OAAAa,EAGA,SAAAykC,EAAA1hC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAA6+B,GAAA5iC,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAA0kC,EAAAvhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAzD,GAAAN,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAA2kC,EAAAxhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAy+B,GAAAxiC,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAA4kC,EAAAzhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAA2+B,GAAA1iC,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAA8kC,EAAA3hC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAA++B,GAAA9iC,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAglC,EAAA7hC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAoO,GAAAnS,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAA+kC,EAAA5hC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAoO,GAAAnS,EAAA,IAAA,IAAAA,EAAA,GAAA,KAAA,KAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAilC,EAAA9hC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA,+BAAAiP,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAm/B,EAAAljC,EAAA,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA,OAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAqkC,EAAAlhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAA+K,EAAA9O,EAAA,GAAA,EAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAgkC,EAAA7gC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAA,GAAA/D,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAmkC,EAAAhhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAA+K,EAAA,EAAA/K,EAAAA,GAAA/D,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAkkC,EAAA/gC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAq7B,GAAAp/B,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAskC,EAAAnhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAs7B,GAAAr/B,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAykC,EAAAthC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAA6W,GAAA5a,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAokC,EAAAjhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAu7B,GAAAt/B,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAikC,EAAA9gC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,GAAA+D,EAAAu7B,EAAAvvB,KAAAkE,MAAAjU,EAAA,GAAA,KAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAklC,EAAA/hC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA8mC,EAAA73B,KAAAyG,EAAAnT,MAAApC,EAAAA,EAAA,IACA,OAAAH,EAAAG,EAAAH,EAAA,GAAAY,QAAA,EAGA,SAAAukC,EAAAphC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAAo+B,GAAAniC,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAAwkC,EAAArhC,EAAA2R,EAAAvV,GACA,IAAAH,EAAA6mC,EAAA53B,KAAAyG,EAAAnT,MAAApC,IACA,OAAAH,GAAA+D,EAAAo+B,EAAA,KAAAniC,EAAA,GAAAG,EAAAH,EAAA,GAAAY,SAAA,EAGA,SAAA8gC,EAAA39B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAA0iC,UAAA/lC,EAAA,GAGA,SAAAkhC,EAAA79B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAm+B,WAAAxhC,EAAA,GAGA,SAAAmhC,EAAA99B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAm+B,WAAA,IAAA,GAAAxhC,EAAA,GAGA,SAAAohC,GAAA/9B,EAAArD,GACA,OAAAqlC,EAAA,EAAA3Y,EAAAqG,QAAA9M,MAAAyG,EAAAkG,SAAAvvB,GAAAA,GAAArD,EAAA,GAGA,SAAAqhC,GAAAh+B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAmjC,kBAAAxmC,EAAA,GAGA,SAAAihC,GAAA59B,EAAArD,GACA,OAAAqhC,GAAAh+B,EAAArD,GAAA,MAGA,SAAAshC,GAAAj+B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAA09B,WAAA,EAAA/gC,EAAA,GAGA,SAAAuhC,GAAAl+B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAojC,aAAAzmC,EAAA,GAGA,SAAA4hC,GAAAv+B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAqjC,aAAA1mC,EAAA,GAGA,SAAA6hC,GAAAx+B,GACA,IAAA0sB,EAAA1sB,EAAAw9B,SACA,OAAA,IAAA9Q,EAAA,EAAAA,EAGA,SAAAgS,GAAA1+B,EAAArD,GACA,OAAAqlC,EAAA3Y,EAAAia,WAAA1gB,MAAAyG,EAAAkG,SAAAvvB,GAAAA,GAAArD,EAAA,GAGA,SAAAiiC,GAAA5+B,EAAArD,GACA,IAAA+vB,EAAA1sB,EAAAw9B,SAEA,OADAx9B,EAAA,GAAA0sB,GAAA,IAAAA,EAAArD,EAAAka,aAAAvjC,GAAAqpB,EAAAka,aAAA/gB,KAAAxiB,GACAgiC,EAAA3Y,EAAAka,aAAA3gB,MAAAyG,EAAAkG,SAAAvvB,GAAAA,IAAA,IAAAqpB,EAAAkG,SAAAvvB,GAAAw9B,UAAA7gC,EAAA,GAGA,SAAAmiC,GAAA9+B,GACA,OAAAA,EAAAw9B,SAGA,SAAAwB,GAAAh/B,EAAArD,GACA,OAAAqlC,EAAA3Y,EAAAmZ,WAAA5f,MAAAyG,EAAAkG,SAAAvvB,GAAAA,GAAArD,EAAA,GAGA,SAAA2wB,GAAAttB,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAyiC,cAAA,IAAA9lC,EAAA,GAGA,SAAAuiC,GAAAl/B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAyiC,cAAA,IAAA9lC,EAAA,GAGA,SAAAyiC,GAAAp/B,GACA,IAAAkO,EAAAlO,EAAAwjC,oBACA,OAAA,EAAAt1B,EAAA,KAAAA,IAAA,EAAA,MACA8zB,EAAA9zB,EAAA,GAAA,EAAA,IAAA,GACA8zB,EAAA9zB,EAAA,GAAA,IAAA,GAGA,SAAAuxB,GAAAz/B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAuiC,aAAA5lC,EAAA,GAGA,SAAAgjC,GAAA3/B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAigC,cAAAtjC,EAAA,GAGA,SAAAijC,GAAA5/B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAigC,cAAA,IAAA,GAAAtjC,EAAA,GAGA,SAAAkjC,GAAA7/B,EAAArD,GACA,OAAAqlC,EAAA,EAAA3Y,EAAA+G,OAAAxN,MAAAyG,EAAA4G,QAAAjwB,GAAAA,GAAArD,EAAA,GAGA,SAAAmjC,GAAA9/B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAyjC,qBAAA9mC,EAAA,GAGA,SAAA+iC,GAAA1/B,EAAArD,GACA,OAAAmjC,GAAA9/B,EAAArD,GAAA,MAGA,SAAAojC,GAAA//B,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAw/B,cAAA,EAAA7iC,EAAA,GAGA,SAAAqjC,GAAAhgC,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAA0jC,gBAAA/mC,EAAA,GAGA,SAAAujC,GAAAlgC,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAA2jC,gBAAAhnC,EAAA,GAGA,SAAAwjC,GAAAngC,GACA,IAAA4jC,EAAA5jC,EAAAu/B,YACA,OAAA,IAAAqE,EAAA,EAAAA,EAGA,SAAAxD,GAAApgC,EAAArD,GACA,OAAAqlC,EAAA3Y,EAAAwa,UAAAjhB,MAAAyG,EAAA4G,QAAAjwB,GAAAA,GAAArD,EAAA,GAGA,SAAA0jC,GAAArgC,EAAArD,GACA,IAAA+vB,EAAA1sB,EAAAu/B,YAEA,OADAv/B,EAAA,GAAA0sB,GAAA,IAAAA,EAAArD,EAAAya,YAAA9jC,GAAAqpB,EAAAya,YAAAthB,KAAAxiB,GACAgiC,EAAA3Y,EAAAya,YAAAlhB,MAAAyG,EAAA4G,QAAAjwB,GAAAA,IAAA,IAAAqpB,EAAA4G,QAAAjwB,GAAAu/B,aAAA5iC,EAAA,GAGA,SAAA2jC,GAAAtgC,GACA,OAAAA,EAAAu/B,YAGA,SAAAgB,GAAAvgC,EAAArD,GACA,OAAAqlC,EAAA3Y,EAAAgZ,UAAAzf,MAAAyG,EAAA4G,QAAAjwB,GAAAA,GAAArD,EAAA,GAGA,SAAA6jC,GAAAxgC,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAsiC,iBAAA,IAAA3lC,EAAA,GAGA,SAAA8jC,GAAAzgC,EAAArD,GACA,OAAAqlC,EAAAhiC,EAAAsiC,iBAAA,IAAA3lC,EAAA,GAGA,SAAA+jC,KACA,MAAA,QAGA,SAAArB,KACA,MAAA,IAGA,SAAAhB,GAAAr+B,GACA,OAAAA,EAGA,SAAAs+B,GAAAt+B,GACA,OAAAgM,KAAAkE,OAAAlQ,EAAA,KAgBA,SAAA8oB,EAAAtoB,GAMA,OALA6e,EAAAiB,EAAA9f,GACAlF,EAAAy0B,WAAA1Q,EAAAvU,OACAxP,EAAAyoC,UAAA1kB,EAAA/L,MACAhY,EAAAm1B,UAAApR,EAAAoR,UACAn1B,EAAAqnC,SAAAtjB,EAAAsjB,SACAtjB,EAjBAyJ,EAAA,CACA+S,SAAA,SACAzqB,KAAA,aACA4qB,KAAA,eACAE,QAAA,CAAA,KAAA,MACAE,KAAA,CAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YACAE,UAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAE,OAAA,CAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAE,YAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,SAYA,IAAAsH,EAAA,wBAMA,IAAAC,EAAA5yB,KAAAtT,UAAAmmC,YAJA,SAAA9yB,GACA,OAAAA,EAAA8yB,eAKA5oC,EAAAm1B,UAAAuT,GAOA,IAAAG,GAAA,IAAA9yB,KAAA,4BALA,SAAAM,GACA,IAAAP,EAAA,IAAAC,KAAAM,GACA,OAAA1E,MAAAmE,GAAA,KAAAA,GAKA9V,EAAAqnC,SAAAqB,GAEA1oC,EAAA8oC,wBAAAtb,EACAxtB,EAAA+oC,iBAAA/jB,EACAhlB,EAAAgpC,UAAAL,EACA3oC,EAAAipC,SAAAJ,EAEAjkC,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,KAvqBA,iBAAA9B,QAAA,IAAAC,EAAA6E,EAAA9E,EAAAgB,EAAA,YAEA8D,EAAAzE,EAAA0E,GAAA1E,EAAA0E,IAAA,GAAA1E,EAAA0E,yCCHA,IAAA1E,EAAAA,EAIAE,KAAA,SAAAP,GAAA,aAEA,IAAAkS,EAAA,IAAA6D,KACA5D,EAAA,IAAA4D,KAEA,SAAAmzB,EAAAC,EAAAC,EAAA9hB,EAAA+hB,GAEA,SAAAxZ,EAAA/Z,GACA,OAAAqzB,EAAArzB,EAAA,IAAAC,MAAAD,IAAAA,EA4DA,OAzDA+Z,EAAAjb,MAAAib,GAEA3I,KAAA,SAAApR,GACA,OAAAqzB,EAAArzB,EAAA,IAAAC,KAAAD,EAAA,IAAAszB,EAAAtzB,EAAA,GAAAqzB,EAAArzB,GAAAA,GAGA+Z,EAAAhf,MAAA,SAAAiF,GACA,IAAAkZ,EAAAa,EAAA/Z,GACAoG,EAAA2T,EAAA3I,KAAApR,GACA,OAAAA,EAAAkZ,EAAA9S,EAAApG,EAAAkZ,EAAA9S,GAGA2T,EAAArK,OAAA,SAAA1P,EAAAmR,GACA,OAAAmiB,EAAAtzB,EAAA,IAAAC,MAAAD,GAAA,MAAAmR,EAAA,EAAAvW,KAAAkE,MAAAqS,IAAAnR,GAGA+Z,EAAA/U,MAAA,SAAAzF,EAAA2R,EAAAC,GACA,IAAA+W,EAAAljB,EAAA,GAGA,GAFAzF,EAAAwa,EAAA3I,KAAA7R,GACA4R,EAAA,MAAAA,EAAA,EAAAvW,KAAAkE,MAAAqS,KACA5R,EAAA2R,GAAA,EAAAC,GAAA,OAAAnM,EACA,KAAAA,EAAA7X,KAAA+6B,EAAA,IAAAjoB,MAAAV,IAAA+zB,EAAA/zB,EAAA4R,GAAAkiB,EAAA9zB,GACA2oB,EAAA3oB,GAAAA,EAAA2R,IACA,OAAAlM,GAGA+U,EAAA/N,OAAA,SAAAgL,GACA,OAAAoc,EAAA,SAAApzB,GACA,GAAAA,GAAAA,EAAA,KAAAqzB,EAAArzB,IAAAgX,EAAAhX,IAAAA,EAAAE,QAAAF,EAAA,IACA,SAAAA,EAAAmR,GACA,GAAAnR,GAAAA,EACA,GAAAmR,EAAA,EAAA,OAAAA,GAAA,GACA,KAAAmiB,EAAAtzB,GAAA,IAAAgX,EAAAhX,UACA,KAAA,KAAAmR,GACA,KAAAmiB,EAAAtzB,EAAA,IAAAgX,EAAAhX,SAMAwR,IACAuI,EAAAvI,MAAA,SAAAjS,EAAAC,GAGA,OAFApD,EAAA8D,SAAAX,GAAAlD,EAAA6D,SAAAV,GACA6zB,EAAAj3B,GAAAi3B,EAAAh3B,GACAzB,KAAAkE,MAAA0S,EAAApV,EAAAC,KAGA0d,EAAAsC,MAAA,SAAAlL,GAEA,OADAA,EAAAvW,KAAAkE,MAAAqS,GACA+I,SAAA/I,IAAA,EAAAA,EACA,EAAAA,EACA4I,EAAA/N,OAAAunB,EACA,SAAA3kC,GAAA,OAAA2kC,EAAA3kC,GAAAuiB,GAAA,GACA,SAAAviB,GAAA,OAAAmrB,EAAAvI,MAAA,EAAA5iB,GAAAuiB,GAAA,IAHA4I,EADA,OAQAA,EAGA,IAAA2B,EAAA0X,EAAA,aAEA,SAAApzB,EAAAmR,GACAnR,EAAAE,SAAAF,EAAAmR,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAAD,IAIAmc,EAAAW,MAAA,SAAA3tB,GAEA,OADAA,EAAAkM,KAAAkE,MAAApQ,GACAwrB,SAAAxrB,IAAA,EAAAA,EACA,EAAAA,EACA0kC,EAAA,SAAApzB,GACAA,EAAAE,QAAAtF,KAAAkE,MAAAkB,EAAAtR,GAAAA,IACA,SAAAsR,EAAAmR,GACAnR,EAAAE,SAAAF,EAAAmR,EAAAziB,IACA,SAAA6Q,EAAAC,GACA,OAAAA,EAAAD,GAAA7Q,IANAgtB,EADA,MAUA,IAAA8X,EAAA9X,EAAA1W,MAGA2V,EAAA,IACAC,EAAA,KAIAa,EAAA2X,EAAA,SAAApzB,GACAA,EAAAE,QAPA,IAOAtF,KAAAkE,MAAAkB,EAPA,OAQA,SAAAA,EAAAmR,GACAnR,EAAAE,SAAAF,EATA,IASAmR,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAAD,GAXA,KAYA,SAAAS,GACA,OAAAA,EAAAuyB,kBAEAkB,EAAAhY,EAAAzW,MAEAwW,EAAA4X,EAAA,SAAApzB,GACAA,EAAAE,QAAAtF,KAAAkE,MAAAkB,EAAA2a,GAAAA,IACA,SAAA3a,EAAAmR,GACAnR,EAAAE,SAAAF,EAAAmR,EAAAwJ,IACA,SAAApb,EAAAC,GACA,OAAAA,EAAAD,GAAAob,GACA,SAAA3a,GACA,OAAAA,EAAAgyB,eAEA0B,EAAAlY,EAAAxW,MAEAuW,EAAA6X,EAAA,SAAApzB,GACA,IAAA0P,EAAA1P,EAAAoyB,oBAAAzX,EAAAC,EACAlL,EAAA,IAAAA,GAAAkL,GACA5a,EAAAE,QAAAtF,KAAAkE,QAAAkB,EAAA0P,GAAAkL,GAAAA,EAAAlL,IACA,SAAA1P,EAAAmR,GACAnR,EAAAE,SAAAF,EAAAmR,EAAAyJ,IACA,SAAArb,EAAAC,GACA,OAAAA,EAAAD,GAAAqb,GACA,SAAA5a,GACA,OAAAA,EAAA+sB,aAEA4G,EAAApY,EAAAvW,MAEAsW,EAAA8X,EAAA,SAAApzB,GACAA,EAAA4zB,SAAA,EAAA,EAAA,EAAA,IACA,SAAA5zB,EAAAmR,GACAnR,EAAA6zB,QAAA7zB,EAAAsxB,UAAAngB,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAAD,GAAAC,EAAA4yB,oBAAA7yB,EAAA6yB,qBAAAzX,GA3CA,OA4CA,SAAA3a,GACA,OAAAA,EAAAsxB,UAAA,IAEAtG,EAAA1P,EAAAtW,MAEA,SAAA8uB,EAAA9oC,GACA,OAAAooC,EAAA,SAAApzB,GACAA,EAAA6zB,QAAA7zB,EAAAsxB,WAAAtxB,EAAAosB,SAAA,EAAAphC,GAAA,GACAgV,EAAA4zB,SAAA,EAAA,EAAA,EAAA,IACA,SAAA5zB,EAAAmR,GACAnR,EAAA6zB,QAAA7zB,EAAAsxB,UAAA,EAAAngB,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAAD,GAAAC,EAAA4yB,oBAAA7yB,EAAA6yB,qBAAAzX,GAvDA,SA2DA,IAAAoZ,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GAEAQ,EAAAP,EAAA/uB,MACAuvB,EAAAP,EAAAhvB,MACAwvB,EAAAP,EAAAjvB,MACAyvB,EAAAP,EAAAlvB,MACA0vB,EAAAP,EAAAnvB,MACA2vB,EAAAP,EAAApvB,MACA4vB,EAAAP,EAAArvB,MAEAoW,EAAAgY,EAAA,SAAApzB,GACAA,EAAA6zB,QAAA,GACA7zB,EAAA4zB,SAAA,EAAA,EAAA,EAAA,IACA,SAAA5zB,EAAAmR,GACAnR,EAAA60B,SAAA70B,EAAAssB,WAAAnb,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAA8sB,WAAA/sB,EAAA+sB,WAAA,IAAA9sB,EAAA6xB,cAAA9xB,EAAA8xB,gBACA,SAAArxB,GACA,OAAAA,EAAAssB,aAEAlB,EAAAhQ,EAAApW,MAEAmW,EAAAiY,EAAA,SAAApzB,GACAA,EAAA60B,SAAA,EAAA,GACA70B,EAAA4zB,SAAA,EAAA,EAAA,EAAA,IACA,SAAA5zB,EAAAmR,GACAnR,EAAAoqB,YAAApqB,EAAAqxB,cAAAlgB,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAA6xB,cAAA9xB,EAAA8xB,eACA,SAAArxB,GACA,OAAAA,EAAAqxB,gBAIAlW,EAAAkB,MAAA,SAAA3tB,GACA,OAAAwrB,SAAAxrB,EAAAkM,KAAAkE,MAAApQ,KAAA,EAAAA,EAAA0kC,EAAA,SAAApzB,GACAA,EAAAoqB,YAAAxvB,KAAAkE,MAAAkB,EAAAqxB,cAAA3iC,GAAAA,GACAsR,EAAA60B,SAAA,EAAA,GACA70B,EAAA4zB,SAAA,EAAA,EAAA,EAAA,IACA,SAAA5zB,EAAAmR,GACAnR,EAAAoqB,YAAApqB,EAAAqxB,cAAAlgB,EAAAziB,KALA,MAQA,IAAAomC,EAAA3Z,EAAAnW,MAEAka,EAAAkU,EAAA,SAAApzB,GACAA,EAAA+0B,cAAA,EAAA,IACA,SAAA/0B,EAAAmR,GACAnR,EAAAE,SAAAF,EAAAmR,EAAAwJ,IACA,SAAApb,EAAAC,GACA,OAAAA,EAAAD,GAAAob,GACA,SAAA3a,GACA,OAAAA,EAAAsyB,kBAEA0C,EAAA9V,EAAAla,MAEAia,EAAAmU,EAAA,SAAApzB,GACAA,EAAAi1B,cAAA,EAAA,EAAA,IACA,SAAAj1B,EAAAmR,GACAnR,EAAAE,SAAAF,EAAAmR,EAAAyJ,IACA,SAAArb,EAAAC,GACA,OAAAA,EAAAD,GAAAqb,GACA,SAAA5a,GACA,OAAAA,EAAA6uB,gBAEAqG,EAAAjW,EAAAja,MAEAga,EAAAoU,EAAA,SAAApzB,GACAA,EAAAm1B,YAAA,EAAA,EAAA,EAAA,IACA,SAAAn1B,EAAAmR,GACAnR,EAAAo1B,WAAAp1B,EAAAmxB,aAAAhgB,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAAD,GA1IA,OA2IA,SAAAS,GACA,OAAAA,EAAAmxB,aAAA,IAEAkE,EAAArW,EAAAha,MAEA,SAAAswB,EAAAtqC,GACA,OAAAooC,EAAA,SAAApzB,GACAA,EAAAo1B,WAAAp1B,EAAAmxB,cAAAnxB,EAAAmuB,YAAA,EAAAnjC,GAAA,GACAgV,EAAAm1B,YAAA,EAAA,EAAA,EAAA,IACA,SAAAn1B,EAAAmR,GACAnR,EAAAo1B,WAAAp1B,EAAAmxB,aAAA,EAAAhgB,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAAD,GAtJA,SA0JA,IAAAkzB,EAAA6C,EAAA,GACArE,EAAAqE,EAAA,GACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACA5C,EAAA4C,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAEAK,EAAAlD,EAAAztB,MACA4wB,EAAA3E,EAAAjsB,MACA6wB,EAAAN,EAAAvwB,MACA8wB,EAAAN,EAAAxwB,MACA+wB,EAAArD,EAAA1tB,MACAgxB,GAAAP,EAAAzwB,MACAixB,GAAAP,EAAA1wB,MAEA8Z,GAAAsU,EAAA,SAAApzB,GACAA,EAAAo1B,WAAA,GACAp1B,EAAAm1B,YAAA,EAAA,EAAA,EAAA,IACA,SAAAn1B,EAAAmR,GACAnR,EAAAk2B,YAAAl2B,EAAAouB,cAAAjd,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAA4uB,cAAA7uB,EAAA6uB,cAAA,IAAA5uB,EAAA0xB,iBAAA3xB,EAAA2xB,mBACA,SAAAlxB,GACA,OAAAA,EAAAouB,gBAEA+H,GAAArX,GAAA9Z,MAEA6Z,GAAAuU,EAAA,SAAApzB,GACAA,EAAAk2B,YAAA,EAAA,GACAl2B,EAAAm1B,YAAA,EAAA,EAAA,EAAA,IACA,SAAAn1B,EAAAmR,GACAnR,EAAAsqB,eAAAtqB,EAAAkxB,iBAAA/f,IACA,SAAA5R,EAAAC,GACA,OAAAA,EAAA0xB,iBAAA3xB,EAAA2xB,kBACA,SAAAlxB,GACA,OAAAA,EAAAkxB,mBAIArS,GAAAxC,MAAA,SAAA3tB,GACA,OAAAwrB,SAAAxrB,EAAAkM,KAAAkE,MAAApQ,KAAA,EAAAA,EAAA0kC,EAAA,SAAApzB,GACAA,EAAAsqB,eAAA1vB,KAAAkE,MAAAkB,EAAAkxB,iBAAAxiC,GAAAA,GACAsR,EAAAk2B,YAAA,EAAA,GACAl2B,EAAAm1B,YAAA,EAAA,EAAA,EAAA,IACA,SAAAn1B,EAAAmR,GACAnR,EAAAsqB,eAAAtqB,EAAAkxB,iBAAA/f,EAAAziB,KALA,MAQA,IAAA0nC,GAAAvX,GAAA7Z,MAEA9a,EAAAmsC,aAAAjD,EACAlpC,EAAAw0B,gBAAAhD,EACAxxB,EAAAosC,iBAAA9C,EACAtpC,EAAAk1B,eAAA1D,EACAxxB,EAAAqsC,gBAAA/C,EACAtpC,EAAAu0B,WAAAhD,EACAvxB,EAAAssC,YAAA/C,EACAvpC,EAAAi1B,UAAA1D,EACAvxB,EAAAusC,WAAAhD,EACAvpC,EAAAs0B,WAAAhD,EACAtxB,EAAAwsC,YAAAhD,EACAxpC,EAAAq0B,SAAAhD,EACArxB,EAAAysC,UAAAhD,EACAzpC,EAAAo0B,QAAAhD,EACApxB,EAAA0sC,SAAA5L,EACA9gC,EAAAm0B,SAAA0V,EACA7pC,EAAA2sC,UAAAvC,EACApqC,EAAAgoC,WAAA6B,EACA7pC,EAAA4sC,YAAAxC,EACApqC,EAAAknC,WAAA4C,EACA9pC,EAAA6sC,YAAAxC,EACArqC,EAAA8sC,YAAA/C,EACA/pC,EAAA+sC,aAAAzC,EACAtqC,EAAAgtC,cAAAhD,EACAhqC,EAAAitC,eAAA1C,EACAvqC,EAAAioC,aAAAgC,EACAjqC,EAAAktC,cAAA1C,EACAxqC,EAAAmtC,WAAAjD,EACAlqC,EAAAotC,YAAA3C,EACAzqC,EAAAqtC,aAAAlD,EACAnqC,EAAAstC,cAAA5C,EACA1qC,EAAAk0B,UAAAhD,EACAlxB,EAAAutC,WAAArM,EACAlhC,EAAAi0B,SAAAhD,EACAjxB,EAAAwtC,UAAA5C,EACA5qC,EAAAg1B,UAAAA,EACAh1B,EAAA8qC,WAAAA,EACA9qC,EAAA+0B,QAAAA,EACA/0B,EAAAgrC,SAAAA,EACAhrC,EAAA80B,OAAAA,EACA90B,EAAAmrC,QAAAA,EACAnrC,EAAA60B,QAAA0T,EACAvoC,EAAAytC,SAAAhC,EACAzrC,EAAAuoC,UAAAA,EACAvoC,EAAAyrC,WAAAA,EACAzrC,EAAA+mC,UAAAA,EACA/mC,EAAA0rC,WAAAA,EACA1rC,EAAAqrC,WAAAA,EACArrC,EAAA2rC,YAAAA,EACA3rC,EAAAsrC,aAAAA,EACAtrC,EAAA4rC,cAAAA,EACA5rC,EAAAwoC,YAAAA,EACAxoC,EAAA6rC,aAAAA,EACA7rC,EAAAurC,UAAAA,EACAvrC,EAAA8rC,WAAAA,GACA9rC,EAAAwrC,YAAAA,EACAxrC,EAAA+rC,aAAAA,GACA/rC,EAAA40B,SAAAA,GACA50B,EAAAisC,UAAAA,GACAjsC,EAAA20B,QAAAA,GACA30B,EAAAksC,SAAAA,GAEAtnC,OAAAC,eAAA7E,EAAA,aAAA,CAAA8B,OAAA,IAhXAgD,CAAA,iBAAA9E,QAAA,IAAAC,EAAAD,EAEAK,EAAA0E,GAAA1E,EAAA0E,IAAA,6BCJA,aAoCA9E,EAAAD,QApBA,SAAA2S,GACA,IAAA/R,EAAA,GAAA,EAAA,GAAA8P,KAAA+W,IAAA9U,IACA+6B,EAAA9sC,EAAA8P,KAAAqJ,KAAArJ,KAAAe,IAAAkB,EAAA,GACA,WACA,WAAA/R,EACA,UAAA8P,KAAAe,IAAA7Q,EAAA,GACA,UAAA8P,KAAAe,IAAA7Q,EAAA,GACA,UAAA8P,KAAAe,IAAA7Q,EAAA,GACA,UAAA8P,KAAAe,IAAA7Q,EAAA,GACA,WAAA8P,KAAAe,IAAA7Q,EAAA,GACA,WAAA8P,KAAAe,IAAA7Q,EAAA,GACA,UAAA8P,KAAAe,IAAA7Q,EAAA,GACA,UAAA8P,KAAAe,IAAA7Q,EAAA,IACA,OAAA,GAAA+R,EACA,EAAA+6B,EAEAA,EAAA,4BChCA,aAuEAztC,EAAAD,QAxDA,SAAAmgB,GAEA,IAAA1Q,EAAAhL,EAIAy2B,EAAA/a,EAAA5e,OAIA,GAAA,IAAA25B,EAEAz2B,EAAA0b,EADA1Q,EAAA,GACA,OACA,CAeA,IAZA,IAKA4pB,EAAA1mB,EAAAG,EALA66B,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAAC,EAAA,EAWAhtC,EAAA,EAAAA,EAAAo6B,EAAAp6B,IAKA6sC,GAHAh7B,GADA0mB,EAAAlZ,EAAArf,IACA,GAIA8sC,GAHA96B,EAAAumB,EAAA,GAKAwU,GAAAl7B,EAAAA,EACAm7B,GAAAn7B,EAAAG,EAQArO,EAAAmpC,EAAA1S,GAJAzrB,GAAAyrB,EAAA4S,EAAAH,EAAAC,IACA1S,EAAA2S,EAAAF,EAAAA,IAGAA,EAAAzS,EAIA,MAAA,CACAzrB,EAAAA,EACAhL,EAAAA,6BClEA,aA6BAxE,EAAAD,QATA,SAAA+tC,GAIA,OAAA,SAAAp7B,GACA,OAAAo7B,EAAAtpC,EAAAspC,EAAAt+B,EAAAkD,6BCzBA,aAGA,IAAAmS,EAAA9jB,EAAA,SAyBAf,EAAAD,QATA,SAAA2S,GAEA,GAAA,IAAAA,EAAApR,OACA,MAAA,IAAAJ,MAAA,yCAGA,OAAA2jB,EAAAnS,GAAAA,EAAApR,2CCzBA,aAGA,IAAAysC,EAAAhtC,EAAA,qBACAitC,EAAAjtC,EAAA,iBA4CA,SAAAktC,EAAAlwB,EAAAxZ,EAAA4hB,EAAAI,GACAhiB,EAAA,GAAA,EACAypC,EAAAjwB,EAAAxZ,EAAA4hB,EAAAI,IAEAhiB,EAAAkM,KAAAkE,MAAApQ,GACAypC,EAAAjwB,EAAAxZ,EAAA4hB,EAAAI,GACAynB,EAAAjwB,EAAAxZ,EAAA,EAAAA,EAAA,EAAAgiB,IA0BA,SAAAN,EAAAhlB,EAAAuD,GACA,OAAAvD,EAAAuD,EAGA,SAAA0pC,EAAAC,EAAA/sC,GACA,IAAAgtC,EAAAD,EAAA/sC,EACA,OAAA,IAAAA,EAEA+sC,EAAA,EACA,IAAA/sC,EAEA,EACAgtC,EAAA,GAAA,EAEA39B,KAAAwW,KAAAmnB,GAAA,EACAD,EAAA,GAAA,EAGAC,EAAA,GAIAA,EAIApuC,EAAAD,QA/EA,SAAA2S,EAAAtR,GACA,IAAAupB,EAAAjY,EAAAzP,QAEA,GAAAjB,MAAAC,QAAAb,GAAA,EA4BA,SAAA2c,EAAA3c,GAEA,IADA,IAAAitC,EAAA,CAAA,GACAxtC,EAAA,EAAAA,EAAAO,EAAAE,OAAAT,IACAwtC,EAAArrC,KAAAkrC,EAAAnwB,EAAAzc,OAAAF,EAAAP,KAEAwtC,EAAArrC,KAAA+a,EAAAzc,OAAA,GACA+sC,EAAApqC,KAAAgiB,GAEA,IAAAqoB,EAAA,CAAA,EAAAD,EAAA/sC,OAAA,GAEA,KAAAgtC,EAAAhtC,QAAA,CACA,IAAAd,EAAAiQ,KAAAwW,KAAAqnB,EAAAn2B,OACAnH,EAAAP,KAAAkE,MAAA25B,EAAAn2B,OACA,KAAA3X,EAAAwQ,GAAA,GAAA,CAEA,IAAAxB,EAAAiB,KAAAkE,OAAA3D,EAAAxQ,GAAA,GACAytC,EAAAlwB,EAAAswB,EAAA7+B,GAAA6+B,EAAAr9B,GAAAq9B,EAAA7tC,IAEA8tC,EAAAtrC,KAAAgO,EAAAxB,EAAAA,EAAAhP,KA3CA+tC,CAAA5jB,EAAAvpB,GAIA,IAFA,IAAAotC,EAAA,GAEA3tC,EAAA,EAAAA,EAAAO,EAAAE,OAAAT,IACA2tC,EAAA3tC,GAAAktC,EAAApjB,EAAAvpB,EAAAP,IAEA,OAAA2tC,EAIA,OADAP,EAAAtjB,EADAujB,EAAAvjB,EAAArpB,OAAAF,GACA,EAAAupB,EAAArpB,OAAA,GACAysC,EAAApjB,EAAAvpB,sEC5CA,aA0CApB,EAAAD,QA1BA,SAAA2S,EAAAtR,GACA,IAAAgtC,EAAA17B,EAAApR,OAAAF,EACA,GAAA,IAAAsR,EAAApR,OACA,MAAA,IAAAJ,MAAA,8CACA,GAAAE,EAAA,GAAA,EAAAA,EACA,MAAA,IAAAF,MAAA,qCACA,OAAA,IAAAE,EAEAsR,EAAAA,EAAApR,OAAA,GACA,IAAAF,EAEAsR,EAAA,GACA07B,EAAA,GAAA,EAEA17B,EAAAjC,KAAAwW,KAAAmnB,GAAA,GACA17B,EAAApR,OAAA,GAAA,GAGAoR,EAAA07B,EAAA,GAAA17B,EAAA07B,IAAA,EAIA17B,EAAA07B,6BCtCA,aAkEA,SAAAK,EAAA1wB,EAAAld,EAAA+lB,GACA,IAAA8nB,EAAA3wB,EAAAld,GACAkd,EAAAld,GAAAkd,EAAA6I,GACA7I,EAAA6I,GAAA8nB,EAlEA1uC,EAAAD,QAmBA,SAAAiuC,EAAAjwB,EAAAxZ,EAAA4hB,EAAAI,GACAJ,EAAAA,GAAA,EACAI,EAAAA,GAAAxI,EAAAzc,OAAA,EAEA,KAAA6kB,EAAAI,GAAA,CAEA,GAAA,IAAAA,EAAAJ,EAAA,CACA,IAAAzlB,EAAA6lB,EAAAJ,EAAA,EACA3W,EAAAjL,EAAA4hB,EAAA,EACAxT,EAAAlC,KAAAuL,IAAAtb,GACAqQ,EAAA,GAAAN,KAAAqJ,IAAA,EAAAnH,EAAA,GACAg8B,EAAA,GAAAl+B,KAAA2C,KAAAT,EAAA5B,GAAArQ,EAAAqQ,GAAArQ,GACA8O,EAAA9O,EAAA,EAAA,IAAAiuC,IAAA,GACA,IAAAC,EAAAn+B,KAAAC,IAAAyV,EAAA1V,KAAAkE,MAAApQ,EAAAiL,EAAAuB,EAAArQ,EAAAiuC,IACAE,EAAAp+B,KAAAE,IAAA4V,EAAA9V,KAAAkE,MAAApQ,GAAA7D,EAAA8O,GAAAuB,EAAArQ,EAAAiuC,IACAX,EAAAjwB,EAAAxZ,EAAAqqC,EAAAC,GAGA,IAAAluC,EAAAod,EAAAxZ,GACA1D,EAAAslB,EACAS,EAAAL,EAKA,IAHAkoB,EAAA1wB,EAAAoI,EAAA5hB,GACAwZ,EAAAwI,GAAA5lB,GAAA8tC,EAAA1wB,EAAAoI,EAAAI,GAEA1lB,EAAA+lB,GAAA,CAIA,IAHA6nB,EAAA1wB,EAAAld,EAAA+lB,GACA/lB,IACA+lB,IACA7I,EAAAld,GAAAF,GAAAE,IACA,KAAAkd,EAAA6I,GAAAjmB,GAAAimB,IAGA7I,EAAAoI,KAAAxlB,EAAA8tC,EAAA1wB,EAAAoI,EAAAS,GAGA6nB,EAAA1wB,IADA6I,EACAL,GAGAK,GAAAriB,IAAA4hB,EAAAS,EAAA,GACAriB,GAAAqiB,IAAAL,EAAAK,EAAA,8BC9DA,aAGA,IAAAkoB,EAAA/tC,EAAA,uBACAguC,EAAAhuC,EAAA,+BAqBAf,EAAAD,QARA,SAAA2S,EAAAG,GAKA,OAJAi8B,EAAAp8B,EAAAG,GACAk8B,EAAAr8B,GACAq8B,EAAAl8B,sFCpBA,aAGA,IAAAmW,EAAAjoB,EAAA,UAmDAf,EAAAD,QApCA,SAAA2S,EAAAG,GAGA,GAAAH,EAAApR,SAAAuR,EAAAvR,OACA,MAAA,IAAAJ,MAAA,wDAGA,GAAAwR,EAAApR,OAAA,EACA,MAAA,IAAAJ,MAAA,qEAeA,IARA,IAAA8tC,EAAAhmB,EAAAtW,GACAu8B,EAAAjmB,EAAAnW,GACAgS,EAAA,EAMAhkB,EAAA,EAAAA,EAAA6R,EAAApR,OAAAT,IACAgkB,IAAAnS,EAAA7R,GAAAmuC,IAAAn8B,EAAAhS,GAAAouC,GASA,OAAApqB,GAHAnS,EAAApR,OAAA,wCChDA,aAGA,IAAA4tC,EAAAnuC,EAAA,qBAkBAf,EAAAD,QANA,SAAA2S,GAEA,IAAAy8B,EAAAD,EAAAx8B,GACA,OAAAjC,KAAA2C,KAAA+7B,mDClBA,aAGA,IAAAC,EAAAruC,EAAA,8BAoCAf,EAAAD,QAjBA,SAAA2S,GAEA,GAAAA,EAAApR,OAAA,EACA,MAAA,IAAAJ,MAAA,oDAWA,OARAkuC,EAAA18B,EAAA,IAKAA,EAAApR,OAAA,4DCjCA,aAGA,IAAAqlB,EAAA5lB,EAAA,cA0BAf,EAAAD,QARA,SAAA2S,GACA,GAAA,IAAAA,EAAApR,OACA,OAAA,EAEA,IAAAgD,EAAAqiB,EAAAjU,GACA,OAAAjC,KAAA2C,KAAA9O,4CC1BA,aAuDAtE,EAAAD,QAlCA,SAAA2S,GAGA,GAAA,IAAAA,EAAApR,OACA,OAAA,EAWA,IAPA,IAKAijB,EALAM,EAAAnS,EAAA,GAGA28B,EAAA,EAIAxuC,EAAA,EAAAA,EAAA6R,EAAApR,OAAAT,IACA0jB,EAAAM,EAAAnS,EAAA7R,GAIA4P,KAAA+W,IAAA3C,IAAApU,KAAA+W,IAAA9U,EAAA7R,IACAwuC,GAAAxqB,EAAAN,EAAA7R,EAAA7R,GAGAwuC,GAAA38B,EAAA7R,GAAA0jB,EAAAM,EAGAA,EAAAN,EAIA,OAAAM,EAAAwqB,4BCpDA,aAGA,IAAArmB,EAAAjoB,EAAA,UAuCAf,EAAAD,QAvBA,SAAA2S,EAAAhS,GACA,IAEA4uC,EACAzuC,EAHA0uC,EAAAvmB,EAAAtW,GACAmS,EAAA,EAOA,GAAA,IAAAnkB,EACA,IAAAG,EAAA,EAAAA,EAAA6R,EAAApR,OAAAT,IAEAgkB,IADAyqB,EAAA58B,EAAA7R,GAAA0uC,GACAD,OAGA,IAAAzuC,EAAA,EAAAA,EAAA6R,EAAApR,OAAAT,IACAgkB,GAAApU,KAAAe,IAAAkB,EAAA7R,GAAA0uC,EAAA7uC,GAIA,OAAAmkB,uCCvCA,aAGA,IAAAuqB,EAAAruC,EAAA,8BA2BAf,EAAAD,QAXA,SAAA2S,GAEA,GAAA,IAAAA,EAAApR,OACA,MAAA,IAAAJ,MAAA,6CAKA,OAAAkuC,EAAA18B,EAAA,GAAAA,EAAApR,gEC3BA,aA8BAtB,EAAAD,QAJA,SAAA2S,EAAAsW,EAAAwmB,GACA,OAAA98B,EAAAsW,GAAAwmB,kWC3BA,IAAAC,EAAA1uC,EAAA,6BACA2uC,EAAA3uC,EAAA,WAEA+D,GADA/D,EAAA,2XACA4uC,CAAA5uC,EAAA,+/CAEa6uC,aAsBT,SAAAA,EAAAC,GAAoB,IAAAC,EAAAC,EAAAzvC,KAAAsvC,IAChBE,EAAAE,EAAA1vC,KAAA2vC,EAAAL,GAAAvuC,KAAAf,QArBJ4vC,SAAWJ,EAAAK,eAAsB,YAoBbL,EAnBpBM,YAAa,EAmBON,EAlBpBO,aAAc,EAkBMP,EAjBpBp9B,EAAI,CACAqQ,MADA,GAEAjhB,IAFA,EAGAD,MAAO,SAAA4C,EAAA3C,GAAA,OAAY4tC,EAAAY,MAAAC,SAAA9rC,GAAAA,EAAwBA,EAApC3C,IACP2W,MAJA,UAKAyJ,OALA,SAMArB,WAAOM,GAWS2uB,EATpBj9B,EAAI,CACA/Q,IADA,EAEAD,MAAO,SAAA4C,EAAA3C,GAAA,OAAY4tC,EAAAY,MAAAC,SAAA9rC,GAAAA,EAAwBA,EAApC3C,IACPihB,MAHA,GAIAb,OAJA,OAKAzJ,MAAO,UAISq3B,EAFpBvrB,YAAa,EAICisB,EAAVV,GAFgB,OAIhBD,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GALYC,aAtBYL,EAAAiB,wDAiCvBC,aACT,SAAAA,EAAAC,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAqwC,GAAAX,EAAA1vC,KAAA2vC,EAAAU,GAAAtvC,KAAAf,KAAAswC,EAAA1wB,EACV,IAAA0vB,EADUiB,gBADrBpB,EAAAqB,wGAKhBD,GACN,OAAAE,EAAAd,EAAAU,EAAAnuC,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAsvC,EAAvBiB,uCAIAE,EAAAd,EAAAU,EAAAnuC,WAAA,WAAAlC,MAAAe,KAAAf,MAGWA,KAAXuwC,OAWA,OATAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GAEAvS,KAAA2wC,kBACA3wC,KAAA4wC,SACA5wC,KAAA6wC,SACA7wC,KAAA8wC,mBACA9wC,KAAA+wC,eAEA/wC,sCAMA,IAAI0wC,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXn+B,EAQAA,EAAA7Q,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MACX4Q,EAAA+F,MAAU3T,EAAAiuB,YAAAlY,MAAqB,CAAA,EAAIm2B,EAAzB7yB,QAAAoQ,aAAV,KACA7b,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,KAETiO,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BxP,EAAvC+F,OACI64B,EAAJzwB,OACInO,EAAA6+B,KAAA1wB,MAAaywB,EAAbzwB,OAEJ,IACAC,EADIZ,EAAO5f,KAAA0wC,KAAX9wB,KAOIY,EALAZ,GAAUA,EAAd5e,OAEYhB,KAAAuwC,OAALY,OAGM3sC,EAAApD,IAAOwe,EAAA,GAAPhd,OAAuBwP,EAAvB7Q,OAATkB,OAFS+B,EAAApD,IAAAwe,EAAaxN,EAAb7Q,OAATkB,OAFA,GAOJiuC,EAAAt+B,EAAA+F,MAAAqI,OAAAA,oCAMA,IAAIkwB,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAAuwC,OAAXh+B,EACAA,EAAAhR,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MACX+Q,EAAA4F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAACm2B,EAAD3tB,OAA9C,IACAxQ,EAAAnR,IAAQ,SAAA+C,GAAC,OAAIoO,EAAA4F,MAAQ5F,EAAAhR,MAAZ4C,KAEToO,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BrP,EAAvC4F,8CAKA,IAEAqI,EAFIkwB,EAAO1wC,KAAX0wC,KACW1wC,KAAA0wC,KAAX9wB,KAOAY,EAAS,CAAA,EALOhc,EAAA4L,IAAOsgC,EAAPW,OAAoB,SAAAC,GAAK,OAAI9sC,EAAA4L,IAAOkhC,EAAPjS,OAAqB,SAAAl7B,GAAC,OAAIA,EAAAotC,GAAOptC,EAAXoO,OAOnEm+B,EAAAn+B,EAAA4F,MAAAqI,OAXWA,8CAgBX,IAAIzgB,EAAJC,KACAA,KAAAwxC,YAEA,IAAIC,EAAJ,GACAzxC,KAAA0wC,KAAAgB,YAAAC,QAA8B,SAAAlhC,GAC1BA,EAAA4uB,OAAW5uB,EAAA7N,OAAAxB,IAAa,SAAA4C,GAAC,OAAEjE,EAAA6xC,WAAF5tC,KACzByM,EAAA4uB,OAAAsS,QAAiB,SAAA7wC,EAAAP,GACb,IAAIsxC,EAASJ,EAAblxC,GACYsxC,EAAZA,GAAY,EACZ/wC,EAAAywC,GAAAM,EACAJ,EAAAlxC,GAASO,EAAAyR,EAATs/B,MAIR7xC,KAAA0wC,KAAAW,OAAmBrxC,KAAA0wC,KAAnBgB,+CAIOnwC,GACP,IAAImvC,EAAO1wC,KAAX0wC,KACA,MAAO,CACHt+B,EAAGs+B,EAAAt+B,EAAA7Q,MADAA,GAEHgR,EAAG6L,WAAWsyB,EAAAn+B,EAAAhR,MAADA,yCAMjB,IAAIxB,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIoB,EAAW9xC,KAAAuwC,OAAfn+B,EACI6+B,EAAOlxC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAAAkyC,YAAP,UAAA,IAA0ClyC,EAAAkyC,YAA1C,SAAsElyC,EAAAwwC,OAAA2B,OAAA,GAA0B,IAAMnyC,EAAAkyC,YAA/H,eAAA9zB,KAAA,YACY,eAAiBuyB,EAAjB3tB,OADvB,KAGIovB,EAAJlB,EACIlxC,EAAAwwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAt+B,EAAX6+B,MAEAA,EAAAe,eAAoB,QAAUjyC,EAAAkyC,YAA9B,UAAA9zB,KAAA,YACuB,aAAgBuyB,EAAA7yB,MAAhB,EAAA,IAAyC6yB,EAAA4B,OAAzCC,OADvB,KAAAp0B,KAAA,KAAA,QAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,2CAQA,IAAI1iB,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIoB,EAAW9xC,KAAAuwC,OAAfh+B,EACI0+B,EAAOlxC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAAAkyC,YAAP,UAAA,IAA0ClyC,EAAAkyC,YAA1C,SAAsElyC,EAAAwwC,OAAA2B,OAAA,GAA0B,IAAMnyC,EAAAkyC,YAA1I,eAEIE,EAAJlB,EACIlxC,EAAAwwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAn+B,EAAX0+B,MAEAA,EAAAe,eAAoB,QAAUjyC,EAAAkyC,YAA9B,UAAA9zB,KAAA,YACuB,cAAgBuyB,EAAA4B,OAAhBzsB,KAAA,IAA0C6qB,EAAA3tB,OAA1C,EADvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,0CASA,IAAI1iB,EAAJC,KACI0wC,EAAO3wC,EAFJ2wC,KAMH8B,EAAaxyC,KAAAiyC,YAAjB,SAEIQ,EAAWzyC,KAAAiyC,YAAf,OACIX,EAAQvxC,EAAAgyC,KAAApyB,UAAoB,IAApB6yB,GAAA5yB,KACF8wB,EADVW,QAGIqB,EAAapB,EAAA/xB,QAAAjB,OAAA,KAAAH,KAAA,QAAAq0B,GAAAtuB,MAAjBotB,GAGIqB,EAAMD,EAAA/yB,UAAqB,IAArB8yB,GAAA7yB,KACA,SAAAzb,GAAC,OAAIA,EAAJk7B,SAEPuT,EAAWD,EAAApzB,QAAAjB,OAAA,KAAAH,KAAA,QAAfs0B,GAEII,EAAeD,EAAAt0B,OAAA,QAAAH,KAAA,IAAnB,GAEI20B,EAAWF,EAAA1uB,MAAfyuB,GAEII,EAAUD,EAAA/0B,OAAd,QAEIi1B,EAAJD,EACIE,EAAJH,EACII,EAAJR,EACI1yC,KAAJmzC,sBACIH,EAAWD,EAAX9uB,aACAgvB,EAAOH,EAAP7uB,aACAivB,EAASR,EAATzuB,cAGJ2uB,EAAAz0B,KAAA,YAA2B,SAAAha,GACvB,MAAO,aAAeusC,EAAAt+B,EAAA+F,MAAahU,EAA5BiO,GAAA,IAA0Cs+B,EAAAn+B,EAAA4F,MAAahU,EAAvDotC,IAAP,MAEJ,IAAI6B,EAAU1C,EAAAn+B,EAAA4F,MAAdqI,SACAyyB,EAAA90B,KAAA,YAAuB,SAAAha,GACnB,MAAO,aAAeusC,EAAAt+B,EAAA+F,MAAahU,EAA5BiO,GAAA,IAA0Cs+B,EAAAn+B,EAAA4F,MAAahU,EAAAotC,GAAOptC,EAA9DoO,GAAP,MAEJsgC,EAAA10B,KAAA,QACmBuyB,EAAAt+B,EAAA+F,MADnB4V,aAAA5P,KAAA,SAAA,GAGA60B,EAAA70B,KAAA,QACmBuyB,EAAAt+B,EAAA+F,MADnB4V,aAAA5P,KAAA,SAEoB,SAAAha,GAAC,OAAIusC,EAAAn+B,EAAA4F,MAAahU,EAAbotC,IAAqBb,EAAAn+B,EAAA4F,MAAahU,EAAAotC,GAAOptC,EAAPoO,EAAa6gC,EAAnD,MAGjBpzC,KAAA0wC,KAAJ2C,aACIH,EAAA/0B,KAAA,OACkBne,KAAA0wC,KADlB2C,aAIA3C,EAAJ4C,SACIR,EAAA3wB,GAAA,YAAyB,SAAAhe,GACrBpE,EAAAgwC,YAAiB5rC,EAAjBoO,KADJ4P,GAAA,WAEkB,SAAAhe,GACdpE,EAAAwzC,gBAGRjC,EAAAttB,OAAA1hB,SACAqwC,EAAA3uB,OAAA1hB,wCAGGkxC,GAKH,OAJA/C,EAAAd,EAAAU,EAAAnuC,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAyzC,YACAzzC,KAAA0zC,YACA1zC,KAAA2zC,WACA3zC,mcC7QR,IAAA4zC,EAAAnzC,EAAA,WACA2uC,EAAA3uC,EAAA,WACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEaozC,aAkCT,SAAAA,EAAAtE,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAA6zC,IACfrE,EAAAE,EAAA1vC,KAAA2vC,EAAAkE,GAAA9yC,KAAAf,QAjCJ4vC,SAAWJ,EAAAK,eAAsB,WAgCdL,EA/BnBO,aAAc,EA+BKP,EA9BnBp9B,EAAI,CACAqQ,MADA,GAEAlhB,MAAO,SAAAkP,GAAC,OAAIA,EAAJjP,KACR0wC,QAHA,EAIAtwB,OAAQ,UA0BO4tB,EAvBnBj9B,EAAI,CACAkQ,MADA,GAEAlhB,MAAO,SAAA4C,GAAC,OAAAA,GACRgU,MAHA,SAIAyJ,OAJA,OAKAkyB,aALA,GAMA5B,QANA,GAuBe1C,EAfnBuE,GAAK,SAAA5vC,GAAC,OAAIA,EAAAvB,OAAJmxC,IAeavE,EAdnBwE,GAAK,SAAA7vC,GAAC,OAAIA,EAAAvB,OAAJoxC,IAcaxE,EAbnByE,GAAK,SAAA9vC,GAAC,OAAIA,EAAAvB,OAAJqxC,IAaazE,EAZnB0E,GAAK,SAAA/vC,GAAC,OAAIA,EAAAvB,OAAJuxC,YAYa3E,EAXnB4E,GAAK,SAAAjwC,GAAC,OAAIA,EAAAvB,OAAJyxC,aAWa7E,EAVnB8E,SAAU,SAAAnwC,GAAC,OAAGA,EAAAvB,OAAH0xC,UAUQ9E,EATnB+E,aAAe,SAAApwC,EAAA5D,GAAA,OAAA4D,GASIqrC,EARnBgF,aAAe,SAAArwC,EAAA5D,GAAA,OAAA4D,GAQIqrC,EAPnBiF,YAAc,GAOKjF,EANnBkF,YAAc,IAMKlF,EAJnBvrB,YAAa,EAIMurB,EAHnBxgC,WAAS6R,EAGU2uB,EAFnBmF,gBAAiB,aAIbpF,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAHWC,aAlCgBoE,EAAAgB,4CA2C1BC,aACT,SAAAA,EAAAvE,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAA60C,GAAAnF,EAAA1vC,KAAA2vC,EAAAkF,GAAA9zC,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAi0B,EADUtD,gBADlBqD,EAAAkB,yFAKnBvE,GACN,OAAAE,EAAAd,EAAAkF,EAAA3yC,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAA6zC,EAAvBtD,uCAIAE,EAAAd,EAAAkF,EAAA3yC,WAAA,WAAAlC,MAAAe,KAAAf,MACAywC,EAAAd,EAAAkF,EAAA3yC,WAAA,kBAAAlC,MAAAe,KAAAf,MACAA,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GAEAvS,KAAA0wC,KAAA9wB,KAAiB5f,KAAjB+0C,gBACA/0C,KAAA4wC,SACA5wC,KAAA6wC,SAEA7wC,KAAAg1C,qDAKA,OAAOh1C,KAAP4f,sCAKA,IAAI8wB,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXn+B,EAEAA,EAAA7Q,MAAUyvC,EAAVzvC,MACA6Q,EAAA+F,MAAU3T,EAAAiuB,YAAAlY,MAAqB,CAAA,EAAIm2B,EAAnC7yB,QACAzL,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,KAETiO,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BxP,EAAvC+F,OACG64B,EAAHkB,QACI9/B,EAAA6+B,KAAAgE,UAAiBvE,EAAjB3tB,QAGJ,IACAvC,EADIZ,EAAO5f,KAAA0wC,KAAX9wB,KAKIY,EAHAZ,GAAUA,EAAd5e,OAGa4e,EAAAxe,IAASgR,EAAlB7Q,OAFA,GAKJmvC,EAAAt+B,EAAA+F,MAAAqI,OAAAA,oCAIK,IAAA00B,EAAAl1C,KAED0wC,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAAuwC,OAAXh+B,EACAA,EAAAhR,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAAR,KAAgBm0C,EAAhB3E,OAAJpsC,IACXoO,EAAA4F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAACm2B,EAAD3tB,OAA9C,IACAxQ,EAAAnR,IAAQ,SAAA+C,GAAC,OAAIoO,EAAA4F,MAAQ5F,EAAAhR,MAAZ4C,KAEToO,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BrP,EAAvC4F,OACI64B,EAAJzwB,OACIhO,EAAA0+B,KAAA1wB,MAAaywB,EAAbzwB,OAEDywB,EAAHkB,QACI3/B,EAAA0+B,KAAAgE,UAAiBvE,EAAjB7yB,OAEJ7d,KAAA+wC,sDAIA,IAIAoE,EAAAC,EAJI1E,EAAO1wC,KAAX0wC,KACI9wB,EAAO5f,KAAA0wC,KAAX9wB,KACIpf,EAAIR,KAARuwC,OAEI3tC,EAAJ,GACAgd,EAAA+xB,QAAa,SAAAxtC,EAAA5D,GACT,IAAI80C,EAAK70C,EAAAuzC,GAAT5vC,GACImxC,EAAK90C,EAAAyzC,GADT9vC,GAEIoxC,EAAK/0C,EAAA0zC,GAFT/vC,GAGIqxC,EAAKh1C,EAAA4zC,GAHTjwC,GAIImwC,EAAW9zC,EAAA8zC,SAJfnwC,GAMAmwC,GACIA,EAAA3C,QAAiB,SAAArxC,EAAAC,GACbqC,EAAAF,KAAYlC,EAAA+zC,aAAAj0C,EAAZC,MAGRg1C,GAAU3yC,EAAAF,KAAA6yC,GACVF,GAAUzyC,EAAAF,KAAA2yC,GACVC,GAAU1yC,EAAAF,KAAA4yC,GACVE,GAAU5yC,EAAAF,KAAA8yC,KAEdL,EAAO3wC,EAAA6L,IAAPzN,GAEA,IAAI0vC,IADJ8C,EAAO5wC,EAAA4L,IAAPxN,IACauyC,GAAan1C,KAAAuwC,OAAAh+B,EAA1BuhC,aAGItzB,EAAS,CAFb20B,GAAA7C,EACA8C,GAAA9C,GAGA5B,EAAAn+B,EAAA4F,MAAAqI,OAAAA,uCAIA,IAAIzgB,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIoB,EAAW9xC,KAAAuwC,OAAfn+B,EACI6+B,EAAOlxC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAAAkyC,YAAP,UAAA,IAA0ClyC,EAAAkyC,YAA1C,SAAsEH,EAAAI,OAAA,GAAuB,IAAMnyC,EAAAkyC,YAA5H,eAAA9zB,KAAA,YACY,eAAiBuyB,EAAjB3tB,OADvB,KAGIovB,EAAJlB,EACIlxC,EAAAwwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAt+B,EAAX6+B,MAEAA,EAAAe,eAAoB,QAAQjyC,EAAAkyC,YAA5B,UAAA9zB,KAAA,YACuB,aAAeuyB,EAAA7yB,MAAf,EAAA,IAAoC6yB,EAAA4B,OAApCC,OADvB,KAAAp0B,KAAA,KAAA,QAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVxwB,2CAQA,IAAIvhB,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIoB,EAAW9xC,KAAAuwC,OAAfh+B,EACI0+B,EAAOlxC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAAAkyC,YAAP,UAAA,IAA0ClyC,EAAAkyC,YAA1C,SAAsEH,EAAAI,OAAA,GAAuB,IAAMnyC,EAAAkyC,YAAvI,eAEIE,EAAJlB,EACIlxC,EAAAwwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAn+B,EAAX0+B,MAEAA,EAAAe,eAAoB,QAAUjyC,EAAAkyC,YAA9B,UAAA9zB,KAAA,YACuB,cAAgBuyB,EAAA4B,OAAhBzsB,KAAA,IAA0C6qB,EAAA3tB,OAA1C,EADvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,8CAQA,IAAI1iB,EAAJC,KACI0wC,EAAO3wC,EADX2wC,KAEIH,EAASxwC,EAFbwwC,OAGIkF,EAAe11C,EAAAkyC,YAHnB,gBAKIyD,EAAW31C,EAAAgyC,KAAApyB,UAAoB,IAApB81B,GAAA71B,KAA2C8wB,EAA1D9wB,MACI+1B,EAAeD,EAAAn2B,QAAAjB,OAAA,KAAAH,KAAA,QAAAs3B,GAAAh9B,MAAA,iBAAA,MAAAA,MAAA,eAAnB,MAMIm9B,EAAgBD,EAAAzxB,MAApBwxB,GAEIG,EAAJD,EACI71C,EAAJozC,sBACI0C,EAAYD,EAAZ3xB,cACA6xB,MAAgB,SAAA3xC,EAAA5D,GAAgB,OAJpC,IAI2CA,EAAemwC,EAAA9wB,KAAtB5e,SAGpC60C,EAAAp9B,MAAA,OACmBi4B,EADnB1hC,OAAAyJ,MAAA,iBAAA,GAAAA,MAAA,eAAA,KAAA0F,KAAA,YAIuB,SAAAha,EAAA5D,GAAA,MAAQ,cAAgBmwC,EAAAt+B,EAAAhR,IAAA+C,EAAA5D,GAAhB,IAAkCmwC,EAAAt+B,EAAA+F,MAAA4V,aAA1C,SACvB2nB,EAAA1xB,OAAA1hB,SAEA,IAAIyzC,EAAYxF,EAADmE,YAAuDvkC,KAAAE,IAASkgC,EAATmE,YAA6BvkC,KAAAC,IAASmgC,EAATkE,YAAnG,GAAgI/D,EAAAt+B,EAAA+F,MAAA4V,cAAjH,GAAsB2iB,EAAAt+B,EAAA+F,MAAA4V,YACjCioB,EAAW,IAAAtF,EAAAt+B,EAAA+F,MAAA4V,YAAkCgoB,EAAjD,EACIE,EAAW,IAAAvF,EAAAt+B,EAAA+F,MAAA4V,YAAkCgoB,EAAjD,EAEIG,EAAWn2C,EAAAkyC,YAAf,OAEA0D,EAAAr3B,OAAA,QAAAH,KAAA,QAAA+3B,GAAA/zB,GAAA,YAGqB,SAAAhe,EAAA5D,GACbiE,EAAAuZ,OAAA/d,MAAA4+B,QAAA,SAAA,GACA,IAAIC,EAAO,OAAO0R,EAAA0D,GAAA9vC,EAAP5D,GAAA,YAAkCgwC,EAAAyD,GAAA7vC,EAAlC5D,GAAA,YAA6DgwC,EAAAwD,GAAA5vC,EAAxE5D,GACAR,EAAAgwC,YAAAlR,KANR1c,GAAA,WAQoB,SAAAhe,EAAA5D,GACZiE,EAAAuZ,OAAA/d,MAAA4+B,QAAA,SAAA,GACA7+B,EAAAwzC,gBAGR,IAAI4C,EAAWP,EAAA73B,OAAqB,QAApCm4B,GAEIE,EAAJD,EACIp2C,EAAAwwC,OAAJtsB,aACImyB,EAAYD,EAAZlyB,cAGJmyB,EAAAj4B,KAAA,IAAoB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAao4B,EAAA0D,GAAtB9vC,MAApBga,KAAA,QAAA43B,GAAA53B,KAAA,IAAA63B,GAAA73B,KAAA,SAGoB,SAAAha,EAAA5D,GAAA,OAAS4P,KAAA+W,IAASwpB,EAAAn+B,EAAA4F,MAAao4B,EAAA0D,GAAb9vC,IAA6BusC,EAAAn+B,EAAA4F,MAAao4B,EAAAwD,GAAnD5vC,MAAT,IAHpBsU,MAAA,SAIqBi4B,EA1DV1hC,OA6DX,IAAIqnC,EAAct2C,EAAAkyC,YAAlB,UACA0D,EAAAr3B,OAAA,QAAAH,KAAA,QAAAk4B,GAEA,IAAIC,EAAaV,EAAA73B,OAAqB,QAAtCs4B,GACIt2C,EAAAwwC,OAAJtsB,aACIqyB,EAAaA,EAAbryB,cAEJqyB,EAAAn4B,KAAA,KAAA63B,GAAA73B,KAAA,KAEgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAao4B,EAAAyD,GAAtB7vC,MAFhBga,KAAA,KAAA83B,GAAA93B,KAAA,KAIgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAao4B,EAAAyD,GAAtB7vC,MAKhB,IAAIoyC,EAAcx2C,EAAAkyC,YAAlB,WACIuE,EAAYz2C,EAAAkyC,YADhB,gBAGIwE,EAAW,CAAC,CAACj1C,IAAD,MAAaD,MAAOgvC,EAAO2D,IAAK,CAAC1yC,IAAD,OAAcD,MAAOgvC,EAAO6D,KAE5EuB,EAAAr0C,KAAkB,SAAA6C,EAAA5D,GACd,IAAIm2C,EAAMlyC,EAAAuZ,OAAV/d,MAEAy2C,EAAA9E,QAAiB,SAAAnyC,GACTA,EAAA+B,MAAJ4C,KACIuyC,EAAAp4B,OAAA,QAAA7F,MAAA,SACqBi4B,EAAA1hC,MAAA7K,EADrB5D,IAAA4d,KAAA,QAEmBo4B,EAAA,IAAAd,EAAA,IAAoCj2C,EAFvDgC,KAGAk1C,EAAAp4B,OAAA,QAAA7F,MAAA,SACqBi4B,EAAA1hC,MAAA7K,EADrB5D,IAAA4d,KAAA,QAEmBq4B,EAAA,IAAAf,EAAA,IAAiCj2C,EAFpDgC,UAOZi1C,EAAA9E,QAAiB,SAAAnyC,GACb,IAAIm3C,EAAW,QAACn3C,EAAAgC,IAAmB+uC,EAApBwD,GAAgCxD,EAA/C0D,GAEI2C,EAAUhB,EAAA73B,OAAqB,IAAAw4B,EAAA,IAAAd,EAAA,IAAsCj2C,EAAzEgC,KACIq1C,EAAOjB,EAAA73B,OAAqB,IAAAy4B,EAAA,IAAAf,EAAA,IAAmCj2C,EAAnEgC,KACIzB,EAAAwwC,OAAJtsB,aACI2yB,EAAUA,EAAV3yB,aACA4yB,EAAKA,EAAL5yB,cAEJ2yB,EAAAz4B,KAAA,KAAA,IACgBuyB,EAAAt+B,EAAA+F,MAAA4V,aADhB5P,KAAA,KAEgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAa3Y,EAAA+B,MAAtB4C,MAFhBga,KAAA,KAAA,IAGgBuyB,EAAAt+B,EAAA+F,MAAA4V,aAHhB5P,KAAA,KAIgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAaw+B,EAAtBxyC,MAEhB0yC,EAAA14B,KAAA,KAAA63B,GAAA73B,KAAA,KAEgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAa3Y,EAAA+B,MAAtB4C,MAFhBga,KAAA,KAAA83B,GAAA93B,KAAA,KAIgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAa3Y,EAAA+B,MAAtB4C,MAEhBwxC,EAAAh2B,UAAuB,IAAA81B,EAAA,IAAqBj2C,EAA5CgC,KAAA2gB,GAAA,YACqB,SAAAhe,EAAA5D,EAAA+lB,GACb9hB,EAAAuZ,OAAA/d,MAAA4+B,QAAA,SAAA,GACA7+B,EAAAgwC,YAAiBvwC,EAAA+B,MAAjB4C,MAHRge,GAAA,WAKoB,SAAAhe,EAAA5D,EAAA+lB,GACZ9hB,EAAAuZ,OAAA/d,MAAA4+B,QAAA,SAAA,GACA7+B,EAAAwzC,kBAMZ,IAAIuD,EAAe/2C,EAAAkyC,YAAnB,WACIqC,EAAWsB,EAAAj2B,UAAwB,IAAxBm3B,GAAAl3B,KAA+C,SAAAzb,EAAA5D,GAAA,OAASgwC,EAAA+D,SAAAnwC,EAAA5D,IAAT,KAE1Dw2C,EAAqBzC,EAAA/0B,QAAAjB,OAAA,UAAAH,KAAA,QAAA24B,GAAAr+B,MAAA,UAAzB,KAIAs+B,EAAA50B,GAAA,YACqB,SAAAhe,EAAA5D,EAAA+lB,GACb9hB,EAAAuZ,OAAA/d,MAAA4+B,QAAA,SAAA,GACA7+B,EAAAgwC,YAAiBQ,EAAAiE,aAAArwC,EAAjB5D,MAHR4hB,GAAA,WAKoB,SAAAhe,EAAA5D,EAAA+lB,GACZ9hB,EAAAuZ,OAAA/d,MAAA4+B,QAAA,SAAA,GACA7+B,EAAAwzC,gBAGR,IAAIyD,EAAgBD,EAAA7yB,MAApBowB,GACI2C,EAAJD,EACIj3C,EAAAwwC,OAAJtsB,aACIgzB,EAAYD,EAAZ/yB,cAEJgzB,EAAA94B,KAAA,KAAA,IACgBuyB,EAAAt+B,EAAA+F,MAAA4V,aADhB5P,KAAA,KAEgB,SAAAha,EAAA5D,GAAA,OAASmwC,EAAAn+B,EAAA4F,MAAao4B,EAAAgE,aAAApwC,EAAtB5D,MAFhB4d,KAAA,IAAA,KAIAm2B,EAAAtwB,OAAA1hB,wCAIGkxC,GAKH,OAJA/C,EAAAd,EAAAkF,EAAA3yC,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAyzC,YACAzzC,KAAA0zC,YACA1zC,KAAAk3C,eACAl3C,0CAGS,IAAAm3C,EAAAn3C,KACLD,EAAJC,KACIgxC,EAAOhxC,KAAXuwC,OAEA,GAAGS,EAAH2D,gBAAwB,CACpB,IAAIyC,EAAsB,SAAShI,EAAAY,MAAAqH,sBAA4BrG,EAA/D2D,iBACA30C,KAAA0wC,KAAA4G,cAA0B9yC,EAAAwuB,aAAgBxuB,EAA1C4yC,IAEJ,IAAIG,EAAavG,EAAjBhiC,MACIuoC,GAAA,iBAAcA,GAAkCA,aAApDC,OACIx3C,KAAA0wC,KAAA1hC,MAAAuoC,EACKv3C,KAAA0wC,KAAH4G,gBACFv3C,EAAA2wC,KAAA6G,WAAAA,EACAv3C,KAAA0wC,KAAA1hC,MAAkB,SAAA7K,GAAC,OAAKpE,EAAA2wC,KAAA4G,cAAwBH,EAAAzG,KAAAt+B,EAAA7Q,MAA7B4C,+ZCxX/B,IAAAszC,EAAAh3C,EAAA,mBACA2uC,EAAA3uC,EAAA,WACAi3C,EAAAj3C,EAAA,sBACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEak3C,aAsBT,SAAAA,EAAApI,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAA23C,IACfnI,EAAAE,EAAA1vC,KAAA2vC,EAAAgI,GAAA52C,KAAAf,QArBJ4vC,SAAWJ,EAAAK,eAAsB,WAoBdL,EAnBnBM,YAAa,EAmBMN,EAlBnBO,aAAc,EAkBKP,EAjBnBj9B,EAAI,CACA/Q,SADAqf,EAEAtf,MAAO,SAAA4C,GAAc,YAAO0c,IAAA7gB,KAAAuS,EAAA/Q,IAAA2C,EAA6BA,EAAEnE,KAAAuS,EAAtC/Q,MACrB2W,MAHA,SAIAyJ,OAJA,OAKAkyB,aALA,GAMA5B,QANA,GAiBe1C,EATnB2B,QAAS,EASU3B,EARnB1S,OAAO,CACHt7B,SADGqf,EAEHtf,MAAO,SAAA4C,GAAc,YAAO0c,IAAA7gB,KAAA88B,OAAAt7B,IAAA,GAAmC2C,EAAEnE,KAAA88B,OAA5Ct7B,MACrB8f,MAHG,GAIHs2B,kBAJG/2B,GAQY2uB,EAFnBqI,OAAO,EAIHtI,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAHWC,aAtBYiI,EAAA5D,8CA8BtBiE,aACT,SAAAA,EAAAxH,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAA83C,GAAApI,EAAA1vC,KAAA2vC,EAAAmI,GAAA/2C,KAAAf,KAAAswC,EAAA1wB,EACV,IAAA+3B,EADUpH,gBADtBkH,EAAA5C,+FAKftE,GACN,OAAAE,EAAAd,EAAAmI,EAAA51C,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAA23C,EAAvBpH,4CAIA,IAAIxwC,EAAJC,KACIgxC,EAAOjxC,EAAXwwC,OACAxwC,EAAA2wC,KAAAqH,gBAA4B/3C,KAA5Bg4C,oBAEA,IAAIp4B,EAAO5f,KAAX4f,KACA,GAAI7f,EAAA2wC,KAAJqH,gBAMK,CACD,GAAGh4C,EAAAwwC,OAAHY,OACIpxC,EAAA2wC,KAAAgB,YAAyB9xB,EAAAxe,IAAS,SAAAqP,GAC9B,MAAM,CACFjP,IAAKiP,EAAA6Q,OAAW7Q,EAAXjP,KADH,GAEFoB,OAAQ6N,EAAE7N,cAGjB,CACD7C,EAAA2wC,KAAAuH,WAAuB,SAAA9zC,GAAC,OAAI6sC,EAAAlU,OAAAv7B,MAAAR,KAAAiwC,EAAJ7sC,IACxBpE,EAAA2wC,KAAAgB,YAAwBltC,EAAAtB,OAAA1B,IAAcxB,KAAA0wC,KAAduH,YAAAp1C,QAAxB+c,GAEA,IAAIs4B,EAAiB,SAAAj0C,GAAC,OAAAA,GACnBlE,EAAAwwC,OAAAzT,OAAH8a,eACOxI,EAAAY,MAAAmI,WAAiBp4C,EAAAwwC,OAAAzT,OAApB8a,cACIM,EAAkB,SAAAj0C,GAAC,OAAElE,EAAAwwC,OAAAzT,OAAA8a,aAAA3zC,IAAFA,GACdmrC,EAAAY,MAAAoI,SAAer4C,EAAAwwC,OAAAzT,OAAlB8a,gBACFM,EAAkB,SAAAj0C,GAAC,OAAIlE,EAAAwwC,OAAAzT,OAAA8a,aAAA3zC,IAAJA,KAG3BlE,EAAA2wC,KAAAgB,YAAAC,QAA8B,SAAA9hC,GAC1BA,EAAArO,IAAQ02C,EAAgBroC,EAAxBrO,OAIRzB,EAAA2wC,KAAA/V,WAAuBn2B,EAAA+f,IAAOvkB,KAAA0wC,KAAPgB,YAA8B,SAAAjhC,GAAC,OAAEA,EAAA7N,OAAF5B,cA9BtDjB,EAAA2wC,KAAAgB,YAAyB,CAAC,CACtBlwC,IADsB,GAEtBoB,OAAQgd,IAEZ7f,EAAA2wC,KAAA/V,WAAuB/a,EAAvB5e,OAmDJ,OArBAjB,EAAA2wC,KAAAgB,YAAAC,QAA8B,SAAAlhC,GAC1B,GAAI/O,MAAAC,QAAc8O,EAAlB7N,QAAA,CAIA,IAAIA,EAAS6N,EAAA7N,OAAAxB,IAAa,SAAA+C,GAAC,OAAEia,WAAWre,EAAAwwC,OAAAh+B,EAAAhR,MAAAR,KAAyBhB,EAAzBwwC,OAAbpsC,MAC3BsM,EAAA7N,OAAAmxC,GAAc2D,EAAAW,gBAAA7wB,SAAA5kB,EAAd,KACA6N,EAAA7N,OAAAoxC,GAAc0D,EAAAW,gBAAA7wB,SAAA5kB,EAAd,IACA6N,EAAA7N,OAAAqxC,GAAcyD,EAAAW,gBAAA7wB,SAAA5kB,EAAd,KACA,IAAI01C,EAAO7nC,EAAA7N,OAAAqxC,GAAcxjC,EAAA7N,OAAzBmxC,GAEIh0C,EAAAwwC,OAAJsH,OAIIpnC,EAAA7N,OAAAuxC,WAAsB1jC,EAAA7N,OAAAmxC,GAAc,IAApCuE,EACA7nC,EAAA7N,OAAAyxC,YAAuB5jC,EAAA7N,OAAAqxC,GAAc,IAArCqE,EACA7nC,EAAA7N,OAAA0xC,SAAoB1xC,EAAA2e,OAAc,SAAApd,GAAC,OAAGA,EAAEsM,EAAA7N,OAAFuxC,YAAyBhwC,EAAEsM,EAAA7N,OAA9ByxC,gBALnC5jC,EAAA7N,OAAAuxC,WAAsB3vC,EAAA6L,IAAtBzN,GACA6N,EAAA7N,OAAAyxC,YAAuB7vC,EAAA4L,IAAvBxN,OAQD7C,EAAA2wC,KAAPgB,wDAIA,OAAO1xC,KAAAuwC,OAAAY,WAAyBnxC,KAAAuwC,OAAAzT,SAAsB98B,KAAAuwC,OAAAzT,OAAtDv7B,sdC9GR,IAAAqyC,EAAAnzC,EAAA,WACA2uC,EAAA3uC,EAAA,WACA83C,EAAA93C,EAAA,YACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEa2vC,aAmBT,SAAAA,EAAAb,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAowC,IACfZ,EAAAE,EAAA1vC,KAAA2vC,EAAAS,GAAArvC,KAAAf,QAlBJ8vC,YAAW,EAiBQN,EAhBnBgJ,aAAY,EAgBOhJ,EAfnB1rB,OAAO,CACHjG,MADG,GAEHy0B,OAFG,GAGHpzB,WAAY,IAYGswB,EAVnB1S,OAAO,CACHt7B,IADG,EAEHD,MAAO,SAAA4C,GAAc,OAAOA,EAAEnE,KAAA88B,OAATt7B,MACrB8f,MAHG,GAIHs2B,kBAJG/2B,GAUY2uB,EAJnB2B,QAAS,EAIU3B,EAHnBxgC,WAAS6R,EAGU2uB,EAFnBmF,gBAAiB,aAIbpF,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAHWC,aAnByBoE,EAAAgB,qDA4BnCpE,aACT,SAAAA,EAAAF,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAwwC,GAAAd,EAAA1vC,KAAA2vC,EAAAa,GAAAzvC,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAwwB,EADUG,gBADTqD,EAAAkB,yFAK5BvE,GACN,OAAAE,EAAAd,EAAAa,EAAAtuC,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAowC,EAAvBG,uCAIAE,EAAAd,EAAAa,EAAAtuC,WAAA,WAAAlC,MAAAe,KAAAf,MACA,IAEIgxC,EAAOhxC,KAAXuwC,OAOA,GALAvwC,KAAA0wC,KAAAZ,WAAuBkB,EAAvBlB,WACA9vC,KAAAy4C,cACAz4C,KAAA0wC,KAAA9wB,KAAiB5f,KAAjB+0C,gBACA/0C,KAAAwxC,YAEGxxC,KAAA0wC,KAAHZ,WAAwB,CACpB,IAAI33B,EAAQnY,KAAA0wC,KAAZ4G,eACIn/B,EAADqI,WAAoBxgB,KAAAuwC,OAADiI,aAA4BrgC,EAAAqI,SAAAxf,OAAlD,EACIhB,KAAA0wC,KAAAZ,YAAA,EAEA9vC,KAAA0wC,KAAA4B,OAAArsB,MAAyB+qB,EAAAsB,OAAArsB,MAAoB+qB,EAAAltB,OAApBjG,MAAzB,EAA+DmzB,EAAAltB,OAAAwuB,OAGvE,OAAAtyC,iDAIA,OAAOA,KAAAuwC,OAAAY,WAAyBnxC,KAAAuwC,OAAAzT,SAAsB98B,KAAAuwC,OAAAzT,OAAtDv7B,yDAGqB,IAAA2zC,EAAAl1C,KACjBoB,EAAMoD,EAAA/C,IAAOzB,KAAP4f,KAAkB,SAAAzb,GAAC,OAAI+wC,EAAAxE,KAAAuH,WAAJ9zC,KAC7B,OAAOE,OAAAq0C,oBAAAt3C,GAAAA,IAAoC,SAAA+C,GAAC,OAAE/C,EAAF+C,2CAGlC,IAAAgzC,EAAAn3C,KACND,EAAJC,KACIgxC,EAAOhxC,KAAXuwC,OAEAvwC,KAAA0wC,KAAAqH,gBAA4B/3C,KAA5Bg4C,oBACA,IAAIx3B,EAAJ,GACA,GAAGxgB,KAAA0wC,KAAHqH,gBAEI,GADAh4C,EAAA2wC,KAAAiI,aAAA,GACG34C,KAAAuwC,OAAHY,OACInxC,KAAA0wC,KAAAuH,WAAuB,SAAAxnC,GAAC,OAAIA,EAAJjP,KACxBgf,EAASxgB,KAAT44C,0BAEA54C,KAAA4f,KAAA+xB,QAAkB,SAAAlhC,GACd1Q,EAAA2wC,KAAAiI,aAAuBloC,EAAvBjP,KAAgCiP,EAAA6Q,OAAS7Q,EAAzCjP,UAEH,CACDxB,KAAA0wC,KAAAuH,WAAuB,SAAA9zC,GAAC,OAAI6sC,EAAAlU,OAAAv7B,MAAAR,KAAAiwC,EAAJ7sC,IACxBqc,EAASxgB,KAAT44C,0BACA,IAAIC,EAAU,SAAA50C,GAAC,OAAAA,GACZlE,EAAAwwC,OAAAzT,OAAH8a,eACOxI,EAAAY,MAAAmI,WAAiBp4C,EAAAwwC,OAAAzT,OAApB8a,cACIiB,EAAW,SAAA50C,GAAC,OAAElE,EAAAwwC,OAAAzT,OAAA8a,aAAA3zC,IAAFA,GACPmrC,EAAAY,MAAAoI,SAAer4C,EAAAwwC,OAAAzT,OAAlB8a,gBACFiB,EAAW,SAAA50C,GAAC,OAAIlE,EAAAwwC,OAAAzT,OAAA8a,aAAA3zC,IAAJA,KAGpBuc,EAAAmxB,QAAe,SAAA1tC,GACXlE,EAAA2wC,KAAAiI,aAAA10C,GAA4B40C,EAA5B50C,UAKRjE,KAAA0wC,KAAAuH,WAAuB,SAAA9zC,GAAC,OAAA,MAG5B,GADAnE,KAAA0wC,KAAAoI,iBAAAt4B,EACGwwB,EAAH2D,gBAAwB,CACpB,IAAIyC,EAAsB,SAAShI,EAAAY,MAAAqH,sBAA4BrG,EAA/D2D,iBACA30C,KAAA0wC,KAAA4G,cAA0B9yC,EAAAwuB,aAAgBxuB,EAA1C4yC,IAEJ,IAAIG,EAAavG,EAAjBhiC,MAEA,GAAAuoC,EACI,GAAG,iBAAAA,GAAkCA,aAArCC,OACIx3C,KAAA0wC,KAAA1hC,MAAAuoC,EACAv3C,KAAA0wC,KAAA2C,YAAwBrzC,KAAA0wC,KAAxB1hC,UACC,CACDhP,KAAA0wC,KAAA1hC,MAAAuoC,EACAv3C,KAAA0wC,KAAA2C,YAAwBrzC,KAAA0wC,KAAxB1hC,MACA,IAAIuL,EAAQiG,EAAApf,IAAW,SAAA4C,GAAC,OAAEmzC,EAAAzG,KAAA2C,YAAsB,CAAC7xC,IAAKwC,MACtDhE,KAAA0wC,KAAA4G,cAA0B9yC,EAAAwuB,aAA1BzY,GACAva,KAAA0wC,KAAA4G,cAAA92B,OAAAA,QAICxgB,KAAA0wC,KAAH4G,eACFv3C,EAAA2wC,KAAA6G,WAAAA,EACAx3C,EAAA2wC,KAAA4G,cAAA92B,OAAAA,GAEAxgB,KAAA0wC,KAAA2C,YAAwB,SAAA5iC,GAAC,OAAK1Q,EAAA2wC,KAAA4G,cAAwB7mC,EAA7BjP,MACzBxB,KAAA0wC,KAAA1hC,MAAkB,SAAA7K,GAAC,OAAKpE,EAAA2wC,KAAA4G,cAAwBH,EAAAzG,KAAAuH,WAA7B9zC,MAGnBnE,KAAA0wC,KAAA1hC,MAAkBhP,KAAA0wC,KAAA2C,YAAwB,SAAA5iC,GAAC,MAAA,6CAM/C,IAAI1Q,EAAJC,KACI4f,EAAO5f,KAAA0wC,KAAX9wB,KACI7f,EAAA2wC,KAAJqH,iBASOh4C,EAAAwwC,OAAHY,OACIpxC,EAAA2wC,KAAAgB,YAAyB9xB,EAAAxe,IAAS,SAAAqP,GAC9B,MAAM,CACFjP,IAAKiP,EADHjP,IAEF8f,MAAO7Q,EAFL6Q,MAGF1e,OAAQ6N,EAAE7N,WAIlB7C,EAAA2wC,KAAAgB,YAAwBltC,EAAAtB,OAAA1B,IAAcxB,KAAA0wC,KAAduH,YAAAp1C,QAAxB+c,GACA7f,EAAA2wC,KAAAgB,YAAAC,QAA8B,SAAA9hC,GAC1BA,EAAAyR,MAAUvhB,EAAA2wC,KAAAiI,aAAuB9oC,EAAjCrO,QAIRzB,EAAA2wC,KAAA/V,WAAuBn2B,EAAA+f,IAAOvkB,KAAA0wC,KAAPgB,YAA8B,SAAAjhC,GAAC,OAAEA,EAAA7N,OAAF5B,WAvBtDjB,EAAA2wC,KAAAgB,YAAyB,CAAC,CACtBlwC,IADsB,KAEtB8f,MAFsB,GAGtB1e,OAAQgd,IAEZ7f,EAAA2wC,KAAA/V,WAAuB/a,EAAvB5e,gDAyBO,IAAA+3C,EAAA/4C,KACX,OAAIA,KAAA0wC,KAADqH,iBAA+B/3C,KAAlCg5C,cAGOh5C,KAAA4f,KAAA2B,OAAiB,SAAApd,GAAC,OAAA,EAAI40C,EAAAC,cAAAt3B,QAA2Bq3B,EAAArI,KAAAuH,WAA3B9zC,MAFlBnE,KAAP4f,oCAOD4zB,GAIH,OAHA/C,EAAAd,EAAAa,EAAAtuC,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAi5C,eAEAj5C,4CAKA,IAAID,EAAJC,KACI0wC,EAAO1wC,KAAX0wC,KAEIv4B,EAAQu4B,EAAZ4G,cAMA,KAJIn/B,EAADqI,WAAoBxgB,KAAAuwC,OAADiI,aAA4BrgC,EAAAqI,SAAAxf,OAAlD,KACI0vC,EAAAZ,YAAA,GAGAY,EAAJZ,WAAA,CAQA,IAAIoJ,EAAUl5C,KAAA0wC,KAAA7yB,MAAkB7d,KAAAuwC,OAAAzsB,OAAhCwuB,OACI6G,EAAUn5C,KAAAuwC,OAAAzsB,OAAdwuB,OAEA5B,EAAA5sB,OAAc,IAAIy0B,EAAJa,OAAWp5C,KAAXsf,IAAqBtf,KAArB+xC,KAAA55B,EAAA+gC,EAAdC,GAEAzI,EAAAprB,YAAmBorB,EAAA5sB,OAAA9U,QAAAkQ,WACHlf,KAAAuwC,OAAAzsB,OADG5E,YAAA0C,OAAA,YAAAzJ,MAAAA,GAAAwL,UAIJ3jB,KAAAuwC,OAAAzsB,OAJIjG,OAAA2B,OAKPrH,EAAAqI,SAAApf,IAAmB,SAAA4C,GAAC,OAAE0sC,EAAAiI,aAAF30C,MAGhC0sC,EAAAprB,YAAAnD,GAAA,YAAiC,SAAA3hB,GAAC,OAAGT,EAAAs5C,kBAAH74C,KAElCkwC,EAAA5sB,OAAAw1B,UAAAv4C,KACU2vC,EADVprB,aAGAtlB,KAAAu5C,gCAzBO7I,EAAA5sB,QAAe4sB,EAAA5sB,OAAlBw1B,WACI5I,EAAA5sB,OAAAw1B,UAAAh3C,mDA2BMk3C,GACdx5C,KAAAy5C,oBAAAD,GACAx5C,KAAA05C,0DAGA,IAAI35C,EAAJC,KACAA,KAAA0wC,KAAA5sB,OAAAw1B,UAAA35B,UAAA,UAAAre,KAAoD,SAAAugB,GAChD,IAAI83B,EAAa55C,EAAAi5C,eAAsBj5C,EAAAi5C,cAAAt3B,QAAAG,GAAvC,EACArd,EAAAuZ,OAAA/d,MAAA4+B,QAAA,eAAA+a,iDAIYH,GACXx5C,KAALg5C,gBACIh5C,KAAAg5C,cAAqBh5C,KAAA0wC,KAAA4G,cAAA92B,SAArB7d,SAEJ,IAAI0T,EAAQrW,KAAAg5C,cAAAt3B,QAAZ83B,GAEInjC,EAAJ,EACIrW,KAAAg5C,cAAAt2C,KAAA82C,GAEAx5C,KAAAg5C,cAAAtc,OAAArmB,EAAA,GAGCrW,KAAAg5C,cAALh4C,SACIhB,KAAAg5C,cAAqBh5C,KAAA0wC,KAAA4G,cAAA92B,SAArB7d,yCAKAid,GAGJ,OAFA6wB,EAAAd,EAAAa,EAAAtuC,WAAA,UAAAlC,MAAAe,KAAAf,KAAA4f,GACA5f,KAAAg5C,cAAA,KACAh5C,4MCvQR,IAAAovC,EAAA3uC,EAAA,WACA+D,iXAAA6qC,CAAA5uC,EAAA,sXAkCI,SAhCSm0C,EAgCTrF,GAAoBE,EAAAzvC,KAAA40C,GAAA50C,KA/BpB6vC,eAAiB,OA+BG7vC,KA9BpB4vC,SAAW5vC,KAAA6vC,eAAsB,cA8Bb7vC,KA7BpB6d,WAAQgD,EA6BY7gB,KA5BpB+iB,YAASlC,EA4BW7gB,KA3BpBsyC,OAAS,CACLzsB,KADK,GAELI,MAFK,GAGLwT,IAHK,GAIL8Y,OAAQ,IAuBQvyC,KArBpB+vC,aAAc,EAqBM/vC,KApBpBikB,YAAa,EAoBOjkB,KAlBpByiB,WAAQ5B,EAkBY7gB,KAjBpB45C,UAAU,GAiBU55C,KAhBpB65C,YAAY,CACRh0B,KADQ,EAERI,MAFQ,EAGRwT,IAHQ,GAIR8Y,OAAQ,IAYQvyC,KATpB85C,cAAWj5B,EASS7gB,KARpB+5C,aAAa,GAQO/5C,KAPpBg6C,eAAe,CACXn0B,KADW,EAEXI,MAFW,EAGXwT,IAHW,GAIX8Y,OAAQ,IAIRhD,GACIH,EAAAY,MAAAG,WAAAnwC,KAAAuvC,uBAOCuF,aAeT,SAAAA,EAAAnlB,EAAA/P,EAAA2wB,GAAgCd,EAAAzvC,KAAA80C,GAAA90C,KAdhCi6C,MAAQ7K,EAAAY,MAcwBhwC,KAVhC0wC,KAAO,CACH4B,OAAQ,IASoBtyC,KAPhCk6C,UAAY,GAOoBl6C,KANhCm6C,QAAU,GAMsBn6C,KALhCo6C,QAAU,GAKsBp6C,KAHhCq6C,gBAAe,EAIXr6C,KAAAs6C,IAAWlL,EAAAY,MAAXuK,OACAv6C,KAAAw6C,YAAmB7qB,aAAnBmlB,EAEA90C,KAAAy6C,cAAA9qB,EAEA3vB,KAAA06C,UAAAnK,GAEA3wB,GACI5f,KAAA26C,QAAA/6B,GAEJ5f,KAAA05C,OACA15C,KAAA46C,oGAGMrK,GAON,OAHIvwC,KAAAuwC,OAHJA,GACkB,IAAdqE,EAIJ50C,KAAA66C,sBACA76C,qCAGI4f,GAEJ,OADA5f,KAAA4f,KAAAA,EACA5f,oCAaA,OATAA,KACA86C,WADA96C,KAEA+6C,UAEI/6C,KAAJq6C,gBAJAr6C,KAKIg7C,cALJh7C,KAOAi7C,OACAj7C,KAAAq6C,gBAAA,EACAr6C,sCAKA,OADAA,KAAA66C,qBAAA,GACO76C,KAAP05C,6EAQA,IAAI35C,EAAJC,KACIuwC,EAASvwC,KAAbuwC,OAEI+B,EAASvyC,EAAA2wC,KAAb4B,OACIz0B,EAAQ9d,EAAAm7C,SAAgBn7C,EAAA2wC,KAAA7yB,MAAkBy0B,EAAlBzsB,KAAgCysB,EAA5DrsB,MACIlD,EAAShjB,EAAAo7C,UAAkBp7C,EAAA2wC,KAAA3tB,OAAmBuvB,EAAnB7Y,IAAgC6Y,EAA/DC,OAEIxyC,EAAJy6C,aAcIz6C,EAAAuf,IAAWvf,EAAA06C,cAAXn7B,IACAvf,EAAAgyC,KAAYhyC,EAAAuf,IAAA0yB,eAAwB,gBAAgBzB,EAApDX,YAdI5vC,KAAJq6C,gBACI71C,EAAAuZ,OAAUhe,EAAV06C,eAAA18B,OAAA,OAAAzb,SAEJvC,EAAAuf,IAAW9a,EAAAuZ,OAAUhe,EAAV06C,eAAAzI,eAAA,OAAApT,QAA4D2R,EAA5DX,UAAX,GAEA7vC,EAAAuf,IAAAnB,KAAA,QAAAN,GAAAM,KAAA,SAAA4E,GAAA5E,KAAA,UAGqB,QAAAN,EAAA,IAHrBkF,GAAA5E,KAAA,sBAAA,iBAKApe,EAAAgyC,KAAYhyC,EAAAuf,IAAA0yB,eAAZ,iBAOJjyC,EAAAgyC,KAAA5zB,KAAA,YAA4B,aAAem0B,EAAfzsB,KAAA,IAAmCysB,EAAnC7Y,IAA5B,KAEK8W,EAAD1yB,QAAiB0yB,EAArBxtB,QACIve,EAAAuZ,OAAAle,QAAAsiB,GACQ,UAAUpiB,EADlBu6C,IAC4B,WACpB,IAAIr2B,EAAalkB,EAAAwwC,OAAjBtsB,WACAlkB,EAAAwwC,OAAAtsB,YAAA,EACAlkB,EAAA25C,OACA35C,EAAAwwC,OAAAtsB,WAAAA,sCAMZzf,EAAAuZ,OAAU/d,KAAVy6C,eAAA96B,UAAA,KAAArd,SACAkC,EAAAuZ,OAAAle,QAAAsiB,GAAqB,UAAYniB,KAAjCs6C,IAAA,4CAIAt6C,KACIuwC,OAAJR,YADA/vC,KAEIw6C,YAFJx6C,KAMQ0wC,KAAA4C,QANRtzC,KAM2By6C,cAAA/J,KAAnB4C,QANRtzC,KAGQ0wC,KAAA4C,QAAoB9uC,EAAAuZ,OAAA,QAAAi0B,eAAiC,OAH7DhyC,KAGoEuwC,OAAPV,eAAjC,WAAAp3B,MAAA,UAApB,GAHRzY,KAUI0wC,KAAA4C,QAAA,wCAKJ,IAAIhB,EAAStyC,KAAAuwC,OAAb+B,OACAtyC,KAAA0wC,KAAY1wC,KAAA0wC,MAAZ,GACA1wC,KAAA0wC,KAAA4B,OAAmB,CACf7Y,IAAK6Y,EADU7Y,IAEf8Y,OAAQD,EAFOC,OAGf1sB,KAAMysB,EAHSzsB,KAIfI,MAAOqsB,EAAOrsB,OAIlB,IAAIm1B,EAAJ,EACGp7C,KAAAuwC,OAAH9tB,QACI24B,EAAiBp7C,KAAAuwC,OAAAqJ,UAAsB55C,KAAAuwC,OAAAsJ,YAAvCpgB,IACIz5B,KAAAuwC,OAAJuJ,WACIsB,GAAmBp7C,KAAAuwC,OAAAsJ,YAAnBtH,QAGJvyC,KAAA0wC,KAAA4B,OAAA7Y,IAAqBtpB,KAAAC,IAASpQ,KAAA0wC,KAAA4B,OAAT7Y,IAArB2hB,IAGDp7C,KAAAuwC,OAAHuJ,WAEI95C,KAAA0wC,KAAA4B,OAAA7Y,IAAqBtpB,KAAAC,IAASpQ,KAAA0wC,KAAA4B,OAAT7Y,IAA+B2hB,EAAgBp7C,KAAAuwC,OAAAyJ,eAAhBvgB,IAA+Cz5B,KAAAuwC,OAA/CwJ,aAAwE/5C,KAAAuwC,OAAAyJ,eAA5HzH,wCAKD3yB,GAOH,IAAAy7B,EACA,IAAK,IAALC,KAPA17B,GACI5f,KAAA26C,QAAA/6B,GAEJ5f,KAAAu7C,cACAv7C,KAAAw7C,iBAG2Bx7C,KAA3Bk6C,UAEImB,EAAAz7B,EAEA5f,KAAAk6C,UAAAoB,GAAAthB,OAAAqhB,GAEJ,OAAAr7C,2CAIA,IAAIy7C,EAAaz7C,KAAAiyC,YAAjB,cACIjyC,KAAAuwC,OAAJ9tB,MAKAziB,KAAAsf,IAAA0yB,eAAwB,QAAxByJ,GAAAt9B,KAAA,YACuB,aAAene,KAAAk7C,SAAf,EAAA,IAAuCl7C,KAAAuwC,OAAAsJ,YAAvCpgB,IADvB,KAAAtb,KAAA,KAAA,SAAA1F,MAAA,cAAA,UAAAA,MAAA,oBAAA,WAAAA,MAAA,YAKwBzY,KAAAuwC,OAAAqJ,UALxB,MAAAh8B,KAMU5d,KAAAuwC,OANV9tB,OAJIziB,KAAAsf,IAAAvB,OAAgB,QAAhB09B,GAAAn5C,kDAcJ,IAAIo5C,EAAgB17C,KAAAiyC,YAApB,iBACA,GAAIjyC,KAAAuwC,OAAJuJ,SAAA,CAKA,IAAIvnC,EAAIvS,KAAAuwC,OAAAyJ,eAARvgB,IACGz5B,KAAAuwC,OAAH9tB,QACIlQ,GAAGvS,KAAAuwC,OAAAsJ,YAAApgB,IAA4Bz5B,KAAAuwC,OAA/BqJ,WAGJ55C,KAAAsf,IAAA0yB,eAAwB,QAAxB0J,GAAAv9B,KAAA,YACuB,aAAene,KAAAk7C,SAAf,EAAA,IAAA3oC,EADvB,KAAA4L,KAAA,KAAA,SAAA1F,MAAA,cAAA,UAAAA,MAAA,oBAAA,WAAAA,MAAA,YAKwBzY,KAAAuwC,OAAAwJ,aALxB,MAAAn8B,KAMU5d,KAAAuwC,OANVuJ,eATI95C,KAAAsf,IAAAvB,OAAgB,QAAhB29B,GAAAp5C,sCAkBHsd,GAID,OAHA5f,KAAAg6B,OAAApa,GAGA5f,oCAmBGs7C,EAAgBK,GACnB,OAAA,IAAI1rC,UAAAjP,OACOhB,KAAAk6C,UAAPoB,GAGJt7C,KAAAk6C,UAAAoB,GAAAK,6BAqBD9xB,EAAMC,EAAU8xB,GAOf,OANa57C,KAAAo6C,QAAAvwB,KAAuB7pB,KAAAo6C,QAAAvwB,GAApC,KACAnnB,KAAY,CACRonB,SADQA,EAER8xB,QAASA,GAFD57C,KAGR4zC,OAAQ5zC,OAEZA,kCAqBC6pB,EAAMC,EAAU8xB,GAEN,SAAPC,IACA97C,EAAA+7C,IAAAjyB,EAAAgyB,GACA/xB,EAAAxmB,MAAAtD,KAAAiQ,WAHJ,IAAIlQ,EAAJC,KAKA,OAAOA,KAAAmiB,GAAA0H,EAAAgyB,EAAPD,+BAuBA/xB,EAAMC,EAAU8xB,GAChB,IAAAtgB,EAAAl7B,EAAA27C,EAAAtkB,EAAAl3B,EADyB+lB,EAIzB,GAAA,IAAIrW,UAAAjP,OAAwB,CACxB,IAAA6oB,KAAa7pB,KAAbo6C,QACIp6C,KAAAo6C,QAAAvwB,GAAA7oB,OAAA,EAEJ,OAAAhB,KAIJ,GAAA,IAAIiQ,UAAAjP,OAKA,OAJA+6C,EAAS/7C,KAAAo6C,QAATvwB,MAEIkyB,EAAA/6C,OAAA,GAEJhB,KAMJ,IADAs7B,EAAQzR,EAAO,CAAHA,GAAYxlB,OAAA5B,KAAYzC,KAApCo6C,SACK75C,EAAL,EAAYA,EAAI+6B,EAAhBt6B,OAA8BT,IAI1B,IAHAH,EAAIk7B,EAAJ/6B,GAEA+lB,GADAy1B,EAAS/7C,KAAAo6C,QAATh6C,IACAY,OACOslB,KACHmR,EAAQskB,EAARz1B,IACKwD,GAAYA,IAAa2N,EAA1B3N,UACC8xB,GAAWA,IAAYnkB,EAD5BmkB,UAEIG,EAAArf,OAAApW,EAAA,GAKZ,OAAAtmB,qCAeI6pB,GACJ,IAEAtpB,EAAAy7C,EAFIzxB,EAAO7oB,MAAAQ,UAAAS,MAAA5B,KAAAkP,UAAX,GACI8rC,EAAS/7C,KAAAo6C,QAAbvwB,GAGA,QAAAhJ,IAAIk7B,EACA,IAAKx7C,EAAL,EAAYA,EAAIw7C,EAAhB/6C,OAA+BT,KAC3By7C,EAAKD,EAALx7C,IACAupB,SAAAxmB,MAAkB04C,EAAlBJ,QAAArxB,GAIR,OAAAvqB,gDAGA,OAAGA,KAAHw6C,YACWx6C,KAAAy6C,cAAPn7B,IAEG9a,EAAAuZ,OAAU/d,KAAjBy6C,8DAKA,OAAOz6C,KAAAi8C,mBAAP19B,2CAGQ29B,EAAOC,GACf,OAAOA,EAAM,IAAO,GAAGn8C,KAAAuwC,OAAHV,eAApBqM,4CAGAl8C,KAAA0wC,KAAA7yB,MAAkBuxB,EAAAY,MAAAoM,eAAqBp8C,KAAAuwC,OAArB1yB,MAAwC7d,KAAxCi8C,mBAAiEj8C,KAAA0wC,KAAnF4B,QACAtyC,KAAA0wC,KAAA3tB,OAAmBqsB,EAAAY,MAAAqM,gBAAsBr8C,KAAAuwC,OAAtBxtB,OAA0C/iB,KAA1Ci8C,mBAAmEj8C,KAAA0wC,KAAtF4B,oDAIA,OAAOtyC,KAAAq6C,gBAAuBr6C,KAAAuwC,OAA9BtsB,+CAGQ4a,GACJ7+B,KAAA0wC,KAAJ4C,UAGAtzC,KAAA0wC,KAAA4C,QAAArvB,aAAA/H,SAAA,KAAAzD,MAAA,UAAA,IAGAzY,KAAA0wC,KAAA4C,QAAAzU,KAAAA,GAAApmB,MAAA,OACoBjU,EAAAizB,MAAA6kB,MAAD,EADnB,MAAA7jC,MAAA,MAEmBjU,EAAAizB,MAAA8kB,MAAD,GAFlB,6CAMIv8C,KAAA0wC,KAAJ4C,SAGAtzC,KAAA0wC,KAAA4C,QAAArvB,aAAA/H,SAAA,KAAAzD,MAAA,UAAA,+CAKgB+jC,GAChBA,GACIx8C,KAAAy8C,wBAAAz8C,KAAAA,KAAwCA,KAAxCuwC,OAAA,KAEJvwC,KAAA08C,sBAAA18C,KAAAA,KAAsCA,KAAtCuwC,OAAA,KAAA,mDAGoBoM,EAAOC,EAAW/mC,EAAQ3U,GAE9C,IAAK,IAALX,KAAAsV,EACQA,EAAAlG,eAAJpP,WAIOo8C,EAAOz7C,EAAdX,iDAIco8C,EAAOC,EAAW/mC,EAAQ3U,EAAQ27C,GAEpD,IAAK,IAALt8C,KAAAsV,EACI,GAAIA,EAAAlG,eAAJpP,GAAA,CAIA,IAAIu8C,EANR98C,KAMmB+8C,qBAAAJ,EAAAC,EAAA/mC,EAAAtV,EAAfW,GAEG27C,GAAazN,EAAAY,MAAAgN,iBAAuBnnC,EAAvCtV,KARJP,KASQ08C,sBAAAI,EAAAH,EAA6C9mC,EAA7CtV,GAAAW,EAAA27C,iDAKSF,EAAQC,EAAW/mC,EAAQonC,EAAa/7C,GACzD,OAAOy7C,EAAOz7C,EAAP+7C,GAA+B,SAAAz4B,GAClC,OAAKvU,UAALjP,QAGA6U,EAAAonC,GAAAz4B,EACAo4B,GAHW/mC,EAAPonC,8ZCxfhB,IAAArJ,EAAAnzC,EAAA,WACA2uC,EAAA3uC,EAAA,WACAi3C,EAAAj3C,EAAA,sBACA83C,EAAA93C,EAAA,YACAy8C,EAAAz8C,EAAA,iBACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEa08C,aAuCT,SAAAA,EAAA5N,GAAoB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAm9C,IAChB3N,EAAAE,EAAA1vC,KAAA2vC,EAAAwN,GAAAp8C,KAAAf,QAtCJ4vC,SAAWJ,EAAAK,eAAoB,qBAqCXL,EApCpB0C,QAAS,EAoCW1C,EAnCpBO,aAAc,EAmCMP,EAlCpBM,YAAa,EAkCON,EAjCpB4N,iBAAkB,EAiCE5N,EAhCpB6N,eAAgB,EAgCI7N,EA/BpB8N,eAAgB,EA+BI9N,EA9BpB+N,UAAY,CACR/9B,YADQqB,EAERpe,KAFQ,GAGRlB,MAAO,SAAA4C,EAAAq5C,GAAA,OAAoBp/B,WAAWja,EAA/Bq5C,KACPrlC,MAAO,WA0BSq3B,EAxBpBiO,YAAc,CACVtlC,MADU,SAEVqI,OAAQ,EAAA,GAAA,KAAA,GAAA,EAAA,GAAA,IAFE,GAGVjG,MAAO,CAAA,WAAA,OAAA,eAAA,QAAA,YAAA,UAHG,WAIVhZ,MAAO,SAAAm8C,EAAAC,GAAA,OAAsBjG,EAAAW,gBAAAuF,kBAAAF,EAAtBC,KAoBSnO,EAjBpB3tB,KAAO,CACH9C,MADG,UAEHjc,UAFG+d,EAGHg9B,QAHG,GAIHC,QAJG,IAKH9wB,QAAS,GAYOwiB,EAVpB8C,OAAS,CACLzsB,KADK,GAELI,MAFK,GAGLwT,IAHK,GAIL8Y,OAAQ,IAMQ/C,EAJpB1S,OAAO,CACHt7B,IAAK,MAKL+tC,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAHYC,aAvCqBoE,EAAAgB,kDA+ChCmJ,aACT,SAAAA,EAAAzN,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAA+9C,GAAArO,EAAA1vC,KAAA2vC,EAAAoO,GAAAh9C,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAu9B,EADU5M,gBADZqD,EAAAkB,yFAKzBvE,GACN,OAAAE,EAAAd,EAAAoO,EAAA77C,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAm9C,EAAvB5M,uCAKAE,EAAAd,EAAAoO,EAAA77C,WAAA,WAAAlC,MAAAe,KAAAf,MACA,IACIsyC,EAAStyC,KAAAuwC,OAAb+B,OACItB,EAAOhxC,KAAXuwC,OAEAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAA+M,YAAwB,CACpBpkC,YADoBwH,EAEpBd,WAFoBc,EAGpB7R,MAHoB,GAIpB+P,MAAO,IAIX/e,KAAAg+C,iBACA,IAAIngC,EAAQmzB,EAAZnzB,MACIogC,EAAkBj+C,KAAtBk+C,uBAGIC,GAFJn+C,KAAA0wC,KAAAuN,gBAAAA,GAEkB1kB,wBAAlB1b,MACAA,EAES7d,KAAA0wC,KAALrsB,WACIrkB,KAAA0wC,KAAArsB,SAAqBlU,KAAAC,IAAS4gC,EAAAnvB,KAATg8B,QAA4B1tC,KAAAE,IAAS2gC,EAAAnvB,KAATi8B,SAA6BjgC,EAAQy0B,EAARzsB,KAAsBysB,EAAvBrsB,OAAuCjmB,KAAA0wC,KAAA6M,UAApHv8C,WAIJhB,KAAA0wC,KAAArsB,SAAqBrkB,KAAAuwC,OAAA1uB,KAArB/e,KAEK9C,KAAA0wC,KAALrsB,WACIrkB,KAAA0wC,KAAArsB,SAAqBlU,KAAAC,IAAS4gC,EAAAnvB,KAATg8B,QAA4B1tC,KAAAE,IAAS2gC,EAAAnvB,KAATi8B,SAA6BK,EAAc7L,EAAdzsB,KAA4BysB,EAA7BrsB,OAA6CjmB,KAAA0wC,KAAA6M,UAA1Hv8C,UAGJ6c,EAAQ7d,KAAA0wC,KAAArsB,SAAqBrkB,KAAA0wC,KAAA6M,UAArBv8C,OAAkDsxC,EAAlDzsB,KAAgEysB,EAAxErsB,OAiBJ,OAbApI,GAEaogC,EAAA1kB,wBAATxW,OAGJ/iB,KAAA0wC,KAAA7yB,MAAkBA,EAAQy0B,EAARzsB,KAAsBysB,EAAxCrsB,MACAjmB,KAAA0wC,KAAA3tB,OAAmB/iB,KAAA0wC,KAAnB7yB,MAEA7d,KAAAo+C,uBACAp+C,KAAAq+C,yBACAr+C,KAAAs+C,yBAGAt+C,oDAKA,IAAI0wC,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXgN,UAQAnrC,EAAA7Q,MAAUyvC,EAAVzvC,MACA6Q,EAAA+F,MAAU3T,EAAAiuB,YAAAlY,MAAqB,CAACm2B,EAAD7yB,MAA/B,IACAzL,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,sDAKT,IAAIusC,EAAO1wC,KAAX0wC,KACI6N,EAAWv+C,KAAAuwC,OAAfkN,YAEA/M,EAAA+M,YAAAzuC,MAAAmJ,MAA+Bi3B,EAAAY,MAAAoB,YAAkBmN,EAAlBpmC,OAAAqI,OAAyC+9B,EAAzC/9B,QAAAjG,MAAgEgkC,EAA/FhkC,OACA,IAAIwE,EAAQ2xB,EAAA+M,YAAA1+B,MAAZ,GAEIy/B,EAAWx+C,KAAAuwC,OAAf1uB,KACA9C,EAAAmB,KAAas+B,EAAbz/B,MAEA,IAAIqF,EAAYssB,EAAArsB,SAAhB,EAAgCm6B,EAAAxxB,QAChC,GAAA,UAAIjO,EAAAmB,KAAwB,CACxB,IAAIu+B,EAAYr6B,EAAhB,EACArF,EAAA2/B,YAAoBl6C,EAAA6e,cAAA7C,OAAwB,CAAA,EAAxB,IAAAjG,MAAsC,CAAA,EAA1DkkC,IACA1/B,EAAA4/B,OAAe,SAAAn+C,GAAC,OAAGue,EAAA2/B,YAAkBvuC,KAAA+W,IAAS1mB,EAA9Be,cACb,GAAA,WAAIwd,EAAAmB,KAAyB,CAC5Bu+B,EAAYr6B,EAAhB,EACArF,EAAA2/B,YAAoBl6C,EAAA6e,cAAA7C,OAAwB,CAAA,EAAxB,IAAAjG,MAAsC,CAAAkkC,EAA1D,IACA1/B,EAAA6/B,QAAgB,SAAAp+C,GAAC,OAAGue,EAAA2/B,YAAkBvuC,KAAA+W,IAAS1mB,EAA9Be,SACjBwd,EAAA8/B,QAAAJ,EAEA1/B,EAAA+/B,UAAkB,SAAA96C,GACd,OAAA,GAAIA,EAAQ,IACRA,EAAJ,EAAW,MACX,UAED,QAAI+a,EAAAmB,OACPnB,EAAAjc,KAAAshB,4CAQJ,IAAI26B,EAAgB/+C,KAAAuwC,OAApBgN,UAEI39B,EAAO5f,KAAX4f,KACI8wB,EAAO1wC,KAAX0wC,KACAA,EAAAsO,iBAAA,GACAtO,EAAA6M,UAAiBwB,EAAjBt8C,KACKiuC,EAAD6M,WAAoB7M,EAAA6M,UAAxBv8C,SACI0vC,EAAA6M,UAAiBnO,EAAAY,MAAAiP,eAAAr/B,EAA2B5f,KAAAuwC,OAAAzT,OAA3Bt7B,IAAmDxB,KAAAuwC,OAApE2O,gBAGJxO,EAAAlxB,OAAA,GACAkxB,EAAAyO,gBAAA,GACAzO,EAAA6M,UAAA5L,QAAuB,SAAA6L,EAAAnnC,GACnBq6B,EAAAsO,iBAAAxB,GAAqCh5C,EAAAgiB,OAAA5G,EAAgB,SAAAzb,GAAA,OAAO46C,EAAAx9C,MAAA4C,EAAPq5C,KACrD,IAAIl8B,EAAJk8B,EACIuB,EAAAv/B,QAAwBu/B,EAAAv/B,OAAAxe,OAA5BqV,IAEIiL,EAAQy9B,EAAAv/B,OAARnJ,IAEJq6B,EAAAlxB,OAAA9c,KAAA4e,GACAovB,EAAAyO,gBAAA3B,GAAAl8B,qDASJ,IAAIvhB,EAAJC,KACI4f,EAAO5f,KAAX4f,KACIvG,EAASrZ,KAAA0wC,KAAA+M,YAAApkC,OAAb,GACI+lC,EAAcp/C,KAAA0wC,KAAA+M,YAAApkC,OAAA0G,MAAlB,GACI2wB,EAAO1wC,KAAX0wC,KAEI2O,EAAJ,GACA3O,EAAA6M,UAAA5L,QAAuB,SAAA3tC,EAAAzD,GAEnB8+C,EAAAr7C,GAAsB4b,EAAAxe,IAAS,SAAA+C,GAAC,OAAEusC,EAAAt+B,EAAA7Q,MAAA4C,EAAFH,OAGpC0sC,EAAA6M,UAAA5L,QAAuB,SAAA19B,EAAA1T,GACnB,IAAImnB,EAAJ,GACArO,EAAA3W,KAAAglB,GAEAgpB,EAAA6M,UAAA5L,QAAuB,SAAAz9B,EAAAoS,GACnB,IAAIg5B,EAAJ,EACIrrC,GAAJC,IACIorC,EAAOv/C,EAAAwwC,OAAAkN,YAAAl8C,MAA8B89C,EAA9BprC,GAAoDorC,EAA3DnrC,KAEJ,IAAI2N,EAAO,CACP09B,OADOtrC,EAEPurC,OAFOtrC,EAGPwT,IAHOnnB,EAIPk/C,IAJOn5B,EAKP/kB,MAAO+9C,GAEX53B,EAAAhlB,KAAAmf,GAEAu9B,EAAA18C,KAAAmf,sCAOL2xB,GACH/C,EAAAd,EAAAoO,EAAA77C,WAAA,SAAAlC,MAAAe,KAAAf,KADYwzC,GAGZxzC,KAAA0/C,cACA1/C,KAAA2/C,uBAGI3/C,KAAAuwC,OAAJT,YACI9vC,KAAAi5C,8DAKJj5C,KAAA0wC,KAAAkP,WAAuB5/C,KAAAiyC,YAAvB,SACAjyC,KAAA6/C,cACA7/C,KAAA8/C,oDAIA,IAAI//C,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIkP,EAAalP,EAAjBkP,WACIG,EAAcH,EAAlB,KAEIpgC,EAASzf,EAAAgyC,KAAApyB,UAAoB,QAApBogC,GAAAngC,KACH8wB,EADG6M,UACa,SAAAp5C,EAAA5D,GAAA,OAAAA,IAEtBy/C,EAAcxgC,EAAAD,QAAAjB,OAAA,QAAAH,KAAA,QAA4C,SAAAha,EAAA5D,GAAA,OAAUq/C,EAAA,IAAAG,EAAA,IAAAA,EAAA,IAAVx/C,IAA5C2jB,MAAlB1E,GAEAwgC,EAAA7hC,KAAA,IACe,SAAAha,EAAA5D,GAAA,OAAUA,EAAImwC,EAAJrsB,SAAoBqsB,EAAArsB,SAA9B,IADflG,KAAA,IAEeuyB,EAFf3tB,QAAA5E,KAAA,MAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,OAAAP,KAQU,SAAA5Z,GAAC,OAAE0sC,EAAAyO,gBAAFn7C,KAEPhE,KAAAuwC,OAAJ8M,eACI2C,EAAA7hC,KAAA,YAA8B,SAAAha,EAAA5D,GAAA,MAAU,gBAAkBA,EAAImwC,EAAJrsB,SAAoBqsB,EAAArsB,SAAtC,GAAA,KAAoEqsB,EAApE3tB,OAAV,MAGlC,IAAIk9B,EAAWlgD,EAAfmgD,0BACAF,EAAA1+C,KAAiB,SAAAggB,GACb8tB,EAAAY,MAAAmQ,gCAAsC37C,EAAAuZ,OAAtC/d,MAAAshB,EAAA2+B,IAAwElgD,EAAAwwC,OAAAR,aAA0BhwC,EAAA2wC,KAA1B4C,WAG5E9zB,EAAAwE,OAAA1hB,+CAIA,IAAIvC,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIkP,EAAalP,EAAjBkP,WACIQ,EAAc1P,EAAAkP,WAAlB,KACIpgC,EAASzf,EAAAgyC,KAAApyB,UAAoB,QAApBygC,GAAAxgC,KACH8wB,EADV6M,WAGIyC,EAAcxgC,EAAAD,QAAAjB,OAAA,QAAA4F,MAAlB1E,GAEAwgC,EAAA7hC,KAAA,IAAA,GAAAA,KAAA,IAEe,SAAAha,EAAA5D,GAAA,OAAUA,EAAImwC,EAAJrsB,SAAoBqsB,EAAArsB,SAA9B,IAFflG,KAAA,MAAA,GAAAA,KAAA,cAAA,OAAAA,KAAA,QAKmB,SAAAha,EAAA5D,GAAA,OAAUq/C,EAAA,IAAAQ,EAAA,IAAAA,EAAA,IAAV7/C,IALnBqd,KAOU,SAAA5Z,GAAC,OAAE0sC,EAAAyO,gBAAFn7C,KAEPhE,KAAAuwC,OAAJ+M,eACI0C,EAAA7hC,KAAA,YACuB,SAAAha,EAAA5D,GAAA,MAAU,mBAA6BA,EAAImwC,EAAJrsB,SAAoBqsB,EAAArsB,SAAjD,GAAV,MADvBlG,KAAA,cAAA,OAKJ,IAAI8hC,EAAWlgD,EAAfsgD,0BACAL,EAAA1+C,KAAiB,SAAAggB,GACb8tB,EAAAY,MAAAmQ,gCAAsC37C,EAAAuZ,OAAtC/d,MAAAshB,EAAA2+B,IAAwElgD,EAAAwwC,OAAAR,aAA0BhwC,EAAA2wC,KAA1B4C,WAG5E9zB,EAAAwE,OAAA1hB,2DAIA,IAAI29C,EAAWjgD,KAAA0wC,KAAA4B,OAAfzsB,KACA,IAAK7lB,KAAAuwC,OAAL+M,cACI,OAAA2C,EAGJA,GAAY7Q,EAAAY,MAAZsQ,OAIA,OAFAL,GAAYM,oDAKQt7B,GACpB,IAAKjlB,KAAAuwC,OAAL8M,cACI,OAAOr9C,KAAA0wC,KAAArsB,SAAP,EAEJ,IAAIvhB,EAAO9C,KAAA0wC,KAAA4B,OAAXC,OACAzvC,GAAQssC,EAAAY,MAARsQ,OAGA,OADAx9C,GAAQy9C,0CAMR,IAAIxgD,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACI8P,EAAYzgD,EAAAkyC,YAAhB,QACIwO,EAAY/P,EAAA+M,YAAA1+B,MAAhBmB,KAEIH,EAAQhgB,EAAAgyC,KAAApyB,UAAoB,KAApB6gC,GAAA5gC,KACF8wB,EAAA+M,YAAApkC,OADV0G,OAKI2gC,EAFa3gC,EAAAR,QAAAjB,OAAA,KAAAsgB,QAAA4hB,GAAjB,GAEiBt8B,MAAjBnE,GACA2gC,EAAAviC,KAAA,YAA6B,SAAA3d,GAAC,MAAG,cAAgBkwC,EAAArsB,SAAgB7jB,EAAhBi/C,IAAwB/O,EAAArsB,SAAxC,GAAA,KAAoEqsB,EAAArsB,SAAgB7jB,EAAhBknB,IAAwBgpB,EAAArsB,SAA5F,GAAH,MAE9Bq8B,EAAA9hB,QAAmB7+B,EAAAwwC,OAAAV,eAAnB,eAAgE9vC,EAAhE4gD,aAEA,IAAI5pB,EAAW,qBAAA0pB,EAAf,IAEkB1gC,EAAAJ,UAAlBoX,GACAz0B,SAEA,IAAI0c,EAAS0hC,EAAA1O,eAA0ByO,EAAA,eAAvCA,GAEA,UAAI/P,EAAA+M,YAAA1+B,MAAAmB,MAEAlB,EAAAb,KAAA,IACeuyB,EAAA+M,YAAA1+B,MADf4/B,QAAAxgC,KAAA,KAAA,GAAAA,KAAA,KAAA,GAMJ,WAAIuyB,EAAA+M,YAAA1+B,MAAAmB,MAEAlB,EAAAb,KAAA,KACgBuyB,EAAA+M,YAAA1+B,MADhB6/B,SAAAzgC,KAAA,KAEgBuyB,EAAA+M,YAAA1+B,MAFhB8/B,SAAA1gC,KAAA,KAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,YAMuB,SAAA3d,GAAC,MAAG,UAAYkwC,EAAA+M,YAAA1+B,MAAA+/B,UAAiCt+C,EAA7Ce,OAAH,MAI5B,QAAImvC,EAAA+M,YAAA1+B,MAAAmB,MACAlB,EAAAb,KAAA,QACmBuyB,EAAA+M,YAAA1+B,MADnBjc,MAAAqb,KAAA,SAEoBuyB,EAAA+M,YAAA1+B,MAFpBjc,MAAAqb,KAAA,KAGgBuyB,EAADrsB,SAHf,GAAAlG,KAAA,KAIgBuyB,EAADrsB,SAJf,GAMJrF,EAAAvG,MAAA,OAAqB,SAAAjY,GAAC,OAAGkwC,EAAA+M,YAAAzuC,MAAAmJ,MAA6B3X,EAAhCe,SAEtB,IAAIq/C,EAAJ,GACIC,EAAJ,GAgBA,GAdInQ,EAAJ4C,UAEIsN,EAAAl+C,KAAwB,SAAAlC,GACpB,IAAIq+B,EAAOr+B,EAAXe,MACAxB,EAAAgwC,YAAAlR,KAGJgiB,EAAAn+C,KAAuB,SAAAlC,GACnBT,EAAAwzC,iBAMJxzC,EAAAwwC,OAAJ6M,gBAAiC,CAC7B,IAAI0D,EAAiB/gD,EAAAwwC,OAAAV,eAArB,YACIkR,EAAc,SAAAvgD,GAAC,OAAEkwC,EAAAkP,WAAA,MAA0Bp/C,EAA5Bi/C,KACfuB,EAAc,SAAAxgD,GAAC,OAAEkwC,EAAAkP,WAAA,MAA0Bp/C,EAA5BknB,KAGnBk5B,EAAAl+C,KAAwB,SAAAlC,GAEpBT,EAAAgyC,KAAApyB,UAAoB,QAAUohC,EAA9BvgD,IAAAo+B,QAAAkiB,GAAA,GACA/gD,EAAAgyC,KAAApyB,UAAoB,QAAUqhC,EAA9BxgD,IAAAo+B,QAAAkiB,GAAA,KAEJD,EAAAn+C,KAAuB,SAAAlC,GACnBT,EAAAgyC,KAAApyB,UAAoB,QAAUohC,EAA9BvgD,IAAAo+B,QAAAkiB,GAAA,GACA/gD,EAAAgyC,KAAApyB,UAAoB,QAAUqhC,EAA9BxgD,IAAAo+B,QAAAkiB,GAAA,KAKRJ,EAAAv+B,GAAA,YAA2B,SAAA3hB,GACvBogD,EAAAjP,QAA2B,SAAA7nB,GAAQ,OAAEA,EAAFtpB,OADvC2hB,GAAA,WAGoB,SAAA3hB,GACZqgD,EAAAlP,QAA0B,SAAA7nB,GAAQ,OAAEA,EAAFtpB,OAG1CkgD,EAAAv+B,GAAA,QAAuB,SAAA3hB,GACnBT,EAAAkhD,QAAA,gBAAAzgD,KAIJuf,EAAAiE,OAAA1hB,gDAMA,IAAIouC,EAAO1wC,KAAX0wC,KACIwI,EAAUl5C,KAAA0wC,KAAA7yB,MAAd,GAGIqjC,EAAYlhD,KAAA0wC,KAAA3tB,OAAhB,EACI5K,EAAQu4B,EAAA+M,YAAAzuC,MAAZmJ,MAEAu4B,EAAA5sB,OAAc,IAAIy0B,EAAJa,OAAWp5C,KAAXsf,IAAqBtf,KAArB+xC,KAAA55B,EAAA+gC,EALd,GAKciI,kBAJd,GAIAD,6CAIcE,EAAmB7Q,GAAQ,IAAA2E,EAAAl1C,KACrCD,EAAJC,KAEAuwC,EAASA,GAAT,GAGA,IAAI8Q,EAAoB,CACpBt+B,OAAQhjB,EAAA2wC,KAAA3tB,OAAmBhjB,EAAAwwC,OAAA+B,OAAnB7Y,IAA4C15B,EAAAwwC,OAAA+B,OADhCC,OAEpB10B,MAAO9d,EAAA2wC,KAAA3tB,OAAmBhjB,EAAAwwC,OAAA+B,OAAnB7Y,IAA4C15B,EAAAwwC,OAAA+B,OAF/BC,OAGpBzV,OAAQ,CACJt7B,IAAKzB,EAAAwwC,OAAAzT,OADDt7B,IAEJ8f,MAAOvhB,EAAAwwC,OAAAzT,OAAmBxb,OAE9B4wB,QAPoB,EAQpBpC,YAAY,GAGhB/vC,EAAA4gD,aAAA,EAEAU,EAAoBjS,EAAAY,MAAAG,WAAAkR,EAApB9Q,GACAvwC,KAAAg6B,SAEAh6B,KAAAmiB,GAAA,gBAAyB,SAAA3hB,GAGrB6gD,EAAAjvC,EAAsB,CAClB5Q,IAAKhB,EADa++C,OAElBj+B,MAAOvhB,EAAA2wC,KAAAyO,gBAA0B3+C,EAA1B++C,SAEX8B,EAAA9uC,EAAsB,CAClB/Q,IAAKhB,EADag/C,OAElBl+B,MAAOvhB,EAAA2wC,KAAAyO,gBAA0B3+C,EAA1Bg/C,SAEPz/C,EAAA4gD,cAAJ,IAAwB5gD,EAAA4gD,YACpB5gD,EAAA4gD,YAAAjG,UAAA2G,GAAA3H,QAEA35C,EAAA4gD,YAAmB,IAAIzD,EAAJoE,YAAAF,EAAmCrhD,EAAnC6f,KAAnByhC,GACAnM,EAAAqM,OAAA,cAA2BxhD,EAA3B4gD,wPCnfhB,IAAAn8C,iXAAA6qC,CAAA5uC,EAAA,4RAEa+gD,6NAILh9C,EAAA04B,UAAAh7B,UAAAqd,MAAArd,UAAAu/C,eACIj9C,EAAA04B,UAAAh7B,UAAAu/C,eAAwC,SAAA1qB,EAAAgI,GACpC,OAAOyiB,EAAAC,eAAAzhD,KAAA+2B,EAAPgI,IAGRv6B,EAAA04B,UAAAh7B,UAAAqd,MAAArd,UAAAw/C,eACIl9C,EAAA04B,UAAAh7B,UAAAw/C,eAAwC,SAAA3qB,GACpC,OAAOyqB,EAAAE,eAAA1hD,KAAP+2B,IAGRvyB,EAAA04B,UAAAh7B,UAAAqd,MAAArd,UAAA8vC,eACIxtC,EAAA04B,UAAAh7B,UAAA8vC,eAAwC,SAAAjb,GACpC,OAAOyqB,EAAAxP,eAAAhyC,KAAP+2B,IAGRvyB,EAAA04B,UAAAh7B,UAAAqd,MAAArd,UAAAy/C,eACIn9C,EAAA04B,UAAAh7B,UAAAy/C,eAAwC,SAAA5qB,EAAAgI,GACpC,OAAOyiB,EAAAG,eAAA3hD,KAAA+2B,EAAPgI,mDAMkBr6B,EAAQqyB,EAAU6qB,EAAW7iB,GAKvD,IAHA,IAAI8iB,EAAgB9qB,EAAAhe,MAApB,YACIke,EAAUvyB,EAAAk9C,GAAkBC,EAAlB15B,QAHiD4W,GAK/D,EAAO8iB,EAAA7gD,QAA0B,CAC7B,IAAI8gD,EAAmBD,EAAvB15B,QACI45B,EAAeF,EAAnB15B,QACA,MAAI25B,EACA7qB,EAAUA,EAAA2H,QAAAmjB,GAAV,GACG,MAAID,IACP7qB,EAAUA,EAAA9Y,KAAA,KAAV4jC,IAGR,OAAA9qB,yCAGkBvyB,EAAQqyB,EAAUgI,GACpC,OAAOyiB,EAAAQ,uBAAAt9C,EAAAqyB,EAAA,SAAPgI,0CAGkBr6B,EAAQqyB,GAC1B,OAAOyqB,EAAAQ,uBAAAt9C,EAAAqyB,EAAP,iDAGkBryB,EAAQqyB,EAAUE,GACpC,IAAIiG,EAAYx4B,EAAAqZ,OAAhBgZ,GACA,OAAImG,EAAJn6B,QACIk0B,EACWvyB,EAAA4Z,OAAP2Y,GAEGuqB,EAAAE,eAAAh9C,EAAPqyB,GAGJmG,yCAGkBx4B,EAAQqyB,EAAUgI,GACpC,IAAI7B,EAAYx4B,EAAAqZ,OAAhBgZ,GACA,OAAImG,EAAJn6B,QACWy+C,EAAAC,eAAA/8C,EAAAqyB,EAAPgI,GAEJ7B,2ECvERx9B,EAAAD,QAAA+E,kYCAA,IAAAovC,EAAAnzC,EAAA,WACA2uC,EAAA3uC,EAAA,WACA83C,EAAA93C,EAAA,YACA+D,iXAAA6qC,CAAA5uC,EAAA,m1DAEawhD,aAsCT,SAAAA,EAAA1S,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAiiD,IACfzS,EAAAE,EAAA1vC,KAAA2vC,EAAAsS,GAAAlhD,KAAAf,QArCJ4vC,SAAWJ,EAAAK,eAAsB,8BAoCdL,EAnCnBO,aAAc,EAmCKP,EAlCnBM,YAAW,EAkCQN,EAjCnBgJ,aAAY,EAiCOhJ,EAhCnB1rB,OAAO,CACHjG,MADG,GAEHy0B,OAFG,GAGHpzB,WAAY,IA6BGswB,EA3BnBp9B,EAAI,CACAqQ,MADA,GAEAlhB,MAAO,SAAA4C,GAAC,OAAIA,EAAJvB,QACRsvC,QAHA,EAIAtwB,OAJA,MAKAzJ,MALA,SAMA27B,aAAc,KAqBCtE,EAnBnBj9B,EAAI,CACAkQ,MADA,GAEAlhB,MAAO,SAAA4C,GAAC,OAAIA,EAAJ3C,KACR2W,MAHA,UAIAyJ,OAJA,OAKAswB,QALA,GAmBe1C,EAXnBvrB,YAAa,EAWMurB,EAVnBxgC,WAAS6R,EAUU2uB,EATnBmF,gBAAiB,aASEnF,EARnB0S,eAAgB,EAQG1S,EALnB2S,gBAAathC,EAKM2uB,EAHnB4S,mBAAgBvhC,EAGG2uB,EAFnB6S,YAAc,EAIV9S,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAHWC,aAtC6BoE,EAAAgB,yDA8CvC0N,aACT,SAAAA,EAAAhS,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAsiD,GAAA5S,EAAA1vC,KAAA2vC,EAAA2S,GAAAvhD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAqiC,EADU1R,gBADLqD,EAAAkB,yFAKhCvE,GACN,OAAAE,EAAAd,EAAA2S,EAAApgD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAiiD,EAAvB1R,uCAIAE,EAAAd,EAAA2S,EAAApgD,WAAA,WAAAlC,MAAAe,KAAAf,MACAA,KAAA0wC,KAAAZ,WAAuB9vC,KAAAuwC,OAAvBT,WACG9vC,KAAA0wC,KAAHZ,aACI9vC,KAAA0wC,KAAA4B,OAAArsB,MAAyBjmB,KAAAuwC,OAAA+B,OAAArsB,MAA2BjmB,KAAAuwC,OAAAzsB,OAA3BjG,MAAzB,EAA6E7d,KAAAuwC,OAAAzsB,OAAAwuB,QAGjF7B,EAAAd,EAAA2S,EAAApgD,WAAA,kBAAAlC,MAAAe,KAAAf,MACAA,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GAEAvS,KAAA0wC,KAAA9wB,KAAiB5f,KAAjB+0C,gBAEA/0C,KAAA4wC,SACA5wC,KAAA6wC,SAEA7wC,KAAAg1C,qDAKA,OAAOh1C,KAAP4f,sCAGK,IAAAs1B,EAAAl1C,KAED0wC,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXn+B,EAEAA,EAAA7Q,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAAR,KAAgBm0C,EAAhB3E,OAAJpsC,IACXiO,EAAA+F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAiW,WAAyC,CAAA,EAAIsiB,EAAvD7yB,QACAzL,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,KAETiO,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BxP,EAAvC+F,OACG64B,EAAHkB,QACI9/B,EAAA6+B,KAAAgE,UAAiBvE,EAAjB3tB,QAGJ,IAuCAvC,EAvCIZ,EAAO5f,KAAA0wC,KAAX9wB,KAwCA,GArCA8wB,EAAA0R,cAAqBpiD,KAAAuwC,OAArB6R,cAEA1R,EAAA6R,aAAoBpyC,KAAAkE,MAAWq8B,EAAA0R,cAAAphD,OAA/B,GAEA0vC,EAAA8R,KAAY5iC,EAAAxe,IAAS,SAAA+C,GACjB,IAAIs+C,EAAiBrwC,EAAA7Q,MAArB4C,GACI6jB,EAAKktB,EAAA3E,OAAA8R,YAA0B79C,EAAA+f,IAAOk+B,EAAArhD,IAAmB,SAAA4C,EAAAzD,GAAA,OAAUA,EAAImwC,EAAJ6R,aAAAv+C,EAAV,KAC7D,EAAI0sC,EAAA0R,cAAAphD,SACAgnB,IAAM,EAAKy6B,EAAe/R,EAApB6R,cAAN,GAEJ,IAAI3/C,EAAS6/C,EAAArhD,IAAmB,SAAA4C,EAAAzD,GAAA,OAAUA,EAAEmwC,EAAF6R,aAAsBrN,EAAA3E,OAAA8R,YAAtBr+C,EAAoDkxC,EAAA3E,OAAA8R,YAA9Dr+C,IAC5B0+C,EAAQl+C,EAAA+f,IAAZk+B,GACIE,EAAajS,EAAjB0R,cAKA,OAJGj+C,EAAHw+C,aACIA,EAAax+C,EAAAw+C,WAAAvhD,IAAiB,SAAAwhD,EAAAriD,GAAA,OAAemwC,EAAA0R,cAAfQ,MAG3B,CACH1oB,MADG/1B,EAEHs+C,eAFGA,EAGH7/C,OAHGA,EAIH+/C,WAJG,GAKHtyC,IALG2X,EAMH5X,IAAK4X,EANF06B,EAOHA,MAPGA,EAQHG,MAAOjgD,EAAAxB,IAAW,SAAA4C,EAAAzD,GACd,MAAO,CACHspB,KAAM84B,EADHpiD,GAEHynB,GAFGA,EAGHC,GAAID,GAAIy6B,EAHLliD,GAIHuiD,cAAeL,EAAcliD,SAOzCqf,GAAUA,EAAd5e,OAEO,CAAA,IAAAqkB,EAECitB,IADJ9xB,EAAShc,EAAAgiB,QAAUnB,EAAA,IAAA0E,OAAAzmB,MAAA+hB,EAAA09B,EAAarS,EAAA8R,KAAAphD,IAAc,SAAA8C,GAAC,MAAE,CAACA,EAADmM,IAAQnM,EAAVkM,WAChC,GAAUoQ,EAAX,IAAuBwwB,EAAxB8C,cAA8C9C,EAAA8C,aAAkBtzB,EAA7E,GAEAA,EAAA,IAAA8xB,EACA9xB,EAAA,IAAA8xB,OANA9xB,EAAA,GASJkwB,EAAAt+B,EAAA+F,MAAAqI,OAAAA,oCAKK,IAAA22B,EAAAn3C,KAED0wC,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAAuwC,OAAXh+B,EACAA,EAAAhR,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAAR,KAAgBo2C,EAAhB5G,OAAJpsC,IACXoO,EAAA4F,MAAU3T,EAAAiuB,YAAAlY,MAAqB,CAAA,EAAIm2B,EAAzB3tB,SAAAiK,QAAV,IACAza,EAAAnR,IAAQ,SAAA+C,GAAC,OAAIoO,EAAA4F,MAAQ5F,EAAAhR,MAAZ4C,KAEToO,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BrP,EAAvC4F,OACI64B,EAAJzwB,OACIhO,EAAA0+B,KAAA1wB,MAAaywB,EAAbzwB,OAEDywB,EAAHkB,QACI3/B,EAAA0+B,KAAAgE,UAAiBvE,EAAjB7yB,OAEJ7d,KAAA+wC,sDAIA,IAAIL,EAAO1wC,KAAX0wC,KACI9wB,EAAO5f,KAAA0wC,KAAX9wB,KAGIY,GAFIxgB,KAARuwC,OAEa3wB,EAAAxe,IAASsvC,EAAAn+B,EAAtBhR,QAEAmvC,EAAAn+B,EAAA4F,MAAAqI,OAAAA,uCAIA,IACIkwB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfn+B,EACI6+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAG2CiyC,YAAP,UAAA,IAHpCjyC,KAG8EiyC,YAA1C,SAAsEH,EAAAI,OAAA,GAAuB,IAHjIlyC,KAGuIiyC,YAAvI,eAEA,WAAGH,EAAAlwB,QACCqvB,EAAA9yB,KAAA,YAAuB,eAAiBuyB,EAAjB3tB,OAAvB,KAIJ,IAAIovB,EAAJlB,EAVAjxC,KAWIuwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAt+B,EAAX6+B,MAEA,IAAI+R,EAAS,WAAAlR,EAAAlwB,OAA+B8uB,EAAA4B,OAA/BC,OAAb,EACI0Q,EAAU,WAAAnR,EAAAlwB,OAAA,OAAd,SAEAqvB,EAAAe,eAAoB,QApBpBhyC,KAoB4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,aAAeuyB,EAAA7yB,MAAf,EAAA,IAAAmlC,EADvB,KAAA7kC,KAAA,KAAA8kC,GAAAxqC,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,2CAQA,IACIiuB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfh+B,EACI0+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAG2CiyC,YAAP,UAAA,IAHpCjyC,KAG8EiyC,YAA1C,SAAsEH,EAAAI,OAAA,GAAuB,IAHjIlyC,KAGuIiyC,YAAvI,eAGIE,EAAJlB,EANAjxC,KAOIuwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAn+B,EAAX0+B,MAEAA,EAAAe,eAAoB,QAbpBhyC,KAa8BiyC,YAA9B,UAAA9zB,KAAA,YACuB,cAAgBuyB,EAAA4B,OAAhBzsB,KAAA,IAA0C6qB,EAAA3tB,OAA1C,EADvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,0CAQA,IACIiuB,EADJ1wC,KAAA0wC,KAEIH,EAFJvwC,KAAAuwC,OAII2S,EAJJljD,KAIeiyC,YAAf,OACIuQ,EALJxiD,KAKW+xC,KAAApyB,UAAoB,IAApBujC,GAAAtjC,KACD8wB,EADV8R,MAKIW,EAFWX,EAAAjjC,QAAAmiC,eAA4B,KAA3CwB,GAEeh/B,MAAAs+B,GAAArkC,KAAA,YACQ,SAAAha,GAAC,MAAI,eAAiBusC,EAAAn+B,EAAAnR,IAAW+C,EAA5B+1B,OAAJ,MAExBsoB,EAAAx+B,OAAA1hB,SAGA,IAAImwC,EAhBJzyC,KAgBeiyC,YAAf,OAEImR,EAAOD,EAAAxjC,UAAmB,KAAnB8yB,GAAA7yB,KACD,SAAAzb,GAAc,OAAOA,EAAP0+C,QACxBO,EAAAp/B,OAAA1hB,SAEA,IAAI+gD,EAAYD,EAAA7jC,QAAAjB,OAAA,KAAAH,KAAA,QAAhBs0B,GAIA4Q,EAAA/kC,OAAA,QACGiyB,EAAH2R,eACImB,EAAA/kC,OAAA,QAIJ,IAAIglC,EAASD,EAAAn/B,MAAbk/B,GAEAE,EAAAvlC,OAAA,QAAAI,KAAA,SAAoCuyB,EAAAn+B,EAAA4F,MAApC4V,aAAA5P,KAAA,IACe,SAAAha,GAAC,OAAGusC,EAAAt+B,EAAA+F,MAAahU,EAAhB6jB,MADhB7J,KAAA,QAEmB,SAAAha,GAAC,OAAIusC,EAAAt+B,EAAA+F,MAAahU,EAAb8jB,IAAqByoB,EAAAt+B,EAAA+F,MAAahU,EAAtC6jB,MAFpBvP,MAAA,OAGmB,SAAAtU,EAAA5D,GAAA,OAAUmwC,EAAA1hC,MAAW7K,EAAX0lB,KAAVtpB,KAGnB,IAAIgjD,EAAQD,EAAAvlC,OAAZ,QACGwyB,EAAH2R,cACIqB,EAAAplC,KAAA,IAAgB,SAAAha,GAAC,OAAIusC,EAAAt+B,EAAA+F,MAAahU,EAAjB6jB,MAAjB7J,KAAA,IACeuyB,EAAAn+B,EAAA4F,MAAA4V,YADf,GAAA5P,KAAA,KAAA,SAAAA,KAAA,KAGgB,SAAAha,GAAC,OAAGusC,EAAAt+B,EAAA+F,MAAahU,EAAb8jB,IAAmByoB,EAAAt+B,EAAA+F,MAAahU,EAAjC6jB,KAAF,IAHjBvP,MAAA,cAAA,UAAAmF,KAKU,SAAAzZ,GAAC,OAAI,IAAAA,EAAA2+C,eAAA,IAA0B3+C,EAAA8jB,GAAK9jB,EAAN6jB,GAAmB7jB,EAA5C2+C,cAAJ,KAEXS,EAAAjhD,SAjDJtC,KAsDA+xC,KAAAC,eAAyB,QAtDzBhyC,KAsDiCiyC,YAAjC,gBAAA9zB,KAAA,KACgBuyB,EAAAt+B,EAAA+F,MAvDhBnY,KAuD6BuwC,OAD7B8R,cAAAlkC,KAAA,KAAA,GAAAA,KAAA,KAGgBuyB,EAAAt+B,EAAA+F,MAzDhBnY,KAyD6BuwC,OAH7B8R,cAAAlkC,KAAA,KAIgBuyB,EAJhB3tB,uCAQGywB,GAMH,OALA/C,EAAAd,EAAA2S,EAAApgD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAyzC,YACAzzC,KAAA0zC,YACA1zC,KAAA2zC,WACA3zC,KAAAi5C,eACAj5C,0CAKA,IACIgxC,EAAOhxC,KAAXuwC,OAEA,GAAGS,EAAH2D,gBAAwB,CACpB,IAAIyC,EAAsB,SAAShI,EAAAY,MAAAqH,sBAA4BrG,EAA/D2D,iBACA30C,KAAA0wC,KAAA4G,cAA0B9yC,EAAAwuB,aAAgBxuB,EAA1C4yC,IAGJ,IAAIG,EAAavG,EAAjBhiC,MACIuoC,GAAA,iBAAcA,GAAkCA,aAApDC,OACIx3C,KAAA0wC,KAAA1hC,MAAAuoC,EACMvG,EAAJmR,WACFniD,KAAA0wC,KAAA1hC,MAAkBogC,EAAAY,MAAAoB,YAAA,WAAA5wB,OAAoCxgB,KAAA0wC,KAApC0R,eAAA7nC,MAAmEy2B,EAArFmR,YAEIniD,KAAA0wC,KAAH4G,gBAdLt3C,KAeI0wC,KAAA6G,WAAAA,EACAv3C,KAAA0wC,KAAA1hC,MAAkBhP,KAAA0wC,KAAlB4G,sDAMJ,IACI5G,EAAO1wC,KAAX0wC,KAEIv4B,EAAQu4B,EAAZ1hC,MAMA,KAJImJ,EAADqI,WAAoBxgB,KAAAuwC,OAADiI,aAA4BrgC,EAAAqI,SAAAxf,OAAlD,KACI0vC,EAAAZ,YAAA,GAGAY,EAAJZ,WAAA,CAQA,IAAIoJ,EAAUl5C,KAAA0wC,KAAA7yB,MAAkB7d,KAAAuwC,OAAAzsB,OAAhCwuB,OACI6G,EAAUn5C,KAAAuwC,OAAAzsB,OAAdwuB,OAEA5B,EAAA5sB,OAAc,IAAIy0B,EAAJa,OAAWp5C,KAAXsf,IAAqBtf,KAArB+xC,KAAA55B,EAAA+gC,EAAdC,GAEAzI,EAAAprB,YAAmBorB,EAAA5sB,OAAA9U,QAAAkQ,WACHlf,KAAAuwC,OAAAzsB,OADG5E,YAAA0C,OAAA,YAAAzJ,MAAAA,GAAAwL,UAIJ3jB,KAAAuwC,OAAAzsB,OA5BJjG,OA+BX6yB,EAAA5sB,OAAAw1B,UAAAv4C,KACU2vC,EADVprB,kBAnBOorB,EAAA5sB,QAAe4sB,EAAA5sB,OAAlBw1B,WACI5I,EAAA5sB,OAAAw1B,UAAAh3C,idCnVhB7B,EAAA,WAAA,IACA+iD,EAAA/iD,EAAA,aACA2uC,EAAA3uC,EAAA,WAEA+D,GADA/D,EAAA,qYACA4uC,CAAA5uC,EAAA,+/CAEagjD,aAuDT,SAAAA,EAAAlU,GAAoB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAyjD,IAChBjU,EAAAE,EAAA1vC,KAAA2vC,EAAA8T,GAAA1iD,KAAAf,QAvDJoS,EAAI,CACAsxC,aADA,EAEAp0B,cAFAzO,EAGA8iC,aAHA,EAIA10C,YAJA4R,EAKA+iC,mBALA/iC,EAMAgjC,kBAAmB,CACf,CACIh6B,KADJ,OAEI6X,QAAS,CAAA,OAEb,CACI7X,KADJ,QAEI6X,QAAS,CAAA,UAEb,CACI7X,KADJ,MAEI6X,QAAS,CAAA,aAEb,CACI7X,KADJ,OAEI6X,QAAS,CAAA,KAAA,gBAEb,CACI7X,KADJ,SAEI6X,QAAS,CAAA,QAAA,mBAEb,CACI7X,KADJ,SAEI6X,QAAS,CAAA,WAAA,uBAIjBoiB,eAAgB,SAAAnjD,EAAAuD,GACZ,OAAOkrC,EAAAY,MAAA+T,SAAApjD,GAAqBA,EAAAqjD,cAArB9/C,GAA2CvD,EAAlDuD,GAEJ+/C,eAAWpjC,GAkBK2uB,EAhBpBn9B,EAAI,CACAqxC,aADA,GAgBgBlU,EAZpB1rB,OAAS,CACLmgC,UAAW,SAAAjgD,GACP,IAAIwoB,EAAJ,GAMA,OALA,GAAIxoB,EAAA,MACAwoB,EAAA,KACAxoB,EAAIkgD,OAAOlgD,EAAP,KAAAmnB,QAAJ,IAEKg5B,KAATC,eACOn1C,OAAAjL,GAAPwoB,IAOJ+iB,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAJYC,aAvDqBgU,EAAAa,oDAgEhCC,aACT,SAAAA,EAAAhU,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAskD,GAAA5U,EAAA1vC,KAAA2vC,EAAA2U,GAAAvjD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAA6jC,EADUlT,gBADZiT,EAAAe,2FAKzBhU,GACN,OAAAE,EAAAd,EAAA2U,EAAApiD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAyjD,EAAvBlT,0DAI0B,IAAA2E,EAAAl1C,KAS1B,GAPAA,KAAA0wC,KAAAt+B,EAAA8hB,WAAyBl0B,KAAAuwC,OAAAn+B,EAAzBnD,OACGjP,KAAAuwC,OAAAn+B,EAAAwxC,gBAAgC5jD,KAAA0wC,KAAAt+B,EAAnC8hB,YACIl0B,KAAAwkD,kBAIJ/T,EAAAd,EAAA2U,EAAApiD,WAAA,8BAAAlC,MAAAe,KAAAf,MACKA,KAAAuwC,OAAAn+B,EAALsxC,YAAA,CAIA,IAAI3jD,EAAJC,KAEAA,KAAAykD,4BAEAzkD,KAAA0wC,KAAAt+B,EAAAuxC,aAA2B3jD,KAAAuwC,OAAAn+B,EAAAuxC,cAA3B,EAEA3jD,KAAA0wC,KAAAt+B,EAAAsyC,WAAyB1kD,KAAzB2kD,gBAIA3kD,KAAA0wC,KAAAt+B,EAAAwyC,aAAAjhD,KAA8B3D,KAAAuwC,OAAAn+B,EAA9B0xC,gBAEA,IAAIe,EAAJ,KAEA7kD,KAAA0wC,KAAAt+B,EAAAwyC,aAAAjT,QAAiC,SAAAv/B,EAAA7R,GAC7B,IAAIs4B,EAAUqc,EAAA4P,UAAd1yC,GACA,GAAA,OAAIyyC,EAAJ,CAQA,IAHA,IAAItqB,EAAOx6B,EAAAglD,kBAAXF,GACIG,EAAJ,GACIC,EAAJ,EACOllD,EAAAmlD,kBAAA3qB,EAAA1B,IAAP,KAEI,MADAosB,IAD6C,CAK7C,IAAI9gD,EAAJ,GACIghD,EAAaplD,EAAAqlD,WAAjB7qB,GACAp2B,EAAE+wC,EAAA3E,OAAAn+B,EAAF5Q,KAAA2jD,EAEAplD,EAAAslD,aAAAlhD,EAAAghD,EAAiCplD,EAAA2wC,KAAAt+B,EAAjC0qB,OAAqD/8B,EAAAwwC,OAAAn+B,EAArD0qB,QACAkoB,EAAAtiD,KAAA63B,GACAA,EAAOx6B,EAAAglD,kBAAPxqB,GAEJsqB,EAAAhsB,OApBIgsB,EAAAhsB,uCAyBFzmB,GAEN,OADapS,KAAb2kD,eACOW,CAAPlzC,sCAGOmD,GAEP,OADgBvV,KAAhBulD,kBACOtB,CAAP1uC,wCAGShU,GACT,GAAIvB,KAAAuwC,OAAAn+B,EAAJ6xC,UAA6B,OAAOjkD,KAAAuwC,OAAAn+B,EAAA6xC,UAAAljD,KAA6Bf,KAA7BuwC,OAAPhvC,GAE7B,GAAGvB,KAAAuwC,OAAAn+B,EAAHwxC,cAA+B,CAC3B,IAAIruC,EAAOvV,KAAA8kD,UAAXvjD,GACA,OAAOiD,EAAA0vB,WAAcl0B,KAAAuwC,OAAAn+B,EAAdwxC,cAAAp/C,CAAP+Q,GAGJ,OAAIvV,KAAA0wC,KAAAt+B,EAAJ8hB,YAEGkb,EAAAY,MAAAwV,OAAHjkD,GACWvB,KAAAolD,WAAP7jD,GAHwBA,4CASdZ,EAAGuD,GACjB,OAAOvD,EAAPuD,0CAGYvD,EAAGuD,GACf,IAAIohD,EAAStlD,KAAA0wC,KAAAt+B,EAAbsyC,WACA,OAAOY,EAAA3kD,KAAc2kD,EAArBphD,6CAGc7D,GACd,IAAIivB,EAAW,OAAO8f,EAAAY,MAAAqH,sBAA4Br3C,KAAA0wC,KAAAt+B,EAAlDkd,UAEA,OAAO9qB,EAAA8qB,GAAArK,OAAA5kB,EAAuBL,KAAA0wC,KAAAt+B,EAA9BuxC,iDAIAlT,EAAAd,EAAA2U,EAAApiD,WAAA,WAAAlC,MAAAe,KAAAf,MAEIA,KAAAuwC,OAAAl+B,EAAJqxC,aACI1jD,KAAA0wC,KAAAr3B,OAAAs4B,QAAyB,SAAAjqB,EAAA+9B,GACrB,IAAIC,OAAJ7kC,EACA6G,EAAAiqB,QAAY,SAAA9vB,EAAA8jC,QACJ9kC,IAAAgB,EAAAtgB,YAAJsf,IAAgC6kC,IAC5B7jC,EAAAtgB,MAAAmkD,EACA7jC,EAAAmjC,SAAA,GAEJU,EAAe7jC,EAAftgB,yCAQTiyC,GACH/C,EAAAd,EAAA2U,EAAApiD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,uDAOAxzC,KAAA0wC,KAAAt+B,EAAAkd,SAAuBtvB,KAAAuwC,OAAAn+B,EAAvBkd,SAEItvB,KAAA0wC,KAAAt+B,EAAJ8hB,YACIl0B,KAAAwkD,mBAGAxkD,KAAA0wC,KAAAt+B,EAADkd,UAAyBtvB,KAAA0wC,KAAAt+B,EAA5B8hB,YACIl0B,KAAA4lD,0DAMJ,IADA,IAAI7lD,EAAJC,KACQO,EAAR,EAAaA,EAAIR,EAAAwwC,OAAAn+B,EAAAyxC,kBAAjB7iD,OAAyDT,IAAI,CACzD,IAAIslD,EAAiB9lD,EAAAwwC,OAAAn+B,EAAAyxC,kBAArBtjD,GACI0O,EAAJ,KAQA,GAPkB42C,EAAAnkB,QAAAokB,KAA4B,SAAAtmD,GAC1CyP,EAAAzP,EACA,IAAI8lD,EAAS9gD,EAAA0jC,UAAb1oC,GACA,OAAOO,EAAA2wC,KAAAt+B,EAAAwyC,aAAAhzB,MAA+B,SAAAxf,GAClC,OAAA,OAAOkzC,EAAAlzC,OAUX,OANArS,EAAA2wC,KAAAt+B,EAAA8hB,WADWjlB,OAGPlP,EAAA2wC,KAAAt+B,EAAJkd,WACIvvB,EAAA2wC,KAAAt+B,EAAAkd,SAAuBu2B,EADFh8B,gDAWjC,IADA,IACQtpB,EAAR,EAAaA,EADbP,KACiBuwC,OAAAn+B,EAAAyxC,kBAAjB7iD,OAAyDT,IAAK,CAC1D,IAAIslD,EAFR7lD,KAEyBuwC,OAAAn+B,EAAAyxC,kBAArBtjD,GAEA,GAAA,GAAGslD,EAAAnkB,QAAAhgB,QAJP1hB,KAIsC0wC,KAAAt+B,EAA/B8hB,YAGC,YAPRl0B,KAKQ0wC,KAAAt+B,EAAAkd,SAAuBu2B,EADoCh8B,kDAcnE,OAHI7pB,KAAA0wC,KAAAt+B,EAAJ2zC,gBACI/lD,KAAA0wC,KAAAt+B,EAAA2zC,cAA4BvhD,EAAA0vB,WAAcl0B,KAAA0wC,KAAAt+B,EAA1C8hB,aAEGl0B,KAAA0wC,KAAAt+B,EAAP2zC,sDAMA,OAHI/lD,KAAA0wC,KAAAt+B,EAAJsyC,aACI1kD,KAAA0wC,KAAAt+B,EAAAsyC,WAAyBlgD,EAAA0jC,UAAaloC,KAAA0wC,KAAAt+B,EAAtC8hB,aAEGl0B,KAAA0wC,KAAAt+B,EAAPsyC,idCxQR,IAAA9Q,EAAAnzC,EAAA,WACA2uC,EAAA3uC,EAAA,WACA83C,EAAA93C,EAAA,YACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEa4jD,aAiFT,SAAAA,EAAA9U,GAAoB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAqkD,IAChB7U,EAAAE,EAAA1vC,KAAA2vC,EAAA0U,GAAAtjD,KAAAf,QAhFJ4vC,SAAW,cA+ESJ,EA9EpBO,aAAc,EA8EMP,EA7EpB8D,QAAU,CACN0S,WAAY,OA4EIxW,EA1EpBM,YAAa,EA0EON,EAzEpB1rB,OAAS,CACLjG,MADK,GAELooC,cAFK,EAGLC,mBAHKrlC,EAILojC,UAAW,SAAAjgD,GAAC,YAAI6c,IAAA2uB,EAAA1rB,OAAAoiC,cAAAliD,EAA8CkgD,OAAAlgD,GAAAmnB,QAAkBqkB,EAAA1rB,OAApEoiC,iBAqEI1W,EAnEpB4N,iBAAkB,EAmEE5N,EAlEpBp9B,EAAI,CACAqQ,MADA,GAEAjhB,IAFA,EAGAD,MAAO,SAAA4C,GAAA,OAAOA,EAAEqrC,EAAAp9B,EAAT5Q,MACPykD,cAJA,EAKAE,YALA,EAMArC,eAAgB,SAAAnjD,EAAAuD,GAAA,OAASkrC,EAAAY,MAAAC,SAAAtvC,GAAoBA,EAApBuD,EAA4BvD,EAAAqjD,cAArC9/C,IAChB44B,OAAQ,CACJr6B,KADI,GAEJ+c,OAFI,GAGJje,MAAO,SAAA4C,EAAA3C,GAAA,OAAY2C,EAAZ3C,IACP4kD,QAAS,CACL3sB,IADK,GAEL8Y,OAAQ,KAGhB0R,eAhBApjC,GAkEgB2uB,EA/CpBj9B,EAAI,CACAkQ,MADA,GAEAwjC,cAFA,EAGAzkD,IAHA,EAIAD,MAAO,SAAA4C,GAAA,OAAOA,EAAEqrC,EAAAj9B,EAAT/Q,MACP2kD,YALA,EAMArC,eAAgB,SAAAnjD,EAAAuD,GAAA,OAASkrC,EAAAY,MAAAC,SAAA/rC,GAAoBA,EAApBvD,EAA4BuD,EAAA8/C,cAArCrjD,IAChBm8B,OAAQ,CACJr6B,KADI,GAEJ+c,OAFI,GAGJje,MAAO,SAAA4C,EAAA3C,GAAA,OAAY2C,EAAZ3C,IACP4kD,QAAS,CACLvgC,KADK,GAELI,MAAO,KAGfg+B,eAhBApjC,GA+CgB2uB,EA7BpBn9B,EAAI,CACA7Q,IADA,EAEAD,MAAO,SAAA4C,GAAA,OAAOA,EAAEqrC,EAAAn9B,EAAT7Q,MACP6kD,kBAAmB,SAAAriD,GAAA,OAAOA,MAAAA,GAE1BkiD,mBALArlC,EAMAojC,UAAW,SAAAjgD,GAAC,YAAI6c,IAAA2uB,EAAAn9B,EAAA6zC,cAAAliD,EAAyCkgD,OAAAlgD,GAAAmnB,QAAkBqkB,EAAAn9B,EAA/D6zC,iBAuBI1W,EApBpBxgC,MAAQ,CACJs3C,YADI,QAEJnuC,MAFI,SAGJouC,cAHI,EAIJhsC,MAAO,CAAA,WAAA,eAAA,SAAA,UAAA,YAgBSi1B,EAdpB3tB,KAAO,CACHhE,WADGgD,EAEHkC,YAFGlC,EAGHg9B,QAHG,GAIHC,QAJG,IAKH9wB,QAAS,GASOwiB,EAPpB8C,OAAS,CACLzsB,KADK,GAELI,MAFK,GAGLwT,IAHK,GAIL8Y,OAAQ,IAKRhD,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAHYC,aAjFWoE,EAAAgB,wCA0FtB2P,aAKT,SAAAA,EAAAjU,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAukD,GAAA7U,EAAA1vC,KAAA2vC,EAAA4U,GAAAxjD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAykC,EADU9T,gBALtBqD,EAAAkB,yFASfvE,GACN,OAAAE,EAAAd,EAAA4U,EAAAriD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAqkD,EAAvB9T,uCAKAE,EAAAd,EAAA4U,EAAAriD,WAAA,WAAAlC,MAAAe,KAAAf,MAEaA,KAAAuwC,OAAb+B,OADA,IAEItB,EAAOhxC,KAAXuwC,OAEAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GACAvS,KAAA0wC,KAAAr+B,EAAc,CACVm0C,cADU3lC,EAEVd,WAFUc,EAGV7R,MAHU,GAIV+P,MAAO,IAIX/e,KAAAymD,cACAzmD,KAAA0mD,aAOA,GAJA1mD,KAAA0wC,KAAAt+B,EAAAg0C,QAAsB,CAClB3sB,IADkB,EAElB8Y,OAAQ,GAERvyC,KAAA0wC,KAAJiW,SAAwB,CACpB,IACIC,EAPR,EAjBA5mD,KAuBgBuwC,OAAAn+B,EAAA0qB,OAAAr6B,KAAZzB,OAGAhB,KAAA0wC,KAAAt+B,EAAAg0C,QAAA7T,OA1BJvyC,KA0BiCuwC,OAAAn+B,EAAA0qB,OAAAspB,QAA7B7T,OACAvyC,KAAA0wC,KAAAt+B,EAAAg0C,QAAA3sB,IA3BJz5B,KA2B8BuwC,OAAAn+B,EAAA0qB,OAAAspB,QAAA3sB,IAA1BmtB,EACA5mD,KAAA0wC,KAAA4B,OAAA7Y,IAAuBz5B,KAAA0wC,KAAA4B,OAAA7Y,IAAuBuX,EAAA5+B,EAAA0qB,OAAAspB,QAA9C3sB,IACAz5B,KAAA0wC,KAAA4B,OAAAC,OAA0BvyC,KAAA0wC,KAAA4B,OAAAC,OAA0BvB,EAAA5+B,EAAA0qB,OAAAspB,QAApD7T,OAUJ,GANAvyC,KAAA0wC,KAAAn+B,EAAA6zC,QAAsB,CAClBvgC,KADkB,EAElBI,MAAO,GAIPjmB,KAAA0wC,KAAJmW,SAAwB,CACpB,IACIC,EAxBR,EAjBA9mD,KAwCgBuwC,OAAAh+B,EAAAuqB,OAAAr6B,KAAZzB,OAEAhB,KAAA0wC,KAAAn+B,EAAA6zC,QAAAngC,MA1CJjmB,KA0CgCuwC,OAAAh+B,EAAAuqB,OAAAspB,QAAAvgC,KAA5BihC,EACA9mD,KAAA0wC,KAAAn+B,EAAA6zC,QAAAvgC,KA3CJ7lB,KA2C+BuwC,OAAAh+B,EAAAuqB,OAAAspB,QAA3BvgC,KACA7lB,KAAA0wC,KAAA4B,OAAAzsB,KAAwB7lB,KAAA0wC,KAAA4B,OAAAzsB,KAAwB7lB,KAAA0wC,KAAAn+B,EAAA6zC,QAAhDvgC,KACA7lB,KAAA0wC,KAAA4B,OAAArsB,MAAyBjmB,KAAA0wC,KAAA4B,OAAArsB,MAAyBjmB,KAAA0wC,KAAAn+B,EAAA6zC,QAAlDngC,MASJ,OAPAjmB,KAAA0wC,KAAAZ,WAAuBkB,EAAvBlB,WACI9vC,KAAA0wC,KAAJZ,aACI9vC,KAAA0wC,KAAA4B,OAAArsB,OAA0B+qB,EAAAltB,OAA1BjG,OAEJ7d,KAAA2wC,kBACA3wC,KAAA+mD,cAEA/mD,2CAGU,IAAAk1C,EAAAl1C,KACND,EAAJC,KACIuwC,EAASxwC,EAAbwwC,OACIn+B,EAAIrS,EAAA2wC,KAARt+B,EACIG,EAAIxS,EAAA2wC,KAARn+B,EACIF,EAAItS,EAAA2wC,KAARr+B,EAGAD,EAAA7Q,MAAU,SAAA4C,GAAC,OAAIosC,EAAAn+B,EAAA7Q,MAAAR,KAAAwvC,EAAJpsC,IACXoO,EAAAhR,MAAU,SAAA4C,GAAC,OAAIosC,EAAAh+B,EAAAhR,MAAAR,KAAAwvC,EAAJpsC,IACXkO,EAAA9Q,MAAU,SAAA4C,GAAC,OAAIosC,EAAAl+B,EAAA9Q,MAAAR,KAAAwvC,EAAJpsC,IAEXiO,EAAAwyC,aAAA,GACAryC,EAAAqyC,aAAA,GAGA7kD,EAAA2wC,KAAAmW,WAAuBtW,EAAAh+B,EAAAuqB,OAAAr6B,KAAvBzB,OACAjB,EAAA2wC,KAAAiW,WAAuBpW,EAAAn+B,EAAA0qB,OAAAr6B,KAAvBzB,OAEAuR,EAAAuqB,OAAW,CACPt7B,SADOqf,EAEPS,MAFO,GAGP1e,OAHO,GAIPokD,SAJO,KAKPC,MALO,EAMP5wC,MANO,EAOPF,UAAW,GAEf/D,EAAA0qB,OAAW,CACPt7B,SADOqf,EAEPS,MAFO,GAGP1e,OAHO,GAIPokD,SAJO,KAKPC,MALO,EAMP5wC,MANO,EAOPF,UAAW,GAGf,IAAI+wC,EAAJ,GACIC,OAAJtmC,EACIumC,OAAJvmC,EACA7gB,KAAA4f,KAAA+xB,QAAkB,SAAAxtC,GAEd,IAAIkjD,EAAOj1C,EAAA7Q,MAAX4C,GACImjD,EAAO/0C,EAAAhR,MAAX4C,GACIojD,EAAUl1C,EAAA9Q,MAAd4C,GACIqjD,EAAOjX,EAAAl+B,EAAAg0C,kBAAAkB,QAAA1mC,EAAkDzC,WAA7DmpC,IAGA,IAAIn1C,EAAAwyC,aAAAljC,QAAA2lC,IACAj1C,EAAAwyC,aAAAliD,KAAA2kD,IAGJ,IAAI90C,EAAAqyC,aAAAljC,QAAA4lC,IACA/0C,EAAAqyC,aAAAliD,KAAA4kD,GAGJ,IAAIG,EAASl1C,EAAbuqB,OACI/8B,EAAA2wC,KAAJmW,WACIY,EAASvS,EAAAmQ,aAAAlhD,EAAAmjD,EAA2B/0C,EAA3BuqB,OAAqCyT,EAAAh+B,EAA9CuqB,SAEJ,IAAI4qB,EAASt1C,EAAb0qB,OACI/8B,EAAA2wC,KAAJiW,WAEIe,EAASxS,EAAAmQ,aAAAlhD,EAAAkjD,EAA2Bj1C,EAA3B0qB,OAAqCyT,EAAAn+B,EAA9C0qB,SAGCoqB,EAASO,EAAdpxC,SACI6wC,EAASO,EAATpxC,OAAA,IAGC6wC,EAASO,EAATpxC,OAAuBqxC,EAA5BrxC,SACI6wC,EAASO,EAATpxC,OAAuBqxC,EAAvBrxC,OAAA,IAEC6wC,EAASO,EAATpxC,OAAuBqxC,EAAvBrxC,OAALixC,KACIJ,EAASO,EAATpxC,OAAuBqxC,EAAvBrxC,OAAAixC,GAAA,IAEJJ,EAASO,EAATpxC,OAAuBqxC,EAAvBrxC,OAAAixC,GAAAD,GAAAG,QAGI3mC,IAAAsmC,GAAsBK,EAA1BL,KACIA,EAAAK,SAEA3mC,IAAAumC,GAAJA,EAA0BI,KACtBJ,EAAAI,KAGRznD,EAAA2wC,KAAAwW,SAAAA,EAGKnnD,EAAA2wC,KAALiW,WACIv0C,EAAA0qB,OAAAl6B,OAAkBwP,EAAlBwyC,cAGC7kD,EAAA2wC,KAALmW,WACIt0C,EAAAuqB,OAAAl6B,OAAkB2P,EAAlBqyC,cAGJ5kD,KAAA2nD,8BAEAv1C,EAAAw1C,KAAA,GACAx1C,EAAAy1C,iBAAA,EACAz1C,EAAA01C,cAAA,GACA9nD,KAAA+nD,WAAA31C,EAAmBA,EAAnB0qB,OAA6ByT,EAA7Bn+B,GAEAG,EAAAq1C,KAAA,GACAr1C,EAAAs1C,iBAAA,EACAt1C,EAAAu1C,cAAA,GACA9nD,KAAA+nD,WAAAx1C,EAAmBA,EAAnBuqB,OAA6ByT,EAA7Bh+B,GAEAF,EAAAhC,IAAA82C,EACA90C,EAAAjC,IAAAg3C,8FAQA,IACIh1C,EADJpS,KACQ0wC,KAARt+B,EACIG,EAFJvS,KAEQ0wC,KAARn+B,EAEI20C,GAJJlnD,KAGQ0wC,KAARr+B,EAHArS,KAIe0wC,KAAfwW,UAEI9H,EANJp/C,KAMkB0wC,KAAA3wB,MAAlB,GACI1G,EAPJrZ,KAOa0wC,KAAAr3B,OAAb,GAEA9G,EAAAu1C,cAAAnW,QAAwB,SAAA19B,EAAA1T,GACpB,IAAImnB,EAAJ,GACArO,EAAA3W,KAAAglB,GAEAtV,EAAA01C,cAAAnW,QAAwB,SAAAz9B,EAAAoS,GACpB,IAAIkhC,OAAJ3mC,EACA,IACI2mC,EAAON,EAASjzC,EAAA8X,MAAT1V,OAAyBnC,EAAA6X,MAAzB1V,OAAyCpC,EAAzC+zC,KAAiD9zC,EAAxD8zC,KACF,MAAA7nD,IAGF,IAAI0hB,EAAO,CACP09B,OADOtrC,EAEPurC,OAFOtrC,EAGPwT,IAHOnnB,EAIPk/C,IAJOn5B,EAKP/kB,MAAOimD,GAEX9/B,EAAAhlB,KAAAmf,GAEAu9B,EAAA18C,KAAAmf,4CAMC1d,EAAG8jD,EAASC,EAAWC,GAEhC,IAAI5X,EAASvwC,KAAbuwC,OACI6X,EAAJF,EA6BA,OA5BAC,EAAA1lD,KAAAkvC,QAA8B,SAAA0W,EAAAC,GAC1BF,EAAA5mD,IAAA6mD,EAEKD,EAALpB,WACIoB,EAAApB,SAAA,IAGJ,IAAIuB,EAAgBJ,EAAA5mD,MAAAR,KAAAwvC,EAAApsC,EAApBkkD,GAEKD,EAAApB,SAAAr3C,eAAL44C,KACIL,EAAA/xC,YACAiyC,EAAApB,SAAAuB,GAAuC,CACnC3lD,OADmC,GAEnCokD,SAFmC,KAGnCuB,cAHmCA,EAInCtB,MAAOmB,EAAAnB,MAJ4B,EAKnC5wC,MAAO6xC,EAL4B/xC,UAMnC3U,IAAK6mD,IAIbD,EAAeA,EAAApB,SAAfuB,MAGJ,IAAIH,EAAAxlD,OAAA8e,QAAAumC,IACAG,EAAAxlD,OAAAF,KAAAulD,GAGJG,qCAGOnX,EAAMllB,EAAOy8B,EAAYZ,GAkChC,GAjCIY,EAAA1rB,OAAAtd,QAA4BgpC,EAAA1rB,OAAAtd,OAAAxe,OAAkC+qB,EAAlEk7B,MACIl7B,EAAAzK,MAAcknC,EAAA1rB,OAAAtd,OAAyBuM,EAAvCk7B,OAEAl7B,EAAAzK,MAAcyK,EAAdvqB,KAIAomD,EADJA,GACW,CAAP,IAEA5mD,QAAe+qB,EAAnBk7B,OACIW,EAAAllD,KAAA,GAGJqpB,EAAA08B,eAAuB18B,EAAA08B,gBAAvB,EACA18B,EAAA28B,qBAA6B38B,EAAA28B,sBAA7B,EAEA38B,EAAA67B,KAAaA,EAAbjlD,QACAopB,EAAA48B,WAAmBf,EAAnBjlD,QAGAopB,EAAA68B,SAAiBrE,EAAAsE,gBAAwB98B,EAAzC67B,MACA77B,EAAA+8B,eAAuB/8B,EAAvB68B,SACI78B,EAAJnpB,SACQ4lD,EAAJrC,YACIp6B,EAAAnpB,OAAAe,KAAkB6kD,EAAlB1E,gBAEJ/3B,EAAAnpB,OAAA+uC,QAAqB,SAAA3tC,GAAC,OAAEitC,EAAA6W,cAAAplD,KAAwB,CAACslD,IAADhkD,EAAS+nB,MAAOA,MAChEA,EAAA28B,qBAA6BzX,EAA7B4W,iBACA5W,EAAA4W,kBAAyB97B,EAAAnpB,OAAzB5B,OACA+qB,EAAA08B,gBAAwB18B,EAAAnpB,OAAxB5B,QAGJ+qB,EAAAg9B,aAAA,GACIh9B,EAAJi7B,SAAoB,CAChB,IAAIgC,EAAJ,EAEA,IAAK,IAALC,KAAsBl9B,EAAtBi7B,SACI,GAAIj7B,EAAAi7B,SAAAr3C,eAAJs5C,GAA8C,CAC1C,IAAI5uB,EAAQtO,EAAAi7B,SAAZiC,GACAl9B,EAAAg9B,aAAArmD,KAAA23B,GACA2uB,IAEAhpD,KAAA+nD,WAAA9W,EAAA5W,EAAAmuB,EAAAZ,GACA77B,EAAA08B,gBAAwBpuB,EAAxBouB,eACAb,EAAK77B,EAALk7B,QAAA,EAIJW,GAAJ,EAAYoB,IACRpB,EAAK77B,EAALk7B,QAAA,GAGJl7B,EAAAm9B,WAAA,GACAtB,EAAAjW,QAAa,SAAAxtC,EAAA5D,GACTwrB,EAAAm9B,WAAAxmD,KAAsByB,GAAK4nB,EAAA48B,WAAApoD,IAA3B,MAEJwrB,EAAAo9B,eAAuB5E,EAAAsE,gBAAwB98B,EAA/Cm9B,YAEIjY,EAAA2W,KAAA5mD,OAAmB4mD,EAAvB5mD,SACIiwC,EAAA2W,KAAAA,oDAMY3iC,GACpB,IAAIg7B,EAAWjgD,KAAA0wC,KAAA4B,OAAfzsB,KAQA,GAPI7lB,KAAAuwC,OAAAh+B,EAAJkQ,QACIw9B,GAAA,IAEAh7B,GAAUA,EAAd7S,IACI6tC,GAAYh7B,EAAZ7S,GAGApS,KAAAuwC,OAAAh+B,EAAJ0zC,aAAgC,CAC5BhG,GAAY7Q,EAAAY,MAAZsQ,OAEAL,GAAWM,IAGf,OAAAN,kDAGoBh7B,GACpB,IAAKjlB,KAAAuwC,OAAAn+B,EAAL6zC,aACI,OAAOjmD,KAAA0wC,KAAA0Y,UAAP,EAEJ,IAAItmD,EAAO9C,KAAA0wC,KAAA4B,OAAXC,OACIvyC,KAAAuwC,OAAAn+B,EAAJqQ,QACI3f,GAAA,IAEAmiB,GAAUA,EAAd1S,IACIzP,GAAQmiB,EAAR1S,GAGJzP,GAAQssC,EAAAY,MAARsQ,OAKA,OAFAx9C,GAAOy9C,8CAiBP,IAKI1iC,EACAkF,EANA2tB,EAAO1wC,KAAX0wC,KACIM,EAAOhxC,KAAXuwC,OACI+B,EAAS5B,EAAb4B,OACI8J,EAAiBhN,EAAAY,MAAAoM,eAAqBp8C,KAAAuwC,OAArB1yB,MAAwC7d,KAAxCi8C,mBAAiEj8C,KAAA0wC,KAAtF4B,QACI+J,EAAkBjN,EAAAY,MAAAqM,gBAAsBr8C,KAAAuwC,OAAtBxtB,OAA0C/iB,KAA1Ci8C,mBAAmEj8C,KAAA0wC,KAAzF4B,QAII+W,EAAY9E,EAAAsE,gBAAwBnY,EAAAt+B,EAAxCw1C,MAGI0B,EAAoBn5C,KAAAC,IAAS4gC,EAAAnvB,KAATg8B,QAA4B1tC,KAAAE,IAAS2gC,EAAAnvB,KAATi8B,SAA6B1B,EAADiN,GAA+BrpD,KAAA0wC,KAAAt+B,EAA/Gy1C,mBACI7nD,KAAAuwC,OAAJ1yB,MAES7d,KAAAuwC,OAAA1uB,KAALhE,QACI7d,KAAA0wC,KAAA0Y,UAAAE,IAIJtpD,KAAA0wC,KAAA0Y,UAAsBppD,KAAAuwC,OAAA1uB,KAAtBhE,MAEK7d,KAAA0wC,KAAL0Y,YACIppD,KAAA0wC,KAAA0Y,UAAAE,IAIRzrC,EAAQ7d,KAAA0wC,KAAA0Y,UAAsBppD,KAAA0wC,KAAAt+B,EAAtBy1C,iBAAqDvV,EAArDzsB,KAAmEysB,EAAnErsB,MAARojC,EAEA,IAAIE,EAAYhF,EAAAsE,gBAAwBnY,EAAAn+B,EAAxCq1C,MACI4B,EAAqBr5C,KAAAC,IAAS4gC,EAAAnvB,KAATg8B,QAA4B1tC,KAAAE,IAAS2gC,EAAAnvB,KAATi8B,SAA6BzB,EAADkN,GAAgCvpD,KAAA0wC,KAAAn+B,EAAjHs1C,mBACI7nD,KAAAuwC,OAAJxtB,OACS/iB,KAAAuwC,OAAA1uB,KAALkB,SACI/iB,KAAA0wC,KAAA+Y,WAAAD,IAGJxpD,KAAA0wC,KAAA+Y,WAAuBzpD,KAAAuwC,OAAA1uB,KAAvBkB,OAEK/iB,KAAA0wC,KAAL+Y,aACIzpD,KAAA0wC,KAAA+Y,WAAAD,IAKRzmC,EAAS/iB,KAAA0wC,KAAA+Y,WAAuBzpD,KAAA0wC,KAAAn+B,EAAvBs1C,iBAAsDvV,EAAtD7Y,IAAmE6Y,EAAnEC,OAATgX,EAGAvpD,KAAA0wC,KAAA7yB,MAAkBA,EAAQy0B,EAARzsB,KAAsBysB,EAAxCrsB,MACAjmB,KAAA0wC,KAAA3tB,OAAmBA,EAASuvB,EAAT7Y,IAAsB6Y,EAAzCC,6CAMA,IAKAp6B,EAJIo4B,EADJvwC,KACAuwC,OACIl+B,EAFJrS,KAEQ0wC,KAARr+B,EACIkI,EAAQg2B,EAAAvhC,MAAZuL,MACIiM,EAASnU,EAAAjC,IAAQiC,EAArBhC,IAGA,GADAgC,EAAAmO,OAAA,GACA,OAAI+vB,EAAAvhC,MAAAmJ,MAA6B,CAE7BoC,EAAAo3B,QAAc,SAAAnxC,EAAAD,GACV,IAAIyD,EAAIqO,EAAAjC,IAASoW,EAASrW,KAAAe,IAAA,GAA1B3Q,GACA8R,EAAAmO,OAAA9d,KAAAsB,KAEJmU,EAAQ3T,EAAA0uB,WAAAvI,SALR,SAcAxS,EARG,OAAIo4B,EAAAvhC,MAAAmJ,OAEPoC,EAAAo3B,QAAc,SAAAnxC,EAAAD,GACV,IAAIyD,EAAIqO,EAAAhC,IAASmW,EAASrW,KAAAe,IAAA,GAA1B3Q,GACA8R,EAAAmO,OAAAkpC,QAAA1lD,KAIIQ,EAARquB,aAEAtY,EAAAo3B,QAAc,SAAAnxC,EAAAD,GACV,IAAIyD,EAAIqO,EAAAhC,IAASmW,GAAUjmB,GAAKga,EAAAvZ,OAAhC,IACAqR,EAAAmO,OAAA9d,KAAAsB,KAEIorC,EAAAY,MAAAoB,YAAkBb,EAAAvhC,MAA1BmJ,QAKJ9F,EAAAmO,OAAA,GAAcnO,EAnCJhC,IAoCVgC,EAAAmO,OAASnO,EAAAmO,OAAAxf,OAAT,GAAgCqR,EApCtBjC,IAuCNmgC,EAAAvhC,MAAJu3C,cACIl0C,EAAAmO,OAAAvC,UAGJ,IAAIyyB,EAAO1wC,KA3CD0wC,KA+CVA,EAAAr+B,EAAArD,MAAAmJ,MAAqBA,EAAAqI,OAAanO,EAAbmO,QAAAjG,MAArBA,GACA,IAAIwE,EAAQ2xB,EAAAr+B,EAAA0M,MAAZ,GAEIy/B,EAAWx+C,KAAAuwC,OAAf1uB,KACA9C,EAAAmB,KAAA,OAEAwwB,EAAAr+B,EAAA0M,MAAAlB,MAAqB6yB,EAAA0Y,UAArB,EAAsC5K,EAAAxxB,QACtC0jB,EAAAr+B,EAAA0M,MAAAgE,OAAsB2tB,EAAA+Y,WAAtB,EAAwCjL,EAAAxxB,uCAIrCwmB,GACH/C,EAAAd,EAAA4U,EAAAriD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACIxzC,KAAA0wC,KAAJmW,UACI7mD,KAAA2pD,YAAiB3pD,KAAA0wC,KAAAn+B,EAAjBuqB,OAAqC98B,KAArC+xC,MAEA/xC,KAAA0wC,KAAJiW,UACI3mD,KAAA4pD,YAAiB5pD,KAAA0wC,KAAAt+B,EAAjB0qB,OAAqC98B,KAArC+xC,MAGJ/xC,KATY0/C,cAaZ1/C,KAAA6/C,cACA7/C,KAAA8/C,cAEI9/C,KAAAuwC,OAAJT,YACI9vC,KAAAi5C,eAGJj5C,KAAA6pD,8DAIA7pD,KACA0wC,2CAOA,IAAI3wC,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIkP,EAAa7/C,EAAAkyC,YAAjB,SACI8N,EAAcH,EAAlB,KAEAlP,EAAAkP,WAAAA,EAEA,IAAIkK,EAAU,CACV13C,EADU,EAEVG,EAAG,GAEHw3C,EAAUxF,EAAAyF,eAAd,GACA,GAAItZ,EAAJiW,SAAmB,CACf,IAAIP,EAAUrmD,EAAAwwC,OAAAn+B,EAAA0qB,OAAdspB,QAEA0D,EAAA13C,EAAY23C,EAAZ,EACAD,EAAAv3C,EAAY6zC,EAAA7T,OAAiBwX,EAAjB,EAAZ,OACOrZ,EAAJmW,WACHiD,EAAAv3C,EAAAw3C,GAIJ,IAAIvqC,EAASzf,EAAAgyC,KAAApyB,UAAoB,QAApBogC,GAAAngC,KACH8wB,EAAAt+B,EADG01C,cACmB,SAAA3jD,EAAA5D,GAAA,OAAAA,IAE5By/C,EAAcxgC,EAAAD,QAAAjB,OAAA,QAAAH,KAAA,QAA4C,SAAAha,EAAA5D,GAAA,OAAUq/C,EAAA,IAAAG,EAAA,IAAAA,EAAA,IAAVx/C,IAA5C2jB,MAAlB1E,GAEAwgC,EAAA7hC,KAAA,IACe,SAAAha,EAAA5D,GAAA,OAAWA,EAAImwC,EAAJ0Y,UAAqB1Y,EAAA0Y,UAAtB,EAA6CjlD,EAAA4nB,MAA7C68B,SAAiEkB,EAA3E13C,IADf+L,KAAA,IAEeuyB,EAAA3tB,OAAc+mC,EAF7Bv3C,GAAA4L,KAAA,KAAA,IAAAA,KAAA,cAAA,UAAAP,KAMU,SAAAzZ,GAAC,OAAEpE,EAAAkqD,aAAkB9lD,EAApB6jD,OAIX,IAAI/H,EAAWlgD,EAAAmgD,wBAAf4J,GAEA9J,EAAA1+C,KAAiB,SAAAggB,GACb,IAAI4oC,EAAO1lD,EAAAuZ,OAAX/d,MACI4d,EAAO7d,EAAAkqD,aAAkB3oC,EAD7B0mC,KAEA5Y,EAAAY,MAAAmQ,gCAAA+J,EAAAtsC,EAAAqiC,IAA4DlgD,EAAAwwC,OAAAR,aAA0BhwC,EAAA2wC,KAA1B4C,WAG5DvzC,EAAAwwC,OAAAn+B,EAAJ6zC,cACIjG,EAAA7hC,KAAA,YAA8B,SAAAha,EAAA5D,GAAA,MAAU,gBAAmBA,EAAImwC,EAAJ0Y,UAAqB1Y,EAAA0Y,UAAtB,EAA4CjlD,EAAA4nB,MAA5C68B,SAA+DkB,EAAjF13C,GAAA,MAAwGs+B,EAAA3tB,OAAc+mC,EAAtHv3C,GAAV,MAA9B4L,KAAA,MAAA,GAAAA,KAAA,KAAA,GAAAA,KAAA,cAAA,OAOJqB,EAAAwE,OAAA1hB,SAGAvC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAAAkyC,YAAhC,WAAA9zB,KAAA,YACuB,aAAgBuyB,EAAA7yB,MAAhB,EAAA,KAAyC6yB,EAAA3tB,OAAc2tB,EAAA4B,OAAvDC,QADvB,KAAAP,eAEoB,QAAUjyC,EAAAkyC,YAF9B,UAAA9zB,KAAA,KAAA,UAAA1F,MAAA,cAAA,UAAAmF,KAMU7d,EAAAwwC,OAAAn+B,EANVqQ,6CAUA,IAAI1iB,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACIkP,EAAa7/C,EAAAkyC,YAAjB,SACImO,EAAcR,EAAlB,KACAlP,EAAAkP,WAAAA,EAGA,IAAIpgC,EAASzf,EAAAgyC,KAAApyB,UAAoB,QAApBygC,GAAAxgC,KACH8wB,EAAAn+B,EADVu1C,eAII9H,EADcxgC,EAAAD,QAAAjB,OAAlB,QACkB4F,MAAlB1E,GAEI2qC,EAAU,CACV/3C,EADU,EAEVG,EAAG,GAEP,GAAIm+B,EAAJmW,SAAmB,CACf,IAAIT,EAAUrmD,EAAAwwC,OAAAh+B,EAAAuqB,OAAdspB,QACI2D,EAAUxF,EAAAyF,eAAd,GACAG,EAAA/3C,GAAag0C,EAAbvgC,KAEAskC,EAAA53C,EAAYw3C,EAAZ,EAEJ/J,EAAA7hC,KAAA,IACegsC,EADf/3C,GAAA+L,KAAA,IAEe,SAAAha,EAAA5D,GAAA,OAAWA,EAAImwC,EAAJ+Y,WAAsB/Y,EAAA+Y,WAAvB,EAA8CtlD,EAAA4nB,MAA9C68B,SAAiEuB,EAA3E53C,IAFf4L,KAAA,MAAA,GAAAA,KAAA,cAAA,OAAAA,KAAA,QAKmB,SAAAha,EAAA5D,GAAA,OAAUq/C,EAAA,IAAAQ,EAAA,IAAAA,EAAA,IAAV7/C,IALnBqd,KAOU,SAAAzZ,GAEF,OADgBpE,EAAAqqD,aAAkBjmD,EAAlC6jD,OAIR,IAAI/H,EAAWlgD,EAAAsgD,wBAAf8J,GAEAnK,EAAA1+C,KAAiB,SAAAggB,GACb,IAAI4oC,EAAO1lD,EAAAuZ,OAAX/d,MACI4d,EAAO7d,EAAAqqD,aAAkB9oC,EAD7B0mC,KAEA5Y,EAAAY,MAAAmQ,gCAAA+J,EAAAtsC,EAAAqiC,IAA4DlgD,EAAAwwC,OAAAR,aAA0BhwC,EAAA2wC,KAA1B4C,WAG5DvzC,EAAAwwC,OAAAh+B,EAAJ0zC,aACIjG,EAAA7hC,KAAA,YACuB,SAAAha,EAAA5D,GAAA,MAAU,eAAkB4pD,EAAlB/3C,EAAA,MAAyCjO,EAAA4nB,MAAA68B,UAAoBroD,EAAImwC,EAAJ+Y,WAAsB/Y,EAAA+Y,WAA1C,GAAiEU,EAA1G53C,GAAV,MADvB4L,KAAA,cAD4B,OAM5B6hC,EAAA7hC,KAAA,oBAAA,UAIJqB,EAAAwE,OAAA1hB,SAGAvC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAAAkyC,YAAhC,WAAAD,eACoB,QAAUjyC,EAAAkyC,YAD9B,UAAA9zB,KAAA,YAEuB,cAAgBuyB,EAAA4B,OAAhBzsB,KAAA,IAA0C6qB,EAAA3tB,OAA1C,EAFvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAKU7d,EAAAwwC,OAAAh+B,EALVkQ,2CAUQ4nC,EAAa/Q,EAAW8C,GAEhC,IAAIr8C,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KAEI4Z,EAAavqD,EAAAkyC,YAAjB,SACIsY,EAAcD,EAAlB,KACIxtB,EAASwc,EAAA35B,UAAoB,KAAA2qC,EAAA,IAApBC,GAAA3qC,KACHyqC,EADVtB,cAGIyB,EAAJ,EACI1B,EAAJ,EAEI2B,EAAc3tB,EAAAvd,QAAAjB,OAAlB,KACAmsC,EAAA7rB,QAAA0rB,GAAA,GAAA1rB,QAAA2rB,GAAA,GAAAjsC,OAAA,QAAAsgB,QAAA,cAAA,GAKA,IAAI8rB,EAAkBD,EAAA/I,eAAtB,WACAgJ,EAAApsC,OAAA,QACAosC,EAAApsC,OAAA,QAEA,IAAIyrC,EAAUxF,EAAAyF,eAAuBK,EAArCpD,OACIj6B,EAAU+8B,EAAd,EAEIY,EAAiBpG,EAArBqG,qBAEIxE,GADQrmD,EAAAwwC,OAAAh+B,EAAAuqB,OAAAr6B,KAAAzB,OAAmCqpD,EAA/CpD,MACc,CACVphC,KADU,EAEVI,MAAO,IAGXm2B,IACIgK,EAAAngC,MAAgByqB,EAAAn+B,EAAA6zC,QAAhBvgC,KACAugC,EAAAvgC,KAAe6qB,EAAAn+B,EAAA6zC,QAAfvgC,KACAu2B,EAAiB1L,EAAA7yB,MAAAksC,EAAuB3D,EAAvBvgC,KAAsCugC,EAAvDngC,OAIJ,IAAI4kC,EAAcJ,EAAAvmC,MAAlB4Y,GAEA+tB,EAAA1sC,KAAA,YACuB,SAAAha,EAAA5D,GACf,IAAI2X,EAAY,cAAgB8U,EAAUo5B,EAA1BvgC,MAAA,KAAkD6qB,EAAA+Y,WAADe,EAAwCjqD,EAAxCwpD,EAAAjB,EAAjD97B,GAAhB,IAGA,OAFA87B,GAAmB3kD,EAAAglD,gBAAnB,EACAqB,GAAqBrmD,EAAAskD,gBAArB,EACAvwC,IAIR,IAAI4yC,EAAa1O,EAAjB,EAAkCpvB,EAK9B+9B,EAHcF,EAAAlrC,UAAA,WAAAxB,KAAA,YACK,SAAAha,EAAA5D,GAAA,MAAU,cAAgBuqD,EAAhBH,GAAV,SAEPhrC,UAAA,QAAAxB,KAAA,QAAAwsC,GAAAxsC,KAAA,SAEI,SAAAha,GACZ,OAAQA,EAAAglD,gBAAD,GAA0BzY,EAAA+Y,WAAkBtlD,EAA5CskD,eAAP,EAAsEz7B,IAH9D7O,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAAA,KAAA,eAAhB,GAUAne,KAAAgrD,uBAAAX,EAAAU,GAGAF,EAAAlrC,UAAA,mBAAAxB,KAAA,QACmB,SAAAha,GAAC,MAAG,yBAA2BA,EAA9BkS,QADpB8H,KAAA,QAAA2sC,GAAA3sC,KAAA,SAGoB,SAAAha,GACZ,OAAQA,EAAAglD,gBAAD,GAA0BzY,EAAA+Y,WAAkBtlD,EAA5CskD,eAAP,EAAsEz7B,IAJ9E7O,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAAA,KAAA,OAAA,SAAAA,KAAA,eAAA,GAAAA,KAAA,eAAA,IAAAA,KAAA,SAAA,SAcA0sC,EAAAvpD,KAAiB,SAAAyqB,GAEbhsB,EAAA4pD,YAAA5oD,KAAAhB,EAAAgsB,EAAmCvnB,EAAAuZ,OAAnC/d,MAAoD8qD,EAApDH,KAGJ7tB,EAAA9Y,OAAA1hB,6CAGQ+nD,EAAa/Q,EAAW+C,GAEhC,IAAIt8C,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KAEI4Z,EAAavqD,EAAAkyC,YAAjB,SACIgZ,EAAcX,EAAlB,KACIxtB,EAASwc,EAAA35B,UAAoB,KAAA2qC,EAAA,IAApBW,GAAArrC,KACHyqC,EADVtB,cAGIyB,EAAJ,EACI1B,EAAJ,EAEI2B,EAAc3tB,EAAAvd,QAAAjB,OAAlB,KACAmsC,EAAA7rB,QAAA0rB,GAAA,GAAA1rB,QAAAqsB,GAAA,GAAA3sC,OAAA,QAAAsgB,QAAA,cAAA,GAKA,IAAI8rB,EAAkBD,EAAA/I,eAAtB,WACAgJ,EAAApsC,OAAA,QACAosC,EAAApsC,OAAA,QAEA,IAAIyrC,EAAUxF,EAAAyF,eAAuBK,EAArCpD,OACIj6B,EAAU+8B,EAAd,EACImB,EAAkB3G,EAAtBqG,qBAIIxE,GAFQrmD,EAAAwwC,OAAAn+B,EAAA0qB,OAAAr6B,KAAAzB,OAAmCqpD,EAA/CpD,MAEc,CACVxtB,IADU,EAEV8Y,OAAQ,IAGZ8J,EAMI+J,EAAA3sB,KAAAyxB,GALA9E,EAAA7T,OAAiB7B,EAAAt+B,EAAAg0C,QAAjB7T,OACA6T,EAAA3sB,IAAciX,EAAAt+B,EAAAg0C,QAAd3sB,IACA4iB,EAAkB3L,EAAA3tB,OAAAgnC,EAAwB3D,EAAxB3sB,IAAsC2sB,EAAxD7T,QAOJ,IAAIsY,EAAcJ,EAAAvmC,MAAlB4Y,GAEA+tB,EAAA1sC,KAAA,YACuB,SAAAha,EAAA5D,GACf,IAAI2X,EAAY,cAAiBw4B,EAAA0Y,UAADoB,EAAuCjqD,EAAvCwpD,EAAAjB,EAAhB97B,GAAA,MAAyGA,EAAUo5B,EAAnH3sB,KAAhB,IAGA,OAFAqvB,GAAmB3kD,EAAAglD,gBAAnB,EACAqB,GAAqBrmD,EAAAskD,gBAArB,EACAvwC,IAGR,IAAIizC,EAAc9O,EAAlB,EAAoCrvB,EAMhC+9B,EAJcF,EAAAlrC,UAAA,WAAAxB,KAAA,YACK,SAAAha,EAAA5D,GAAA,MAAU,oBAGjBof,UAAA,QAAAxB,KAAA,SAAA+sC,GAAA/sC,KAAA,QAEG,SAAAha,GACX,OAAQA,EAAAglD,gBAAD,GAA0BzY,EAAA0Y,UAAiBjlD,EAA3CskD,eAAP,EAAqEz7B,IAH7D7O,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAAA,KAAA,eAAhB,GAUAne,KAAAgrD,uBAAAX,EAAAU,GAGAF,EAAAlrC,UAAA,mBAAAxB,KAAA,QACmB,SAAAha,GAAC,MAAG,yBAA2BA,EAA9BkS,QADpB8H,KAAA,SAAAgtC,GAAAhtC,KAAA,QAGmB,SAAAha,GACX,OAAQA,EAAAglD,gBAAD,GAA0BzY,EAAA0Y,UAAiBjlD,EAA3CskD,eAAP,EAAqEz7B,IAJ7E7O,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAAA,KAAA,OAAA,SAAAA,KAAA,eAAA,GAAAA,KAAA,eAAA,IAAAA,KAAA,SAAA,SAaA0sC,EAAAvpD,KAAiB,SAAAyqB,GACbhsB,EAAA6pD,YAAA7oD,KAAAhB,EAAAgsB,EAAmCvnB,EAAAuZ,OAAnC/d,MAAoDmrD,EAApDD,KAGJpuB,EAAA9Y,OAAA1hB,wDAImB+nD,EAAaU,GAChC,IAAIra,EAAO1wC,KAAX0wC,KACI3wC,EAAJC,KACI4gD,EAAJ,GACAA,EAAAl+C,KAAwB,SAAAyB,GACpBK,EAAAuZ,OAAA/d,MAAA4+B,QAAA,eAAA,GACAp6B,EAAAuZ,OAAU/d,KAAA62B,WAAVA,YAAAlX,UAAgD,mBAAqBxb,EAArEkS,OAAAuoB,QAAA,eAAA,KAGJ,IAAIiiB,EAAJ,GACAA,EAAAn+C,KAAuB,SAAAyB,GACnBK,EAAAuZ,OAAA/d,MAAA4+B,QAAA,eAAA,GACAp6B,EAAAuZ,OAAU/d,KAAA62B,WAAVA,YAAAlX,UAAgD,mBAAqBxb,EAArEkS,OAAAuoB,QAAA,eAAA,KAEA8R,EAAJ4C,UAEIsN,EAAAl+C,KAAwB,SAAAyB,GACpB,IAAI06B,EAAOwrB,EAAA/oC,MAAA,KAA2Bnd,EAAtCokD,cACAxoD,EAAAgwC,YAAAlR,KAGJgiB,EAAAn+C,KAAuB,SAAAyB,GACnBpE,EAAAwzC,iBAKRwX,EAAA5oC,GAAA,YAA0B,SAAAhe,GACtB,IAAIpE,EAAJC,KACA4gD,EAAAjP,QAA2B,SAAA7nB,GACvBA,EAAA/oB,KAAAhB,EAAAoE,OAGR4mD,EAAA5oC,GAAA,WAAyB,SAAAhe,GACrB,IAAIpE,EAAJC,KACA6gD,EAAAlP,QAA0B,SAAA7nB,GACtBA,EAAA/oB,KAAAhB,EAAAoE,6CAOR,IAAIpE,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KACI0a,EAAqBrrD,EAAAkyC,YAAzB,SACI8X,EAAUxF,EAAAyF,eAAd,GACIqB,EAAW3a,EAAAt+B,EAAA0qB,OAAAisB,aAAA/nD,OAAoC+oD,EAApC,EAAf,EACIuB,EAAW5a,EAAAn+B,EAAAuqB,OAAAisB,aAAA/nD,OAAoC+oD,EAApC,EAAf,EACIwB,EAAgBxrD,EAAAgyC,KAAAC,eAAyB,KAA7CoZ,GACAG,EAAAptC,KAAA,YAAgC,aAAAktC,EAAA,KAAAC,EAAhC,KAEA,IAAI9K,EAAYzgD,EAAAkyC,YAAhB,QACIwO,EAAY/P,EAAAr+B,EAAA0M,MAAhBmB,KAEIH,EAAQwrC,EAAA5rC,UAAwB,KAAxB6gC,GAAA5gC,KACF7f,EAAA2wC,KADV3wB,OAMI2gC,EAHY3gC,EAAAR,QAAAjB,OAAA,KAAAsgB,QAAA4hB,GAAhB,GAGiBt8B,MAAjBnE,GACA2gC,EAAAviC,KAAA,YAA6B,SAAA3d,GAAC,MAAG,cAAiBkwC,EAAA0Y,UAAiB5oD,EAAjBi/C,IAAyB/O,EAAA0Y,UAA1B,EAAgD5oD,EAAAg/C,OAAAzzB,MAAhE68B,UAAA,KAAmGlY,EAAA+Y,WAAkBjpD,EAAlBknB,IAA0BgpB,EAAA+Y,WAA3B,EAAkDjpD,EAAA++C,OAAAxzB,MAApJ68B,UAAH,MAE9B,IAAI5pC,EAAS0hC,EAAA1O,eAA0ByO,EAAA,eAAvCA,GAEAzhC,EAAAb,KAAA,QACmBuyB,EAAAr+B,EAAA0M,MADnBlB,OAAAM,KAAA,SAEoBuyB,EAAAr+B,EAAA0M,MAFpBgE,QAAA5E,KAAA,KAGgBuyB,EAAD0Y,UAHf,GAAAjrC,KAAA,KAIgBuyB,EAAD+Y,WAJf,GAMAzqC,EAAAvG,MAAA,OAAqB,SAAAjY,GAAC,YAAGqgB,IAAArgB,EAAAe,MAAwBxB,EAAAwwC,OAAAvhC,MAAxBs3C,YAAwD5V,EAAAr+B,EAAArD,MAAAmJ,MAAmB3X,EAA9Ee,SACtByd,EAAAb,KAAA,eAA4B,SAAAha,GAAC,YAAG0c,IAAA1c,EAAA5C,MAAA,EAAH,IAE7B,IAAIq/C,EAAJ,GACIC,EAAJ,GAeA,GAbInQ,EAAJ4C,UAEIsN,EAAAl+C,KAAwB,SAAAlC,GACpB,IAAIq+B,OAAOhe,IAAArgB,EAAAe,MAAwBxB,EAAAwwC,OAAA+C,QAAxB0S,WAAyDjmD,EAAAyrD,aAAkBhrD,EAAtFe,OACAxB,EAAAgwC,YAAAlR,KAIJgiB,EAAAn+C,KAAuB,SAAAlC,GACnBT,EAAAwzC,iBAIJxzC,EAAAwwC,OAAJ6M,gBAAiC,CAC7B,IAAI0D,EAAiB/gD,EAAAwwC,OAAAV,eAArB,YACIkR,EAAc,SAAAvgD,GAAC,OAAEkwC,EAAAkP,WAAA,MAA0Bp/C,EAA5Bi/C,KACfuB,EAAc,SAAAxgD,GAAC,OAAEkwC,EAAAkP,WAAA,MAA0Bp/C,EAA5BknB,KAGnBk5B,EAAAl+C,KAAwB,SAAAlC,GAEpBT,EAAAgyC,KAAApyB,UAAoB,QAAUohC,EAA9BvgD,IAAAo+B,QAAAkiB,GAAA,GACA/gD,EAAAgyC,KAAApyB,UAAoB,QAAUqhC,EAA9BxgD,IAAAo+B,QAAAkiB,GAAA,KAEJD,EAAAn+C,KAAuB,SAAAlC,GACnBT,EAAAgyC,KAAApyB,UAAoB,QAAUohC,EAA9BvgD,IAAAo+B,QAAAkiB,GAAA,GACA/gD,EAAAgyC,KAAApyB,UAAoB,QAAUqhC,EAA9BxgD,IAAAo+B,QAAAkiB,GAAA,KAKRJ,EAAAv+B,GAAA,YAA2B,SAAA3hB,GACvBogD,EAAAjP,QAA2B,SAAA7nB,GAAQ,OAAEA,EAAFtpB,OADvC2hB,GAAA,WAGoB,SAAA3hB,GACZqgD,EAAAlP,QAA0B,SAAA7nB,GAAQ,OAAEA,EAAFtpB,OAG1CkgD,EAAAv+B,GAAA,QAAuB,SAAA3hB,GACnBT,EAAAkhD,QAAA,gBAAAzgD,KAIJuf,EAAAiE,OAAA1hB,8CAGSf,GACT,OAAKvB,KAAAuwC,OAAAn+B,EAAL6xC,UAEOjkD,KAAAuwC,OAAAn+B,EAAA6xC,UAAAljD,KAA6Bf,KAA7BuwC,OAAPhvC,GAF8BA,uCAKrBA,GACT,OAAKvB,KAAAuwC,OAAAh+B,EAAL0xC,UAEOjkD,KAAAuwC,OAAAh+B,EAAA0xC,UAAAljD,KAA6Bf,KAA7BuwC,OAAPhvC,GAF8BA,uCAKrBA,GACT,OAAKvB,KAAAuwC,OAAAl+B,EAAL4xC,UAEOjkD,KAAAuwC,OAAAl+B,EAAA4xC,UAAAljD,KAA6Bf,KAA7BuwC,OAAPhvC,GAF8BA,4CAKhBA,GACd,OAAKvB,KAAAuwC,OAAAzsB,OAALmgC,UAEOjkD,KAAAuwC,OAAAzsB,OAAAmgC,UAAAljD,KAAkCf,KAAlCuwC,OAAPhvC,GAFmCA,yCAMnC,IAAIxB,EAAJC,KACI0wC,EAAO1wC,KAAX0wC,KACIwI,EAAUl5C,KAAA0wC,KAAA7yB,MAAd,GACIksC,EAAUxF,EAAAyF,eAAd,GACIhqD,KAAA0wC,KAAJmW,SACI3N,GAAW6Q,EAAA,EAAcrZ,EAAAn+B,EAAA6zC,QAAzBngC,MACOjmB,KAAA0wC,KAAJiW,WACHzN,GAAA6Q,GAEJ,IAAI5Q,EAAJ,GACIn5C,KAAA0wC,KAAAiW,UAAsB3mD,KAAA0wC,KAA1BmW,YACI1N,GAAW4Q,EAAX,GAGJ,IACI7I,EAAYlhD,KAAA0wC,KAAA3tB,OAAhB,EACI5K,EAAQu4B,EAAAr+B,EAAArD,MAAZmJ,MAEAu4B,EAAA5sB,OAAc,IAAIy0B,EAAJa,OAAWp5C,KAAXsf,IAAqBtf,KAArB+xC,KAAA55B,EAAA+gC,EAAAC,EAAyD,SAAAn1C,GAAC,OAAIjE,EAAA0rD,kBAAJznD,KAA1D0nD,gBAAyG3rD,EAAAwwC,OAAAzsB,OAAzGmiC,cAAA9E,kBAJd,GAIAD,4CA9nBkByK,GAClB,OAAOpH,EAAAqH,iBAA2BD,EAAlC,2CAGmB/D,GACnB,IAAIgB,EAAJ,EAEA,OADAhB,EAAAjW,QAAa,SAAAka,EAAAC,GAAA,OAA0BlD,GAAYiD,EAAatH,EAAAyF,eAAnD8B,KACblD,yBAnXGgD,gBAAkB,GAFhBrH,EAGFqG,qBAAuB,oZClGlC,IAAAzb,EAAA1uC,EAAA,6BACA2uC,EAAA3uC,EAAA,WACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEasrD,aAwBT,SAAAA,EAAAxc,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAA+rD,IACfvc,EAAAE,EAAA1vC,KAAA2vC,EAAAoc,GAAAhrD,KAAAf,QAvBJ4vC,SAAUJ,EAAAK,eAAoB,YAsBXL,EArBnBM,YAAW,EAqBQN,EApBnBO,aAAa,EAoBMP,EAnBnBp9B,EAAE,CACEqQ,MADF,GAEEjhB,IAFF,EAGED,MAAO,SAAA4C,EAAA3C,GAAA,OAAY4tC,EAAAY,MAAAC,SAAA9rC,GAAAA,EAAwBia,WAAWja,EAA/C3C,KACP2W,MAJF,SAKEyJ,OALF,SAMErB,WAAOM,GAaQ2uB,EAXnBj9B,EAAE,CACEkQ,MADF,GAEEb,OAFF,OAGEzJ,MAAO,UAQQq3B,EANnBwc,WAAU,EAMSxc,EALnB1S,OAAO,CACHt7B,IAAK,GAIUguC,EAFnBvrB,YAAY,EAKRsrB,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAJWC,aAxBcL,EAAAiB,yDAkCxB6b,aACT,SAAAA,EAAA3b,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAisD,GAAAvc,EAAA1vC,KAAA2vC,EAAAsc,GAAAlrD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAmsC,EADUxb,gBADpBpB,EAAAqB,wGAKjBD,GACN,OAAAE,EAAAd,EAAAsc,EAAA/pD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAA+rD,EAAvBxb,uCAIAE,EAAAd,EAAAsc,EAAA/pD,WAAA,WAAAlC,MAAAe,KAAAf,MAGWA,KAAXuwC,OAcA,OAZAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GACAvS,KAAA0wC,KAAAiC,IAAc,CACV3jC,MADU,MAIdhP,KAAA2wC,kBAEA3wC,KAAA6wC,SACA7wC,KAAAksD,iBACAlsD,KAAA8wC,mBACA9wC,KAAA4wC,SACA5wC,sCAKA,IAAI0wC,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXn+B,EAQAA,EAAA7Q,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MACX4Q,EAAA+F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAAA,EAAIm2B,EAAlD7yB,QACAzL,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,KAETiO,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BxP,EAAvC+F,OAEG64B,EAAHzwB,OACInO,EAAA6+B,KAAA1wB,MAAaywB,EAAbzwB,OAEJ,IAAIX,EAAO5f,KAAA0wC,KAAXgB,YACAhB,EAAAt+B,EAAA+F,MAAAqI,OAAoB,CAAChc,EAAA6L,IAAAuP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA6L,IAAOI,EAAP7N,OAAiB8tC,EAAAt+B,EAAnB7Q,SAAmCiD,EAAA4L,IAAAwP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA4L,IAAOK,EAAP7N,OAAiB8tC,EAAAt+B,EAAnB7Q,4CAMpF,IAAImvC,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAAuwC,OAAXh+B,EACAA,EAAA4F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAACm2B,EAAD3tB,OAA9C,IAEAxQ,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BrP,EAAvC4F,OACWnY,KAAA0wC,KAAX9wB,KAAA,IACIusC,EAAY3nD,EAAA4L,IAAOsgC,EAAP0b,kBAA+B,SAAA9a,GAAK,OAAI9sC,EAAA4L,IAAOkhC,EAAP+a,cAA4B,SAAAloD,GAAC,OAAIA,EAAAotC,GAAOptC,EAAXoO,MACrFm+B,EAAAn+B,EAAA4F,MAAAqI,OAAoB,CAAA,EAApB2rC,6CAMA,IAAIzb,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EAEImO,GADImwB,EAARn+B,EACYvS,KAAAuwC,OAAAn+B,EAAAmO,MAAsBnO,EAAA+F,MAAAoI,MAAcvgB,KAAAuwC,OAAAn+B,EAApCmO,OAA2DnO,EAAA+F,MAAvEoI,SAEAmwB,EAAA7oB,UAAiBrjB,EAAAqjB,YAAArH,OACLpO,EAAA+F,MADKqI,UAAAjf,MAEN6Q,EAFM7Q,OAAA+mB,WAAjB/H,8CAMe,IAAA20B,EAAAl1C,KAEXyxC,EAAJ,GACAzxC,KAAA0wC,KAAAgB,YAAAC,QAA8B,SAAAxtC,GAC1BA,EAAAkoD,cAAkBnX,EAAAxE,KAAA7oB,UAAoB1jB,EAAtCvB,QAEIuB,EAAAkoD,cAAA1a,QAAwB,SAAAztC,EAAA3D,GACpB2D,EAAAkO,EAAKlO,EAAL8jB,GACA9jB,EAAAqX,GAAOrX,EAAA+jB,GAAK/jB,EAAZ8jB,GACA9jB,EAAAqO,EAAMrO,EAANlD,OACA,IAAI6wC,EAASJ,EAAblxC,GACYsxC,EAAZA,GAAY,EACZ3tC,EAAAqtC,GAAAM,EAEIqD,EAAA3E,OAAJyb,YACI9nD,EAAAqO,GAAK2iC,EAAAxE,KAAL/V,YAEJ8W,EAAAlxC,GAAS2D,EAAAqO,EAATs/B,MAKZ,IAAIpvC,EAAOzC,KAAA0wC,KAAAgB,YAAAtwC,IAA0B,SAAA+C,GAAC,OAAEA,EAAF3C,MAGtCxB,KAAA0wC,KAAA1C,MAAkBxpC,EAAAwpC,QAAAvrC,KAAAA,GAAAlB,MAA4B,SAAA4C,GAAC,OAAEA,EAAFkoD,gBAC/CrsD,KAAA0wC,KAAA0b,kBAA8BpsD,KAAA0wC,KAA9BgB,gDAIA,IACIhB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfn+B,EACI6+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAGyCiyC,YAAL,UAAA,IAHpCjyC,KAGwEiyC,YAApC,SAHpCjyC,KAGkGuwC,OAAA2B,OAAA,GAA0B,IAH5HlyC,KAGgIiyC,YAArH,eAAA9zB,KAAA,YACY,eAAiBuyB,EAAjB3tB,OADvB,KAGIovB,EAAJlB,EANAjxC,KAOIuwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAt+B,EAAX6+B,MAEAA,EAAAe,eAAoB,QAbpBhyC,KAa4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,aAAeuyB,EAAA7yB,MAAf,EAAA,IAAoC6yB,EAAA4B,OAApCC,OADvB,KAAAp0B,KAAA,KAAA,QAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,2CAQA,IACIiuB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfh+B,EACI0+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAGyCiyC,YAAL,UAAA,IAHpCjyC,KAGwEiyC,YAApC,SAHpCjyC,KAGkGuwC,OAAA2B,OAAA,GAA0B,IAH5HlyC,KAGgIiyC,YAAhI,eAEIE,EAAJlB,EALAjxC,KAMIuwC,OAAJtsB,aACIkuB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAn+B,EAAX0+B,MAEAA,EAAAe,eAAoB,QAZpBhyC,KAY4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,cAAeuyB,EAAA4B,OAAfzsB,KAAA,IAAsC6qB,EAAA3tB,OAAtC,EADvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,+CASA,IAAI1iB,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KAEI8B,EAAaxyC,KAAAiyC,YAAjB,SAEIQ,EAAWzyC,KAAAiyC,YAAf,OACIX,EAAQvxC,EAAAgyC,KAAApyB,UAAoB,IAApB6yB,GAAA5yB,KACF8wB,EADV0b,mBAGI1Z,EAAapB,EAAA/xB,QAAAjB,OAAA,KAAAH,KAAA,QAAAq0B,GAAAtuB,MAAjBotB,GAIIqB,EAAMD,EAAA/yB,UAAqB,IAArB8yB,GAAA7yB,KACA,SAAAzb,GAAC,OAAIA,EAAJkoD,gBAEPzZ,EAAWD,EAAApzB,QAAAjB,OAAf,KACAs0B,EAAAz0B,KAAA,QAAAs0B,GAAAn0B,OAAA,QAAAH,KAAA,IAAA,GAKA,IAAI20B,EAAWF,EAAA1uB,MAAfyuB,GACII,EAAUD,EAAA/0B,OAAd,QAEIi1B,EAAJD,EACIE,EAAJH,EACII,EAAJR,EACI1yC,KAAJmzC,sBACIH,EAAWD,EAAX9uB,aACAgvB,EAAOH,EAAP7uB,aACAivB,EAAQR,EAARzuB,cAGJgvB,EAAA90B,KAAA,YAAuB,SAAAha,GAAc,MAAO,aAAeusC,EAAAt+B,EAAA+F,MAAahU,EAA5BiO,GAAA,IAA0Cs+B,EAAAn+B,EAAA4F,MAAahU,EAAAotC,GAAMptC,EAA7DoO,GAAP,MACrBm+B,EAAA0b,kBAAAprD,QAAiC0vC,EAAA0b,kBAAA,GAAAC,cAAArrD,SAAkD0vC,EAAAt+B,EAAA+F,MAAau4B,EAAA0b,kBAAA,GAAAC,cAAA,GAAbpkC,IAA4DyoB,EAAAt+B,EAAA+F,MAAau4B,EAAA0b,kBAAA,GAAAC,cAAA,GAAzErkC,KAGnGgrB,EAAA70B,KAAA,QACoB,SAAAha,GAAC,OAAIgM,KAAAC,IAAA,EAAYsgC,EAAAt+B,EAAA+F,MAAahU,EAAb8jB,IAAmByoB,EAAAt+B,EAAA+F,MAAahU,EAAhC6jB,IAAhB,KADrB7J,KAAA,SAEoB,SAAAha,GAAC,OAAMusC,EAAA3tB,OAAc2tB,EAAAn+B,EAAA4F,MAAahU,EAAjCoO,KAElBvS,KAAA0wC,KAAH1hC,OACIkkC,EAAA/0B,KAAA,OACkBne,KAAA0wC,KADlB2C,aAIA3C,EAAJ4C,SACIR,EAAA3wB,GAAA,YAAyB,SAAAhe,GACrBpE,EAAAgwC,YAAiB5rC,EAAjBoO,KADJ4P,GAAA,WAEkB,SAAAhe,GACdpE,EAAAwzC,gBAGRjC,EAAAttB,OAAA1hB,SACAqwC,EAAA3uB,OAAA1hB,wCAGGkxC,GAMH,OALA/C,EAAAd,EAAAsc,EAAA/pD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAyzC,YACAzzC,KAAA0zC,YAEA1zC,KAAAssD,gBACAtsD,0xFCjQR,IAAAusD,EAAA9rD,EAAA,mBAGAy8C,EAAAz8C,EAAA,iBACA+rD,EAAA/rD,EAAA,wBACAgsD,EAAAhsD,EAAA,gBACAisD,EAAAjsD,EAAA,wBACA+iD,EAAA/iD,EAAA,aACAksD,EAAAlsD,EAAA,wBACAmsD,EAAAnsD,EAAA,eACAosD,EAAApsD,EAAA,eACAg3C,EAAAh3C,EAAA,mBACAqsD,EAAArsD,EAAA,cACAssD,EAAAtsD,EAAA,iCACAusD,EAAAvsD,EAAA,gBACAi3C,EAAAj3C,EAAA,sBACA2uC,EAAA3uC,EAAA,WACA83C,EAAA93C,EAAA,YAhBA8rD,EAAA/K,aAAA/8C,qbCDA,IAAA2qC,EAAA3uC,EAAA,WAEAwsD,EAAAxsD,EAAA,2LASa24C,aAaT,SAAAA,EAAA95B,EAAA4tC,EAAA/0C,EAAA+gC,EAAAC,EAAAn5B,gGAAoEyvB,CAAAzvC,KAAAo5C,GAAAp5C,KAXpE6vC,eAAe,OAWqD7vC,KAVpEmtD,YAAYntD,KAAA6vC,eAAoB,SAUoC7vC,KAPpEgP,MAAOi+C,EAAA3nC,YAO6DtlB,KANpE8C,KAAOmqD,EAAA1nC,WAM6DvlB,KALpEklB,OAAQ+nC,EAAAznC,aAK4DxlB,KAFpEggB,iBAAca,EAGV7gB,KAAAmY,MAAAA,EACAnY,KAAAsf,IAAAA,EACAtf,KAAAu6C,KAAYnL,EAAAY,MAAZuK,OACAv6C,KAAAs5C,UAAkBlK,EAAAY,MAAAgC,eAAAkb,EAAmC,KAAKltD,KAAxCmtD,YAAA,KAAAhvC,KAAA,YACK,aAAA+6B,EAAA,IAAAC,EADL,KAAAva,QAEL5+B,KAFKmtD,aAAlB,GAIAntD,KAAAggB,YAAAA,mGAKcotC,EAAUlM,EAAWz+B,GACnC,IAAI4qC,EAAartD,KAAA6vC,eAAA,mBAA0C7vC,KAA3Du6C,KACIpiC,EAAOnY,KAAXmY,MACIpY,EAAJC,KAEAA,KAAAstD,eAAsBle,EAAAY,MAAAsd,eAAqBttD,KAArBsf,IAAA+tC,EAA2CrtD,KAAAmY,MAA3CoC,QAAA,EAAA,IAAA,EAAtB,GAEAva,KAAAs5C,UAAAtH,eAAA,QAAA7zB,KAAA,QAAAivC,GAAAjvC,KAAA,SAAA+iC,GAAA/iC,KAAA,IAAA,GAAAA,KAAA,IAAA,GAAA1F,MAAA,OAKmB,QAAA40C,EALnB,KAQA,IAAI9sC,EAAQvgB,KAAAs5C,UAAA35B,UAAA,QAAAC,KACDzH,EADXqI,UAEI+sC,EAAap1C,EAAAqI,SAAAxf,OAAjB,EACIwsD,EAAajtC,EAAAhB,QAAAjB,OAAA,QAAA4F,MAAjB3D,GAsBA,OApBAitC,EAAArvC,KAAA,IAAAivC,GAAAjvC,KAAA,IACgB,SAAAha,EAAA5D,GAAA,OAAW2gD,EAAY3gD,EAAA2gD,EAAvBqM,IADhBpvC,KAAA,KAAA,GAAAA,KAAA,qBAAA,UAAAP,KAKU,SAAAzZ,GAAC,OAAGpE,EAAAigB,YAAmBjgB,EAAAigB,YAAnB7b,GAAHA,IACXqpD,EAAArvC,KAAA,oBAAA,UACGne,KAAHimD,cACIuH,EAAArvC,KAAA,YACuB,SAAAha,EAAA5D,GAAA,MAAU,eAAA6sD,EAAA,MAAoClM,EAAY3gD,EAAA2gD,EAAhDqM,GAAV,MADvBpvC,KAAA,cAAA,SAAAA,KAAA,KAAA,GAAAA,KAAA,KAAA,GAUJoC,EAAAyD,OAAA1hB,SAEAtC,6CAGYimD,GAEZ,OADAjmD,KAAAimD,aAAAA,EACAjmD,wZClFR,IAAAmvC,EAAA1uC,EAAA,6BACA2uC,EAAA3uC,EAAA,WACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEagtD,aAoCT,SAAAA,EAAAle,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAytD,IACfje,EAAAE,EAAA1vC,KAAA2vC,EAAA8d,GAAA1sD,KAAAf,QAnCJ4vC,SAAUJ,EAAAK,eAAoB,aAkCXL,EAjCnB0C,QAAQ,EAiCW1C,EAhCnBO,aAAa,EAgCMP,EA9BnBp9B,EAAE,CACEqQ,MADF,GAEEjhB,IAFF,EAGED,MAAO,SAAA4C,EAAA3C,GAAA,OAAY2C,EAAZ3C,IACPogB,OAJF,SAKEzJ,MALF,SAME27B,aAAc,KAwBCtE,EAtBnBj9B,EAAE,CACEkQ,MADF,GAEEjhB,IAFF,EAGED,MAAO,SAAA4C,EAAA3C,GAAA,OAAY2C,EAAZ3C,IACPogB,OAJF,OAKEzJ,MALF,SAME27B,aAAc,KAgBCtE,EAdnB1S,OAAO,CACHt7B,IAAK,GAaUguC,EAVnBke,UAAY,EAUOle,EATnBme,MAAQ,SAAAxpD,EAAA5D,KASWivC,EARnBvrB,YAAY,EAQOurB,EAPnBoe,WAAa,SAAAzpD,EAAA5D,KAOMivC,EANnBqe,cAAgB,SAAA1pD,EAAA5D,KAMGivC,EALnBse,OAAS,SAAA3pD,EAAA5D,KAKUivC,EAJnBvrB,YAAY,EAIOurB,EAHnBue,YAAc,SAAA5pD,EAAA5D,KAGKivC,EAFnBwe,eAAiB,SAAA7pD,EAAA5D,KAObgvC,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GANWC,aApCcL,EAAAiB,yDAgDxB6d,aACT,SAAAA,EAAA3d,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAiuD,GAAAve,EAAA1vC,KAAA2vC,EAAAse,GAAAltD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAA6tC,EADUld,gBADpBpB,EAAAqB,wGAKjBD,GACN,OAAAE,EAAAd,EAAAse,EAAA/rD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAytD,EAAvBld,uCAIAE,EAAAd,EAAAse,EAAA/rD,WAAA,WAAAlC,MAAAe,KAAAf,MAGWA,KAAXuwC,OASA,OAPAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GAEAvS,KAAA2wC,kBACA3wC,KAAA6wC,SACA7wC,KAAA4wC,SAEA5wC,sCAKA,IAAI0wC,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXn+B,EAQAA,EAAA7Q,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MAEX4Q,EAAA+F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAAA,EAAIm2B,EAAlD7yB,QACAzL,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,KAETiO,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BxP,EAAvC+F,OAEA,IAAIyH,EAAO5f,KAAA0wC,KAAXgB,YAEIlxB,EAAS,CAACpC,WAAW5Z,EAAA6L,IAAAuP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA6L,IAAOI,EAAP7N,OAAiB8tC,EAAAt+B,EAAnB7Q,UAAoC6c,WAAW5Z,EAAA4L,IAAAwP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA4L,IAAOK,EAAP7N,OAAiB8tC,EAAAt+B,EAAnB7Q,WAEhG+wC,GADU9xB,EAAA,GAAUA,EAAX,IAAb,GACuBwwB,EAAvB8C,aACAtzB,EAAA,IAAA8xB,EACA9xB,EAAA,IAAA8xB,EACA5B,EAAAt+B,EAAA+F,MAAAqI,OAAAA,GACGxgB,KAAAuwC,OAAH2B,QACI9/B,EAAA6+B,KAAAgE,UAAiBvE,EAAjB3tB,yCAOJ,IAAI2tB,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAAuwC,OAAXh+B,EAQAA,EAAAhR,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MAEX+Q,EAAA4F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAACm2B,EAAD3tB,OAA9C,IAEAxQ,EAAAnR,IAAQ,SAAA+C,GAAC,OAAIoO,EAAA4F,MAAQ5F,EAAAhR,MAAZ4C,KAEToO,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BrP,EAAvC4F,OAEGnY,KAAAuwC,OAAH2B,QACI3/B,EAAA0+B,KAAAgE,UAAiBvE,EAAjB7yB,OAIJ,IAAI+B,EAAO5f,KAAA0wC,KAAXgB,YAEIlxB,EAAS,CAACpC,WAAW5Z,EAAA6L,IAAAuP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA6L,IAAOI,EAAP7N,OAAiB8tC,EAAAn+B,EAAnBhR,UAAoC6c,WAAW5Z,EAAA4L,IAAAwP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA4L,IAAOK,EAAP7N,OAAiB8tC,EAAAn+B,EAAnBhR,WAEhG+wC,GADU9xB,EAAA,GAAUA,EAAX,IAAb,GACuBwwB,EAAvB8C,aAEAtzB,EAAA,IAAA8xB,EACA9xB,EAAA,IAAA8xB,EACA5B,EAAAn+B,EAAA4F,MAAAqI,OAjCKA,uCAsCL,IACIkwB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfn+B,EACI6+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAGyCiyC,YAAL,UAAA,IAHpCjyC,KAGwEiyC,YAApC,SAHpCjyC,KAGkGuwC,OAAA2B,OAAA,GAA0B,IAH5HlyC,KAGgIiyC,YAArH,eAAA9zB,KAAA,YACY,eAAiBuyB,EAAjB3tB,OADvB,KAGIovB,EAAJlB,EANAjxC,KAOAmzC,sBACIhB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAt+B,EAAX6+B,MAEAA,EAAAe,eAAoB,QAbpBhyC,KAa4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,aAAeuyB,EAAA7yB,MAAf,EAAA,IAAoC6yB,EAAA4B,OAApCC,OADvB,KAAAp0B,KAAA,KAAA,QAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,2CAQA,IACIiuB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfh+B,EACI0+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAGyCiyC,YAAL,UAAA,IAHpCjyC,KAGwEiyC,YAApC,SAHpCjyC,KAGkGuwC,OAAA2B,OAAA,GAA0B,IAH5HlyC,KAGgIiyC,YAAhI,eAEIE,EAAJlB,EALAjxC,KAMAmzC,sBACIhB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAn+B,EAAX0+B,MAEAA,EAAAe,eAAoB,QAZpBhyC,KAY4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,cAAeuyB,EAAA4B,OAAfzsB,KAAA,IAAsC6qB,EAAA3tB,OAAtC,EADvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,sCAOG+wB,GACH/C,EAAAd,EAAAse,EAAA/rD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAyzC,YACAzzC,KAAA0zC,YACA1zC,KAAAkuD,oDAIA,IAAInuD,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KAEI8B,GADO9B,EAAX9wB,KACiB7f,EAAAkyC,YAAjB,UACIkc,EAAYnuD,KAAAmuD,UAAiBpuD,EAAAkyC,YAAjC,QACAlyC,EAAAquD,oBAA2BruD,EAAAkyC,YAA3B,mBAEA,IAEIX,EAFiBvxC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAArDquD,qBAEYzuC,UAAyB,KAAzB6yB,GAAA5yB,KAA+C8wB,EAA3DgB,aAEI2c,EAAa/c,EAAA/xB,QAAAmiC,eAA6B,KAA9ClP,GACI8b,EAAgBD,EAAA/vC,OAAA,QAAAH,KAAA,QAApBgwC,GAGIzb,EAAa2b,EAAAnqC,MAAjBotB,GAEIid,EAAW7b,EAAA30B,OAAkB,IAAlBowC,GAAAj0B,MACJ,SAAA/1B,GAAC,OAAEA,EAAFvB,SAER4rD,EAAgBF,EAAApqC,MAApBqqC,GAEIE,EAAJD,EACIzuD,EAAJozC,sBACIsb,EAAYD,EAAZvqC,cAGJ,IAAI/F,EAAO1Z,EAAA0Z,OAAA9L,EACJs+B,EAAAt+B,EADIhR,KAAAmR,EAEJm+B,EAAAn+B,EAFPnR,KAIAqtD,EAAAtwC,KAAA,OAAA,QAAAA,KAAA,kBAAA,SAAAA,KAAA,iBAAA,SAAAA,KAAA,eAAA,KAAAA,KAAA,KAMgBne,KAAAuwC,OANhBud,QAAA3vC,KAAA,IAhCUD,GA4CVswC,EAAArsC,GAAA,wBAA0CniB,KAAAuwC,OAA1Cwd,aACAS,EAAArsC,GAAA,0BAA4CniB,KAAAuwC,OAA5Cyd,gBAEItd,EAAJ2C,YACIX,EAAAj6B,MAAA,SAA2Bi4B,EAA3B2C,aACK3C,EAAH1hC,OACFw/C,EAAA/1C,MAAA,SAA8Bi4B,EAA9B1hC,OAGJu/C,EAAAvqC,OAAA1hB,SACA,IAAIosD,EAAW1uD,KAAA0uD,SAAgB3uD,EAAAkyC,YAA/B,OAEI0c,EAAOjc,EAAA/yB,UAAqB,IAArB+uC,GAAA9uC,KACD,SAAAzb,GAAC,OAAEA,EAAFvB,SAKPgsD,EAHYD,EAAApvC,QAAAjB,OAAA,UAAAH,KAAA,QAAhBuwC,GAGgBxqC,MAAhByqC,GAEIE,EAAJD,EACI7uD,EAAJozC,sBACI0b,EAAQD,EAAR3qC,cAGJ4qC,EAAA1wC,KAAA,IAAgBpe,EAAAwwC,OAAhBmd,WAAAvvC,KAAA,KACgBuyB,EAAAt+B,EADhBhR,KAAA+c,KAAA,KAEgBuyB,EAAAn+B,EAFhBnR,KAAA+c,KAAA,KAGgBne,KAAAuwC,OAHhBod,OAKIjd,EAAJ4C,SACIsb,EAAAzsC,GAAA,YAA0B,SAAAhe,GACtB,IAAI06B,EAAO,IAAM6R,EAAAt+B,EAAA7Q,MAAN4C,GAAA,KAA+BusC,EAAAn+B,EAAAhR,MAA/B4C,GAAX,IACI4nB,EAAQhsB,EAAAwwC,OAAAzT,OAAsB/8B,EAAAwwC,OAAAzT,OAAAv7B,MAAAR,KAA8BhB,EAA9BwwC,OAAtBpsC,GAAZ,KACA,GAAI4nB,GAAJ,IAAaA,EAAa,CACtBA,EAAQ2kB,EAAAiI,aAAR5sB,GACA8S,GAAA,QACA,IAAIvd,EAAQvhB,EAAAwwC,OAAAzT,OAAZxb,MACAA,IACIud,GAAQvd,EAAR,MAEJud,GAAA9S,EAEJhsB,EAAAgwC,YAAAlR,KAZJ1c,GAAA,WAcoB,SAAAhe,GACZpE,EAAAwzC,gBAIZqb,EAAAzsC,GAAA,uBAAqCniB,KAAAuwC,OAArCqd,YACAgB,EAAAzsC,GAAA,yBAAuCniB,KAAAuwC,OAAvCsd,eAEInd,EAAJ2C,YACIX,EAAAj6B,MAAA,OAAyBi4B,EAAzB2C,aACK3C,EAAH1hC,OACF4/C,EAAAn2C,MAAA,OAAwBi4B,EAAxB1hC,OAGJ2/C,EAAA3qC,OAAA1hB,SAIAgvC,EAAAttB,OAAA1hB,wbC9SR7B,EAAA,WAAA,IACAy8C,EAAAz8C,EAAA,iBACA2uC,EAAA3uC,EAAA,WACAi3C,EAAAj3C,EAAA,sBACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEaquD,aAWT,SAAAA,EAAAvf,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAA8uD,IACftf,EAAAE,EAAA1vC,KAAA2vC,EAAAmf,GAAA/tD,KAAAf,QAVJ+uD,gBAAiB,EASEvf,EARnBwf,iBAAkB,EAQCxf,EAPnByf,WAAW,CACPhI,MADO,IAEPiI,cAAe,SAAAC,EAAAC,GAAA,OAA2C1X,EAAAW,gBAAAgX,OAAAF,EAA3CC,IACfE,mBAHOzuC,EAIP0uC,UAAW/qD,EAAGgrD,cAMdjgB,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAJWC,aAXe0N,EAAAuS,iDAqBzBC,aACT,SAAAA,EAAApf,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAA0vD,GAAAhgB,EAAA1vC,KAAA2vC,EAAA+f,GAAA3uD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAkvC,EADUve,gBADnB2M,EAAAoE,+FAKlB/Q,GACN,OAAAE,EAAAd,EAAA+f,EAAAxtD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAA8uD,EAAvBve,uCAIAE,EAAAd,EAAA+f,EAAAxtD,WAAA,WAAAlC,MAAAe,KAAAf,MACAA,KAAA2vD,oEAKA,IACIC,EADJ5vD,KACsB0wC,KAAtBqH,gBAKA,GANA/3C,KAGA0wC,KAAAmf,YAAA,GAGGD,GANH5vD,KAMsBuwC,OAAtBwe,eAAiD,CAC7C,IAAIe,EAAa9vD,KAAA+vD,eAAoB/vD,KAAA0wC,KAApB9wB,MAAjB,GAPJ5f,KAQI0wC,KAAAmf,YAAAntD,KAAAotD,GARJ9vD,KAWGuwC,OAAHye,iBACIhvD,KAAAgwD,oEAKc,IAAA9a,EAAAl1C,KACdD,EAAJC,KAEAD,EAAA2wC,KAAAgB,YAAAC,QAA8B,SAAA5lB,GAC1B,KAAGA,EAAAnpB,OAAA5B,OAAH,GAAA,CAIA,IAAI8uD,EAAa5a,EAAA6a,eAAoBhkC,EAApBnpB,OAAkCmpB,EAAnDvqB,KACAzB,EAAA2wC,KAAAmf,YAAAntD,KAAAotD,6CAIOltD,EAAQqtD,GACnB,IAAIlwD,EAAJC,KAEIq/B,EAASz8B,EAAAxB,IAAW,SAAA+C,GACpB,MAAO,CAACia,WAAWre,EAAA2wC,KAAAt+B,EAAA7Q,MAAZ4C,IAAmCia,WAAWre,EAAA2wC,KAAAn+B,EAAAhR,MAArD4C,OAKA+rD,EAAoBxY,EAAAW,gBAAA6X,iBAAxB7wB,GACI8wB,EAAuBzY,EAAAW,gBAAA8X,qBAA3BD,GAGIE,EAAU5rD,EAAAgiB,OAAA6Y,EAAkB,SAAAl7B,GAAC,OAAEA,EAAF,KAG7BksD,EAAa,CACb,CACIj+C,EAAGg+C,EADP,GAEI79C,EAAG49C,EAAqBC,EAAD,KAE3B,CACIh+C,EAAGg+C,EADP,GAEI79C,EAAG49C,EAAqBC,EAAD,MAI3BlyC,EAAO1Z,EAAA0Z,OAAAoyC,MACA9rD,EADA+rD,YAAAn+C,EAEJ,SAAAjO,GAAC,OAAIpE,EAAA2wC,KAAAt+B,EAAA+F,MAAkBhU,EAAtBiO,KAFGG,EAGJ,SAAApO,GAAC,OAAIpE,EAAA2wC,KAAAn+B,EAAA4F,MAAkBhU,EAAtBoO,KAEJvD,EAAQjP,EAAA2wC,KAAZ1hC,MAoBA,OAjBGogC,EAAAY,MAAAmI,WAAHnpC,GAGYA,EAFLpM,EAAA5B,SAAH,IAAoBivD,EACblwD,EAAAwwC,OAAHY,OACWpxC,EAAA2wC,KAAA4G,cAAP2Y,GAEQjhD,EAAMpM,EAAd,IANZ,QAYSoM,IAAH,IAAaihD,IACfjhD,EAbJ,SAkBO,CACH+c,MAAOkkC,IADJ,EAEH/xC,KAFGA,EAGHmyC,WAHGA,EAIHrhD,MAJGA,EAKHigD,WANajvD,KAAAwwD,kBAAAnxB,EAAA+wB,EAAAF,EAAjBC,8CAUc9wB,EAAQ+wB,EAASF,EAAiBC,GAChD,IAAIpwD,EAAJC,KAEII,GADQ8vD,EAAZhhD,EACQmwB,EAARr+B,QACImuD,EAAmBh/C,KAAAC,IAAA,EAAYhQ,EAAnC,GAGIgvD,EAAuB,GADf,EAAIrvD,EAAAwwC,OAAA0e,WAAhBhI,OACA,EACIiI,EAAgBnvD,EAAAwwC,OAAA0e,WAAAC,cAAAC,EAApBC,GAEI1R,EAAUre,EAAAj+B,IAAW,SAAA+C,GAAC,OAAEA,EAAF,KACtBssD,EAAQ/Y,EAAAW,gBAAA3vB,KAAZg1B,GACIgT,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EACAzxB,EAAAsS,QAAe,SAAA7wC,GACX,IAAIsR,EAAItR,EAAR,GACIyR,EAAIzR,EAAR,GAEA4vD,GAAUt+C,EAAVG,EACAo+C,GAAAv+C,EACAy+C,GAAAt+C,EACAq+C,GAAUx+C,EAAVA,EACA0+C,GAAUv+C,EAAVA,IASiB,SAAjB+8C,EAAiBl9C,GAAC,OAAG88C,EADX,SAAA98C,GAAC,OAAGjC,KAAA2C,KAAUi+C,EAAM5gD,KAAAe,IAASkB,EAATq+C,EAAA,GAAnBO,GACyBC,CAAlB7+C,GA0BN,SAAZ8+C,EAAY3+C,GAAC,OAAAA,EAjCjB,IAAI5R,EAAIuvD,EAARhhD,EACIhL,EAAIgsD,EAARhsD,EAEI8sD,EAAM5wD,GAAGA,EAAH,KAAY0wD,EAAQnwD,EAAR+vD,EAAiBxsD,EAAlB2sD,IAA2BzwD,EAAAwwD,EAAWD,EA9BUA,IA+BjEI,GAAOD,EAAUnwD,EAAV+vD,EAAmBxsD,EAApB2sD,IAA6BzwD,GAAGA,EA/B2B,IAuDjE+wD,GAAWf,EAAA,GAAWA,EAAZ,IAvDuD,EA0DjEgB,EAAuB,CAAChB,EAAD,GAAAe,EAAuBf,EAAvB,IAAAhvD,IAhBM,SAAAgR,GAC7B,IAAI89C,EAAmBC,EAAvB/9C,GACIi/C,EAAM/B,EAAVl9C,GAGA,MAAO,CACHA,EADGA,EAEHm/B,GAJW2e,EAAfmB,EAKIC,GAJSpB,EAAbmB,KAsBJ,MAAO,CACHE,KAPkB/sD,EAAA+sD,OAAAjB,MACfvwD,EAAAwwC,OAAA0e,WADeM,WAAAn9C,EAEf,SAAAjO,GAAC,OAAIpE,EAAA2wC,KAAAt+B,EAAA+F,MAAkBhU,EAAtBiO,KAFcm/B,GAGd,SAAAptC,GAAC,OAAI+sD,EAAUnxD,EAAA2wC,KAAAn+B,EAAA4F,MAAkBhU,EAAhCotC,OAHa+f,GAId,SAAAntD,GAAC,OAAI+sD,EAAUnxD,EAAA2wC,KAAAn+B,EAAA4F,MAAkBhU,EAAhCmtD,OAILjyB,OAAO+xB,kCAIR5d,GACH/C,EAAAd,EAAA+f,EAAAxtD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAwxD,wEAKA,IAAIzxD,EAAJC,KAEIyxD,EAA8B,KADHzxD,KAAAiyC,YAA/B,wBAGIyf,EAAa3xD,EAAAkyC,YAAjB,QAEI0f,EAAsB5xD,EAAAgyC,KAAA4P,eAAA8P,EAAsD,IAAI1xD,EAApF6xD,oBAC8BD,EAAA3f,eAAA,YAAA7zB,KAAA,KAA9BuzC,GAIA1f,eAAA,QAAA7zB,KAAA,QACmBpe,EAAA2wC,KADnB7yB,OAAAM,KAAA,SAEoBpe,EAAA2wC,KAFpB3tB,QAAA5E,KAAA,IAAA,GAAAA,KAAA,IAAA,GAMAwzC,EAAAxzC,KAAA,YAAsC,SAAAha,EAAA5D,GAAA,MAAS,QAAAmxD,EAAT,MAEtC,IAAIG,EAAkB7xD,KAAAiyC,YAAtB,cACI6f,EAAsB/xD,EAAAkyC,YAA1B,cACI8f,EAAqB,KAAzBF,EACI/B,EAAa6B,EAAAhyC,UAAAoyC,GAAAnyC,KACP7f,EAAA2wC,KADOmf,YACgB,SAAA1rD,EAAA5D,GAAA,OAAQ4D,EAAR4nB,QAG7BimC,EAAkBlC,EAAAvwC,QAAAmiC,eAAtBqQ,GACIE,EAAkBD,EAAA9tC,MAAtB4rC,GACI3B,EAAYpuD,EAAAkyC,YAAhB,QACA+f,EAAA1zC,OAAA,QAAAH,KAAA,QAAAgwC,GAAAhwC,KAAA,kBAAA,mBAKA,IAAID,EAAO+zC,EAAAl0C,OAAuB,QAAvBowC,GAAA11C,MAAA,SACU,SAAAvY,GAAC,OAAIA,EAAJ8O,QAElBkjD,EAAJh0C,EACIne,EAAJozC,sBACI+e,EAAQh0C,EAAR+F,cAGJiuC,EAAA/zC,KAAA,IAAgB,SAAAje,GAAC,OAAIA,EAAAge,KAAOhe,EAAXmwD,cAGjB2B,EAAA1zC,OAAA,QAAAH,KAAA,QAAA2zC,GAAA3zC,KAAA,kBAAA,mBAAA1F,MAAA,UAAA,OAQA,IAAI84C,EAAOU,EAAAl0C,OAAuB,QAAlC+zC,GAEIK,EAAJZ,EACIxxD,EAAJozC,sBACIgf,EAAQZ,EAARttC,cAEJkuC,EAAAh0C,KAAA,IAAgB,SAAAje,GAAC,OAAIA,EAAA+uD,WAAAsC,KAAkBrxD,EAAA+uD,WAAtB5vB,UACjB8yB,EAAA15C,MAAA,OAAoB,SAAAvY,GAAC,OAAIA,EAAJ8O,QACrB8gD,EAAA9rC,OAAA1hB,geCpRR,IAAA6sC,EAAA1uC,EAAA,6BACAy8C,EAAAz8C,EAAA,iBACA2uC,EAAA3uC,EAAA,WAEA+D,GADA/D,EAAA,2XACA4uC,CAAA5uC,EAAA,+/CAEa2xD,aA6BT,SAAAA,EAAA7iB,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAoyD,IACf5iB,EAAAE,EAAA1vC,KAAA2vC,EAAAyiB,GAAArxD,KAAAf,QA5BJ4vC,SAAUJ,EAAAK,eAAoB,qBA2BXL,EA1BnB1sC,UAAM+d,EA0Ba2uB,EAzBnB6iB,YAAc,GAyBK7iB,EAxBnB8iB,YAAc,IAwBK9iB,EAvBnBxiB,QAAS,GAuBUwiB,EAtBnB+iB,OAAO,EAsBY/iB,EArBnB0C,QAAQ,EAqBW1C,EApBnBO,aAAa,EAoBMP,EAnBnBjvB,WAAOM,EAmBY2uB,EAlBnBp9B,EAAE,CACEwP,OADF,SAEEzJ,MAAO,UAgBQq3B,EAdnBj9B,EAAE,CACEqP,OADF,OAEEzJ,MAAO,UAYQq3B,EAVnB1S,OAAO,CACHt7B,SADGqf,EAEHq+B,eAFG,GAUY1P,EANnB+N,UAAW,CACP/9B,OADO,GAEP/c,KAFO,GAGPlB,MAAO,SAAA4C,EAAAq5C,GAAA,OAAoBr5C,EAApBq5C,KAKPpO,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GAFeC,aA7BsB0N,EAAAuS,wDAqChC+C,aACT,SAAAA,EAAAliB,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAwyD,GAAA9iB,EAAA1vC,KAAA2vC,EAAA6iB,GAAAzxD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAAwyC,EADU7hB,gBADZpB,EAAAqB,wGAKzBD,GACN,OAAAE,EAAAd,EAAA6iB,EAAAtwD,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAoyD,EAAvB7hB,uCAKAE,EAAAd,EAAA6iB,EAAAtwD,WAAA,WAAAlC,MAAAe,KAAAf,MAEA,IACIsyC,EAAStyC,KAAA0wC,KAAb4B,OACItB,EAAOhxC,KAAXuwC,OACAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GACAvS,KAAA0wC,KAAA+hB,IAAc,CACVzjD,MADU,MAIdhP,KAAAg+C,iBAEAh+C,KAAA0wC,KAAA5tC,KAAiBkuC,EAAjBluC,KAGA,IAAI+a,EAAQmzB,EAAZnzB,MACIu+B,EAAiBhN,EAAAY,MAAAoM,eAAqBp8C,KAAAuwC,OAArB1yB,MAAwC7d,KAAxCi8C,mBAArB3J,GACI+J,EAAkBjN,EAAAY,MAAAqM,gBAAsBr8C,KAAAuwC,OAAtBxtB,OAA0C/iB,KAA1Ci8C,mBAAtB3J,GACAz0B,IACQ7d,KAAA0wC,KAAJ5tC,OACI9C,KAAA0wC,KAAA5tC,KAAkBqN,KAAAE,IAAS2gC,EAATshB,YAA2BniD,KAAAC,IAAS4gC,EAATqhB,YAA2BjW,EAAep8C,KAAA0wC,KAAA6M,UAAvFv8C,UAEJ6c,EAAQy0B,EAAAzsB,KAAcysB,EAAdrsB,MAA6BjmB,KAAA0wC,KAAA6M,UAAAv8C,OAA2BhB,KAAA0wC,KAAhE5tC,MAEA9C,KAAA0wC,KAAJ5tC,OACI9C,KAAA0wC,KAAA5tC,MAAkB+a,GAASy0B,EAAAzsB,KAAcysB,EAAxBrsB,QAAyCjmB,KAAA0wC,KAAA6M,UAA1Dv8C,QAGJ,IAAI+hB,EAAJlF,EAkBA,OAhBIkF,EADJA,GACIs5B,EAGJr8C,KAAA0wC,KAAA7yB,MAAkBA,EAAQy0B,EAARzsB,KAAsBysB,EAAxCrsB,MACAjmB,KAAA0wC,KAAA3tB,OAAmBA,EAASuvB,EAAT7Y,IAAsB6Y,EAAzCC,OAGAvyC,KAAA0wC,KAAAnwB,MAAkBywB,EAAlBzwB,WAEAM,IAAG7gB,KAAA0wC,KAAAnwB,QACCvgB,KAAA0wC,KAAAnwB,MAAkBvgB,KAAA0wC,KAAA5tC,KAAlB,IAGJ9C,KAAA6wC,SACA7wC,KAAA4wC,SAEA5wC,8CAKA,IAAI++C,EAAgB/+C,KAAAuwC,OAApBgN,UAEI39B,EAAO5f,KAAA0wC,KAAXgB,YACIhB,EAAO1wC,KAAX0wC,KACAA,EAAAsO,iBAAA,GACAtO,EAAA6M,UAAiBwB,EAAjBt8C,KACIiuC,EAAD6M,WAAoB7M,EAAA6M,UAAvBv8C,SAEI0vC,EAAA6M,UAAiB39B,EAAA5e,OAAcouC,EAAAY,MAAAiP,eAAqBr/B,EAAA,GAArBhd,OAAqC5C,KAAAuwC,OAAAzT,OAArCt7B,IAA6DxB,KAAAuwC,OAA3E2O,eAAjB,IAGJxO,EAAAlxB,OAAA,GACAkxB,EAAAyO,gBAAA,GACAzO,EAAA6M,UAAA5L,QAAuB,SAAA6L,EAAAnnC,GACnB,IAAIhG,EAAM7L,EAAA6L,IAAAuP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA6L,IAAOI,EAAP7N,OAAiB,SAAAuB,GAAC,OAAE46C,EAAAx9C,MAAA4C,EAAFq5C,OACxCptC,EAAM5L,EAAA4L,IAAAwP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA4L,IAAOK,EAAP7N,OAAiB,SAAAuB,GAAC,OAAE46C,EAAAx9C,MAAA4C,EAAFq5C,OAC5C9M,EAAAsO,iBAAAxB,GAAqC,CAAAntC,EAArCD,GACA,IAAIkR,EAAJk8B,EACGuB,EAAAv/B,QAAwBu/B,EAAAv/B,OAAAxe,OAA3BqV,IAEIiL,EAAQy9B,EAAAv/B,OAARnJ,IAEJq6B,EAAAlxB,OAAA9c,KAAA4e,GACAovB,EAAAyO,gBAAA3B,GAAAl8B,IAGJovB,EAAAgiB,SAAA,oCAKA,IAAIhiB,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAXuwC,OAGAn+B,EAAA7Q,MAAUyvC,EAAAuM,UAAVh8C,MACA6Q,EAAA+F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAA5+B,EAAlB+F,OAAAoC,MAAsC,CAACy2B,EAAAhkB,QAAD,EAAmB0jB,EAAA5tC,KAAYkuC,EAAAhkB,QAA/E,IACA5a,EAAAhR,IAAQ,SAAA+C,EAAAwuD,GAAA,OAAiBvgD,EAAA+F,MAAQ/F,EAAA7Q,MAAA4C,EAAzBwuD,KAERvgD,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAA5+B,EAAjBwP,OAAgCxP,EAAhC+F,OAAAoI,MAA+CmwB,EAAxDnwB,OACAnO,EAAA6+B,KAAAgE,SAAgBvE,EAAA5tC,KAAY4tC,EAAA6M,UAA5Bv8C,yCAMA,IAAI0vC,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAXuwC,OAEAh+B,EAAAhR,MAAUyvC,EAAAuM,UAAVh8C,MACAgR,EAAA4F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAAz+B,EAAlB4F,OAAAoC,MAAsC,CAAEm2B,EAAA5tC,KAAYkuC,EAAAhkB,QAAd,EAAgCgkB,EAAAhkB,QAAhF,IAEAza,EAAAnR,IAAQ,SAAA+C,EAAAwuD,GAAA,OAAiBpgD,EAAA4F,MAAQ5F,EAAAhR,MAAA4C,EAAzBwuD,KACRpgD,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAAz+B,EAAjBqP,OAAgCrP,EAAhC4F,OAAAoI,MAA+CmwB,EAAxDnwB,OACAhO,EAAA0+B,KAAAgE,UAAiBvE,EAAD5tC,KAAa4tC,EAAA6M,UAA7Bv8C,uCAGIwyC,GACJ/C,EAAAd,EAAA6iB,EAAAtwD,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GAEA,IAAIzzC,EAAJC,KACII,EAAIL,EAAA2wC,KAAA6M,UAARv8C,OACIgwC,EAAOhxC,KAAXuwC,OAEIqiB,EAAY7yD,EAAAkyC,YAAhB,QAII4gB,EAAgB,MAHHD,EAAjB,MAGoB,IAApBA,EACIE,EAAgB,MAHHF,EAAjB,MAGoB,IAApBA,EAEIG,EAAgBhzD,EAAAkyC,YAApB,aACI+gB,EAAQjzD,EAAAgyC,KAAApyB,UAAAkzC,GAAAjzC,KACF7f,EAAA2wC,KADV6M,WAGiByV,EAAAzzC,QAAAmiC,eAAAmR,GAAAj0B,QAAAm0B,GACY/hB,EADZkB,QAAAhuB,MAAjB8uC,GAIA70C,KAAA,YAA6B,SAAAha,EAAA5D,GAAA,MAAU,cAAgBH,EAAAG,EAAD,GAAcR,EAAA2wC,KAA7B5tC,KAAV,QAA7BxB,KACU,SAAA6C,GACFpE,EAAA2wC,KAAAt+B,EAAA+F,MAAAqI,OAAyBzgB,EAAA2wC,KAAAsO,iBAAzB76C,IACA,IAAI8sC,EAAOzsC,EAAAuZ,OAAX/d,MACID,EAAJozC,sBACIlC,EAAOA,EAAPhtB,cAEJgtB,EAAAlwC,KAAUhB,EAAA2wC,KAAAt+B,EAAV6+B,QAIR+hB,EAAAhvC,OAAA1hB,SAEA,IAAI2wD,EAAQlzD,EAAAgyC,KAAApyB,UAAAmzC,GAAAlzC,KACF7f,EAAA2wC,KADV6M,WAEI2V,EAAaD,EAAA1zC,QAAAmiC,eAAAoR,GAAA5uC,MAAjB+uC,GACAC,EAAAt0B,QAAAm0B,GAAmC/hB,EAAnCkB,QAAA/zB,KAAA,YACuB,SAAAha,EAAA5D,GAAA,MAAU,eAAiBA,EAAIR,EAAA2wC,KAArB5tC,KAAV,MACvBowD,EAAA5xD,KAAgB,SAAA6C,GACZpE,EAAA2wC,KAAAn+B,EAAA4F,MAAAqI,OAAyBzgB,EAAA2wC,KAAAsO,iBAAzB76C,IACA,IAAI8sC,EAAOzsC,EAAAuZ,OAAX/d,MACID,EAAJozC,sBACIlC,EAAOA,EAAPhtB,cAEJgtB,EAAAlwC,KAAUhB,EAAA2wC,KAAAn+B,EAAV0+B,QAIJgiB,EAAAjvC,OAAA1hB,SAEA,IAAIk+C,EAAazgD,EAAAkyC,YAAjB,QACIpwB,EAAO9hB,EAAAgyC,KAAApyB,UAAoB,IAApB6gC,GAAA5gC,KACD7f,EAAAk6C,MAAAkZ,MAAiBpzD,EAAA2wC,KAAjB6M,UAAsCx9C,EAAA2wC,KADhD6M,YAGIx5B,EAAalC,EAAAtC,QAAAmiC,eAA4B,KAA7ClB,GACAz8B,EAAAxC,OAAiB,SAAApd,GAAC,OAAIA,EAAA5D,IAAQ4D,EAAZmiB,IAAlBhI,OAAA,QAEA,IAAI80C,EAAYrvC,EAAAG,MAAhBrC,GACAuxC,EAAAj1C,KAAA,YAA4B,SAAAha,GAAC,MAAI,cAAgB/D,EAAI+D,EAAJ5D,EAAD,GAAgBR,EAAA2wC,KAA/B5tC,KAAA,IAAsDqB,EAAAmiB,EAAMvmB,EAAA2wC,KAA5D5tC,KAAJ,MAE1BkuC,EAAHuhB,OACIvyD,KAAAqzD,UAAAD,GAIJA,EAAA9xD,KAWA,SAAAR,GACI,IAAI4vC,EAAO3wC,EAAX2wC,KACAA,EAAAgiB,SAAAhwD,KAAA5B,GACA,IAAI+gB,EAAOrd,EAAAuZ,OAAX/d,MAEA0wC,EAAAt+B,EAAA+F,MAAAqI,OAAoBkwB,EAAAsO,iBAAsBl+C,EAA1CsR,IACAs+B,EAAAn+B,EAAA4F,MAAAqI,OAAoBkwB,EAAAsO,iBAAsBl+C,EAA1CyR,IAEA,IAAI+gD,EAAcvzD,EAAAkyC,YAAlB,SACApwB,EAAAmwB,eAAoB,QAApBshB,GAAAn1C,KAAA,QAAAm1C,GAAAn1C,KAAA,IAEe6yB,EAAAhkB,QAFf,GAAA7O,KAAA,IAGe6yB,EAAAhkB,QAHf,GAAA7O,KAAA,QAImBuyB,EAAA5tC,KAAYkuC,EAJ/BhkB,SAAA7O,KAAA,SAKoBuyB,EAAA5tC,KAAYkuC,EALhChkB,SAOAlsB,EAAAk5B,OAAW,WAEP,IAAIu5B,EAAJvzD,KACIwyC,EAAazyC,EAAAkyC,YAAjB,SAGIX,EAAQzvB,EAAAlC,UAAe,KAAf6yB,GAAA5yB,KAAqC7f,EAAA2wC,KAAjDgB,aAEIgB,EAAapB,EAAA/xB,QAAAmiC,eAA6B,KAA7BlP,GAAAtuB,MAAjBotB,GAEIqd,EAAOjc,EAAA/yB,UAAA,UAAAC,KACD,SAAAzb,GAAC,OAAEA,EAAFvB,SAEPgsD,EAAYD,EAAApvC,QAAAjB,OAAA,UAAA4F,MAAhByqC,GAEIE,EAAJD,EACI7uD,EAAJozC,sBACI0b,EAAQD,EAAR3qC,cAGJ4qC,EAAA1wC,KAAA,KAAiB,SAAAha,GAAA,OAAOusC,EAAAt+B,EAAAhR,IAAA+C,EAAcovD,EAArBnhD,KAAjB+L,KAAA,KACgB,SAAAha,GAAA,OAAOusC,EAAAn+B,EAAAnR,IAAA+C,EAAcovD,EAArBhhD,KADhB4L,KAAA,IAEepe,EAAAwwC,OAFfmd,WAKIhd,EAAJ2C,YACIX,EAAAj6B,MAAA,OAAyBi4B,EAAzB2C,aACK3C,EAAH1hC,OACF4/C,EAAAn2C,MAAA,OAAwBi4B,EAAxB1hC,OAIA0hC,EAAJ4C,SACIsb,EAAAzsC,GAAA,YAA0B,SAAAhe,GAEtB,IAAI06B,EAAO,IAAM6R,EAAAt+B,EAAA7Q,MAAA4C,EAAgBovD,EAAtBnhD,GAAA,KAA0Cs+B,EAAAn+B,EAAAhR,MAAA4C,EAAgBovD,EAA1DhhD,GAAX,IACIwZ,EAAQhsB,EAAAwwC,OAAAzT,OAAqB/8B,EAAAwwC,OAAAzT,OAAAv7B,MAAAR,KAA8BhB,EAA9BwwC,OAArBpsC,GAAZ,KACA,GAAI4nB,GAAJ,IAAaA,EAAa,CACtBA,EAAQ2kB,EAAAiI,aAAR5sB,GACA8S,GAAA,QACA,IAAIvd,EAAQvhB,EAAAwwC,OAAAzT,OAAZxb,MACAA,IACIud,GAAQvd,EAAR,MAEJud,GAAA9S,EAEJhsB,EAAAgwC,YAAAlR,KAbJ1c,GAAA,WAeoB,SAAAhe,GACZpE,EAAAwzC,gBAIZob,EAAA3qC,OAAA1hB,SACAgvC,EAAAttB,OAAA1hB,UAEJxB,EAAAk5B,WAhFJo5B,EAAAr1C,OAAA,QAAAI,KAAA,IACe6yB,EADfhkB,SAAA7O,KAAA,IAEe6yB,EAFfhkB,SAAA7O,KAAA,KAAA,SAAAP,KAIW,SAAAzZ,GAAC,OAAIpE,EAAA2wC,KAAAyO,gBAA0Bh7C,EAA9BiO,KAEZyP,EAAAmC,OAAA1hB,2CA+EMuf,GACN,IAAI9hB,EAAJC,KACIwzD,EAAczzD,EAAA2wC,KAAA8iB,YAAyBzzD,EAAAkyC,YAA3C,UACIsgB,EAAQ/tD,EAAA+tD,QAAApwC,GAAA,QAaZ,SAAArhB,GACQf,EAAA2wC,KAAA+iB,YAAJzzD,OACID,EAAA2zD,aACA3zD,EAAA2wC,KAAAt+B,EAAA+F,MAAAqI,OAAyBzgB,EAAA2wC,KAAAsO,iBAA2Bl+C,EAApDsR,IACArS,EAAA2wC,KAAAn+B,EAAA4F,MAAAqI,OAAyBzgB,EAAA2wC,KAAAsO,iBAA2Bl+C,EAApDyR,IACAxS,EAAA2wC,KAAA+iB,UAAAzzD,KACAD,EAAA2wC,KAAA6hB,MAAAA,KAnBIpwC,GAAA,QAwBZ,SAAArhB,GACI,IAAI2P,EAAIjM,EAAAizB,MAARyF,UACA,IAAAzsB,EAAM,OACN,IAAItQ,EAAIsQ,EAAArP,IAAM,SAAAojB,GAAC,MAAG,CAACzkB,EAAA2wC,KAAAt+B,EAAA+F,MAAAiI,OAAyBoE,EAA1B,IAAiCzkB,EAAA2wC,KAAAn+B,EAAA4F,MAAAiI,OAAyBoE,EAA7D,OAGfzkB,EAAAgyC,KAAApyB,UAAA,UAAAif,QAAA40B,EAAmD,SAAArvD,GAC/C,IAAIiO,EAAIgM,WAAWja,EAAErD,EAArBsR,IACIG,EAAI6L,WAAWja,EAAErD,EADrByR,IAGA,OAAOpS,EAAA,GAAA,GAAAiS,GAAeA,EAAIjS,EAAA,GAAnB,IACAA,EAAA,GAAA,GADAoS,GACeA,EAAIpS,EAAA,GAD1B,OAlCIgiB,GAAA,MAuCZ,WACS3d,EAAAizB,MAALyF,WAAyBn9B,EAAAgyC,KAAApyB,UAAoB,IAApB6zC,GAAA50B,QAAA40B,GAAA,KAjC7BjB,EAAA/rC,OAAa,CAAC,CAAA,EAAD,GAAS,CAACzmB,EAAA2wC,KAAD5tC,KAAiB/C,EAAA2wC,KAAvC5tC,QACA+e,EAAAmwB,eAAA,qBAAAjxC,KAAAwxD,GAEAxyD,EAbY2zD,kDAgDZ1zD,KACI0wC,KAAJ+iB,YADAzzD,KAKA0wC,KAAA6hB,MAAAoB,KAAqBnvD,EAAAuZ,OALrB/d,KAK+B0wC,KAA/B+iB,WAAA,MALAzzD,KAMA+xC,KAAApyB,UAAoB,IANpB3f,KAMwB0wC,KAAxB8iB,aAAA50B,QANA5+B,KAMuD0wC,KAAvD8iB,aAAA,GANAxzD,KAOA0wC,KAAA+iB,UAAA,geCvXR,IAAAtkB,EAAA1uC,EAAA,6BACA2uC,EAAA3uC,EAAA,WACA+D,iXAAA6qC,CAAA5uC,EAAA,8/CAEagvD,aA+BT,SAAAA,EAAAlgB,GAAmB,IAAAC,EAAA,OAAAC,EAAAzvC,KAAAyvD,IACfjgB,EAAAE,EAAA1vC,KAAA2vC,EAAA8f,GAAA1uD,KAAAf,QA9BJ4vC,SAAUJ,EAAAK,eAAoB,cA6BXL,EA5BnB0C,QAAQ,EA4BW1C,EA3BnBO,aAAa,EA2BMP,EAzBnBp9B,EAAE,CACEqQ,MADF,GAEEjhB,IAFF,EAGED,MAAO,SAAA4C,EAAA3C,GAAA,OAAY2C,EAAZ3C,IACPogB,OAJF,SAKEzJ,MALF,SAME27B,aAAc,KAmBCtE,EAjBnBj9B,EAAE,CACEkQ,MADF,GAEEjhB,IAFF,EAGED,MAAO,SAAA4C,EAAA3C,GAAA,OAAY2C,EAAZ3C,IACPogB,OAJF,OAKEzJ,MALF,SAME27B,aAAc,KAWCtE,EATnB1S,OAAO,CACHt7B,IAAK,GAQUguC,EANnBke,UAAY,EAMOle,EALnBme,MAAQ,SAAAxpD,EAAA5D,KAKWivC,EAJnBvrB,YAAY,EAIOurB,EAHnBoe,WAAa,SAAAzpD,EAAA5D,KAGMivC,EAFnBqe,cAAgB,SAAA1pD,EAAA5D,KAOZgvC,GACIH,EAAAY,MAAAG,WAAAD,EAAAV,GAAAD,GANWC,aA/BgBL,EAAAiB,2DA2C1BkR,aACT,SAAAA,EAAAhR,EAAA1wB,EAAA2wB,GAA+C,OAAAd,EAAAzvC,KAAAshD,GAAA5R,EAAA1vC,KAAA2vC,EAAA2R,GAAAvgD,KAAAf,KAAAswC,EAAA1wB,EACV,IAAA6vC,EADUlf,gBADlBpB,EAAAqB,wGAKnBD,GACN,OAAAE,EAAAd,EAAA2R,EAAAp/C,WAAA,YAAAlC,MAAAe,KAAAf,KAAuB,IAAAyvD,EAAvBlf,uCAIAE,EAAAd,EAAA2R,EAAAp/C,WAAA,WAAAlC,MAAAe,KAAAf,MAGWA,KAAXuwC,OASA,OAPAvwC,KAAA0wC,KAAAt+B,EAAA,GACApS,KAAA0wC,KAAAn+B,EAAA,GAEAvS,KAAA2wC,kBACA3wC,KAAA6wC,SACA7wC,KAAA4wC,SAEA5wC,sCAKA,IAAI0wC,EAAO1wC,KAAX0wC,KACIt+B,EAAIs+B,EAARt+B,EACI4+B,EAAOhxC,KAAAuwC,OAAXn+B,EAQAA,EAAA7Q,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MAEX4Q,EAAA+F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAAA,EAAIm2B,EAAlD7yB,QACAzL,EAAAhR,IAAQ,SAAA+C,GAAC,OAAIiO,EAAA+F,MAAQ/F,EAAA7Q,MAAZ4C,KAETiO,EAAA6+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BxP,EAAvC+F,OAEA,IAAIyH,EAAO5f,KAAA0wC,KAAXgB,YAEIlxB,EAAS,CAACpC,WAAW5Z,EAAA6L,IAAAuP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA6L,IAAOI,EAAP7N,OAAiB8tC,EAAAt+B,EAAnB7Q,UAAoC6c,WAAW5Z,EAAA4L,IAAAwP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA4L,IAAOK,EAAP7N,OAAiB8tC,EAAAt+B,EAAnB7Q,WAEhG+wC,GADU9xB,EAAA,GAAUA,EAAX,IAAb,GACuBwwB,EAAvB8C,aACAtzB,EAAA,IAAA8xB,EACA9xB,EAAA,IAAA8xB,EACA5B,EAAAt+B,EAAA+F,MAAAqI,OAAAA,GACGxgB,KAAAuwC,OAAH2B,QACI9/B,EAAA6+B,KAAAgE,UAAiBvE,EAAjB3tB,yCAOJ,IAAI2tB,EAAO1wC,KAAX0wC,KACIn+B,EAAIm+B,EAARn+B,EACIy+B,EAAOhxC,KAAAuwC,OAAXh+B,EAQAA,EAAAhR,MAAU,SAAA4C,GAAC,OAAI6sC,EAAAzvC,MAAA4C,EAAc6sC,EAAlBxvC,MAEX+Q,EAAA4F,MAAUi3B,EAAAY,MAAAoB,YAAkBJ,EAAlB74B,OAAAoC,MAAoC,CAACm2B,EAAD3tB,OAA9C,IAEAxQ,EAAAnR,IAAQ,SAAA+C,GAAC,OAAIoO,EAAA4F,MAAQ5F,EAAAhR,MAAZ4C,KAEToO,EAAA0+B,KAAS7B,EAAAY,MAAAkB,WAAiBF,EAAjBpvB,OAA8BrP,EAAvC4F,OAEGnY,KAAAuwC,OAAH2B,QACI3/B,EAAA0+B,KAAAgE,UAAiBvE,EAAjB7yB,OAIJ,IAAI+B,EAAO5f,KAAA0wC,KAAXgB,YAEIlxB,EAAS,CAACpC,WAAW5Z,EAAA6L,IAAAuP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA6L,IAAOI,EAAP7N,OAAiB8tC,EAAAn+B,EAAnBhR,UAAoC6c,WAAW5Z,EAAA4L,IAAAwP,EAAa,SAAAnP,GAAC,OAAEjM,EAAA4L,IAAOK,EAAP7N,OAAiB8tC,EAAAn+B,EAAnBhR,WAEhG+wC,GADU9xB,EAAA,GAAUA,EAAX,IAAb,GACuBwwB,EAAvB8C,aAEAtzB,EAAA,IAAA8xB,EACA9xB,EAAA,IAAA8xB,EACA5B,EAAAn+B,EAAA4F,MAAAqI,OAjCKA,uCAsCL,IACIkwB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfn+B,EACI6+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAGyCiyC,YAAL,UAAA,IAHpCjyC,KAGwEiyC,YAApC,SAHpCjyC,KAGkGuwC,OAAA2B,OAAA,GAA0B,IAH5HlyC,KAGgIiyC,YAArH,eAAA9zB,KAAA,YACY,eAAiBuyB,EAAjB3tB,OADvB,KAGIovB,EAAJlB,EANAjxC,KAOAmzC,sBACIhB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAt+B,EAAX6+B,MAEAA,EAAAe,eAAoB,QAbpBhyC,KAa4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,aAAeuyB,EAAA7yB,MAAf,EAAA,IAAoC6yB,EAAA4B,OAApCC,OADvB,KAAAp0B,KAAA,KAAA,QAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,2CAQA,IACIiuB,EADJ1wC,KACA0wC,KACIoB,EAAW9xC,KAAAuwC,OAAfh+B,EACI0+B,EAHJjxC,KAGW+xC,KAAAC,eAAyB,KAHpChyC,KAGyCiyC,YAAL,UAAA,IAHpCjyC,KAGwEiyC,YAApC,SAHpCjyC,KAGkGuwC,OAAA2B,OAAA,GAA0B,IAH5HlyC,KAGgIiyC,YAAhI,eAEIE,EAAJlB,EALAjxC,KAMAmzC,sBACIhB,EAAQlB,EAAAhtB,aAAAmuB,KAAuB5tC,EAA/B6tC,eAGJF,EAAApxC,KAAW2vC,EAAAn+B,EAAX0+B,MAEAA,EAAAe,eAAoB,QAZpBhyC,KAY4BiyC,YAA5B,UAAA9zB,KAAA,YACuB,cAAeuyB,EAAA4B,OAAfzsB,KAAA,IAAsC6qB,EAAA3tB,OAAtC,EADvB,gBAAA5E,KAAA,KAAA,OAAA1F,MAAA,cAAA,UAAAmF,KAIUk0B,EAJVrvB,sCAOG+wB,GACH/C,EAAAd,EAAA2R,EAAAp/C,WAAA,SAAAlC,MAAAe,KAAAf,KAAAwzC,GACAxzC,KAAAyzC,YACAzzC,KAAA0zC,YAEA1zC,KAAA4zD,kDAIA,IAAI7zD,EAAJC,KACI0wC,EAAO3wC,EAAX2wC,KAEI8B,GADO9B,EAAX9wB,KACiB7f,EAAAkyC,YAAjB,UACIyc,EAAW1uD,KAAA0uD,SAAgB3uD,EAAAkyC,YAA/B,OACAlyC,EAAA6xD,mBAA0B7xD,EAAAkyC,YAA1B,kBAEA,IAEIX,EAFgBvxC,EAAAgyC,KAAAC,eAAyB,KAAOjyC,EAApD6xD,oBAEYjyC,UAAwB,KAAxB6yB,GAAA5yB,KAA8C8wB,EAA1DgB,aAIIgB,EAFapB,EAAA/xB,QAAAmiC,eAA6B,KAA9ClP,GAEiBtuB,MAAjBotB,GAEIqd,EAAOjc,EAAA/yB,UAAqB,IAArB+uC,GAAA9uC,KACD,SAAAzb,GAAC,OAAEA,EAAFvB,SAKPgsD,EAHYD,EAAApvC,QAAAjB,OAAA,UAAAH,KAAA,QAAhBuwC,GAGgBxqC,MAAhByqC,GAEIE,EAAJD,EACI7uD,EAAJozC,sBACI0b,EAAQD,EAAR3qC,cAGJ4qC,EAAA1wC,KAAA,IAAgBpe,EAAAwwC,OAAhBmd,WAAAvvC,KAAA,KACgBuyB,EAAAt+B,EADhBhR,KAAA+c,KAAA,KAEgBuyB,EAAAn+B,EAFhBnR,KAAA+c,KAAA,KAGgBne,KAAAuwC,OAHhBod,OAKIjd,EAAJ4C,SACIsb,EAAAzsC,GAAA,YAA0B,SAAAhe,GACtB,IAAI06B,EAAO,IAAM6R,EAAAt+B,EAAA7Q,MAAN4C,GAAA,KAA+BusC,EAAAn+B,EAAAhR,MAA/B4C,GAAX,IACI4nB,EAAQhsB,EAAAwwC,OAAAzT,OAAsB/8B,EAAAwwC,OAAAzT,OAAAv7B,MAAAR,KAA8BhB,EAA9BwwC,OAAtBpsC,GAAZ,KACA,GAAI4nB,GAAJ,IAAaA,EAAa,CACtBA,EAAQ2kB,EAAAiI,aAAR5sB,GACA8S,GAAA,QACA,IAAIvd,EAAQvhB,EAAAwwC,OAAAzT,OAAZxb,MACAA,IACIud,GAAQvd,EAAR,MAEJud,GAAA9S,EAEJhsB,EAAAgwC,YAAAlR,KAZJ1c,GAAA,WAcoB,SAAAhe,GACZpE,EAAAwzC,gBAIZqb,EAAAzsC,GAAA,uBAAqCniB,KAAAuwC,OAArCqd,YACAgB,EAAAzsC,GAAA,yBAAuCniB,KAAAuwC,OAAvCsd,eAEInd,EAAJ2C,YACIX,EAAAj6B,MAAA,OAAyBi4B,EAAzB2C,aACK3C,EAAH1hC,OACF4/C,EAAAn2C,MAAA,OAAwBi4B,EAAxB1hC,OAGJ2/C,EAAA3qC,OAAA1hB,SACAgvC,EAAAttB,OAAA1hB,uLCvJD,SAAAuxD,EAAAC,GACN,GAAID,GAAA,GAAW1jD,KAAA+W,IAAA2sC,GAAe1jD,KAAA+W,IAAS6sC,EAAxBF,KAAf,EACC,KAAA,kBAED,GAAIC,GAAA,GAAJ,GAAeA,EACd,KAAA,kBAED,OAAOE,EAAiBC,EAAMJ,EAAD,EAAOC,EAApC,KA1BD,IAAII,EAAJ,EAkJA,SAAAC,EAAAL,GACC,IAAIM,GAAMjkD,KAAAuL,IAAS,EAAAo4C,GAAU,EAA7BA,IACIO,EAAKlkD,KAAA2C,KACRshD,GAAM,YACFA,GAAM,aACLA,GACAA,GACCA,GAAM,eACNA,GAAM,eACPA,GACEA,GAAM,eACPA,GACEA,GAAM,eAVf,eAWQA,GAFK,iBAFD,iBAHD,gBADC,mBAWZ,MAFA,GAAIN,IACWO,GAAAA,GACfA,EA6BD,SAAAJ,EAAAJ,EAAAC,GAEC,GAAI,GAAAA,GAAWA,GAAf,EACC,KAAA,kBAGD,GAAA,IAAIA,EACH,OAAA,EACM,GAAIA,EAAJ,GACN,OAASG,EAAKJ,EAAK,EAAnBC,GAGD,IAcCQ,EAdGC,EAAKJ,EAATL,GACIU,EAAMrkD,KAAAe,IAAAqjD,EAAV,GAUIF,EAAKE,GAAM,IARLC,EAAD,GAAT,KACW,EAAAA,EAAD,IAAAA,EAAD,GAAT,OACY,EAAAA,EAAD,IAAAA,EAAD,IAAAA,EAAD,IAAT,SACa,GAAAA,EAAD,KAAAA,EAAD,MAAAA,EAAD,MAAAA,EAAD,KAAT,WAEc,GAAAA,EAAD,KAAAA,EAAD,KAAAA,EAAD,MAAAA,EAAD,KAAAA,EAAD,OAAT,OAGqCX,GAANA,GAANA,GAANA,GAAnBA,GAEA,GAAIA,GAAM1jD,KAAAe,IAAS2e,EAATikC,GAAA,GAAV,EAEC,EAAG,CACF,IACIW,EAAMZ,EAAV,EACIa,GAFMC,EAASd,EAAnBQ,GAEaP,GACV3jD,KAAAqJ,KAAUi7C,EAAMtkD,KAAAuL,IAAS+4C,GAAOZ,EAAKQ,EAA3BA,IACTlkD,KAAAuL,IAASm4C,EAAAY,EAAA,EAAStkD,KADTmB,IAAA,GAER,EAAAmjD,EAAQ,EAATZ,GAFQ,GADZ,GAIAQ,GAAAK,EACAJ,EAASM,EAAkBF,EAASvkD,KAAA+W,IAAS6sC,EAAQlkC,EAAM1f,KAAA+W,IAANmtC,IAArD,WACSA,GATV,GASkBC,GAEnB,OAAAD,EAGD,SAAAM,EAAAd,EAAAQ,GAQC,IANA,IAAAQ,EAEIC,EAAK3kD,KAAA0C,MAAWwhD,EAAKlkD,KAAA2C,KAAhB+gD,GAAT,GACIkB,EAAK5kD,KAAAe,IAASf,KAAA+B,IAAT4iD,GAAT,GACIV,EAAJ,EAESY,EAAKnB,EAAd,EAAA,GAAoBmB,EAASA,GAA7B,EACCZ,EAAK,GAAKY,EAAD,GAAAA,EAAAD,EAATX,EAUD,OAAOhkD,EAAG,EAAI,GAPVyjD,EAAA,GAAJ,GACCgB,EAAK1kD,KAAAgC,IAAA2iD,GAAL,EACA,KAEAD,EAAK,GAAChB,EAAD,EAAgB1jD,KAAAgC,IAAA2iD,GAAa3kD,KAAA+B,IAAb4iD,GAA0B3kD,KAA/CmB,GACI,GAAKwjD,EAAG3kD,KAAZmB,KAEsBujD,EAAvBT,GAuHD,SAAAvkC,EAAAgkC,GACC,OAAO1jD,KAAAuL,IAAAm4C,GAAe1jD,KAAAuL,IAAtB,IAGD,SAAAtL,EAAA,GAEC,IADA,IAAI6kD,EADL,EAEkB10D,EAAI0P,UAArBjP,OAAuCT,IACpB00D,EAHpB,IAIwBA,EAJxB,GAMC,OAAAA,EAgBD,SAAAjB,EAAAK,GACC,OAAAA,EACQO,EAAkBP,EAN3B,SAAAA,GACC,OAAOlkD,KAAA+W,IAAS6sC,EAAQlkC,EAAM1f,KAAA+W,IAANmtC,IAAxBH,IAK+BroC,CAA9BwoC,IAEA,IAIF,SAAAO,EAAAP,EAAAP,GAGQ,OAFAO,GAAUlkD,KAAAe,IAAA,GAAV4iD,IACAO,EAAKlkD,KAAAG,MAAL+jD,IACYlkD,KAAAe,IAAA,GAAZ4iD,GAGR,SAAAC,EAAAiB,GACQ,OAAA,EAAIA,EACW7kD,KAAAkE,MADf2gD,GAGe7kD,KAAAwW,KAAPquC,0CCnfhB,IAAAE,EAAAz0D,EAAA,8BAEI00D,EAAKz1D,EAAAD,QAAA44C,gBAAT,GACA8c,EAAAvX,kBAAuBn9C,EAAvB,4CACA00D,EAAAjF,iBAAsBzvD,EAAtB,2CACA00D,EAAAhF,qBAA0B1vD,EAA1B,gDACA00D,EAAAC,cAAmB30D,EAAnB,wCACA00D,EAAAjmB,kBAAuBzuC,EAAvB,4CACA00D,EAAA1mB,wBAA6BhuC,EAA7B,mDACA00D,EAAA9uC,SAAc5lB,EAAd,kCACA00D,EAAAzsC,KAAUjoB,EAAV,8BACA00D,EAAAE,OAAY50D,EAAZ,iCACA00D,EAAAG,cAAkB,SAAA73C,GAAG,OAAItN,KAAA2C,KAAUqiD,EAAA9uC,SAAA5I,IAAkBA,EAAAzc,OAAhC,KACrBm0D,EAAA3tC,SAAc/mB,EAAd,kCAEA00D,EAAA9F,OAAW,SAAAF,EAAAC,GACP,OAAO,EAAA8F,EAAAK,QAAApG,EAAPC,mxBChBJ,IAAA5qD,iXAAA6qC,CAAA5uC,EAAA,8mBAEauvC,+NAGShlB,MAMVA,GAAA,EAAQ/a,UAAAjP,QAAwBU,MAAAC,aAChCqpB,EAAA,IAEJA,EAAMA,GAAN,GAEA,IAAK,IAAIzqB,EAAT,EAAgBA,EAAI0P,UAApBjP,OAAsCT,IAAK,CACvC,IAAIsV,EAAS5F,UAAb1P,GACA,GAAAsV,EAGA,IAAK,IAALrU,KAAAqU,EACI,GAAKA,EAAAlG,eAALnO,GAAA,CAGA,IAAIG,EAAUD,MAAAC,QAAcqpB,EAA5BxpB,IACI42C,EAnBZp4C,KAmBuBo4C,SAAeptB,EAA9BxpB,IACIg0D,EApBZx1D,KAoBqBo4C,SAAeviC,EAA5BrU,IAEI42C,IAAAz2C,GAAJ6zD,EAtBRx1D,KAuBYmwC,WAAiBnlB,EAAjBxpB,GAA2BqU,EAA3BrU,IAEAwpB,EAAAxpB,GAAWqU,EAAXrU,IAKZ,OAAAwpB,oCAGa2D,EAAQ9Y,GACrB,IAAIkZ,EAAS1qB,OAAAoxD,OAAA,GAAb9mC,GAaA,OAZIqhB,EAAAgN,iBAAAruB,IAAkCqhB,EAAAgN,iBAAtCnnC,IACIxR,OAAA5B,KAAAoT,GAAA87B,QAA4B,SAAAnwC,GACpBwuC,EAAAgN,iBAAuBnnC,EAA3BrU,KACUA,KAANmtB,EAGII,EAAAvtB,GAAcwuC,EAAA0lB,UAAgB/mC,EAAhBntB,GAA6BqU,EAA3CrU,IAEJ6C,OAAAoxD,OAAA1mC,EAAA4mC,EAAA,GAAAn0D,EAA8BqU,EAA9BrU,OAIZutB,gCAGSpuB,EAAGuD,GACZ,IAAA3D,EAAA+lB,EAAI9lB,EAAJ,GAAYJ,EAAIO,EAAhBK,OAA0BkO,EAAIhL,EAA9BlD,OACA,IAAKT,GAAL,IAAaA,EAAbH,GAAuB,IAAKkmB,GAAL,IAAaA,EAAbpX,GAAuB1O,EAAAkC,KAAO,CAAC0P,EAAGzR,EAAJJ,GAAUA,EAAVA,EAAgBgS,EAAGrO,EAAnBoiB,GAAyBA,EAAGA,IACjF,OAAA9lB,yCAGkBof,EAAMyoC,EAAUuN,GAClC,IAAIC,EAAJ,GACA,IAAAj2C,EACI,OAAAi2C,EAGJ,GAAIj2C,EAAJ5e,OAAiB,CACb,IAAImD,EAAIyb,EAAR,GACA,GAAIzb,aAAJzC,MACIm0D,EAAM1xD,EAAA/C,IAAM,SAAA4C,EAAAzD,GACR,OAAAA,SAED,GAAA,WAAIke,EAAAta,GAEP,IAAK,IAAL2xD,KAAA3xD,EACSA,EAAAwL,eAALmmD,IAEAD,EAAAnzD,KAAAozD,GAIZ,GAAIzN,MAAAA,IAAJuN,EAAkE,CAC9D,IAAIv/C,EAAQw/C,EAAAn0C,QAAZ2mC,IACA,EAAIhyC,GACAw/C,EAAAn5B,OAAArmB,EAAA,GAGR,OAAAw/C,2CAGoBE,GACpB,OAAQA,GAAA,WAAQt3C,EAAAs3C,KAA6Br0D,MAAAC,QAArCo0D,IAAR,OAAoEA,kCAGzDA,GACX,OAAOr0D,MAAAC,QAAPo0D,oCAGYp1D,GACZ,OAAO,OAAAA,GAAP,WAAqB8d,EAAA9d,oCAGTA,GACZ,OAAQyQ,MAADzQ,IAAP,iBAAoBA,qCAGNA,GACd,MAAA,mBAAOA,iCAGGA,GACV,MAAA,kBAAO0D,OAAAnC,UAAAqO,SAAAxP,KAAAJ,oCAGKA,GACZ,MAAO,iBAAAA,GAAyBA,aAAhC62C,sDAG0B9yC,EAAQqyB,EAAU6qB,EAAW7iB,GAKvD,IAHA,IAAI8iB,EAAgB9qB,EAAAhe,MAApB,YACIke,EAAUvyB,EAAAk9C,GAAkBC,EAAlB15B,QAHiD4W,GAK/D,EAAO8iB,EAAA7gD,QAA0B,CAC7B,IAAI8gD,EAAmBD,EAAvB15B,QACI45B,EAAeF,EAAnB15B,QACA,MAAI25B,EACA7qB,EAAUA,EAAA2H,QAAAmjB,GAAV,GACG,MAAID,IACP7qB,EAAUA,EAAA9Y,KAAA,KAAV4jC,IAGR,OAAA9qB,yCAGkBvyB,EAAQqyB,EAAUgI,GACpC,OAAOiR,EAAAgS,uBAAAt9C,EAAAqyB,EAAA,SAAPgI,0CAGkBr6B,EAAQqyB,GAC1B,OAAOiZ,EAAAgS,uBAAAt9C,EAAAqyB,EAAP,iDAGkBryB,EAAQqyB,EAAUE,GACpC,IAAIiG,EAAYx4B,EAAAqZ,OAAhBgZ,GACA,OAAImG,EAAJn6B,QACIk0B,EACWvyB,EAAA4Z,OAAP2Y,GAEG+Y,EAAA0R,eAAAh9C,EAAPqyB,GAGJmG,yCAGkBx4B,EAAQqyB,EAAUgI,GACpC,IAAI7B,EAAYx4B,EAAAqZ,OAAhBgZ,GACA,OAAImG,EAAJn6B,QACWitC,EAAAyR,eAAA/8C,EAAAqyB,EAAPgI,GAEJ7B,yCAGkB5d,EAAK+tC,EAAY9yC,EAAO0N,EAAIqpC,EAAI0E,EAAIC,GACtD,IACI3I,EADOtd,EAAAgC,eAAA1yB,EAAX,QACqBhB,OAAA,kBAAAH,KAAA,KAArBkvC,GAGAC,EAAAnvC,KAAA,KACgB8J,EADhB,KAAA9J,KAAA,KAEgBmzC,EAFhB,KAAAnzC,KAAA,KAGgB63C,EAHhB,KAAA73C,KAAA,KAIgB83C,EAT0C,KAY1D,IAAIC,EAAQ5I,EAAA3tC,UAAA,QAAAC,KAAZrF,GAGiB27C,EAAA32C,QAAAjB,OAAA,QAAA4F,MAAjBgyC,GAEA/3C,KAAA,SAA0B,SAAAha,EAAA5D,GAAA,OAAUA,GAAKga,EAAAvZ,OAAf,KAA1Bmd,KAAA,aACwB,SAAAha,GAAC,OAAAA,IAEzB+xD,EAAAlyC,OAAA1hB,wCAoBA,SAAA6zD,IACI,OAAOhmD,KAAAkE,MAAA,OAAY,EAAIlE,KAALsZ,WAAXlZ,SAAA,IAAA2b,UAAP,GAKJ,OAAOiqC,IAAOA,IAAP,IAAoBA,IAApB,IAAiCA,IAAjC,IACHA,IADG,IACUA,IAAOA,IAAOA,kDAINC,EAAWC,EAAYx4C,GAChD,IAAIy4C,EAAUF,EAAd73C,OACA+3C,EAAA56B,YAAA26B,EAKA,GAAIC,EAAA93C,wBAAgCX,EAHpC,EAGiD,CAC7C,IAAK,IAAIzL,EAAEikD,EAAAr1D,OAAX,EAAA,EAA+BoR,EAAIA,GAAnC,EACI,GAAIkkD,EAAAC,mBAAA,EAAAnkD,GAT0C,GASMyL,EAL5D,EAOY,OADAy4C,EAAA56B,YAAoB26B,EAAAnqC,UAAA,EAAA9Z,GAApB,OACA,EAIR,OADAkkD,EAAA56B,YAP6C,OAQ7C,EAEJ,OAAA,0DAGmC06B,EAAWC,EAAYx4C,EAAOy1B,GAC5CtD,EAAAwmB,sBAAAJ,EAAAC,EAArBx4C,IACAy1B,IACI8iB,EAAAj0C,GAAA,YAA0B,SAAAhe,GACtBmvC,EAAArvB,aAAA/H,SAAA,KAAAzD,MAAA,UAAA,IAGA66B,EAAAzU,KAAAw3B,GAAA59C,MAAA,OACoBjU,EAAAizB,MAAA6kB,MAAD,EADnB,MAAA7jC,MAAA,MAEmBjU,EAAAizB,MAAA8kB,MAAD,GAFlB,QAKJ6Z,EAAAj0C,GAAA,WAAyB,SAAAhe,GACrBmvC,EAAArvB,aAAA/H,SAAA,KAAAzD,MAAA,UAAA,0CAQOwe,GACf,OAAOp3B,OAAA8Y,iBAAAse,EAAA,MAAApe,iBAAP,2DAGyB/C,GACzB,OAAOA,EAAAuwB,OAAA,GAAAhb,cAAiCvV,EAAAnT,MAAxC,uCAGe8zD,GACf,IAAIC,EAAoB,QAAQ1mB,EAAAqH,sBAAhCof,GACA,IACI,OAAOjyD,EAAPkyD,KACH,MAAAv2D,GACG,KAAM,iCAAAs2D,EAAA,KAAAC,EAAN,wCAIU90C,EAAQzJ,GACtB,IAAIw+C,EAAa,OAAO3mB,EAAAqH,sBAAxBz1B,GACA,IACI,OAAOpd,EAAAmyD,GAAPx+C,GACH,MAAAhY,GACG,KAAM,uCAANyhB,wBArRD0+B,OAAS,cADPtQ,EA2LF4mB,eAAiB,SAAA7zC,EAAAu2B,GACpB,OAAQv2B,GAAUxT,SAAS+pC,EAAA7gC,MAAD,UAAlB,KAAR,KA5LKu3B,EA+LF6mB,cAAgB,SAAAh5C,EAAAy7B,GACnB,OAAQz7B,GAAStO,SAAS+pC,EAAA7gC,MAAD,SAAjB,KAAR,KAhMKu3B,EAmMFqM,gBAAkB,SAAAt5B,EAAAu2B,EAAAhH,GACrB,OAAOniC,KAAAC,IAAA,EAAY4/B,EAAA4mB,eAAA7zC,EAAAu2B,GAA0ChH,EAA1C7Y,IAAuD6Y,EAA1EC,SApMKvC,EAuMFoM,eAAiB,SAAAv+B,EAAAy7B,EAAAhH,GACpB,OAAOniC,KAAAC,IAAA,EAAY4/B,EAAA6mB,cAAAh5C,EAAAy7B,GAAwChH,EAAxCzsB,KAAsDysB,EAAzErsB,+BhD1MR","file":"odc-d3.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.2.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.lch = lch;\nexports.gray = gray;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-interpolate/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHue = hue$1;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-format'), require('d3-dispatch'), require('d3-scale'), require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-format', 'd3-dispatch', 'd3-scale', 'd3-array'], factory) :\n\t(factory((global.indexRollup = global.indexRollup || {}),global.d3Selection,global.d3Format,global.d3Dispatch,global.d3Scale,global.d3Array));\n}(this, (function (exports,d3Selection,d3Format,d3Dispatch,d3Scale,d3Array) { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar d3_identity = function d3_identity(d) {\n  return d;\n};\n\nvar d3_reverse = function d3_reverse(arr) {\n  var mirror = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1];\n  }\n  return mirror;\n};\n\n//Text wrapping code adapted from Mike Bostock\nvar d3_textWrapping = function d3_textWrapping(text, width) {\n  text.each(function () {\n    var text = d3Selection.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.2,\n        //ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n};\n\nvar d3_mergeLabels = function d3_mergeLabels() {\n  var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments[1];\n  var domain = arguments[2];\n  var range = arguments[3];\n  var labelDelimiter = arguments[4];\n\n  if ((typeof labels === \"undefined\" ? \"undefined\" : _typeof(labels)) === \"object\") {\n    if (labels.length === 0) return gen;\n\n    var i = labels.length;\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n    return labels;\n  } else if (typeof labels === \"function\") {\n    var customLabels = [];\n    var genLength = gen.length;\n    for (var _i = 0; _i < genLength; _i++) {\n      customLabels.push(labels({\n        i: _i,\n        genLength: genLength,\n        generatedLabels: gen,\n        domain: domain,\n        range: range,\n        labelDelimiter: labelDelimiter\n      }));\n    }\n    return customLabels;\n  }\n\n  return gen;\n};\n\nvar d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {\n  var data = [];\n\n  if (cells.length > 1) {\n    data = cells;\n  } else {\n    var domain = scale.domain(),\n        increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);\n    var i = 0;\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment);\n    }\n  }\n\n  var labels = data.map(labelFormat);\n  return {\n    data: data,\n    labels: labels,\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n  });\n\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  };\n};\n\nvar d3_ordinalLegend = function d3_ordinalLegend(scale) {\n  return {\n    data: scale.domain(),\n    labels: scale.domain(),\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellover\", obj, d);\n};\n\nvar d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellout\", obj, d);\n};\n\nvar d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellclick\", obj, d);\n};\n\nvar helper = {\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    var text = svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").data(labels).text(d3_identity);\n\n    if (labelWidth) {\n      svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").call(d3_textWrapping, labelWidth);\n    }\n\n    return text;\n  },\n\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale);\n\n    //for d3.scaleSequential that doesn't have a range function\n    var range = scale.range && scale.range() || scale.domain();\n    type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels);\n      type.data = d3_reverse(type.data);\n    }\n\n    return type;\n  },\n\n  d3_filterCells: function d3_filterCells(type, cellFilter) {\n    var filterCells = type.data.map(function (d, i) {\n      return { data: d, label: type.labels[i] };\n    }).filter(cellFilter);\n    var dataValues = filterCells.map(function (d) {\n      return d.data;\n    });\n    var labelValues = filterCells.map(function (d) {\n      return d.label;\n    });\n    type.data = type.data.filter(function (d) {\n      return dataValues.indexOf(d) !== -1;\n    });\n    type.labels = type.labels.filter(function (d) {\n      return labelValues.indexOf(d) !== -1;\n    });\n    return type;\n  },\n\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    cells.on(\"mouseover.legend\", function (d) {\n      d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      d3_cellClick(dispatcher, d, this);\n    });\n  },\n\n  d3_title: function d3_title(svg, title, classPrefix, titleWidth) {\n    if (title !== \"\") {\n      var titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\");\n\n      titleText.data([title]).enter().append(\"text\").attr(\"class\", classPrefix + \"legendTitle\");\n\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title);\n\n      if (titleWidth) {\n        svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").call(d3_textWrapping, titleWidth);\n      }\n\n      var cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\");\n      var yOffset = svg.select(\".\" + classPrefix + \"legendTitle\").nodes().map(function (d) {\n        return d.getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.nodes().map(function (d) {\n        return d.getBBox().x;\n      })[0];\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n    }\n  },\n\n  d3_defaultLocale: {\n    format: d3Format.format,\n    formatPrefix: d3Format.formatPrefix\n  },\n\n  d3_defaultFormatSpecifier: \".01f\",\n\n  d3_defaultDelimiter: \"to\"\n};\n\nfunction color() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\").data(type.data);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \", \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n          \" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === \"string\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.textWrap = function (_) {\n    if (!arguments.length) return textWrap;\n    textWrap = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction size() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    //sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n      return bbox;\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n        var y = shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0;\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n\n          return \"translate(0, \" + (y + height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n          \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      (function () {\n        cellTrans = function cellTrans(d, i) {\n          var width = d3Array.sum(shapeSize.slice(0, i), function (d) {\n            return d.width;\n          });\n          var y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0;\n          return \"translate(\" + (width + i * shapePadding) + \", \" + y + \")\";\n        };\n\n        var offset = shape == \"line\" ? maxH / 2 : maxH;\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (offset + labelOffset) + \")\";\n        };\n      })();\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction symbol() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    //remove old shapes\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(maxH, d.height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \" )\";\n        };\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n              \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate( \" + i * (maxW + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nvar thresholdLabels = function thresholdLabels(_ref) {\n  var i = _ref.i,\n      genLength = _ref.genLength,\n      generatedLabels = _ref.generatedLabels,\n      labelDelimiter = _ref.labelDelimiter;\n\n  if (i === 0) {\n    var values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return \"Less than \" + values[1];\n  } else if (i === genLength - 1) {\n    var _values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return _values[0] + \" or more\";\n  }\n  return generatedLabels[i];\n};\n\nvar legendHelpers = {\n  thresholdLabels: thresholdLabels\n};\n\nvar index = {\n  legendColor: color,\n  legendSize: size,\n  legendSymbol: symbol,\n  legendHelpers: legendHelpers\n};\n\nexports.legendColor = color;\nexports.legendSize = size;\nexports.legendSymbol = symbol;\nexports.legendHelpers = legendHelpers;\nexports['default'] = index;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=indexRollup.js.map\n","// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-time-format/ v2.1.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-time/ v1.0.10 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n/* @flow */\n\n/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x/*: number */)/*: number */ {\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) -\n        1.26551223 +\n        1.00002368 * t +\n        0.37409196 * Math.pow(t, 2) +\n        0.09678418 * Math.pow(t, 3) -\n        0.18628806 * Math.pow(t, 4) +\n        0.27886807 * Math.pow(t, 5) -\n        1.13520398 * Math.pow(t, 6) +\n        1.48851587 * Math.pow(t, 7) -\n        0.82215223 * Math.pow(t, 8) +\n        0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n","'use strict';\n/* @flow */\n\n/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0, sumY = 0,\n            sumXX = 0, sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\n            ((dataLength * sumXX) - (sumX * sumX));\n\n        // `b` is the y-intercept of the line.\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\n\nmodule.exports = linearRegression;\n","'use strict';\n/* @flow */\n\n/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function(x) {\n        return mb.b + (mb.m * x);\n    };\n}\n\nmodule.exports = linearRegressionLine;\n","'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs on `O(n)`, linear time in respect to the array\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x /*: Array<number> */)/*:number*/ {\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        throw new Error('mean requires at least one data point');\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n","'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\nvar quickselect = require('./quickselect');\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x /*: Array<number> */, p /*: Array<number> | number */) {\n    var copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        var results = [];\n        // For each requested quantile\n        for (var i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        var idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    var indices = [0];\n    for (var i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    var stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        var r = Math.ceil(stack.pop());\n        var l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        var m = Math.floor((l + r) / 2);\n        quantileSelect(arr, indices[m], indices[l], indices[r]);\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len /*: number */, p /*: number */)/*:number*/ {\n    var idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nmodule.exports = quantile;\n","'use strict';\n/* @flow */\n\n/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x /*: Array<number> */, p /*: number */)/*:number*/ {\n    var idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error('quantile requires at least one data point.');\n    } else if (p < 0 || p > 1) {\n        throw new Error('quantiles must be between 0 and 1');\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nmodule.exports = quantileSorted;\n","'use strict';\n/* @flow */\n\nmodule.exports = quickselect;\n\n/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @private\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} left left index\n * @param {number} right right index\n * @returns {undefined}\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {\n    left = left || 0;\n    right = right || (arr.length - 1);\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error('sampleCovariance requires samples with equal lengths');\n    }\n\n    if (x.length < 2) {\n        throw new Error('sampleCovariance requires at least two data points in each sample');\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n","'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\n    // The standard deviation of no numbers is null\n    var sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length < 2) {\n        throw new Error('sampleVariance requires at least two data points');\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n","'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\n    if (x.length === 1) {\n        return 0;\n    }\n    var v = variance(x);\n    return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n","'use strict';\n/* @flow */\n\n/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs on `O(n)`, linear time in respect to the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x/*: Array<number> */)/*: number */ {\n\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    var sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    var correction = 0;\n\n    var transition;\n\n    for (var i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += ((sum - transition) + x[i]);\n        }\n        else {\n            correction += ((x[i] - transition) + sum);\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nmodule.exports = sum;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * var variance = sumNthPowerDeviations(input) / input.length;\n */\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\n    var meanValue = mean(x),\n        sum = 0,\n        tempValue,\n        i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x/*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        throw new Error('variance requires at least one data point');\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n","'use strict';\n/* @flow */\n\n/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\n    return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class BarChartConfig extends ChartWithColorGroupsConfig {\n\n    svgClass = this.cssClassPrefix + 'bar-chart';\n    showLegend = true;\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        scale: \"ordinal\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y = {// Y axis config\n        key: 1,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    transition = true;\n\n    constructor(custom) {\n        super();\n        var config = this;\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BarChart extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BarChartConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new BarChartConfig(config));\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.computePlotSize();\n        this.setupY();\n        this.setupX();\n        this.setupGroupStacks();\n        this.setupYDomain();\n\n        return this;\n    }\n\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = d3.scaleBand().range([0, plot.width]).paddingInner(.08);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if (conf.ticks) {\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else if (!this.config.series) {\n            domain = d3.map(data, x.value).keys();\n        } else {\n            domain = d3.map(data[0].values, x.value).keys();\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value(d, conf.key);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var domain;\n        var yStackMax = d3.max(plot.layers, layer => d3.max(layer.points, d => d.y0 + d.y));\n\n\n        // var min = d3.min(data, s=>d3.min(s.values, plot.y.value));\n        var max = yStackMax;\n        domain = [0, max];\n\n        plot.y.scale.domain(domain);\n        // console.log(' plot.y.scale.domain', plot.y.scale.domain());\n    }\n\n    setupGroupStacks() {\n        var self = this;\n        this.groupData();\n\n        var y0s = [];\n        this.plot.groupedData.forEach(s=> {\n            s.points = s.values.map(v=>self.mapToPoint(v));\n            s.points.forEach((p, i)=> {\n                var prevY0 = y0s[i];\n                if(!prevY0) prevY0 = 0;\n                p.y0 = prevY0;\n                y0s[i] = p.y+prevY0;\n            });\n\n        });\n        this.plot.layers = this.plot.groupedData;\n\n    }\n\n    mapToPoint(value) {\n        var plot = this.plot;\n        return {\n            x: plot.x.value(value),\n            y: parseFloat(plot.y.value(value))\n        }\n    }\n\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.margin.bottom) + \")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawBars() {\n        var self = this;\n        var plot = self.plot;\n\n        // console.log('layers', plot.layers);\n\n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\" + layerClass)\n            .data(plot.layers);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n        var bar = layerMerge.selectAll(\".\" + barClass)\n            .data(d => d.points);\n\n        var barEnter = bar.enter().append(\"g\")\n            .attr(\"class\", barClass);\n        var barRectEnter = barEnter.append(\"rect\")\n            .attr(\"x\", 1);\n        var barMerge = barEnter.merge(bar);\n\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT = layerMerge.transition();\n        }\n\n        barEnter.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0)) + \")\";\n        });\n        var yDomain = plot.y.scale.domain();\n        barT.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 + d.y)) + \")\";\n        });\n        barRectEnter\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", 0);\n        barRectT\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", d => plot.y.scale(d.y0) - plot.y.scale(d.y0 + d.y - yDomain[0]));\n\n\n        if (this.plot.seriesColor) {\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData) {\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        return this;\n    };\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotBaseConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        value: s => s.key, // x value accessor\n        guides: false, //show axis guides\n        orient: 'bottom',\n\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d, // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    Q1 = d => d.values.Q1;\n    Q2 = d => d.values.Q2;\n    Q3 = d => d.values.Q3;\n    Wl = d => d.values.whiskerLow;\n    Wh = d => d.values.whiskerHigh;\n    outliers= d=> d.values.outliers;\n    outlierValue = (d,i)=> d;\n    outlierLabel = (d,i)=> d;\n    minBoxWidth = 35;\n    maxBoxWidth = 100;\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BoxPlotBase extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotBaseConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotBaseConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = data.map(x.value);\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var values = [], yMin, yMax;\n        data.forEach(function (d, i) {\n            let q1 = c.Q1(d), \n                q3 = c.Q3(d), \n                wl = c.Wl(d), \n                wh = c.Wh(d),\n                outliers = c.outliers(d);\n            \n            if (outliers) {\n                outliers.forEach(function (o, i) {\n                    values.push(c.outlierValue(o, i));\n                });\n            }\n            if (wl) { values.push(wl) }\n            if (q1) { values.push(q1) }\n            if (q3) { values.push(q3) }\n            if (wh) { values.push(wh) }\n        });\n        yMin = d3.min(values);\n        yMax = d3.max(values);\n        var margin = (yMax-yMin)* this.config.y.domainMargin;\n        yMin-=margin;\n        yMax+=margin;\n        var domain = [ yMin, yMax ] ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.label);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBoxPlots() {\n        var self = this,\n            plot = self.plot,\n            config = self.config,\n            boxplotClass = self.prefixClass(\"boxplot-item\")\n        \n        var boxplots = self.svgG.selectAll('.'+boxplotClass).data(plot.data);\n        var boxplotEnter = boxplots.enter()\n            .append('g')\n            .attr('class', boxplotClass)\n            .style('stroke-opacity', 1e-6)\n            .style('fill-opacity', 1e-6);\n\n        var boxplotsMerge = boxplotEnter.merge(boxplots);\n        var duration = 1000;\n        var boxplotsT = boxplotsMerge;\n        if (self.transitionEnabled()) {\n            boxplotsT = boxplotsMerge.transition();\n            boxplotsT.delay(function(d,i) { return i * duration / plot.data.length })\n        }\n\n        boxplotsT\n            .style('fill', plot.color)\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 0.75)\n            .attr('transform', (d,i) =>'translate(' + (plot.x.map(d,i) + plot.x.scale.bandwidth() * 0.05) + ', 0)')\n        boxplots.exit().remove();\n\n        var boxWidth = !config.maxBoxWidth ? plot.x.scale.bandwidth() * 0.9 : Math.min(config.maxBoxWidth, Math.max(config.minBoxWidth, plot.x.scale.bandwidth() * 0.9));\n        var boxLeft  = plot.x.scale.bandwidth() * 0.45 - boxWidth/2;\n        var boxRight = plot.x.scale.bandwidth() * 0.45 + boxWidth/2;\n\n        var boxClass = self.prefixClass(\"box\");\n\n        boxplotEnter.append('rect')\n            .attr('class', boxClass)\n            // tooltip events\n            .on('mouseover', function(d,i) {\n                d3.select(this).classed('hover', true);\n                var html = 'Q3: '+config.Q3(d,i)+'<br/>Q2: '+config.Q2(d,i)+'<br/>Q1: '+config.Q1(d,i);\n                self.showTooltip(html)\n            })\n            .on('mouseout', function(d,i) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var boxRects = boxplotsMerge.select('rect.'+boxClass);\n\n        var boxRectsT = boxRects;\n        if (self.config.transition) {\n            boxRectsT = boxRects.transition();\n        }\n\n        boxRectsT.attr('y', (d,i) => plot.y.scale(config.Q3(d)))\n            .attr('width', boxWidth)\n            .attr('x', boxLeft )\n            .attr('height', (d,i) => Math.abs(plot.y.scale(config.Q3(d)) - plot.y.scale(config.Q1(d))) || 1)\n            .style('stroke', plot.color);\n\n        // median line\n        var medianClass = self.prefixClass('median');\n        boxplotEnter.append('line').attr('class', medianClass);\n\n        var medianLine = boxplotsMerge.select('line.'+medianClass);\n        if (self.config.transition) {\n            medianLine = medianLine.transition();\n        }\n        medianLine\n            .attr('x1', boxLeft)\n            .attr('y1', (d,i) => plot.y.scale(config.Q2(d)))\n            .attr('x2', boxRight)\n            .attr('y2', (d,i) => plot.y.scale(config.Q2(d)));\n\n\n        //whiskers\n\n        var whiskerClass= self.prefixClass(\"whisker\"),\n            tickClass = self.prefixClass(\"boxplot-tick\");\n\n        var whiskers = [{key: 'low', value: config.Wl}, {key: 'high', value: config.Wh}];\n\n        boxplotEnter.each(function(d,i) {\n            var box = d3.select(this);\n\n            whiskers.forEach(f=> {\n                if (f.value(d)) {\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', whiskerClass+' ' + boxplotClass+'-'+f.key);\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', tickClass+' ' + boxplotClass+'-'+f.key);\n                }\n            });\n        });\n\n        whiskers.forEach(f => {\n            var endpoint = (f.key === 'low') ? config.Q1 : config.Q3;\n\n            var whisker = boxplotsMerge.select('.'+whiskerClass+'.'+boxplotClass+'-'+f.key);\n            var tick = boxplotsMerge.select('.'+tickClass+'.'+boxplotClass+'-'+f.key);\n            if (self.config.transition) {\n                whisker = whisker.transition();\n                tick=tick.transition();\n            }\n            whisker\n                .attr('x1', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y2', (d,i) => plot.y.scale(endpoint(d)));\n\n            tick\n                .attr('x1', boxLeft )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', boxRight )\n                .attr('y2', (d,i) => plot.y.scale(f.value(d)));\n\n            boxplotEnter.selectAll('.'+boxplotClass+'-'+f.key)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    self.showTooltip(f.value(d))\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    self.hideTooltip();\n                })\n        });\n\n\n        // outliers\n        var outlierClass = self.prefixClass(\"outlier\");\n        var outliers = boxplotsMerge.selectAll('.'+outlierClass).data((d,i) => config.outliers(d,i) || []);\n\n        var outlierEnterCircle = outliers.enter().append('circle')\n            .attr('class', outlierClass)\n            .style('z-index', 9000);\n\n        outlierEnterCircle\n            .on('mouseover', function (d, i, j) {\n                d3.select(this).classed('hover', true);\n                self.showTooltip(config.outlierLabel(d,i))\n            })\n            .on('mouseout', function (d, i, j) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var outliersMerge = outlierEnterCircle.merge(outliers);\n        var outliersT = outliersMerge;\n        if (self.config.transition) {\n            outliersT = outliersMerge.transition();\n        }\n        outliersT\n            .attr('cx', plot.x.scale.bandwidth() * 0.45)\n            .attr('cy', (d,i) => plot.y.scale(config.outlierValue(d,i)))\n            .attr('r', '3');\n        outliers.exit().remove();\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBoxPlots();\n        return this;\n    };\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.x.value(d));\n        }\n    }\n}\n","import {BoxPlotBase, BoxPlotBaseConfig} from \"./box-plot-base\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotConfig extends BoxPlotBaseConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showLegend = true;\n    showTooltip = true;\n    y = {// Y axis config\n        key: undefined,\n        value: function(d) { return this.y.key===undefined ? d : d[this.y.key]} , // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    series = false;\n    groups={\n        key: undefined,\n        value: function(d) { return this.groups.key===undefined ? '' : d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    tukey= false;\n    \n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class BoxPlot extends BoxPlotBase{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotConfig(config));\n    }\n\n    getDataToPlot(){\n        var self = this;\n        var conf = self.config;\n        self.plot.groupingEnabled = this.isGroupingEnabled();\n\n        var data = this.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.label || s.key || '',\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupValue = d => conf.groups.value.call(conf, d);\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n\n                var getDisplayValue= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getDisplayValue = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getDisplayValue = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                self.plot.groupedData.forEach(g => {\n                    g.key = getDisplayValue(g.key);\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n\n        self.plot.groupedData.forEach(s=>{\n            if(!Array.isArray(s.values)){\n                return;\n            }\n\n            var values = s.values.map(d=>parseFloat(self.config.y.value.call(self.config, d)));\n            s.values.Q1 = StatisticsUtils.quantile(values, 0.25);\n            s.values.Q2 = StatisticsUtils.quantile(values, 0.5);\n            s.values.Q3 = StatisticsUtils.quantile(values, 0.75);\n            var IQR =  s.values.Q3 - s.values.Q1;\n\n            if(!self.config.tukey){\n                s.values.whiskerLow = d3.min(values);\n                s.values.whiskerHigh = d3.max(values);\n            }else{\n                s.values.whiskerLow = s.values.Q1 - 1.5*IQR;\n                s.values.whiskerHigh = s.values.Q3 + 1.5*IQR;\n                s.values.outliers = values.filter(d=> d<s.values.whiskerLow || d>s.values.whiskerHigh);\n            }\n        });\n\n        return self.plot.groupedData;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ChartWithColorGroupsConfig extends ChartConfig{\n\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    groups={\n        key: 2,\n        value: function(d) { return d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    series = false;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ChartWithColorGroups extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ChartWithColorGroupsConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ChartWithColorGroupsConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n       \n        this.plot.showLegend = conf.showLegend;\n        this.setupGroups();\n        this.plot.data = this.getDataToPlot();\n        this.groupData();\n\n        if(this.plot.showLegend){\n            var scale = this.plot.colorCategory;\n            if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n                this.plot.showLegend = false;\n            }else{\n                this.plot.margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\n            }\n        }\n        return this;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n\n    computeGroupColorDomain(){\n        var map = d3.set(this.data, d => this.plot.groupValue(d));\n        return Object.getOwnPropertyNames(map).map(d=>map[d]);\n    }\n\n    setupGroups() {\n        var self=this;\n        var conf = this.config;\n\n        this.plot.groupingEnabled = this.isGroupingEnabled();\n        var domain = [];\n        if(this.plot.groupingEnabled){\n            self.plot.groupToLabel = {};\n            if(this.config.series){\n                this.plot.groupValue = s => s.key;\n                domain = this.computeGroupColorDomain();\n\n                this.data.forEach(s=>{\n                    self.plot.groupToLabel[s.key] = s.label||s.key;\n                })\n            }else{\n                this.plot.groupValue = d => conf.groups.value.call(conf, d);\n                domain = this.computeGroupColorDomain();\n                var getLabel= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getLabel = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getLabel = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                domain.forEach(k=>{\n                    self.plot.groupToLabel[k] = getLabel(k);\n                })\n            }\n\n        }else{\n            this.plot.groupValue = d => null;\n        }\n        this.plot.groupColorDomain = domain;\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n\n        if (colorValue){\n            if(typeof colorValue === 'string' || colorValue instanceof String){\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n            }else{\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n                var range = domain.map(v=>this.plot.seriesColor({key: v}));\n                this.plot.colorCategory = d3.scaleOrdinal(range);\n                this.plot.colorCategory.domain(domain);\n\n            }\n\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            self.plot.colorCategory.domain(domain);\n\n            this.plot.seriesColor = s =>  self.plot.colorCategory(s.key);\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.groupValue(d));\n            \n        }else{\n            this.plot.color = this.plot.seriesColor = s=> 'black'\n        }\n\n    }\n\n    groupData(){\n        var self=this;\n        var data = this.plot.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: null,\n                label: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.key,\n                        label: s.label,\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n                self.plot.groupedData.forEach(g => {\n                    g.label = self.plot.groupToLabel[g.key];\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n        // this.plot.seriesColor\n\n    }\n\n    getDataToPlot(){\n        if(!this.plot.groupingEnabled || !this.enabledGroups){\n            return this.data;\n        }\n        return this.data.filter(d => this.enabledGroups.indexOf(this.plot.groupValue(d))>-1);\n    }\n\n\n\n    update(newData){\n        super.update(newData);\n        this.updateLegend();\n\n        return this;\n    };\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.colorCategory;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n\n        plot.legendColor.on('cellclick', c=> self.onLegendCellClick(c));\n        \n        plot.legend.container\n            .call(plot.legendColor);\n\n        this.updateLegendCellStatuses();\n    }\n\n    onLegendCellClick(cellValue){\n        this.updateEnabledGroups(cellValue);\n        this.init();\n    }\n    updateLegendCellStatuses() {\n        var self = this;\n        this.plot.legend.container.selectAll(\"g.cell\").each(function(cell){\n            var isDisabled = self.enabledGroups && self.enabledGroups.indexOf(cell)<0;\n            d3.select(this).classed(\"odc-disabled\", isDisabled);\n        });\n    }\n\n    updateEnabledGroups(cellValue) {\n        if (!this.enabledGroups) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n        var index = this.enabledGroups.indexOf(cellValue);\n\n        if (index < 0) {\n            this.enabledGroups.push(cellValue);\n        } else {\n            this.enabledGroups.splice(index, 1);\n        }\n\n        if (!this.enabledGroups.length) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n\n    }\n\n    setData(data){\n        super.setData(data);\n        this.enabledGroups = null;\n        return this;\n    }\n}\n","import {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ChartConfig {\n    cssClassPrefix = \"odc-\";\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    showTooltip = false;\n    transition = true;\n\n    title = undefined;\n    titleSize=20;\n    titleMargin={\n        left: 0,\n        right: 0,\n        top: 15,\n        bottom: 20\n    };\n\n    subtitle = undefined;\n    subtitleSize=14;\n    subtitleMargin={\n        left: 0,\n        right: 0,\n        top: 10,\n        bottom: 20\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n\n\n}\n\nexport class Chart {\n    utils = Utils;\n    baseContainer;\n    svg;\n    config;\n    plot = {\n        margin: {}\n    };\n    _attached = {};\n    _layers = {};\n    _events = {};\n    _isAttached;\n    _isInitialized=false;\n\n\n    constructor(base, data, config) {\n        this._id = Utils.guid();\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n        this.init();\n        this.postInit();\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new ChartConfig();\n        } else {\n            this.config = config;\n        }\n        this.initConfigAccessors();\n        return this;\n    }\n\n    setData(data) {\n        this.data = data;\n        return this;\n    }\n\n    init() {\n        var self = this;\n        self.initPlot();\n        self.initSvg();\n\n        if(!this._isInitialized){\n            self.initTooltip();\n        }\n        self.draw();\n        this._isInitialized=true;\n        return this;\n    }\n\n    redraw(){\n        this.initConfigAccessors(true);\n        return this.init();\n    }\n\n    postInit(){\n\n    }\n\n    initSvg() {\n        var self = this;\n        var config = this.config;\n\n        var margin = self.plot.margin;\n        var width = self.svgWidth = self.plot.width + margin.left + margin.right;\n        var height = self.svgHeight =  self.plot.height + margin.top + margin.bottom;\n        var aspect = width / height;\n        if(!self._isAttached){\n            if(!this._isInitialized){\n                d3.select(self.baseContainer).select(\"svg\").remove();\n            }\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\").classed(config.svgClass, true);\n\n            self.svg\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n        }else{\n            // console.log(self.baseContainer);\n            self.svg = self.baseContainer.svg;\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\n        }\n\n        self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (!config.width || config.height) {\n            d3.select(window)\n                .on(\"resize.\"+self._id, function () {\n                    var transition = self.config.transition;\n                    self.config.transition=false;\n                    self.init();\n                    self.config.transition = transition;\n                });\n        }\n    }\n\n    destroy(){\n        d3.select(this.baseContainer).selectAll(\"*\").remove();\n        d3.select(window).on(\"resize.\" + this._id, null);\n    }\n\n    initTooltip(){\n        var self = this;\n        if (self.config.showTooltip) {\n            if(!self._isAttached ){\n                self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\n                    .style(\"opacity\", 0);\n            }else{\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\n            }\n\n        }else{\n            self.plot.tooltip = null;\n        }\n    }\n\n    initPlot() {\n        var margin = this.config.margin;\n        this.plot = this.plot || {};\n        this.plot.margin = {\n            top: margin.top,\n            bottom: margin.bottom,\n            left: margin.left,\n            right: margin.right\n        };\n\n\n        var titleMarginSize = 0;\n        if(this.config.title){\n            titleMarginSize= this.config.titleSize+this.config.titleMargin.top;\n            if(!this.config.subtitle){\n                titleMarginSize += this.config.titleMargin.bottom;\n            }\n\n            this.plot.margin.top=Math.max(this.plot.margin.top,titleMarginSize);\n        }\n\n        if(this.config.subtitle){\n\n            this.plot.margin.top=Math.max(this.plot.margin.top, titleMarginSize+this.config.subtitleMargin.top+this.config.subtitleSize+this.config.subtitleMargin.bottom);\n        }\n\n    }\n\n    update(data) {\n        if (data) {\n            this.setData(data);\n        }\n        this.updateTitle();\n        this.updateSubtitle();\n\n        var layerName, attachmentData;\n        for (var attachmentName in this._attached) {\n\n            attachmentData = data;\n\n            this._attached[attachmentName].update(attachmentData);\n        }\n        return this;\n    }\n\n    updateTitle() {\n        var titleClass = this.prefixClass('plot-title');\n        if(!this.config.title){\n            this.svg.select(\"text.\"+titleClass).remove();\n            return;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+titleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (this.config.titleMargin.top) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.titleSize+\"px\")\n            .text(this.config.title);\n    }\n\n    updateSubtitle() {\n        var subtitleClass = this.prefixClass('plot-subtitle');\n        if(!this.config.subtitle){\n            this.svg.select(\"text.\"+subtitleClass).remove();\n            return;\n        }\n\n        var y = this.config.subtitleMargin.top;\n        if(this.config.title){\n            y+=this.config.titleMargin.top+this.config.titleSize;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+subtitleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (y) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.subtitleSize+\"px\")\n            .text(this.config.subtitle);\n    }\n\n    draw(data) {\n        this.update(data);\n\n\n        return this;\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\n     * method will be invoked whenever the containing chart's `draw` method is\n     * invoked.\n     *\n     * @externalExample chart-attach\n     *\n     * @param {String} attachmentName Name of the attachment\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\n     *        unspecified, this method will return the attachment previously\n     *        registered with the specified `attachmentName` (if any).\n     *\n     * @returns {Chart} Reference to this chart (chainable).\n     */\n    attach(attachmentName, chart) {\n        if (arguments.length === 1) {\n            return this._attached[attachmentName];\n        }\n\n        this._attached[attachmentName] = chart;\n        return chart;\n    };\n\n    \n\n    //Borrowed from d3.chart\n    /**\n     * Subscribe a callback function to an event triggered on the chart. See {@link\n        * Chart#once} to subscribe a callback function to an event for one occurence.\n     *\n     * @externalExample {runnable} chart-on\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    on(name, callback, context) {\n        var events = this._events[name] || (this._events[name] = []);\n        events.push({\n            callback: callback,\n            context: context || this,\n            _chart: this\n        });\n        return this;\n    }\n\n    //Borrowed from d3.chart\n    /**\n     *\n     * Subscribe a callback function to an event triggered on the chart. This\n     * function will be invoked at the next occurance of the event and immediately\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\n     * event indefinitely.\n     *\n     * @externalExample {runnable} chart-once\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance\n     *\n     * @returns {Chart} A reference to this chart (chainable)\n     */\n    once(name, callback, context) {\n        var self = this;\n        var once = function () {\n            self.off(name, once);\n            callback.apply(this, arguments);\n        };\n        return this.on(name, once, context);\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Unsubscribe one or more callback functions from an event triggered on the\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\n     * When only a `name` is specified, all handlers subscribed to that event will\n     * be unsubscribed. When a `name` and `callback` are specified, only that\n     * function will be unsubscribed from that event. When a `name` and `context`\n     * are specified (but `callback` is omitted), all events bound to the given\n     * event with the given context will be unsubscribed.\n     *\n     * @externalExample {runnable} chart-off\n     *\n     * @param {String} [name] Name of the event to be unsubscribed\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\n     * @param {Object} [context] Contexts to be unsubscribe\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n\n    off(name, callback, context) {\n        var names, n, events, event, i, j;\n\n        // remove all events\n        if (arguments.length === 0) {\n            for (name in this._events) {\n                this._events[name].length = 0;\n            }\n            return this;\n        }\n\n        // remove all events for a specific name\n        if (arguments.length === 1) {\n            events = this._events[name];\n            if (events) {\n                events.length = 0;\n            }\n            return this;\n        }\n\n        // remove all events that match whatever combination of name, context\n        // and callback.\n        names = name ? [name] : Object.keys(this._events);\n        for (i = 0; i < names.length; i++) {\n            n = names[i];\n            events = this._events[n];\n            j = events.length;\n            while (j--) {\n                event = events[j];\n                if ((callback && callback === event.callback) ||\n                    (context && context === event.context)) {\n                    events.splice(j, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    //Borrowed from d3.chart\n    /**\n     * Publish an event on this chart with the given `name`.\n     *\n     * @externalExample {runnable} chart-trigger\n     *\n     * @param {String} name Name of the event to publish\n     * @param {...*} arguments Values with which to invoke the registered\n     *        callbacks.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    trigger(name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var events = this._events[name];\n        var i, ev;\n\n        if (events !== undefined) {\n            for (i = 0; i < events.length; i++) {\n                ev = events[i];\n                ev.callback.apply(ev.context, args);\n            }\n        }\n\n        return this;\n    };\n    getBaseContainer(){\n        if(this._isAttached){\n            return this.baseContainer.svg;\n        }\n        return d3.select(this.baseContainer);\n    }\n\n    getBaseContainerNode(){\n\n        return this.getBaseContainer().node();\n    }\n\n    prefixClass(clazz, addDot){\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\n    }\n    computePlotSize() {\n        this.plot.width = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        this.plot.height = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n    }\n\n    transitionEnabled(){\n        return this._isInitialized && this.config.transition;\n    }\n\n    showTooltip(html){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n        this.plot.tooltip.html(html)\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n    }\n\n    hideTooltip(){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n    }\n\n    initConfigAccessors(clean) {\n        if(clean){\n            this.removePropertyAccessors(this,this, this.config, \"$\");\n        }\n        this.initPropertyAccessors(this,this, this.config, \"$\", true);\n    }\n\n    removePropertyAccessors(bindTo,returnObj, source, prefix) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            delete bindTo[prefix + i];\n        }\n    }\n\n    initPropertyAccessors(bindTo,returnObj, source, prefix, recursive) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            var accessor = self.initPropertyAccessor(bindTo,returnObj, source, i, prefix);\n\n            if(recursive && Utils.isObjectNotArray(source[i])){\n                self.initPropertyAccessors(accessor, bindTo, source[i], prefix, recursive)\n            }\n        }\n    }\n\n    initPropertyAccessor(bindTo, returnObj, source, propertyKey, prefix) {\n        return bindTo[prefix + propertyKey] = function (_) {\n            if (!arguments.length) {\n                return source[propertyKey];\n            }\n            source[propertyKey] = _;\n            return returnObj;\n        };\n    }\n\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport {Legend} from './legend'\nimport {ScatterPlot} from './scatterplot'\nimport * as d3 from './d3'\n\nexport class CorrelationMatrixConfig extends ChartConfig {\n\n    svgClass = this.cssClassPrefix+'correlation-matrix';\n    guides = false; //show axis guides\n    showTooltip = true; //show tooltip on dot hover\n    showLegend = true;\n    highlightLabels = true;\n    rotateLabelsX = true;\n    rotateLabelsY = true;\n    variables = {\n        labels: undefined,\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => parseFloat(d[variableKey]), // variable value accessor\n        scale: \"ordinal\"\n    };\n    correlation = {\n        scale: \"linear\",\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\n\n    };\n    cell = {\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\n        size: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 1\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 60\n    };\n    groups={\n        key: null,\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class CorrelationMatrix extends Chart {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new CorrelationMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.correlation = {\n            matrix: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupVariables();\n        var width = conf.width;\n        var placeholderNode = this.getBaseContainerNode();\n        this.plot.placeholderNode = placeholderNode;\n\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\n        if (width) {\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n        } else {\n            this.plot.cellSize = this.config.cell.size;\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n\n        }\n\n        var height = width;\n        if (!height) {\n            height = placeholderNode.getBoundingClientRect().height;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = this.plot.width;\n\n        this.setupVariablesScales();\n        this.setupCorrelationScales();\n        this.setupCorrelationMatrix();\n\n\n        return this;\n    }\n\n    setupVariablesScales() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.variables;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([plot.width, 0]);\n        x.map = d => x.scale(x.value(d));\n\n    };\n\n    setupCorrelationScales() {\n        var plot = this.plot;\n        var corrConf = this.config.correlation;\n\n        plot.correlation.color.scale = Utils.createScale(corrConf.scale).domain(corrConf.domain).range(corrConf.range);\n        var shape = plot.correlation.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = cellConf.shape;\n\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\n        if (shape.type == 'circle') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([2, radiusMax]);\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\n        } else if (shape.type == 'ellipse') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([radiusMax, 2]);\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\n            shape.radiusY = radiusMax;\n\n            shape.rotateVal = v => {\n                if (v == 0) return \"0\";\n                if (v < 0) return \"-45\";\n                return \"45\"\n            }\n        } else if (shape.type == 'rect') {\n            shape.size = shapeSize;\n        }\n\n    }\n\n\n    setupVariables() {\n\n        var variablesConf = this.config.variables;\n\n        var data = this.data;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if (!plot.variables || !plot.variables.length) {\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            plot.domainByVariable[variableKey] = d3.extent(data, (d) => variablesConf.value(d, variableKey));\n            var label = variableKey;\n            if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        // console.log(plot.labelByVariable);\n\n    };\n\n\n    setupCorrelationMatrix() {\n        var self = this;\n        var data = this.data;\n        var matrix = this.plot.correlation.matrix = [];\n        var matrixCells = this.plot.correlation.matrix.cells = [];\n        var plot = this.plot;\n\n        var variableToValues = {};\n        plot.variables.forEach((v, i) => {\n\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\n        });\n\n        plot.variables.forEach((v1, i) => {\n            var row = [];\n            matrix.push(row);\n\n            plot.variables.forEach((v2, j) => {\n                var corr = 1;\n                if (v1 != v2) {\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                }\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: corr\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n\n        });\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        // this.update\n        this.updateCells();\n        this.updateVariableLabels();\n\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n    };\n\n    updateVariableLabels() {\n        this.plot.labelClass = this.prefixClass(\"label\");\n        this.updateAxisX();\n        this.updateAxisY();\n    }\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelXClass = labelClass + \"-x\";\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.variables, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"y\", plot.height)\n            .attr(\"dx\", -2)\n            .attr(\"dy\", 5)\n            .attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsX) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\n        }\n\n        var maxWidth = self.computeXAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelYClass = plot.labelClass + \"-y\";\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.variables);\n\n        var labelsMerge = labels.enter().append(\"text\").merge(labels);\n\n        labelsMerge\n            .attr(\"x\", 0)\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsY) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + 0 + \", \" + (i * plot.cellSize + plot.cellSize / 2) + \")\")\n                .attr(\"text-anchor\", \"end\");\n        }\n\n        var maxWidth = self.computeYAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    computeYAxisLabelsWidth() {\n        var maxWidth = this.plot.margin.left;\n        if (!this.config.rotateLabelsY) {\n            return maxWidth;\n        }\n\n        maxWidth *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        maxWidth -= fontSize / 2;\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.rotateLabelsX) {\n            return this.plot.cellSize - 2;\n        }\n        var size = this.plot.margin.bottom;\n        size *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        size -= fontSize / 2;\n        return size;\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.correlation.shape.type;\n\n        var cells = self.svgG.selectAll(\"g.\" + cellClass)\n            .data(plot.correlation.matrix.cells);\n\n        var cellsEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\n\n        cellsMerge.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n        var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n        var wrongShapes = cells.selectAll(selector);\n        wrongShapes.remove();\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        if (plot.correlation.shape.type == 'circle') {\n\n            shapes\n                .attr(\"r\", plot.correlation.shape.radius)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0);\n        }\n\n        if (plot.correlation.shape.type == 'ellipse') {\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n            shapes\n                .attr(\"rx\", plot.correlation.shape.radiusX)\n                .attr(\"ry\", plot.correlation.shape.radiusY)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\n        }\n\n\n        if (plot.correlation.shape.type == 'rect') {\n            shapes\n                .attr(\"width\", plot.correlation.shape.size)\n                .attr(\"height\", plot.correlation.shape.size)\n                .attr(\"x\", -plot.cellSize / 2)\n                .attr(\"y\", -plot.cellSize / 2);\n        }\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n\n\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n\n    updateLegend() {\n\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var legendY = 0;\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.correlation.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        \n    }\n\n    attachScatterPlot(containerSelector, config) {\n        var self = this;\n\n        config = config || {};\n\n\n        var scatterPlotConfig = {\n            height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            groups: {\n                key: self.config.groups.key,\n                label: self.config.groups.label\n            },\n            guides: true,\n            showLegend: false\n        };\n\n        self.scatterPlot = true;\n\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\n        this.update();\n\n        this.on(\"cell-selected\", c=> {\n\n\n            scatterPlotConfig.x = {\n                key: c.rowVar,\n                label: self.plot.labelByVariable[c.rowVar]\n            };\n            scatterPlotConfig.y = {\n                key: c.colVar,\n                label: self.plot.labelByVariable[c.colVar]\n            };\n            if (self.scatterPlot && self.scatterPlot !== true) {\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\n            } else {\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                this.attach(\"ScatterPlot\", self.scatterPlot);\n            }\n\n\n        });\n\n\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","module.exports = d3","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class DivergingStackedBarChartConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'diverging-stacked-bar-chart';\n    showTooltip = true;\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    x = {// X axis config\n        title: '', // axis label\n        value: d => d.values, // x value accessor\n        guides: true, //show axis guides\n        orient: 'top',\n        scale: \"linear\",\n        domainMargin: 0.02,\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d.key, // y value accessor\n        scale: \"ordinal\",\n        orient: 'left',\n        guides: true //show axis guides\n    };\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n    showBarValues = true;\n\n\n    colorRange = undefined;\n\n    categoryNames = undefined;\n    middleValue = 0;\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class DivergingStackedBarChart extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new DivergingStackedBarChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new DivergingStackedBarChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.plot.showLegend = this.config.showLegend;\n        if(this.plot.showLegend){\n            this.plot.margin.right = this.config.margin.right + this.config.legend.width+this.config.legend.margin*2;\n\n        }\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = d => conf.value.call(this.config, d);\n        x.scale = Utils.createScale(conf.scale).rangeRound([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n\n\n        plot.categoryNames = this.config.categoryNames;\n\n        plot.neutralIndex = Math.floor(plot.categoryNames.length/2);\n\n        plot.rows = data.map(d=> {\n            let originalValues = x.value(d);\n            let x0 = this.config.middleValue - d3.sum(originalValues.map((v,i) =>  i < plot.neutralIndex ? v : 0 ));\n            if (plot.categoryNames.length & 1)\n                x0 += -1 * originalValues[plot.neutralIndex]/2;\n\n            let values = originalValues.map((v, i) => i<plot.neutralIndex ? this.config.middleValue - v : this.config.middleValue + v);\n            let total = d3.sum(originalValues);\n            let categories = plot.categoryNames;\n            if(d.categories){\n                categories = d.categories.map((catIndex, i)=>plot.categoryNames[catIndex])\n            }\n\n            return {\n                datum: d,\n                originalValues: originalValues,\n                values: values,\n                categories: [],\n                min: x0,\n                max: x0+total,\n                total: total,\n                boxes: values.map((v, i)=>{\n                    return {\n                        name: categories[i],\n                        x0: x0,\n                        x1: x0+=originalValues[i],\n                        originalValue: originalValues[i]\n                    }\n                })\n            }\n        });\n\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = d3.extent([].concat(...plot.rows.map(b=>[b.min, b.max])));\n            let margin = ((domain[1]-domain[0])* conf.domainMargin) || conf.domainMargin*domain[0];\n\n            domain[0]-=margin;\n            domain[1]+=margin;\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = d3.scaleBand().range([0, plot.height]).padding(.3);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var domain = data.map(plot.y.value) ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n\n        if(axisConf.orient === 'bottom') {\n            axis.attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        }\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        var titleY = axisConf.orient === 'bottom' ? plot.margin.bottom : 0;\n        var titleDY = axisConf.orient === 'bottom' ? \"-1em\" : \"-1.5em\";\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (titleY) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", titleDY)\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBars() {\n        let self = this,\n            plot = self.plot,\n            config = self.config;\n\n        let rowClass = self.prefixClass(\"row\");\n        let rows = self.svgG.selectAll(\".\"+ rowClass)\n            .data(plot.rows);\n\n        let rowEnter = rows.enter().appendSelector(\"g.\"+rowClass);\n\n        let rowMerge = rowEnter.merge(rows)\n            .attr(\"transform\", d => \"translate(0,\" + plot.y.map(d.datum) + \")\");\n\n        rows.exit().remove();\n\n\n        let barClass = self.prefixClass(\"bar\");\n\n        let bars = rowMerge.selectAll(\"g.\"+ barClass)\n            .data(function(d) { return d.boxes; });\n        bars.exit().remove();\n\n        let barsEnter = bars.enter()\n            .append(\"g\")\n            .attr(\"class\", barClass);\n\n        barsEnter.append(\"rect\");\n        if(config.showBarValues){\n            barsEnter.append(\"text\");\n        }\n\n\n        let barsM =  barsEnter.merge(bars);\n\n        barsM.select(\"rect\").attr(\"height\", plot.y.scale.bandwidth())\n            .attr(\"x\", d =>plot.x.scale(d.x0))\n            .attr(\"width\", d => plot.x.scale(d.x1) - plot.x.scale(d.x0))\n            .style(\"fill\", (d, i) => plot.color(d.name, i));\n\n\n        let textM = barsM.select(\"text\");\n        if(config.showBarValues){\n            textM.attr(\"x\", d => plot.x.scale(d.x0))\n                .attr(\"y\", plot.y.scale.bandwidth()/2)\n                .attr(\"dy\", \"0.5em\")\n                .attr(\"dx\", d=>(plot.x.scale(d.x1)-plot.x.scale(d.x0))/2)\n                .style(\"text-anchor\", \"middle\")\n                .text(d => d.originalValue !== 0 && (d.x1-d.x0)>0.04 ? d.originalValue : \"\");\n        }else{\n            textM.remove();\n        }\n\n\n\n        self.svgG.selectOrAppend(\"line.\"+self.prefixClass(\"middle-line\"))\n            .attr(\"x1\", plot.x.scale(self.config.middleValue))\n            .attr(\"y1\", 0)\n            .attr(\"x2\", plot.x.scale(self.config.middleValue))\n            .attr(\"y2\", plot.height);\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        this.updateLegend();\n        return this;\n    };\n\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if (conf.colorRange){\n            this.plot.color = Utils.createScale(\"ordinal\").domain(this.plot.categoryNames).range(conf.colorRange);\n        }\n        else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = this.plot.colorCategory\n        }\n    }\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.color;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            // .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n        plot.legend.container\n            .call(plot.legendColor);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Heatmap, HeatmapConfig} from \"./heatmap\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class HeatmapTimeSeriesConfig extends HeatmapConfig {\n    x = {\n        fillMissing: false, // fill missing values using interval and intervalStep\n        interval: undefined, //used in filling missing ticks\n        intervalStep: 1,\n        format: undefined, //input data d3 time format\n        displayFormat: undefined,//d3 time format for display\n        intervalToFormats: [ //used to guess interval and format\n            {\n                name: 'year',\n                formats: [\"%Y\"]\n            },\n            {\n                name: 'month',\n                formats: [\"%Y-%m\"]\n            },\n            {\n                name: 'day',\n                formats: [\"%Y-%m-%d\"]\n            },\n            {\n                name: 'hour',\n                formats: ['%H', '%Y-%m-%d %H']\n            },\n            {\n                name: 'minute',\n                formats: ['%H:%M', '%Y-%m-%d %H:%M']\n            },\n            {\n                name: 'second',\n                formats: ['%H:%M:%S', '%Y-%m-%d %H:%M:%S']\n            }\n        ],\n\n        sortComparator: function sortComparator(a, b) {\n            return Utils.isString(a) ?  a.localeCompare(b) :  a - b;\n        },\n        formatter: undefined\n    };\n    z = {\n        fillMissing: true // fiill missing values with nearest previous value\n    };\n\n    legend = {\n        formatter: function (v) {\n            var suffix = \"\";\n            if (v / 1000000 >= 1) {\n                suffix = \" M\";\n                v = Number(v / 1000000).toFixed(3);\n            }\n            var nf = Intl.NumberFormat();\n            return nf.format(v) + suffix;\n        }\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class HeatmapTimeSeries extends Heatmap {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapTimeSeriesConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapTimeSeriesConfig(config));\n    }\n\n\n    setupValuesBeforeGroupsSort() {\n\n        this.plot.x.timeFormat = this.config.x.format;\n        if(this.config.x.displayFormat && !this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n\n        super.setupValuesBeforeGroupsSort();\n        if (!this.config.x.fillMissing) {\n            return;\n        }\n\n        var self = this;\n\n        this.initTimeFormatAndInterval();\n\n        this.plot.x.intervalStep = this.config.x.intervalStep || 1;\n\n        this.plot.x.timeParser = this.getTimeParser();\n\n\n\n        this.plot.x.uniqueValues.sort(this.config.x.sortComparator);\n\n        var prev = null;\n\n        this.plot.x.uniqueValues.forEach((x, i)=> {\n            var current = this.parseTime(x);\n            if (prev === null) {\n                prev = current;\n                return;\n            }\n\n            var next = self.nextTimeTickValue(prev);\n            var missing = [];\n            var iteration = 0;\n            while (self.compareTimeValues(next, current)<=0) {\n                iteration++;\n                if (iteration > 100) {\n                    break;\n                }\n                var d = {};\n                var timeString = self.formatTime(next);\n                d[this.config.x.key] = timeString;\n\n                self.updateGroups(d, timeString, self.plot.x.groups, self.config.x.groups);\n                missing.push(next);\n                next = self.nextTimeTickValue(next);\n            }\n            prev = current;\n        });\n\n    }\n\n    parseTime(x) {\n        var parser = this.getTimeParser();\n        return parser(x);\n    }\n\n    formatTime(date){\n        var formatter = this.getTimeFormatter();\n        return formatter(date);\n    }\n\n    formatValueX(value) { //used only for display\n        if (this.config.x.formatter) return this.config.x.formatter.call(this.config, value);\n\n        if(this.config.x.displayFormat){\n            var date = this.parseTime(value);\n            return d3.timeFormat(this.config.x.displayFormat)(date);\n        }\n\n        if(!this.plot.x.timeFormat) return value;\n\n        if(Utils.isDate(value)){\n            return this.formatTime(value);\n        }\n\n        return value;\n    }\n\n    compareTimeValues(a, b){\n        return a-b;\n    }\n\n    timeValuesEqual(a, b) {\n        var parser = this.plot.x.timeParser;\n        return parser(a) === parser(b);\n    }\n\n    nextTimeTickValue(t) {\n        var interval = 'time'+Utils.capitalizeFirstLetter(this.plot.x.interval);\n\n        return d3[interval].offset(t, this.plot.x.intervalStep);\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        if (this.config.z.fillMissing) {\n            this.plot.matrix.forEach((row, rowIndex) => {\n                var prevRowValue = undefined;\n                row.forEach((cell, colIndex) => {\n                    if (cell.value === undefined && prevRowValue !== undefined) {\n                        cell.value = prevRowValue;\n                        cell.missing = true;\n                    }\n                    prevRowValue = cell.value;\n                });\n            });\n        }\n\n\n    }\n\n    update(newData) {\n        super.update(newData);\n\n    };\n\n\n    initTimeFormatAndInterval() {\n\n        this.plot.x.interval = this.config.x.interval;\n\n        if(!this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n        if(!this.plot.x.interval && this.plot.x.timeFormat){\n            this.guessInterval();\n        }\n    }\n\n    guessTimeFormat() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++){\n            let intervalFormat = self.config.x.intervalToFormats[i];\n            var format = null;\n            var formatMatch = intervalFormat.formats.some(f=>{\n                format = f;\n                var parser = d3.timeParse(f);\n                return self.plot.x.uniqueValues.every(x=>{\n                    return parser(x) !== null\n                });\n            });\n            if(formatMatch){\n                self.plot.x.timeFormat = format;\n                // console.log('Guessed timeFormat', format);\n                if(!self.plot.x.interval){\n                    self.plot.x.interval = intervalFormat.name;\n                    // console.log('Guessed interval', self.plot.x.interval);\n                }\n                return;\n            }\n        }\n    }\n\n    guessInterval() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++) {\n            let intervalFormat = self.config.x.intervalToFormats[i];\n\n            if(intervalFormat.formats.indexOf(self.plot.x.timeFormat) >= 0){\n                self.plot.x.interval = intervalFormat.name;\n                // console.log('Guessed interval', self.plot.x.interval);\n                return;\n            }\n\n        }\n\n    }\n\n    getTimeFormatter() {\n        if(!this.plot.x.timeFormatter){\n            this.plot.x.timeFormatter = d3.timeFormat(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeFormatter;\n    }\n    getTimeParser() {\n        if(!this.plot.x.timeParser){\n            this.plot.x.timeParser = d3.timeParse(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeParser;\n    }\n}\n\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from './legend'\nimport * as d3 from './d3'\n\nexport class HeatmapConfig extends ChartConfig {\n\n    svgClass = 'odc-heatmap';\n    showTooltip = true; //show tooltip on dot hover\n    tooltip = {\n        noDataText: \"N/A\"\n    };\n    showLegend = true;\n    legend = {\n        width: 30,\n        rotateLabels: false,\n        decimalPlaces: undefined,\n        formatter: v => this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(this.legend.decimalPlaces)\n    }\n    highlightLabels = true;\n    x = {// X axis config\n        title: '', // axis title\n        key: 0,\n        value: (d) => d[this.x.key], // x value accessor\n        rotateLabels: true,\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(a) ? a - b : a.localeCompare(b),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                top: 20,\n                bottom: 20\n            }\n        },\n        formatter: undefined // value formatter function\n\n    };\n    y = {// Y axis config\n        title: '', // axis title,\n        rotateLabels: true,\n        key: 1,\n        value: (d) => d[this.y.key], // y value accessor\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(b) ? b - a : b.localeCompare(a),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                left: 20,\n                right: 20\n            }\n        },\n        formatter: undefined// value formatter function\n    };\n    z = {\n        key: 2,\n        value: (d) => d[this.z.key],\n        notAvailableValue: (v) => v === null || v === undefined,\n\n        decimalPlaces: undefined,\n        formatter: v => this.z.decimalPlaces === undefined ? v : Number(v).toFixed(this.z.decimalPlaces)// value formatter function\n\n    };\n    color = {\n        noDataColor: \"white\",\n        scale: \"linear\",\n        reverseScale: false,\n        range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\n    };\n    cell = {\n        width: undefined,\n        height: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 0\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 80\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//TODO refactor\nexport class Heatmap extends Chart {\n\n    static maxGroupGapSize = 24;\n    static groupTitleRectHeight = 6;\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n        this.plot.z = {\n            matrixes: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupValues();\n        this.buildCells();\n\n        var titleRectWidth = 6;\n        this.plot.x.overlap = {\n            top: 0,\n            bottom: 0\n        };\n        if (this.plot.groupByX) {\n            let depth = self.config.x.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n\n            this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\n            this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\n            this.plot.margin.top = this.plot.margin.top + conf.x.groups.overlap.top;\n            this.plot.margin.bottom = this.plot.margin.bottom + conf.x.groups.overlap.bottom;\n        }\n\n\n        this.plot.y.overlap = {\n            left: 0,\n            right: 0\n        };\n\n\n        if (this.plot.groupByY) {\n            let depth = self.config.y.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n            this.plot.y.overlap.right = self.config.y.groups.overlap.left + allTitlesWidth;\n            this.plot.y.overlap.left = self.config.y.groups.overlap.left;\n            this.plot.margin.left = this.plot.margin.left + this.plot.y.overlap.left;\n            this.plot.margin.right = this.plot.margin.right + this.plot.y.overlap.right;\n        }\n        this.plot.showLegend = conf.showLegend;\n        if (this.plot.showLegend) {\n            this.plot.margin.right += conf.legend.width;\n        }\n        this.computePlotSize();\n        this.setupZScale();\n\n        return this;\n    }\n\n    setupValues() {\n        var self = this;\n        var config = self.config;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n\n\n        x.value = d => config.x.value.call(config, d);\n        y.value = d => config.y.value.call(config, d);\n        z.value = d => config.z.value.call(config, d);\n\n        x.uniqueValues = [];\n        y.uniqueValues = [];\n\n\n        self.plot.groupByY = !!config.y.groups.keys.length;\n        self.plot.groupByX = !!config.x.groups.keys.length;\n\n        y.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n        x.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n\n        var valueMap = {};\n        var minZ = undefined;\n        var maxZ = undefined;\n        this.data.forEach(d=> {\n\n            var xVal = x.value(d);\n            var yVal = y.value(d);\n            var zValRaw = z.value(d);\n            var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\n\n\n            if (x.uniqueValues.indexOf(xVal) === -1) {\n                x.uniqueValues.push(xVal);\n            }\n\n            if (y.uniqueValues.indexOf(yVal) === -1) {\n                y.uniqueValues.push(yVal);\n            }\n\n            var groupY = y.groups;\n            if (self.plot.groupByY) {\n                groupY = this.updateGroups(d, yVal, y.groups, config.y.groups);\n            }\n            var groupX = x.groups;\n            if (self.plot.groupByX) {\n\n                groupX = this.updateGroups(d, xVal, x.groups, config.x.groups);\n            }\n\n            if (!valueMap[groupY.index]) {\n                valueMap[groupY.index] = {};\n            }\n\n            if (!valueMap[groupY.index][groupX.index]) {\n                valueMap[groupY.index][groupX.index] = {};\n            }\n            if (!valueMap[groupY.index][groupX.index][yVal]) {\n                valueMap[groupY.index][groupX.index][yVal] = {};\n            }\n            valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\n\n\n            if (minZ === undefined || zVal < minZ) {\n                minZ = zVal;\n            }\n            if (maxZ === undefined || zVal > maxZ) {\n                maxZ = zVal;\n            }\n        });\n        self.plot.valueMap = valueMap;\n\n\n        if (!self.plot.groupByX) {\n            x.groups.values = x.uniqueValues;\n        }\n\n        if (!self.plot.groupByY) {\n            y.groups.values = y.uniqueValues;\n        }\n\n        this.setupValuesBeforeGroupsSort();\n\n        x.gaps = [];\n        x.totalValuesCount = 0;\n        x.allValuesList = [];\n        this.sortGroups(x, x.groups, config.x);\n\n        y.gaps = [];\n        y.totalValuesCount = 0;\n        y.allValuesList = [];\n        this.sortGroups(y, y.groups, config.y);\n\n        z.min = minZ;\n        z.max = maxZ;\n\n    }\n\n    setupValuesBeforeGroupsSort() {\n    }\n\n    buildCells() {\n        var self = this;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n        var valueMap = self.plot.valueMap;\n\n        var matrixCells = self.plot.cells = [];\n        var matrix = self.plot.matrix = [];\n\n        y.allValuesList.forEach((v1, i)=> {\n            var row = [];\n            matrix.push(row);\n\n            x.allValuesList.forEach((v2, j) => {\n                var zVal = undefined;\n                try {\n                    zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val]\n                } catch (e) {\n                }\n\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: zVal\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n        });\n\n    }\n\n    updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\n\n        var config = this.config;\n        var currentGroup = rootGroup;\n        axisGroupsConfig.keys.forEach((groupKey, groupKeyIndex) => {\n            currentGroup.key = groupKey;\n\n            if (!currentGroup.children) {\n                currentGroup.children = {};\n            }\n\n            var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\n\n            if (!currentGroup.children.hasOwnProperty(groupingValue)) {\n                rootGroup.lastIndex++;\n                currentGroup.children[groupingValue] = {\n                    values: [],\n                    children: null,\n                    groupingValue: groupingValue,\n                    level: currentGroup.level + 1,\n                    index: rootGroup.lastIndex,\n                    key: groupKey\n                }\n            }\n\n            currentGroup = currentGroup.children[groupingValue];\n        });\n\n        if (currentGroup.values.indexOf(axisVal) === -1) {\n            currentGroup.values.push(axisVal);\n        }\n\n        return currentGroup;\n    }\n\n    sortGroups(axis, group, axisConfig, gaps) {\n        if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\n            group.label = axisConfig.groups.labels[group.level];\n        } else {\n            group.label = group.key;\n        }\n\n        if (!gaps) {\n            gaps = [0];\n        }\n        if (gaps.length <= group.level) {\n            gaps.push(0);\n        }\n\n        group.allValuesCount = group.allValuesCount || 0;\n        group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\n\n        group.gaps = gaps.slice();\n        group.gapsBefore = gaps.slice();\n\n\n        group.gapsSize = Heatmap.computeGapsSize(group.gaps);\n        group.gapsBeforeSize = group.gapsSize;\n        if (group.values) {\n            if (axisConfig.sortLabels) {\n                group.values.sort(axisConfig.sortComparator);\n            }\n            group.values.forEach(v=>axis.allValuesList.push({val: v, group: group}));\n            group.allValuesBeforeCount = axis.totalValuesCount;\n            axis.totalValuesCount += group.values.length;\n            group.allValuesCount += group.values.length;\n        }\n\n        group.childrenList = [];\n        if (group.children) {\n            var childrenCount = 0;\n\n            for (var childProp in group.children) {\n                if (group.children.hasOwnProperty(childProp)) {\n                    var child = group.children[childProp];\n                    group.childrenList.push(child);\n                    childrenCount++;\n\n                    this.sortGroups(axis, child, axisConfig, gaps);\n                    group.allValuesCount += child.allValuesCount;\n                    gaps[group.level] += 1;\n                }\n            }\n\n            if (gaps && childrenCount > 1) {\n                gaps[group.level] -= 1;\n            }\n\n            group.gapsInside = [];\n            gaps.forEach((d, i)=> {\n                group.gapsInside.push(d - (group.gapsBefore[i] || 0));\n            });\n            group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\n\n            if (axis.gaps.length < gaps.length) {\n                axis.gaps = gaps;\n            }\n        }\n\n    }\n\n    computeYAxisLabelsWidth(offset) {\n        var maxWidth = this.plot.margin.left;\n        if (this.config.y.title) {\n            maxWidth -= 15;\n        }\n        if (offset && offset.x) {\n            maxWidth += offset.x;\n        }\n\n        if (this.config.y.rotateLabels) {\n            maxWidth *= Utils.SQRT_2;\n            var fontSize = 11; //todo check actual font size\n            maxWidth -=fontSize/2;\n        }\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.x.rotateLabels) {\n            return this.plot.cellWidth - 2;\n        }\n        var size = this.plot.margin.bottom;\n        if (this.config.x.title) {\n            size -= 15;\n        }\n        if (offset && offset.y) {\n            size -= offset.y;\n        }\n\n        size *= Utils.SQRT_2;\n\n        var fontSize = 11; //todo check actual font size\n        size -=fontSize/2;\n\n        return size;\n    }\n\n    static computeGapSize(gapLevel) {\n        return Heatmap.maxGroupGapSize / (gapLevel + 1);\n    }\n\n    static computeGapsSize(gaps) {\n        var gapsSize = 0;\n        gaps.forEach((gapsNumber, gapsLevel)=> gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel));\n        return gapsSize;\n    }\n\n    computePlotSize() {\n\n        var plot = this.plot;\n        var conf = this.config;\n        var margin = plot.margin;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n        var width = availableWidth;\n        var height = availableHeight;\n\n        var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\n\n\n        var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\n        if (this.config.width) {\n\n            if (!this.config.cell.width) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        } else {\n            this.plot.cellWidth = this.config.cell.width;\n\n            if (!this.plot.cellWidth) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        }\n        width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\n\n        var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\n        var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\n        if (this.config.height) {\n            if (!this.config.cell.height) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n        } else {\n            this.plot.cellHeight = this.config.cell.height;\n\n            if (!this.plot.cellHeight) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n\n        }\n\n        height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\n\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n    }\n\n\n    setupZScale() {\n\n        var self = this;\n        var config = self.config;\n        var z = self.plot.z;\n        var range = config.color.range;\n        var extent = z.max - z.min;\n        var scale;\n        z.domain = [];\n        if (config.color.scale == \"pow\") {\n            var exponent = 10;\n            range.forEach((c, i)=> {\n                var v = z.max - (extent / Math.pow(10, i));\n                z.domain.push(v)\n            });\n            scale = d3.scalePow().exponent(exponent);\n        } else if (config.color.scale == \"log\") {\n\n            range.forEach((c, i)=> {\n                var v = z.min + (extent / Math.pow(10, i));\n                z.domain.unshift(v)\n\n            });\n\n            scale = d3.scaleLog()\n        } else {\n            range.forEach((c, i)=> {\n                var v = z.min + (extent * (i / (range.length - 1)));\n                z.domain.push(v)\n            });\n            scale = Utils.createScale(config.color.scale);\n\n        }\n\n\n        z.domain[0] = z.min; //removing unnecessary floating points\n        z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\n        // console.log(z.domain);\n\n        if (config.color.reverseScale) {\n            z.domain.reverse();\n        }\n\n        var plot = this.plot;\n\n        // console.log(range);\n\n        plot.z.color.scale = scale.domain(z.domain).range(range);\n        var shape = plot.z.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = \"rect\";\n\n        plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\n        plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        if (this.plot.groupByY) {\n            this.drawGroupsY(this.plot.y.groups, this.svgG);\n        }\n        if (this.plot.groupByX) {\n            this.drawGroupsX(this.plot.x.groups, this.svgG);\n        }\n\n        this.updateCells();\n\n        // this.updateVariableLabels();\n\n        this.updateAxisX();\n        this.updateAxisY();\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n\n        this.updateAxisTitles();\n    };\n\n    updateAxisTitles() {\n        var self = this;\n        var plot = self.plot;\n\n\n    }\n\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelXClass = labelClass + \"-x\";\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n        var offsetX = {\n            x: 0,\n            y: 0\n        };\n        let gapSize = Heatmap.computeGapSize(0);\n        if (plot.groupByX) {\n            let overlap = self.config.x.groups.overlap;\n\n            offsetX.x = gapSize / 2;\n            offsetX.y = overlap.bottom + gapSize / 2 + 6;\n        } else if (plot.groupByY) {\n            offsetX.y = gapSize;\n        }\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.x.allValuesList, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => (i * plot.cellWidth + plot.cellWidth / 2) + (d.group.gapsSize) + offsetX.x)\n            .attr(\"y\", plot.height + offsetX.y)\n            .attr(\"dy\", 10)\n\n            .attr(\"text-anchor\", \"middle\")\n            .text(d=>self.formatValueX(d.val));\n\n\n\n        var maxWidth = self.computeXAxisLabelsWidth(offsetX);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueX(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.x.rotateLabels) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + ((i * plot.cellWidth + plot.cellWidth / 2) + d.group.gapsSize + offsetX.x ) + \", \" + ( plot.height + offsetX.y) + \")\")\n                .attr(\"dx\", -2)\n                .attr(\"dy\", 8)\n                .attr(\"text-anchor\", \"end\");\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.height + plot.margin.bottom) + \")\")\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n\n            .attr(\"dy\", \"-0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.x.title);\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.y.allValuesList);\n\n        var labelsEnter = labels.enter().append(\"text\");\n        var labelsMerge = labelsEnter.merge(labels);\n\n        var offsetY = {\n            x: 0,\n            y: 0\n        };\n        if (plot.groupByY) {\n            let overlap = self.config.y.groups.overlap;\n            let gapSize = Heatmap.computeGapSize(0);\n            offsetY.x = -overlap.left;\n\n            offsetY.y = gapSize / 2;\n        }\n        labelsMerge\n            .attr(\"x\", offsetY.x)\n            .attr(\"y\", (d, i) => (i * plot.cellHeight + plot.cellHeight / 2) + d.group.gapsSize + offsetY.y)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n\n            .text(function (d) {\n                var formatted = self.formatValueY(d.val);\n                return formatted\n            });\n\n        var maxWidth = self.computeYAxisLabelsWidth(offsetY);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueY(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.y.rotateLabels) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + (offsetY.x  ) + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\")\n                .attr(\"text-anchor\", \"end\");\n            // .attr(\"dx\", -7);\n        } else {\n            labelsMerge.attr(\"dominant-baseline\", \"middle\")\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y'))\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.y.title);\n\n    }\n\n\n    drawGroupsY(parentGroup, container, availableWidth) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupYClass = groupClass + \"-y\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupYClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n\n        var titleRectWidth = Heatmap.groupTitleRectHeight;\n        var depth = self.config.y.groups.keys.length - parentGroup.level;\n        var overlap = {\n            left: 0,\n            right: 0\n        };\n\n        if (!availableWidth) {\n            overlap.right = plot.y.overlap.left;\n            overlap.left = plot.y.overlap.left;\n            availableWidth = plot.width + gapSize + overlap.left + overlap.right;\n        }\n\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + (padding - overlap.left) + \",\" + ((plot.cellHeight * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n\n        var groupWidth = availableWidth - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\");\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"width\", titleRectWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"width\", groupWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\")\n\n\n        groupsMerge.each(function (group) {\n\n            self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\n        });\n\n        groups.exit().remove();\n    }\n\n    drawGroupsX(parentGroup, container, availableHeight) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupXClass = groupClass + \"-x\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupXClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n        var titleRectHeight = Heatmap.groupTitleRectHeight;\n\n        var depth = self.config.x.groups.keys.length - parentGroup.level;\n\n        var overlap = {\n            top: 0,\n            bottom: 0\n        };\n\n        if (!availableHeight) {\n            overlap.bottom = plot.x.overlap.bottom;\n            overlap.top = plot.x.overlap.top;\n            availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\n\n        } else {\n            overlap.top = -titleRectHeight;\n        }\n        // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + ((plot.cellWidth * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n        var groupHeight = availableHeight - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(0, \" + (0) + \")\");\n\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"height\", titleRectHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"height\", groupHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\");\n\n        groupsMerge.each(function (group) {\n            self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\n        });\n\n        groups.exit().remove();\n\n    }\n\n    setGroupMouseCallbacks(parentGroup, tileRects) {\n        var plot = this.plot;\n        var self = this;\n        var mouseoverCallbacks = [];\n        mouseoverCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', true);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\n        });\n\n        var mouseoutCallbacks = [];\n        mouseoutCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', false);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\n        });\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(d=> {\n                var html = parentGroup.label + \": \" + d.groupingValue;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(d=> {\n                self.hideTooltip();\n            });\n\n\n        }\n        tileRects.on(\"mouseover\", function (d) {\n            var self = this;\n            mouseoverCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n        tileRects.on(\"mouseout\", function (d) {\n            var self = this;\n            mouseoutCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellContainerClass = self.prefixClass(\"cells\");\n        var gapSize = Heatmap.computeGapSize(0);\n        var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\n        var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\n        var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\n        cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\n\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.z.shape.type;\n\n        var cells = cellContainer.selectAll(\"g.\" + cellClass)\n            .data(self.plot.cells);\n\n        var cellEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n\n        var cellsMerge = cellEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + ((plot.cellWidth * c.col + plot.cellWidth / 2) + c.colVar.group.gapsSize) + \",\" + ((plot.cellHeight * c.row + plot.cellHeight / 2) + c.rowVar.group.gapsSize) + \")\");\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        shapes\n            .attr(\"width\", plot.z.shape.width)\n            .attr(\"height\", plot.z.shape.height)\n            .attr(\"x\", -plot.cellWidth / 2)\n            .attr(\"y\", -plot.cellHeight / 2);\n\n        shapes.style(\"fill\", c=> c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value));\n        shapes.attr(\"fill-opacity\", d=> d.value === undefined ? 0 : 1);\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\n                self.showTooltip(html);\n\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n    formatValueX(value) {\n        if (!this.config.x.formatter) return value;\n\n        return this.config.x.formatter.call(this.config, value);\n    }\n\n    formatValueY(value) {\n        if (!this.config.y.formatter) return value;\n\n        return this.config.y.formatter.call(this.config, value);\n    }\n\n    formatValueZ(value) {\n        if (!this.config.z.formatter) return value;\n\n        return this.config.z.formatter.call(this.config, value);\n    }\n\n    formatLegendValue(value) {\n        if (!this.config.legend.formatter) return value;\n\n        return this.config.legend.formatter.call(this.config, value);\n    }\n\n    updateLegend() {\n        var self = this;\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var gapSize = Heatmap.computeGapSize(0);\n        if (this.plot.groupByY) {\n            legendX += gapSize / 2 + plot.y.overlap.right;\n        } else if (this.plot.groupByX) {\n            legendX += gapSize;\n        }\n        var legendY = 0;\n        if (this.plot.groupByX || this.plot.groupByY) {\n            legendY += gapSize / 2;\n        }\n\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.z.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY, v => self.formatLegendValue(v)).setRotateLabels(self.config.legend.rotateLabels).linearGradientBar(barWidth, barHeight);\n    }\n\n\n}\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class HistogramConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'histogram';\n    showLegend=true;\n    showTooltip =true;\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : parseFloat(d[key]), // x value accessor\n        scale: \"linear\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    frequency=true;\n    groups={\n        key: 1\n    };\n    transition= true;\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Histogram extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HistogramConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new HistogramConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.bar={\n            color: null//color scale mapping function\n        };\n        \n        this.computePlotSize();\n        \n        this.setupX();\n        this.setupHistogram();\n        this.setupGroupStacks();\n        this.setupY();\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        if(conf.ticks){\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.groupedData;\n        plot.x.scale.domain([d3.min(data, s=>d3.min(s.values, plot.x.value)), d3.max(data, s=>d3.max(s.values, plot.x.value))]);\n        \n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        var data = this.plot.data;\n        var yStackMax = d3.max(plot.stackedHistograms, layer => d3.max(layer.histogramBins, d => d.y0 + d.y));\n        plot.y.scale.domain([0, yStackMax]);\n\n    };\n\n\n    setupHistogram() {\n        var plot = this.plot;\n        var x = plot.x;\n        var y = plot.y;\n        var ticks = this.config.x.ticks ? x.scale.ticks(this.config.x.ticks) : x.scale.ticks();\n\n        plot.histogram = d3.histogram()\n            .domain(x.scale.domain())\n            .value(x.value)\n            .thresholds(ticks);\n    }\n\n    setupGroupStacks() {\n        var self=this;\n        var y0s = [];\n        this.plot.groupedData.forEach(d=>{\n            d.histogramBins = this.plot.histogram(d.values);\n\n                d.histogramBins.forEach((b,i) => {\n                    b.x =b.x0;\n                    b.dx = b.x1-b.x0;\n                    b.y = b.length;\n                    var prevY0 = y0s[i];\n                    if(!prevY0) prevY0 = 0;\n                    b.y0 = prevY0;\n\n                    if(!this.config.frequency){\n                        b.y/=this.plot.dataLength\n                    }\n                    y0s[i] = b.y+prevY0;\n                });\n\n\n        });\n        var keys = this.plot.groupedData.map(d=>d.key);\n        // console.log(this.plot.groupedData);\n\n        this.plot.stack = d3.stack().keys(keys).value(d=>d.histogramBins);\n        this.plot.stackedHistograms = this.plot.groupedData;\n    }\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawHistogram() {\n        var self = this;\n        var plot = self.plot;\n        \n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\"+layerClass)\n            .data(plot.stackedHistograms);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n\n        var bar = layerMerge.selectAll(\".\"+barClass)\n            .data(d => d.histogramBins);\n\n        var barEnter = bar.enter().append(\"g\");\n        barEnter\n            .attr(\"class\", barClass)\n            .append(\"rect\")\n            .attr(\"x\", 1);\n\n        var barMerge = barEnter.merge(bar);\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT= layerMerge.transition();\n        }\n\n        barT.attr(\"transform\", function(d) { return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 +d.y)) + \")\"; });\n        var rectWidth = plot.stackedHistograms.length ? (plot.stackedHistograms[0].histogramBins.length ?  plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x1)-plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x0)-1 : 0) : 0;\n\n\n        barRectT\n            .attr(\"width\",  d=>  Math.max(0, plot.x.scale(d.x1)-plot.x.scale(d.x0)-1) )\n            .attr(\"height\", d =>   plot.height - plot.y.scale(d.y));\n\n        if(this.plot.color){\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.drawHistogram();\n        return this;\n    };\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\nexport {Regression, RegressionConfig} from './regression'\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\nexport {Heatmap, HeatmapConfig} from './heatmap'\nexport {HeatmapTimeSeries, HeatmapTimeSeriesConfig} from './heatmap-timeseries'\nexport {Histogram, HistogramConfig} from './histogram'\nexport {BarChart, BarChartConfig} from './bar-chart'\nexport {BoxPlotBase, BoxPlotBaseConfig} from './box-plot-base'\nexport {BoxPlot, BoxPlotConfig} from './box-plot'\nexport {DivergingStackedBarChart, DivergingStackedBarChartConfig} from './diverging-stacked-bar-chart'\nexport {LineChart, LineChartConfig} from './line-chart'\nexport {StatisticsUtils} from './statistics-utils'\nexport {Utils} from './utils'\nexport {Legend} from './legend'\n\n\n\n\n\n","import {Utils} from \"./utils\";\n\nimport {legendColor, legendSize, legendSymbol} from 'd3-svg-legend'\n\n\n/*var d3 = require('../bower_components/d3');\n*/\n// var legend = require('../bower_components/d3-legend/no-extend');\n//\n// module.exports.legend = legend;\n\nexport class Legend {\n\n    cssClassPrefix=\"odc-\";\n    legendClass=this.cssClassPrefix+\"legend\";\n    container;\n    scale;\n    color= legendColor;\n    size = legendSize;\n    symbol= legendSymbol;\n    guid;\n\n    labelFormat = undefined;\n\n    constructor(svg, legendParent, scale, legendX, legendY, labelFormat){\n        this.scale=scale;\n        this.svg = svg;\n        this.guid = Utils.guid();\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\n            .classed(this.legendClass, true);\n\n        this.labelFormat = labelFormat;\n    }\n\n\n\n    linearGradientBar(barWidth, barHeight, title){\n        var gradientId = this.cssClassPrefix+\"linear-gradient\"+\"-\"+this.guid;\n        var scale= this.scale;\n        var self = this;\n\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n        this.container.selectOrAppend(\"rect\")\n            .attr(\"width\", barWidth)\n            .attr(\"height\", barHeight)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\n\n\n        var ticks = this.container.selectAll(\"text\")\n            .data( scale.domain() );\n        var ticksNumber =scale.domain().length-1;\n        var ticksMerge = ticks.enter().append(\"text\").merge(ticks);\n\n        ticksMerge.attr(\"x\", barWidth)\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\n            .attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(d=> self.labelFormat ? self.labelFormat(d) : d);\n        ticksMerge.attr(\"dominant-baseline\", \"middle\")\n        if(this.rotateLabels){\n            ticksMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + barWidth + \", \" + (barHeight -(i*barHeight/ticksNumber)) + \")\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"dx\", 5)\n                .attr(\"dy\", 5);\n\n        }else{\n\n        }\n\n        ticks.exit().remove();\n\n        return this;\n    }\n\n    setRotateLabels(rotateLabels) {\n        this.rotateLabels = rotateLabels;\n        return this;\n    }\n\n    \n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class LineChartConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'line-chart';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n    lineId = (d, i)=> undefined;\n    transition= true;\n    onLineHover = (d, i) => {};\n    onLineHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LineChart extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LineChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new LineChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.updateLines();\n    };\n\n    updateLines() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var lineClass = this.lineClass = self.prefixClass('line');\n        self.linesContainerClass = self.prefixClass('lines-container');\n\n        var linesContainer = self.svgG.selectOrAppend(\"g.\" + self.linesContainerClass);\n\n        var layer = linesContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n        var linePathEnter = layerEnter.append(\"path\")\n            .attr(\"class\", lineClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var linePath = layerMerge.select('.' + lineClass)\n            .datum(d=>d.values);\n\n        var linePathMerge = linePathEnter.merge(linePath);\n\n        var linePathT = linePathMerge;\n        if (self.transitionEnabled()) {\n            linePathT = linePathMerge.transition();\n        }\n\n        var line = d3.line()\n            .x(plot.x.map)\n            .y(plot.y.map);\n\n        linePathT\n            .attr(\"fill\", \"none\")\n            // .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"id\", this.config.lineId)\n            .attr(\"d\", line);\n\n\n        //TODO add tooltip\n\n        linePathMerge.on(\"mouseover.onLineHover\", this.config.onLineHover);\n        linePathMerge.on(\"mouseout.onLineHoverOut\", this.config.onLineHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"stroke\", plot.seriesColor)\n        }else if(plot.color){\n            linePathMerge.style(\"stroke\", plot.color)\n        }\n\n        linePath.exit().remove();\n        var dotClass = this.dotClass = self.prefixClass('dot');\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values);\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n\n\n\n        layer.exit().remove();\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class RegressionConfig extends ScatterPlotConfig{\n\n    mainRegression = true;\n    groupRegression = true;\n    confidence={\n        level: 0.95,\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\n        marginOfError: undefined, //custom  margin Of Error function (x, points)\n        areaCurve: d3.curveNatural\n    };\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Regression extends ScatterPlot{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new RegressionConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new RegressionConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.initRegressionLines();\n    }\n\n    initRegressionLines(){\n\n        var self = this;\n        var groupsAvailable = self.plot.groupingEnabled;\n\n        self.plot.regressions= [];\n\n\n        if(groupsAvailable && self.config.mainRegression){\n            var regression = this.initRegression(this.plot.data, false);\n            self.plot.regressions.push(regression);\n        }\n\n        if(self.config.groupRegression){\n            this.initGroupRegression();\n        }\n\n    }\n\n    initGroupRegression() {\n        var self = this;\n\n        self.plot.groupedData.forEach(group=>{\n            if(group.values.length<2){\n                return;\n            }\n\n            var regression = this.initRegression(group.values, group.key);\n            self.plot.regressions.push(regression);\n        });\n    }\n\n    initRegression(values, groupVal){\n        var self = this;\n\n        var points = values.map(d=>{\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n        });\n\n        // points.sort((a,b) => a[0]-b[0]);\n\n        var linearRegression =  StatisticsUtils.linearRegression(points);\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\n\n\n        var extentX = d3.extent(points, d=>d[0]);\n\n\n        var linePoints = [\n            {\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            },\n            {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }\n        ];\n\n        var line = d3.line()\n            .curve(d3.curveBasis)\n            .x(d => self.plot.x.scale(d.x))\n            .y(d => self.plot.y.scale(d.y));\n\n        var color = self.plot.color;\n\n        var defaultColor = \"black\";\n        if(Utils.isFunction(color)){\n            if(values.length && groupVal!==false){\n                if(self.config.series){\n                    color =self.plot.colorCategory(groupVal);\n                }else{\n                    color = color(values[0]);\n                }\n\n            }else{\n                color = defaultColor;\n            }\n        }else if(!color && groupVal===false){\n            color = defaultColor;\n        }\n\n\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\n        return {\n            group: groupVal || false,\n            line: line,\n            linePoints: linePoints,\n            color: color,\n            confidence: confidence\n        };\n    }\n\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\n        var self = this;\n        var slope = linearRegression.m;\n        var n = points.length;\n        var degreesOfFreedom = Math.max(0, n-2);\n\n        var alpha = 1 - self.config.confidence.level;\n        var criticalProbability  = 1 - alpha/2;\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\n\n        var xValues = points.map(d=>d[0]);\n        var meanX = StatisticsUtils.mean(xValues);\n        var xMySum=0;\n        var xSum=0;\n        var xPowSum=0;\n        var ySum=0;\n        var yPowSum=0;\n        points.forEach(p=>{\n            var x = p[0];\n            var y = p[1];\n\n            xMySum += x*y;\n            xSum+=x;\n            ySum+=y;\n            xPowSum+= x*x;\n            yPowSum+= y*y;\n        });\n        var a = linearRegression.m;\n        var b = linearRegression.b;\n\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\n\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n        var marginOfError =  x=> criticalValue* errorFn(x);\n\n\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n\n        var computeConfidenceAreaPoint = x=>{\n            var linearRegression = linearRegressionLine(x);\n            var moe = marginOfError(x);\n            var confDown = linearRegression - moe;\n            var confUp = linearRegression + moe;\n            return {\n                x: x,\n                y0: confDown,\n                y1: confUp\n            }\n\n        };\n\n        var centerX = (extentX[1]+extentX[0])/2;\n\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n\n        var fitInPlot = y => y;\n\n        var confidenceArea =  d3.area()\n        .curve(self.config.confidence.areaCurve)\n            .x(d => self.plot.x.scale(d.x))\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\n\n        return {\n            area:confidenceArea,\n            points:confidenceAreaPoints\n        };\n    }\n\n    update(newData){\n        super.update(newData);\n        this.updateRegressionLines();\n\n    };\n\n    updateRegressionLines() {\n        var self = this;\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\n\n        var clipPathId = self.prefixClass(\"clip\");\n\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\n            .attr(\"id\", clipPathId);\n\n\n        regressionContainerClip.selectOrAppend('rect')\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        regressionContainer.attr(\"clip-path\", (d,i) => \"url(#\"+clipPathId+\")\");\n\n        var regressionClass = this.prefixClass(\"regression\");\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\n        var regressionSelector = \"g.\"+regressionClass;\n        var regression = regressionContainer.selectAll(regressionSelector)\n            .data(self.plot.regressions, (d,i)=> d.group);\n\n\n        var regressionEnter = regression.enter().appendSelector(regressionSelector);\n        var regressionMerge = regressionEnter.merge(regression);\n        var lineClass = self.prefixClass(\"line\");\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", lineClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\");\n\n        var line = regressionMerge.select(\"path.\"+lineClass)\n            .style(\"stroke\", r => r.color);\n        \n        var lineT = line;\n        if (self.transitionEnabled()) {\n            lineT = line.transition();\n        }\n\n        lineT.attr(\"d\", r => r.line(r.linePoints))\n\n\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", confidenceAreaClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .style(\"opacity\", \"0.4\");\n\n\n\n        var area = regressionMerge.select(\"path.\"+confidenceAreaClass);\n\n        var areaT = area;\n        if (self.transitionEnabled()) {\n            areaT = area.transition();\n        }\n        areaT.attr(\"d\", r => r.confidence.area(r.confidence.points));\n        areaT.style(\"fill\", r => r.color)\n        regression.exit().remove();\n\n    }\n\n\n\n}\n\n","import {ChartWithColorGroups} from \"./chart-with-color-groups\";\nimport {ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\n    size= undefined; //scatter plot cell size\n    minCellSize = 50;\n    maxCellSize = 1000;\n    padding= 20; //scatter plot cell padding\n    brush= true;\n    guides= true; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n    ticks= undefined; //ticks number, (default: computed using cell size)\n    x={// X axis config\n        orient: \"bottom\",\n        scale: \"linear\"\n    };\n    y={// Y axis config\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    groups={\n        key: undefined, //object property name or array index with grouping variable\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\n    };\n    variables= {\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => d[variableKey] // variable value accessor\n    };\n\n    constructor(custom){\n        super();\n        Utils.deepExtend(this, custom);\n    }\n\n\n}\n\nexport class ScatterPlotMatrix extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        var self = this;\n        var margin = this.plot.margin;\n        var conf = this.config;\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.dot={\n            color: null//color scale mapping function\n        };\n        \n        this.setupVariables();\n\n        this.plot.size = conf.size;\n\n\n        var width = conf.width;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), margin);\n        if (!width) {\n            if(!this.plot.size){\n                this.plot.size =  Math.min(conf.maxCellSize, Math.max(conf.minCellSize, availableWidth/this.plot.variables.length));\n            }\n            width = margin.left + margin.right + this.plot.variables.length*this.plot.size;\n        }\n        if(!this.plot.size){\n            this.plot.size = (width - (margin.left + margin.right)) / this.plot.variables.length;\n        }\n\n        var height = width;\n        if (!height) {\n            height = availableHeight;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n\n\n        this.plot.ticks = conf.ticks;\n\n        if(this.plot.ticks===undefined){\n            this.plot.ticks = this.plot.size / 40;\n        }\n\n        this.setupX();\n        this.setupY();\n\n        return this;\n\n    };\n\n    setupVariables() {\n        var variablesConf = this.config.variables;\n\n        var data = this.plot.groupedData;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if(!plot.variables || !plot.variables.length){\n\n            plot.variables = data.length ? Utils.inferVariables(data[0].values, this.config.groups.key, this.config.includeInPlot) : [];\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            var min = d3.min(data, s=>d3.min(s.values, d=>variablesConf.value(d, variableKey)));\n            var max = d3.max(data, s=>d3.max(s.values, d=>variablesConf.value(d, variableKey)));\n            plot.domainByVariable[variableKey] = [min,max];\n            var label = variableKey;\n            if(variablesConf.labels && variablesConf.labels.length>index){\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        plot.subplots = [];\n    };\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config;\n\n        \n        x.value = conf.variables.value;\n        x.scale = Utils.createScale(conf.x.scale).range([conf.padding / 2, plot.size - conf.padding / 2]);\n        x.map = (d, variable) => x.scale(x.value(d, variable));\n\n        x.axis = Utils.createAxis(conf.x.orient, x.scale).ticks(plot.ticks);\n        x.axis.tickSize(plot.size * plot.variables.length);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config;\n\n        y.value = conf.variables.value;\n        y.scale = Utils.createScale(conf.y.scale).range([ plot.size - conf.padding / 2, conf.padding / 2]);\n\n        y.map = (d, variable) => y.scale(y.value(d, variable));\n        y.axis = Utils.createAxis(conf.y.orient, y.scale).ticks(plot.ticks);\n        y.axis.tickSize(-plot.size * plot.variables.length);\n    };\n\n    update( newData) {\n        super.update(newData);\n\n        var self =this;\n        var n = self.plot.variables.length;\n        var conf = this.config;\n\n        var axisClass = self.prefixClass(\"axis\");\n        var axisXClass = axisClass+\"-x\";\n        var axisYClass = axisClass+\"-y\";\n\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\n\n        var noGuidesClass = self.prefixClass(\"no-guides\");\n        var xAxis = self.svgG.selectAll(xAxisSelector)\n            .data(self.plot.variables);\n\n        var xAxisMerge = xAxis.enter().appendSelector(xAxisSelector)\n            .classed(noGuidesClass, !conf.guides).merge(xAxis);\n\n\n        xAxisMerge.attr(\"transform\", (d, i) => \"translate(\" + (n - i - 1) * self.plot.size + \",0)\")\n            .each(function(d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);\n                var axis = d3.select(this);\n                if (self.transitionEnabled()) {\n                    axis = axis.transition();\n                }\n                axis.call(self.plot.x.axis);\n\n            });\n\n        xAxis.exit().remove();\n\n        var yAxis = self.svgG.selectAll(yAxisSelector)\n            .data(self.plot.variables);\n        var yAxisMerge = yAxis.enter().appendSelector(yAxisSelector).merge(yAxis);\n        yAxisMerge.classed(noGuidesClass, !conf.guides)\n            .attr(\"transform\", (d, i) => \"translate(0,\" + i * self.plot.size + \")\");\n        yAxisMerge.each(function(d) {\n            self.plot.y.scale.domain(self.plot.domainByVariable[d]);\n            var axis = d3.select(this);\n            if (self.transitionEnabled()) {\n                axis = axis.transition();\n            }\n            axis.call(self.plot.y.axis);\n\n        });\n\n        yAxis.exit().remove();\n\n        var cellClass =  self.prefixClass(\"cell\");\n        var cell = self.svgG.selectAll(\".\"+cellClass)\n            .data(self.utils.cross(self.plot.variables, self.plot.variables));\n\n        var cellEnter =  cell.enter().appendSelector(\"g.\"+cellClass);\n        cellEnter.filter(d => d.i === d.j).append(\"text\");\n\n        var cellMerge = cellEnter.merge(cell);\n        cellMerge.attr(\"transform\", d => \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\");\n\n        if(conf.brush){\n            this.drawBrush(cellMerge);\n        }\n\n\n        cellMerge.each(plotSubplot);\n\n        //Labels\n        cellMerge.select(\"text\")\n            .attr(\"x\", conf.padding)\n            .attr(\"y\", conf.padding)\n            .attr(\"dy\", \".71em\")\n            .text( d => self.plot.labelByVariable[d.x]);\n\n        cell.exit().remove();\n\n        function plotSubplot(p) {\n            var plot = self.plot;\n            plot.subplots.push(p);\n            var cell = d3.select(this);\n\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n            var frameClass =  self.prefixClass(\"frame\");\n            cell.selectOrAppend(\"rect.\"+frameClass)\n                .attr(\"class\", frameClass)\n                .attr(\"x\", conf.padding / 2)\n                .attr(\"y\", conf.padding / 2)\n                .attr(\"width\", plot.size - conf.padding)\n                .attr(\"height\", plot.size - conf.padding);\n            \n            p.update = function() {\n\n                var subplot = this;\n                var layerClass = self.prefixClass('layer');\n\n\n                var layer = cell.selectAll(\"g.\"+layerClass).data(self.plot.groupedData);\n\n                var layerMerge = layer.enter().appendSelector(\"g.\"+layerClass).merge(layer);\n\n                var dots = layerMerge.selectAll(\"circle\")\n                    .data(d=>d.values);\n\n                var dotsMerge = dots.enter().append(\"circle\").merge(dots);\n\n                var dotsT = dotsMerge;\n                if (self.transitionEnabled()) {\n                    dotsT = dotsMerge.transition();\n                }\n\n                dotsT.attr(\"cx\", (d) => plot.x.map(d, subplot.x))\n                    .attr(\"cy\", (d) => plot.y.map(d, subplot.y))\n                    .attr(\"r\", self.config.dotRadius);\n\n\n                if (plot.seriesColor) {\n                    layerMerge.style(\"fill\", plot.seriesColor)\n                }else if(plot.color){\n                    dotsMerge.style(\"fill\", plot.color)\n                }\n\n\n                if (plot.tooltip) {\n                    dotsMerge.on(\"mouseover\", (d) => {\n\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                        var group = self.config.groups ? self.config.groups.value.call(self.config, d) : null;\n                        if (group || group === 0) {\n                            group = plot.groupToLabel[group];\n                            html += \"<br/>\";\n                            var label = self.config.groups.label;\n                            if (label) {\n                                html += label + \": \";\n                            }\n                            html += group\n                        }\n                        self.showTooltip(html);\n                    })\n                        .on(\"mouseout\", (d)=> {\n                            self.hideTooltip();\n                        });\n                }\n\n                dots.exit().remove();\n                layer.exit().remove();\n            };\n            p.update();\n\n        }\n    };\n\n    drawBrush(cell) {\n        var self = this;\n        var hiddenClass = self.plot.hiddenClass =  self.prefixClass(\"hidden\");\n        var brush = d3.brush()\n            // .x(self.plot.x.scale)\n            // .y(self.plot.y.scale)\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n        brush.extent([[0, 0], [self.plot.size, self.plot.size]]);\n        cell.selectOrAppend(\"g.brush-container\").call(brush);\n\n        self.clearBrush();\n\n        // Clear the previously-active brush, if any.\n        function brushstart(p) {\n            if (self.plot.brushCell !== this) {\n                self.clearBrush();\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                self.plot.brushCell = this;\n                self.plot.brush = brush;\n            }\n        }\n\n        // Highlight the selected circles.\n        function brushmove(p) {\n            var s = d3.event.selection;\n            if(!s)return;\n            var e = s.map(_=> [self.plot.x.scale.invert(_[0]), self.plot.y.scale.invert(_[1])]);\n            // console.log(e);\n\n            self.svgG.selectAll(\"circle\").classed(hiddenClass, function (d) {\n                var x = parseFloat(d[p.x]),\n                    y = parseFloat(d[p.y]);\n\n                return e[0][0] > x || x > e[1][0]\n                    || e[1][1] > y || y > e[0][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) self.svgG.selectAll(\".\"+hiddenClass).classed(hiddenClass, false);\n        }\n    };\n\n    clearBrush(){\n        var self = this;\n        if(!self.plot.brushCell){\n            return;\n        }\n        \n        self.plot.brush.move(d3.select(self.plot.brushCell), null);\n        self.svgG.selectAll(\".\"+self.plot.hiddenClass).classed(self.plot.hiddenClass, false);\n        self.plot.brushCell=null;\n\n    }\n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ScatterPlotConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ScatterPlot extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ScatterPlotConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.updateDots();\n    };\n\n    updateDots() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var dotClass = this.dotClass = self.prefixClass('dot');\n        self.dotsContainerClass = self.prefixClass('dots-container');\n\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n        var layer = dotsContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values)\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n        layer.exit().remove();\n    }\n}\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\n\nvar su = module.exports.StatisticsUtils ={};\nsu.sampleCorrelation = require('simple-statistics/src/sample_correlation');\nsu.linearRegression = require('simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('simple-statistics/src/error_function');\nsu.standardDeviation = require('simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('simple-statistics/src/sample_standard_deviation');\nsu.variance = require('simple-statistics/src/variance');\nsu.mean = require('simple-statistics/src/mean');\nsu.zScore = require('simple-statistics/src/z_score');\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\nsu.quantile = require('simple-statistics/src/quantile');\n\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return tdistr(degreesOfFreedom, criticalProbability);\n};","import * as d3 from './d3'\n\nexport class Utils {\n    static SQRT_2 = 1.41421356237;\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n    static deepExtend(out) {\n\n        var utils = this;\n        var emptyOut = {};\n\n\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n            out = [];\n        }\n        out = out || {};\n\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            if (!source)\n                continue;\n\n            for (var key in source) {\n                if (!source.hasOwnProperty(key)) {\n                    continue;\n                }\n                var isArray = Array.isArray(out[key]);\n                var isObject = utils.isObject(out[key]);\n                var srcObj = utils.isObject(source[key]);\n\n                if (isObject && !isArray && srcObj) {\n                    utils.deepExtend(out[key], source[key]);\n                } else {\n                    out[key] = source[key];\n                }\n            }\n        }\n\n        return out;\n    };\n\n    static mergeDeep(target, source) {\n        let output = Object.assign({}, target);\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n            Object.keys(source).forEach(key => {\n                if (Utils.isObjectNotArray(source[key])) {\n                    if (!(key in target))\n                        Object.assign(output, {[key]: source[key]});\n                    else\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\n                } else {\n                    Object.assign(output, {[key]: source[key]});\n                }\n            });\n        }\n        return output;\n    }\n\n    static cross(a, b) {\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\n        return c;\n    };\n\n    static inferVariables(data, groupKey, includeGroup) {\n        var res = [];\n        if(!data){\n            return res;\n        }\n\n        if (data.length) {\n            var d = data[0];\n            if (d instanceof Array) {\n                res = d.map(function (v, i) {\n                    return i;\n                });\n            } else if (typeof d === 'object') {\n\n                for (var prop in d) {\n                    if (!d.hasOwnProperty(prop)) continue;\n\n                    res.push(prop);\n                }\n            }\n        }\n        if (groupKey !== null && groupKey !== undefined && !includeGroup) {\n            var index = res.indexOf(groupKey);\n            if (index > -1) {\n                res.splice(index, 1);\n            }\n        }\n        return res\n    };\n\n    static isObjectNotArray(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\n    };\n\n    static isArray(item) {\n        return Array.isArray(item);\n    };\n\n    static isObject(a) {\n        return a !== null && typeof a === 'object';\n    };\n\n    static isNumber(a) {\n        return !isNaN(a) && typeof a === 'number';\n    };\n\n    static isFunction(a) {\n        return typeof a === 'function';\n    };\n\n    static isDate(a){\n        return Object.prototype.toString.call(a) === '[object Date]'\n    }\n\n    static isString(a){\n        return typeof a === 'string' || a instanceof String\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n        \n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return Utils.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return Utils.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n        var defs = Utils.selectOrAppend(svg, \"defs\");\n        var linearGradient = defs.append(\"linearGradient\")\n            .attr(\"id\", gradientId);\n\n        linearGradient\n            .attr(\"x1\", x1 + \"%\")\n            .attr(\"y1\", y1 + \"%\")\n            .attr(\"x2\", x2 + \"%\")\n            .attr(\"y2\", y2 + \"%\");\n\n        //Append multiple color stops by using D3's data/enter step\n        var stops = linearGradient.selectAll(\"stop\")\n            .data(range);\n\n        var stopsMerge = stops.enter().append(\"stop\").merge(stops);\n\n        stopsMerge.attr(\"offset\", (d, i) => i / (range.length - 1))\n            .attr(\"stop-color\", d => d);\n\n        stops.exit().remove();\n    }\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width){\n        var textObj = textD3Obj.node();\n        textObj.textContent=textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength()>width+margin){\n            for (var x=textString.length-3;x>0;x-=1){\n                if (textObj.getSubStringLength(0,x)+ellipsisLength<=width+margin){\n                    textObj.textContent=textString.substring(0,x)+\"...\";\n                    return true;\n                }\n            }\n            textObj.textContent=\"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip){\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if(ellipsisPlaced && tooltip){\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element){\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    static createScale(scaleName) {\n        var scaleFunctionName = 'scale'+Utils.capitalizeFirstLetter(scaleName);\n        try{\n            return d3[scaleFunctionName]();\n        }catch (e){\n            throw 'ODC-D3 - scale not supported: '+scaleName+ ' ('+scaleFunctionName+')';\n        }\n    }\n\n    static createAxis(orient, scale){\n        var axisFnName = 'axis'+Utils.capitalizeFirstLetter(orient);\n        try{\n            return d3[axisFnName](scale)\n        }catch (e){\n            throw 'ODC-D3 - axis orient not supported: '+orient;\n        }\n    }\n}\n"]}