{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/simple-statistics/src/mean.js","odc-d3.js","bower_components/simple-statistics/src/sample_correlation.js","bower_components/simple-statistics/src/sample_covariance.js","bower_components/simple-statistics/src/sample_standard_deviation.js","bower_components/simple-statistics/src/sample_variance.js","bower_components/simple-statistics/src/sum.js","bower_components/simple-statistics/src/sum_nth_power_deviations.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/index.js","src/legend.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ODCD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","mean","x","NaN","sum","./sum","2","sampleCorrelation","y","cov","sampleCovariance","xstd","sampleStandardDeviation","ystd","./sample_covariance","./sample_standard_deviation","3","xmean","ymean","besselsCorrection","./mean","4","sampleVarianceX","sampleVariance","isNaN","Math","sqrt","./sample_variance","5","sumSquaredDeviationsValue","sumNthPowerDeviations","./sum_nth_power_deviations","6","correctedCurrentValue","nextSum","errorCompensation","7","meanValue","pow","8","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Chart","ChartConfig","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","custom","cssClassPrefix","svgClass","width","height","margin","left","right","top","bottom","tooltip","Utils","deepExtend","base","data","config","utils","plot","_attached","_layers","_events","_isInitialized","_isAttached","baseContainer","setConfig","setData","init","postInit","initPlot","initSvg","initTooltip","draw","svg","svgG","selectOrAppend","d3","select","remove","attr","on","style","attachmentData","attachmentName","update","chart","arguments","name","callback","context","events","push","_chart","once","off","apply","names","event","j","keys","splice","ev","args","Array","slice","node","./utils","9","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","CorrelationMatrix","CorrelationMatrixConfig","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_statisticsUtils","_legend","_scatterplot","_ChartConfig","_this","guides","legend","highlightLabels","variables","labels","d","variableKey","scale","correlation","domain","range","xValues","yValues","StatisticsUtils","cell","shape","size","sizeMin","sizeMax","padding","_Chart","placeholderSelector","conf","matrix","cells","color","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","getBoundingClientRect","cellSize","max","min","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","rangeBands","map","corrConf","cellConf","type","shapeSize","radiusMax","radiusScale","linear","radius","c","abs","radiusX","radiusY","rotateVal","v","variablesConf","domainByVariable","inferVariables","groups","includeInPlot","labelByVariable","forEach","index","extent","label","matrixCells","variableToValues","v1","row","v2","corr","rowVar","colVar","col","newData","updateCells","updateVariableLabels","updateLegend","labelClass","labelXClass","labelYClass","labelsX","selectAll","enter","append","text","exit","labelsY","cellClass","cellShape","selector","wrongShapes","shapes","mouseoverCallbacks","mouseoutCallbacks","transition","duration","html","pageX","pageY","highlightClass","xLabelClass","yLabelClass","classed","trigger","legendX","legendY","barWidth","barHeight","Legend","linearGradientBar","containerSelector","_this3","scatterPlotConfig","scatterPlot","ScatterPlot","attach","./chart","./legend","./scatterplot","./statistics-utils","10","D3Extensions","selection","11","ScatterPlotMatrixConfig","ScatterPlotMatrix","ScatterPlotConfig","_scatterplotMatrix","_correlationMatrix","_d3Extensions","extend","./correlation-matrix","./d3-extensions","./scatterplot-matrix","12","legendParent","legendClass","container","gradientId","linearGradient","ticks","ticksNumber","13","_ScatterPlotConfig","brush","orient","dot","boundingClientRect","maxWidth","setupX","setupY","d3ColorCategory","colorCategory","colorValue","String","subplots","variable","axis","tickSize","plotSubplot","p","subplot","dots","group","each","cross","drawBrush","filter","brushstart","brushCell","clear","brushmove","brushend","empty","14","drawAxisX","drawAxisY","axisConf","15","su","../bower_components/simple-statistics/src/sample_correlation","16","_defineProperty","obj","_typeof","Symbol","iterator","out","isArray","source","hasOwnProperty","isObject","srcObj","output","assign","isObjectNotArray","mergeDeep","b","m","groupKey","includeGroup","res","prop","indexOf","item","element","selectorParts","split","shift","selectorModifier","selectorItem","x1","y1","x2","y2","defs","stops"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,MAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCAA,YAkBA,SAAS0B,GAAKC,GAEV,MAAiB,KAAbA,EAAEH,OAAuBI,IAEtBC,EAAIF,GAAKA,EAAEH,OAnBtB,GAAIK,GAAMX,EAAQ,QAsBlBjB,GAAOD,QAAU0B,ICKdI,QAAQ,IAAIC,GAAG,SAASb,EAAQjB,EAAOD,GC9B1C,YAkBA,SAASgC,GAAkBL,EAAuBM,GAC9C,GAAIC,GAAMC,EAAiBR,EAAGM,GAC1BG,EAAOC,EAAwBV,GAC/BW,EAAOD,EAAwBJ,EAEnC,OAAOC,GAAME,EAAOE,EApBxB,GAAIH,GAAmBjB,EAAQ,uBAC3BmB,EAA0BnB,EAAQ,8BAsBtCjB,GAAOD,QAAUgC,IDiCdO,sBAAsB,EAAEC,8BAA8B,IAAIC,GAAG,SAASvB,EAAQjB,EAAOD,GE3DxF,YAkBA,SAASmC,GAAiBR,EAAsBM,GAG5C,GAAIN,EAAEH,QAAU,GAAKG,EAAEH,SAAWS,EAAET,OAChC,MAAOI,IAeX,KAAK,GARDc,GAAQhB,EAAKC,GACbgB,EAAQjB,EAAKO,GACbJ,EAAM,EAMDV,EAAI,EAAGA,EAAIQ,EAAEH,OAAQL,IAC1BU,IAAQF,EAAER,GAAKuB,IAAUT,EAAEd,GAAKwB,EAMpC,IAAIC,GAAoBjB,EAAEH,OAAS,CAGnC,OAAOK,GAAMe,EA5CjB,GAAIlB,GAAOR,EAAQ,SA+CnBjB,GAAOD,QAAUmC,IF8DdU,SAAS,IAAIC,GAAG,SAAS5B,EAAQjB,EAAOD,GGhH3C,YAeA,SAASqC,GAAwBV,GAE7B,GAAIoB,GAAkBC,EAAerB,EACrC,OAAIsB,OAAMF,GAA2BnB,IAC9BsB,KAAKC,KAAKJ,GAhBrB,GAAIC,GAAiB9B,EAAQ,oBAmB7BjB,GAAOD,QAAUqC,IHqHde,oBAAoB,IAAIC,GAAG,SAASnC,EAAQjB,EAAOD,GI3ItD,YAqBA,SAASgD,GAAerB,GAEpB,GAAIA,EAAEH,QAAU,EAAK,MAAOI,IAE5B,IAAI0B,GAA4BC,EAAsB5B,EAAG,GAKrDiB,EAAoBjB,EAAEH,OAAS,CAGnC,OAAO8B,GAA4BV,EA9BvC,GAAIW,GAAwBrC,EAAQ,6BAiCpCjB,GAAOD,QAAUgD,IJgJdQ,6BAA6B,IAAIC,GAAG,SAASvC,EAAQjB,EAAOD,GKpL/D,YAmBA,SAAS6B,GAAIF,GAiBT,IAAK,GALD+B,GAGAC,EAXA9B,EAAM,EAKN+B,EAAoB,EAQfzC,EAAI,EAAGA,EAAIQ,EAAEH,OAAQL,IAE1BuC,EAAwB/B,EAAER,GAAKyC,EAK/BD,EAAU9B,EAAM6B,EAOhBE,EAAoBD,EAAU9B,EAAM6B,EAIpC7B,EAAM8B,CAGV,OAAO9B,GAGX5B,EAAOD,QAAU6B,OLwLXgC,GAAG,SAAS3C,EAAQjB,EAAOD,GMpPjC,YAmBA,SAASuD,GAAsB5B,EAAuBf,GAIlD,IAAK,GAHDkD,GAAYpC,EAAKC,GACjBE,EAAM,EAEDV,EAAI,EAAGA,EAAIQ,EAAEH,OAAQL,IAC1BU,GAAOqB,KAAKa,IAAIpC,EAAER,GAAK2C,EAAWlD,EAGtC,OAAOiB,GAxBX,GAAIH,GAAOR,EAAQ,SA2BnBjB,GAAOD,QAAUuD,INuPdV,SAAS,IAAImB,GAAG,SAAS9C,EAAQjB,EAAOD,GAC3C,YAWA,SAASiE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAThHC,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,IAEXvE,EAAQwE,MAAQxE,EAAQyE,YAAcC,MAEtC,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,MO7RhiBoB,EAAArE,EAAA,WAGauD,EPgSKzE,EOhSLyE,YAaT,QAAAA,GAAYe,GAAQvB,EAAAzD,KAAAiE,GAAAjE,KAZpBiF,eAAiB,OAYGjF,KAXpBkF,SAAWlF,KAAKiF,eAAiB,cAWbjF,KAVpBmF,MAAQjB,OAUYlE,KATpBoF,OAASlB,OASWlE,KARpBqF,QACIC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,OAAQ,IAIQzF,KAFpB0F,SAAU,EAGFV,GACAD,EAAAY,MAAMC,WAAW5F,KAAMgF,GPqSvBxF,GO9RCwE,MP8Re,WO/QxB,QAAAA,GAAY6B,EAAMC,EAAMC,GAAQtC,EAAAzD,KAAAgE,GAAAhE,KAdhCgG,MAcgCjB,EAAAY,MAAA3F,KAVhCiG,MACIZ,WAS4BrF,KAPhCkG,aAOgClG,KANhCmG,WAMgCnG,KALhCoG,WAKgCpG,KAHhCqG,gBAAe,EAKXrG,KAAKsG,YAAcT,YAAgB7B,GAEnChE,KAAKuG,cAAgBV,EAErB7F,KAAKwG,UAAUT,GAEXD,GACA9F,KAAKyG,QAAQX,GAGjB9F,KAAK0G,OACL1G,KAAK2G,WP6jBT,MA/RAxC,GAAaH,IACTW,IAAK,YACLZ,MAAO,SO7RDgC,GAON,MANKA,GAGD/F,KAAK+F,OAASA,EAFd/F,KAAK+F,OAAS,GAAI9B,GAKfjE,QPgSP2E,IAAK,UACLZ,MAAO,SO9RH+B,GAEJ,MADA9F,MAAK8F,KAAOA,EACL9F,QPiSP2E,IAAK,OACLZ,MAAO,WO9RP,GAAIhE,GAAOC,IASX,OANAD,GAAK6G,WACL7G,EAAK8G,UAEL9G,EAAK+G,cACL/G,EAAKgH,OACL/G,KAAKqG,gBAAe,EACbrG,QPiSP2E,IAAK,WACLZ,MAAO,eAEPY,IAAK,UACLZ,MAAO,WO7RP,GAAIhE,GAAOC,KACP+F,EAAS/F,KAAK+F,OAGdZ,EAAQpF,EAAKkG,KAAKd,MAAQY,EAAOV,OAAOC,KAAOS,EAAOV,OAAOE,MAC7DH,EAASrF,EAAKkG,KAAKb,OAASW,EAAOV,OAAOG,IAAMO,EAAOV,OAAOI,MAE9D1F,GAAKuG,aAeLvG,EAAKiH,IAAMjH,EAAKwG,cAAcS,IAC9BjH,EAAKkH,KAAOlH,EAAKiH,IAAIE,eAAe,gBAAgBnB,EAAOb,YAfvDlF,KAAKqG,gBACLc,GAAGC,OAAOrH,EAAKwG,eAAea,OAAO,OAAOC,SAEhDtH,EAAKiH,IAAMG,GAAGC,OAAOrH,EAAKwG,eAAeW,eAAe,OAExDnH,EAAKiH,IACAM,KAAK,QAASnC,GACdmC,KAAK,SAAUlC,GACfkC,KAAK,UAAW,QAAenC,EAAQ,IAAMC,GAC7CkC,KAAK,sBAAuB,iBAC5BA,KAAK,QAASvB,EAAOb,UAC1BnF,EAAKkH,KAAOlH,EAAKiH,IAAIE,eAAe,iBAOxCnH,EAAKkH,KAAKK,KAAK,YAAa,aAAevB,EAAOV,OAAOC,KAAO,IAAMS,EAAOV,OAAOG,IAAM,KAErFO,EAAOZ,QAASY,EAAOX,QACxB+B,GAAGC,OAAOvH,QACL0H,GAAG,SAAU,iBP8RtB5C,IAAK,cACLZ,MAAO,WOxRP,GAAIhE,GAAOC,IACPD,GAAKgG,OAAOL,UACR3F,EAAKuG,YAKLvG,EAAKkG,KAAKP,QAAS3F,EAAKwG,cAAcN,KAAKP,QAJ3C3F,EAAKkG,KAAKP,QAAUX,EAAAY,MAAMuB,eAAeC,GAAGC,OAAOrH,EAAKwG,eAAgB,iBAAkB,OACrFe,KAAK,QAAS,cACdE,MAAM,UAAW,OP8R9B7C,IAAK,WACLZ,MAAO,eAEPY,IAAK,SACLZ,MAAO,SOtRJ+B,GACCA,GACA9F,KAAKyG,QAAQX,EAEjB,IAAe2B,EACf,KAAK,GAAIC,KAAkB1H,MAAKkG,UAE5BuB,EAAiB3B,EAEjB9F,KAAKkG,UAAUwB,GAAgBC,OAAOF,EAG1C,OAAOzH,SPyRP2E,IAAK,OACLZ,MAAO,SOvRN+B,GAID,MAHA9F,MAAK2H,OAAO7B,GAGL9F,QP0SP2E,IAAK,SACLZ,MAAO,SOxRJ2D,EAAgBE,GACnB,MAAyB,KAArBC,UAAU7G,OACHhB,KAAKkG,UAAUwB,IAG1B1H,KAAKkG,UAAUwB,GAAkBE,EAC1BA,MP2RPjD,IAAK,KAkBLZ,MAAO,SOzRR+D,EAAMC,EAAUC,GACf,GAAIC,GAASjI,KAAKoG,QAAQ0B,KAAU9H,KAAKoG,QAAQ0B,MAMjD,OALAG,GAAOC,MACHH,SAAUA,EACVC,QAASA,GAAWhI,KACpBmI,OAAQnI,OAELA,QPgTP2E,IAAK,OACLZ,MAAO,QAASqE,GO5RfN,EAAMC,EAAUC,GACjB,GAAIjI,GAAOC,KACPoI,EAAO,QAAPA,KACArI,EAAKsI,IAAIP,EAAMM,GACfL,EAASO,MAAMtI,KAAM6H,WAEzB,OAAO7H,MAAKuH,GAAGO,EAAMM,EAAMJ,MPmT3BrD,IAAK,MACLZ,MAAO,SO7RP+D,EAAMC,EAAUC,GAChB,GAAIO,GAAOnI,EAAG6H,EAAQO,EAAO7H,EAAG8H,CAGhC,IAAyB,IAArBZ,UAAU7G,OAAc,CACxB,IAAK8G,IAAQ9H,MAAKoG,QACdpG,KAAKoG,QAAQ0B,GAAM9G,OAAS,CAEhC,OAAOhB,MAIX,GAAyB,IAArB6H,UAAU7G,OAKV,MAJAiH,GAASjI,KAAKoG,QAAQ0B,GAClBG,IACAA,EAAOjH,OAAS,GAEbhB,IAMX,KADAuI,EAAQT,GAAQA,GAAQjE,OAAO6E,KAAK1I,KAAKoG,SACpCzF,EAAI,EAAGA,EAAI4H,EAAMvH,OAAQL,IAI1B,IAHAP,EAAImI,EAAM5H,GACVsH,EAASjI,KAAKoG,QAAQhG,GACtBqI,EAAIR,EAAOjH,OACJyH,KACHD,EAAQP,EAAOQ,IACVV,GAAYA,IAAaS,EAAMT,UAC/BC,GAAWA,IAAYQ,EAAMR,UAC9BC,EAAOU,OAAOF,EAAG,EAK7B,OAAOzI,SP+RP2E,IAAK,UAeLZ,MAAO,SO/RH+D,GACJ,GAEInH,GAAGiI,EAFHC,EAAOC,MAAMhE,UAAUiE,MAAMhI,KAAK8G,UAAW,GAC7CI,EAASjI,KAAKoG,QAAQ0B,EAG1B,IAAe5D,SAAX+D,EACA,IAAKtH,EAAI,EAAGA,EAAIsH,EAAOjH,OAAQL,IAC3BiI,EAAKX,EAAOtH,GACZiI,EAAGb,SAASO,MAAMM,EAAGZ,QAASa,EAItC,OAAO7I,SPkSP2E,IAAK,uBACLZ,MAAO,WO/RP,MAAG/D,MAAKsG,YACGtG,KAAKuG,cAAcS,IAAIgC,OAE3B7B,GAAGC,OAAOpH,KAAKuG,eAAeyC,WPoSlChF,OAGRiF,UAAU,KAAKC,GAAG,SAASxI,EAAQjB,EAAOD,GAC7C,YAqBA,SAASiE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASuF,GAA2BpJ,EAAMgB,GAAQ,IAAKhB,EAAQ,KAAM,IAAIqJ,gBAAe,4DAAgE,QAAOrI,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BhB,EAAPgB,EAElO,QAASsI,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI3F,WAAU,iEAAoE2F,GAAeD,GAASxE,UAAYjB,OAAO2F,OAAOD,GAAcA,EAAWzE,WAAa2E,aAAe1F,MAAOuF,EAAU9E,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe8E,IAAY1F,OAAO6F,eAAiB7F,OAAO6F,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAvBje1F,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,IAEXvE,EAAQoK,kBAAoBpK,EAAQqK,wBAA0B3F,MAE9D,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,MAE5hBmG,EAAO,QAASC,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASrF,UAAW,IAAIsF,GAAOvG,OAAOwG,yBAAyBL,EAAQC,EAAW,IAAa/F,SAATkG,EAAoB,CAAE,GAAIE,GAASzG,OAAO0G,eAAeP,EAAS,OAAe,QAAXM,EAAmB,OAAkCP,EAAIO,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKrG,KAAgB,IAAIyG,GAASJ,EAAKL,GAAK,IAAe7F,SAAXsG,EAA4C,MAAOA,GAAOzJ,KAAKmJ,IQ/nB5d/B,EAAAzH,EAAA,WACAqE,EAAArE,EAAA,WACA+J,EAAA/J,EAAA,sBACAgK,EAAAhK,EAAA,YACAiK,EAAAjK,EAAA,iBAEamJ,ER2oBiBrK,EQ3oBjBqK,wBR2oBmD,SAAUe,GQzmBtE,QAAAf,GAAY7E,GAAQvB,EAAAzD,KAAA6J,EAAA,IAAAgB,GAAA1B,EAAAnJ,KAAA6D,OAAA0G,eAAAV,GAAA9I,KAAAf,MAAA,OAAA6K,GAhCpB3F,SAAW,yBAgCS2F,EA/BpBC,QAAS,EA+BWD,EA9BpBnF,SAAU,EA8BUmF,EA7BpBE,QAAS,EA6BWF,EA5BpBG,iBAAkB,EA4BEH,EA3BpBI,WACIC,OAAQhH,OACRwE,QACA3E,MAAO,SAACoH,EAAGC,GAAJ,MAAoBD,GAAEC,IAC7BC,MAAO,WAuBSR,EArBpBS,aACID,MAAO,SACPE,oBAA0B,EAAG,GAAK,IAAM,GACxCC,OAAQ,WAAY,OAAQ,eAAgB,QAAS,YAAa,UAAW,WAC7EzH,MAAO,SAAC0H,EAASC,GAAV,MAAsBjB,GAAAkB,gBAAgBnK,kBAAkBiK,EAASC,KAiBxDb,EAdpBe,MACIC,MAAO,UACPC,KAAM5H,OACN6H,QAAS,EACTC,QAAS,GACTC,QAAS,GASOpB,EAPpBxF,QACIC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,OAAQ,IAKJT,GACAD,EAAAY,MAAMC,WAANiF,EAAuB7F,GAHX6F,ER8pBpB,MApDAxB,GAAUQ,EAAyBe,GAoD5Bf,GACT1B,EAAOlE,YAEezE,GQzpBXoK,kBRypBuC,SAAUsC,GQxpB1D,QAAAtC,GAAYuC,EAAqBrG,EAAMC,GAAQ,MAAAtC,GAAAzD,KAAA4J,GAAAT,EAAAnJ,KAAA6D,OAAA0G,eAAAX,GAAA7I,KAAAf,KACrCmM,EAAqBrG,EAAM,GAAI+D,GAAwB9D,KR4iCjE,MApZAsD,GAAUO,EAAmBsC,GAQ7B/H,EAAayF,IACTjF,IAAK,YACLZ,MAAO,SQ/pBDgC,GACN,MAAA+D,GAAAjG,OAAA0G,eAAAX,EAAA9E,WAAA,YAAA9E,MAAAe,KAAAf,KAAuB,GAAI6J,GAAwB9D,ORkqBnDpB,IAAK,WACLZ,MAAO,WQ9pBP,GACIsB,GAASrF,KAAK+F,OAAOV,OACrB+G,EAAOpM,KAAK+F,MAChB/F,MAAKiG,MACD9E,KACAmK,aACIe,OAAQnI,OACRoI,MAAOpI,OACPqI,SACAV,WAKR7L,KAAKwM,gBACL,IAAIrH,GAAQiH,EAAKjH,MACbsH,EAAkBzM,KAAK0M,sBAC3B1M,MAAKiG,KAAKwG,gBAAkBA,CAE5B,IAAIE,GAAcF,EAAgBG,wBAAwBzH,KACtDA,GAEKnF,KAAKiG,KAAK4G,WACX7M,KAAKiG,KAAK4G,SAAWnK,KAAKoK,IAAIV,EAAKR,KAAKG,QAASrJ,KAAKqK,IAAIX,EAAKR,KAAKI,SAAU7G,EAAQE,EAAOC,KAAOD,EAAOE,OAASvF,KAAKiG,KAAKgF,UAAUjK,WAI5IhB,KAAKiG,KAAK4G,SAAW7M,KAAK+F,OAAO6F,KAAKE,KAEjC9L,KAAKiG,KAAK4G,WACX7M,KAAKiG,KAAK4G,SAAWnK,KAAKoK,IAAIV,EAAKR,KAAKG,QAASrJ,KAAKqK,IAAIX,EAAKR,KAAKI,QAASW,EAAc3M,KAAKiG,KAAKgF,UAAUjK,UAGnHmE,EAAQnF,KAAKiG,KAAK4G,SAAW7M,KAAKiG,KAAKgF,UAAUjK,OAASqE,EAAOC,KAAOD,EAAOE,MAInF,IAAIH,GAASD,CAab,OAZKC,KACDA,EAASqH,EAAgBG,wBAAwBxH,QAGrDpF,KAAKiG,KAAKd,MAAQA,EAAQE,EAAOC,KAAOD,EAAOE,MAC/CvF,KAAKiG,KAAKb,OAASpF,KAAKiG,KAAKd,MAE7BnF,KAAKgN,uBACLhN,KAAKiN,yBACLjN,KAAKkN,yBAGElN,QR8pBP2E,IAAK,uBACLZ,MAAO,WQ1pBP,GAAIkC,GAAOjG,KAAKiG,KACZ9E,EAAI8E,EAAK9E,EACTiL,EAAOpM,KAAK+F,OAAOkF,SAQvB9J,GAAE4C,MAAQqI,EAAKrI,MACf5C,EAAEkK,MAAQlE,GAAGkE,MAAMe,EAAKf,SAAS8B,YAAYlH,EAAKd,MAAO,IACzDhE,EAAEiM,IAAM,SAAAjC,GAAA,MAAKhK,GAAEkK,MAAMlK,EAAE4C,MAAMoH,QRiqB7BxG,IAAK,yBACLZ,MAAO,WQ7pBP,GAAIkC,GAAOjG,KAAKiG,KACZoH,EAAWrN,KAAK+F,OAAOuF,WAE3BrF,GAAKqF,YAAYiB,MAAMlB,MAAQlE,GAAGkE,MAAMgC,EAAShC,SAASE,OAAO8B,EAAS9B,QAAQC,MAAM6B,EAAS7B,MACjG,IAAIK,GAAQ5F,EAAKqF,YAAYO,SAEzByB,EAAWtN,KAAK+F,OAAO6F,IAC3BC,GAAM0B,KAAOD,EAASzB,KAEtB,IAAI2B,GAAYvH,EAAK4G,SAA8B,EAAnBS,EAASrB,OACzC,IAAkB,UAAdJ,EAAM0B,KAAkB,CACxB,GAAIE,GAAYD,EAAY,CAC5B3B,GAAM6B,YAAcvG,GAAGkE,MAAMsC,SAASpC,QAAQ,EAAG,IAAIC,OAAO,EAAGiC,IAC/D5B,EAAM+B,OAAS,SAAAC,GAAA,MAAIhC,GAAM6B,YAAYhL,KAAKoL,IAAID,EAAE9J,aAC7C,IAAkB,WAAd8H,EAAM0B,KAAmB,CAChC,GAAIE,GAAYD,EAAY,CAC5B3B,GAAM6B,YAAcvG,GAAGkE,MAAMsC,SAASpC,QAAQ,EAAG,IAAIC,OAAOiC,EAAW,IACvE5B,EAAMkC,QAAU,SAAAF,GAAA,MAAIhC,GAAM6B,YAAYhL,KAAKoL,IAAID,EAAE9J,SACjD8H,EAAMmC,QAAUP,EAEhB5B,EAAMoC,UAAY,SAAAC,GACd,MAAS,IAALA,EAAe,IACfA,EAAI,EAAU,MACX,UAEU,QAAdrC,EAAM0B,OACb1B,EAAMC,KAAO0B,MRsqBjB7I,IAAK,iBACLZ,MAAO,WQ/pBP,GAAIoK,GAAgBnO,KAAK+F,OAAOkF,UAE5BnF,EAAO9F,KAAK8F,KACZG,EAAOjG,KAAKiG,IAChBA,GAAKmI,oBACLnI,EAAKgF,UAAYkD,EAAczF,KAC1BzC,EAAKgF,WAAchF,EAAKgF,UAAUjK,SACnCiF,EAAKgF,UAAYlG,EAAAY,MAAM0I,eAAevI,EAAM9F,KAAK+F,OAAOuI,OAAO3J,IAAK3E,KAAK+F,OAAOwI,gBAGpFtI,EAAKiF,UACLjF,EAAKuI,mBACLvI,EAAKgF,UAAUwD,QAAQ,SAACrD,EAAasD,GACjCzI,EAAKmI,iBAAiBhD,GAAejE,GAAGwH,OAAO7I,EAAM,SAAUqF,GAC3D,MAAOgD,GAAcpK,MAAMoH,EAAGC,IAElC,IAAIwD,GAAQxD,CACR+C,GAAcjD,QAAUiD,EAAcjD,OAAOlK,OAAS0N,IAEtDE,EAAQT,EAAcjD,OAAOwD,IAEjCzI,EAAKiF,OAAOhD,KAAK0G,GACjB3I,EAAKuI,gBAAgBpD,GAAewD,ORuqBxCjK,IAAK,yBACLZ,MAAO,WQ/pBP,GAAIhE,GAAOC,KACP8F,EAAO9F,KAAK8F,KACZuG,EAASrM,KAAKiG,KAAKqF,YAAYe,UAC/BwC,EAAc7O,KAAKiG,KAAKqF,YAAYe,OAAOC,SAC3CrG,EAAOjG,KAAKiG,KAEZ6I,IACJ7I,GAAKgF,UAAUwD,QAAQ,SAACP,EAAGvN,GAEvBmO,EAAiBZ,GAAKpI,EAAKsH,IAAI,SAAAjC,GAAA,MAAGlF,GAAK9E,EAAE4C,MAAMoH,EAAG+C,OAGtDjI,EAAKgF,UAAUwD,QAAQ,SAACM,EAAIpO,GACxB,GAAIqO,KACJ3C,GAAOnE,KAAK8G,GAEZ/I,EAAKgF,UAAUwD,QAAQ,SAACQ,EAAIxG,GACxB,GAAIyG,GAAO,CACPH,IAAME,IACNC,EAAOnP,EAAKgG,OAAOuF,YAAYvH,MAAM+K,EAAiBC,GAAKD,EAAiBG,IAEhF,IAAIrD,IACAuD,OAAQJ,EACRK,OAAQH,EACRD,IAAKrO,EACL0O,IAAK5G,EACL1E,MAAOmL,EAEXF,GAAI9G,KAAK0D,GAETiD,EAAY3G,KAAK0D,URuqBzBjH,IAAK,SACLZ,MAAO,SQjqBJuL,GACHxF,EAAAjG,OAAA0G,eAAAX,EAAA9E,WAAA,SAAA9E,MAAAe,KAAAf,KAAasP,GAEbtP,KAAKuP,cACLvP,KAAKwP,uBAEDxP,KAAK+F,OAAOgF,QACZ/K,KAAKyP,kBRqqBT9K,IAAK,uBACLZ,MAAO,WQjqBP,GAAIhE,GAAOC,KACPiG,EAAOlG,EAAKkG,KACZyJ,EAAa3P,EAAKgG,OAAOd,eAAiB,QAC1C0K,EAAcD,EAAa,IAAMA,EAAa,KAC9CE,EAAcF,EAAa,IAAMA,EAAa,IAClDzJ,GAAKyJ,WAAaA,CAGlB,IAAIG,GAAU9P,EAAKkH,KAAK6I,UAAUH,GAC7B7J,KAAKG,EAAKgF,UAAW,SAACE,EAAGxK,GAAJ,MAAQwK,IAElC0E,GAAQE,QAAQC,OAAO,QAGvBH,EACKvI,KAAK,IAAK,SAAC6D,EAAGxK,GAAJ,MAAUA,GAAIsF,EAAK4G,SAAW5G,EAAK4G,SAAW,IACxDvF,KAAK,IAAKrB,EAAKb,QACfkC,KAAK,SACLA,KAAK,YAAa,SAAC6D,EAAGxK,GAAJ,MAAU,gBAAkBA,EAAIsF,EAAK4G,SAAW5G,EAAK4G,SAAW,GAAO,KAAO5G,EAAKb,OAAS,MAC9GkC,KAAK,cAAe,OACpBA,KAAK,QAAS,SAAC6D,EAAGxK,GAAJ,MAAUgP,GAAc,IAAMA,EAAc,IAAMhP,IAEhEsP,KAAK,SAAA/B,GAAA,MAAGjI,GAAKuI,gBAAgBN,KAElC2B,EAAQK,OAAO7I,QAIf,IAAI8I,GAAUpQ,EAAKkH,KAAK6I,UAAUF,GAC7B9J,KAAKG,EAAKgF,UAEfkF,GAAQJ,QAAQC,OAAO,QAGvBG,EACK7I,KAAK,IAAK,GACVA,KAAK,IAAK,SAAC6D,EAAGxK,GAAJ,MAAUA,GAAIsF,EAAK4G,SAAW5G,EAAK4G,SAAW,IACxDvF,KAAK,SACLA,KAAK,cAAe,OACpBA,KAAK,QAAS,SAAC6D,EAAGxK,GAAJ,MAAUiP,GAAc,IAAMA,EAAc,IAAMjP,IAEhEsP,KAAK,SAAA/B,GAAA,MAAGjI,GAAKuI,gBAAgBN,KAElC2B,EAAQK,OAAO7I,YRqqBf1C,IAAK,cACLZ,MAAO,WQ/pBP,GAAIhE,GAAOC,KACPiG,EAAOlG,EAAKkG,KACZmK,EAAYrQ,EAAKgG,OAAOd,eAAiB,OACzCoL,EAAYpK,EAAKqF,YAAYO,MAAM0B,KAKnCjB,GAFOtM,KAAK8F,KAEJ/F,EAAKkH,KAAK6I,UAAUM,GAC3BtK,KAAKG,EAAKqF,YAAYe,OAAOC,MAAO,SAACuB,EAAElN,GAAH,MAAOA,KAG/B2L,GAAMyD,QAAQC,OAAO,KACjC1I,KAAK,QAAS8I,EACnB9D,GAAMhF,KAAK,YAAa,SAAAuG,GAAA,MAAI,cAAgB5H,EAAK4G,SAAWgB,EAAEwB,IAAMpJ,EAAK4G,SAAW,GAAK,KAAO5G,EAAK4G,SAAWgB,EAAEmB,IAAM/I,EAAK4G,SAAW,GAAK,KAG7I,IAAIyD,GAAW,qBAAqBD,EAAU,IAE1CE,EAAcjE,EAAMwD,UAAUQ,EAClCC,GAAYlJ,QAEZ,IAAImJ,GAASlE,EAAMpF,eAAemJ,EAAU,eAAeA,EAExB,WAA/BpK,EAAKqF,YAAYO,MAAM0B,MAEvBiD,EACKlJ,KAAK,IAAKrB,EAAKqF,YAAYO,MAAM+B,QACjCtG,KAAK,KAAM,GACXA,KAAK,KAAM,GAGe,WAA/BrB,EAAKqF,YAAYO,MAAM0B,MAEvBiD,EACKlJ,KAAK,KAAMrB,EAAKqF,YAAYO,MAAMkC,SAClCzG,KAAK,KAAMrB,EAAKqF,YAAYO,MAAMmC,SAClC1G,KAAK,KAAM,GACXA,KAAK,KAAM,GAEXA,KAAK,YAAa,SAAAuG,GAAA,MAAI,UAAY5H,EAAKqF,YAAYO,MAAMoC,UAAUJ,EAAE9J,OAAS,MAIpD,QAA/BkC,EAAKqF,YAAYO,MAAM0B,MACvBiD,EACKlJ,KAAK,QAASrB,EAAKqF,YAAYO,MAAMC,MACrCxE,KAAK,SAAUrB,EAAKqF,YAAYO,MAAMC,MACtCxE,KAAK,KAAMrB,EAAK4G,SAAW,GAC3BvF,KAAK,KAAMrB,EAAK4G,SAAW,EAGpC,IAAI4D,MACAC,IAuBJ,IArBIzK,EAAKP,UAEL+K,EAAmBvI,KAAK,SAAA2F,GACpB5H,EAAKP,QAAQiL,aACRC,SAAS,KACTpJ,MAAM,UAAW,GACtB,IAAIqJ,GAAOhD,EAAE9J,KACbkC,GAAKP,QAAQmL,KAAKA,GACbrJ,MAAM,OAASL,GAAGqB,MAAMsI,MAAQ,EAAK,MACrCtJ,MAAM,MAAQL,GAAGqB,MAAMuI,MAAQ,GAAM,QAG9CL,EAAkBxI,KAAK,SAAA2F,GACnB5H,EAAKP,QAAQiL,aACRC,SAAS,KACTpJ,MAAM,UAAW,MAM1BzH,EAAKgG,OAAOiF,gBAAiB,CAC7B,GAAIgG,GAAiBjR,EAAKgG,OAAOd,eAAiB,YAC9CgM,EAAc,SAAApD,GAAA,MAAG5H,GAAKyJ,WAAa,MAAQ7B,EAAEwB,KAC7C6B,EAAc,SAAArD,GAAA,MAAG5H,GAAKyJ,WAAa,MAAQ7B,EAAEmB,IAGjDyB,GAAmBvI,KAAK,SAAA2F,GAEpB9N,EAAKkH,KAAK6I,UAAU,QAAUmB,EAAYpD,IAAIsD,QAAQH,GAAgB,GACtEjR,EAAKkH,KAAK6I,UAAU,QAAUoB,EAAYrD,IAAIsD,QAAQH,GAAgB,KAE1EN,EAAkBxI,KAAK,SAAA2F,GACnB9N,EAAKkH,KAAK6I,UAAU,QAAUmB,EAAYpD,IAAIsD,QAAQH,GAAgB,GACtEjR,EAAKkH,KAAK6I,UAAU,QAAUoB,EAAYrD,IAAIsD,QAAQH,GAAgB,KAK9E1E,EAAM/E,GAAG,YAAa,SAAAsG,GAClB4C,EAAmBhC,QAAQ,SAAA1G,GAAA,MAAUA,GAAS8F,OAE7CtG,GAAG,WAAY,SAAAsG,GACZ6C,EAAkBjC,QAAQ,SAAA1G,GAAA,MAAUA,GAAS8F,OAGrDvB,EAAM/E,GAAG,QAAS,SAAAsG,GACf9N,EAAKqR,QAAQ,gBAAiBvD,KAGjC2C,EAAOhJ,MAAM,OAAQ,SAAAqG,GAAA,MAAI5H,GAAKqF,YAAYiB,MAAMlB,MAAMwC,EAAE9J,SAExDuI,EAAM4D,OAAO7I,YRspBb1C,IAAK,eACLZ,MAAO,WQjpBP,GAAIkC,GAAOjG,KAAKiG,KACZoL,EAAUrR,KAAKiG,KAAKd,MAAQ,GAC5BmM,EAAU,EACVC,EAAW,GACXC,EAAYxR,KAAKiG,KAAKb,OAAS,EAC/BiG,EAAQpF,EAAKqF,YAAYiB,MAAMlB,KAEnCpF,GAAK8E,OAAS,GAAAL,GAAA+G,OAAWzR,KAAKgH,IAAKhH,KAAKiH,KAAMoE,EAAOgG,EAASC,GAASI,kBAAkBH,EAAUC,MRspBnG7M,IAAK,oBACLZ,MAAO,SQlpBO4N,EAAmB5L,GAAQ,GAAA6L,GAAA5R,KACrCD,EAAOC,IAEX+F,GAASA,KAGT,IAAI8L,IACAzM,OAAQrF,EAAKkG,KAAKb,OAAOrF,EAAKgG,OAAOV,OAAOG,IAAKzF,EAAKgG,OAAOV,OAAOI,OACpEN,MAAOpF,EAAKkG,KAAKb,OAAOrF,EAAKgG,OAAOV,OAAOG,IAAKzF,EAAKgG,OAAOV,OAAOI,OACnE6I,QACI3J,IAAK5E,EAAKgG,OAAOuI,OAAO3J,IACxBiK,MAAO7O,EAAKgG,OAAOuI,OAAOM,OAE9B9D,QAAQ,EAKZ+G,GAAoB9M,EAAAY,MAAMC,WAAWiM,EAAmB9L,GAGxD/F,KAAKuH,GAAG,gBAAiB,SAAAsG,GAIrBgE,EAAkB1Q,GACdwD,IAAKkJ,EAAEsB,OACPP,MAAO7O,EAAKkG,KAAKuI,gBAAgBX,EAAEsB,SAEvC0C,EAAkBpQ,GACdkD,IAAKkJ,EAAEuB,OACPR,MAAO7O,EAAKkG,KAAKuI,gBAAgBX,EAAEuB,SAEpCrP,EAAK+R,YACJ/R,EAAK+R,YAAYtL,UAAUqL,GAAmBnL,QAE9C3G,EAAK+R,YAAc,GAAAnH,GAAAoH,YAAgBJ,EAAmB5R,EAAK+F,KAAM+L,GACjED,EAAKI,OAAO,cAAejS,EAAK+R,oBRqpBrClI,GACTzB,EAAOnE,SAENiO,UAAU,EAAEC,WAAW,GAAGC,gBAAgB,GAAGC,qBAAqB,GAAGnJ,UAAU,KAAKoJ,IAAI,SAAS3R,EAAQjB,EAAOD,GACnH,YAWA,SAASiE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAThHC,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,IAEXvE,EAAQ8S,aAAepO,MAEvB,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,MSzmChiBoB,EAAArE,EAAA,UT+mCmBlB,GS5mCN8S,aT4mC6B,WACtC,QAASA,KACL7O,EAAgBzD,KAAMsS,GAY1B,MATAnO,GAAamO,EAAc,OACvB3N,IAAK,SACLZ,MAAO,WShnCPoD,GAAGoL,UAAUxC,MAAMjL,UAAUoC,eACzBC,GAAGoL,UAAUzN,UAAUoC,eAAiB,SAASoJ,GAC7C,MAAOvL,GAAAY,MAAMuB,eAAelH,KAAMsQ,QTqnCvCgC,OAGRrJ,UAAU,KAAKuJ,IAAI,SAAS9R,EAAQjB,EAAOD,GAC9C,YAEAqE,QAAOC,eAAetE,EAAS,cAC7BuE,OAAO,IAETvE,EAAQmM,gBAAkBnM,EAAQqK,wBAA0BrK,EAAQoK,kBAAoBpK,EAAQiT,wBAA0BjT,EAAQkT,kBAAoBlT,EAAQmT,kBAAoBnT,EAAQuS,YAAc7N,MAExM,IAAIyG,GAAejK,EAAQ,gBAE3BmD,QAAOC,eAAetE,EAAS,eAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAOY,GU1oCHoH,eV6oCRlO,OAAOC,eAAetE,EAAS,qBAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAOY,GUhpCUgI,oBVopCrB,IAAIC,GAAqBlS,EAAQ,uBAEjCmD,QAAOC,eAAetE,EAAS,qBAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAO6I,GUxpCHF,qBV2pCR7O,OAAOC,eAAetE,EAAS,2BAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAO6I,GU9pCgBH,0BVkqC3B,IAAII,GAAqBnS,EAAQ,uBAEjCmD,QAAOC,eAAetE,EAAS,qBAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAO8I,GUtqCHjJ,qBVyqCR/F,OAAOC,eAAetE,EAAS,2BAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAO8I,GU5qCgBhJ,0BVgrC3B,IAAIY,GAAmB/J,EAAQ,qBAE/BmD,QAAOC,eAAetE,EAAS,mBAC7BgF,YAAY,EACZuF,IAAK,WACH,MAAOU,GUprCHkB,kBANR,IAAAmH,GAAApS,EAAA,kBACAoS,GAAAR,aAAaS,WVisCVC,uBAAuB,EAAEC,kBAAkB,GAAGd,gBAAgB,GAAGe,uBAAuB,GAAGd,qBAAqB,KAAKe,IAAI,SAASzS,EAAQjB,EAAOD,GACpJ,YAWA,SAASiE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAThHC,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,IAEXvE,EAAQiS,OAASvN,MAEjB,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,MW1sChiBoB,EAAArE,EAAA,UXgtCalB,GW9sCAiS,OX8sCiB,WWtsC1B,QAAAA,GAAYzK,EAAKoM,EAAc/H,EAAOgG,EAASC,GAAQ7N,EAAAzD,KAAAyR,GAAAzR,KANvDiF,eAAe,OAMwCjF,KALvDqT,YAAYrT,KAAKiF,eAAe,SAM5BjF,KAAKqL,MAAMA,EACXrL,KAAKgH,IAAMA,EAEXhH,KAAKsT,UAAavO,EAAAY,MAAMuB,eAAekM,EAAc,KAAKpT,KAAKqT,YAAa,KACvE/L,KAAK,YAAa,aAAa+J,EAAQ,IAAIC,EAAQ,KACnDH,QAAQnR,KAAKqT,aAAa,GXuuCnC,MA1BAlP,GAAasN,IACT9M,IAAK,oBACLZ,MAAO,SW3sCOwN,EAAUC,GACxB,GAAI+B,GAAavT,KAAKiF,eAAe,kBACjCoG,EAAOrL,KAAKqL,KAEhBrL,MAAKwT,eAAiBzO,EAAAY,MAAM6N,eAAexT,KAAKgH,IAAKuM,EAAYvT,KAAKqL,MAAMG,QAAS,EAAG,IAAK,EAAG,GAEhGxL,KAAKsT,UAAUtD,OAAO,QACjB1I,KAAK,QAASiK,GACdjK,KAAK,SAAUkK,GACflK,KAAK,IAAK,GACVA,KAAK,IAAK,GACVE,MAAM,OAAQ,QAAQ+L,EAAW,IAGtC,IAAIE,GAAQzT,KAAKsT,UAAUxD,UAAU,QAChChK,KAAMuF,EAAME,UACbmI,EAAarI,EAAME,SAASvK,OAAO,CAWvC,OAVAyS,GAAM1D,QAAQC,OAAO,QAChB1I,KAAK,IAAKiK,GACVjK,KAAK,IAAM,SAAC6D,EAAGxK,GAAJ,MAAW6Q,GAAY7Q,EAAE6Q,EAAUkC,IAC9CpM,KAAK,KAAM,GAEXA,KAAK,qBAAsB,UAC3B2I,KAAK,SAAA9E,GAAA,MAAGA,KAEbsI,EAAMvD,OAAO7I,SAENrH,SXwsCJyR,OAGRxI,UAAU,KAAK0K,IAAI,SAASjT,EAAQjB,EAAOD,GAC9C,YAiBA,SAASiE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASuF,GAA2BpJ,EAAMgB,GAAQ,IAAKhB,EAAQ,KAAM,IAAIqJ,gBAAe,4DAAgE,QAAOrI,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BhB,EAAPgB,EAElO,QAASsI,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI3F,WAAU,iEAAoE2F,GAAeD,GAASxE,UAAYjB,OAAO2F,OAAOD,GAAcA,EAAWzE,WAAa2E,aAAe1F,MAAOuF,EAAU9E,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe8E,IAAY1F,OAAO6F,eAAiB7F,OAAO6F,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAnBje1F,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,IAEXvE,EAAQkT,kBAAoBlT,EAAQiT,wBAA0BvO,MAE9D,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,MAE5hBmG,EAAO,QAASC,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASrF,UAAW,IAAIsF,GAAOvG,OAAOwG,yBAAyBL,EAAQC,EAAW,IAAa/F,SAATkG,EAAoB,CAAE,GAAIE,GAASzG,OAAO0G,eAAeP,EAAS,OAAe,QAAXM,EAAmB,OAAkCP,EAAIO,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKrG,KAAgB,IAAIyG,GAASJ,EAAKL,GAAK,IAAe7F,SAAXsG,EAA4C,MAAOA,GAAOzJ,KAAKmJ,IYpwC5d/B,EAAAzH,EAAA,WACAiK,EAAAjK,EAAA,iBACAqE,EAAArE,EAAA,WAEa+R,EZ8wCiBjT,EY9wCjBiT,wBZ8wCmD,SAAUmB,GY/uCtE,QAAAnB,GAAYzN,GAAOvB,EAAAzD,KAAAyS,EAAA,IAAA5H,GAAA1B,EAAAnJ,KAAA6D,OAAA0G,eAAAkI,GAAA1R,KAAAf,MAAA,OAAA6K,GA7BnB3F,SAAU,2BA6BS2F,EA5BnBiB,KAAM,IA4BajB,EA3BnBoB,QAAS,GA2BUpB,EA1BnBgJ,OAAO,EA0BYhJ,EAzBnBC,QAAQ,EAyBWD,EAxBnBnF,SAAS,EAwBUmF,EAvBnB4I,MAAOvP,OAuBY2G,EAtBnB1J,GACI2S,OAAQ,SACRzI,MAAO,UAoBQR,EAlBnBpJ,GACIqS,OAAQ,OACRzI,MAAO,UAgBQR,EAdnByD,QACI3J,IAAKT,OACLqK,eAAe,EACfxK,MAAO,SAASoH,EAAGxG,GAAO,MAAOwG,GAAExG,IACnCiK,MAAO,IAUQ/D,EARnBI,WACIC,UACAxC,QACA3E,MAAO,SAAUoH,EAAGC,GAChB,MAAOD,GAAEC,KASbrG,EAAAY,MAAMC,WAANiF,EAAuB7F,GALR6F,EZmyCnB,MAnDAxB,GAAUoJ,EAAyBmB,GAmD5BnB,GACT9H,EAAagI,kBAESnT,GY3xCXkT,kBZ2xCuC,SAAUxG,GY1xC1D,QAAAwG,GAAYvG,EAAqBrG,EAAMC,GAAQ,MAAAtC,GAAAzD,KAAA0S,GAAAvJ,EAAAnJ,KAAA6D,OAAA0G,eAAAmI,GAAA3R,KAAAf,KACrCmM,EAAqBrG,EAAM,GAAI2M,GAAwB1M,KZkiDjE,MAxQAsD,GAAUqJ,EAAmBxG,GAQ7B/H,EAAauO,IACT/N,IAAK,YACLZ,MAAO,SYjyCDgC,GACN,MAAA+D,GAAAjG,OAAA0G,eAAAmI,EAAA5N,WAAA,YAAA9E,MAAAe,KAAAf,KAAuB,GAAIyS,GAAwB1M,OZoyCnDpB,IAAK,WACLZ,MAAO,WY9xCP,GAAIhE,GAAOC,KACPqF,EAASrF,KAAK+F,OAAOV,OACrB+G,EAAOpM,KAAK+F,MAChB/F,MAAKiG,MACD9E,KACAM,KACAsS,KACIxH,MAAO,OAIfvM,KAAKwM,iBAELxM,KAAKiG,KAAK6F,KAAOM,EAAKN,IAGtB,IAAI3G,GAAQiH,EAAKjH,MACb6O,EAAqBhU,KAAK0M,uBAAuBE,uBACrD,KAAKzH,EAAO,CACR,GAAI8O,GAAW5O,EAAOC,KAAOD,EAAOE,MAAQvF,KAAKiG,KAAKgF,UAAUjK,OAAOhB,KAAKiG,KAAK6F,IACjF3G,GAAQzC,KAAKqK,IAAIiH,EAAmB7O,MAAO8O,GAG/C,GAAI7O,GAASD,CACRC,KACDA,EAAS4O,EAAmB5O,QAGhCpF,KAAKiG,KAAKd,MAAQA,EAAQE,EAAOC,KAAOD,EAAOE,MAC/CvF,KAAKiG,KAAKb,OAASA,EAASC,EAAOG,IAAMH,EAAOI,OAKhCvB,SAAbkI,EAAKqH,QACJrH,EAAKqH,MAAQzT,KAAKiG,KAAK6F,KAAO,IAGlC9L,KAAKkU,SACLlU,KAAKmU,SAED/H,EAAK2H,IAAIK,kBACTpU,KAAKiG,KAAK8N,IAAIM,cAAgBlN,GAAGkE,MAAMe,EAAK2H,IAAIK,mBAEpD,IAAIE,GAAalI,EAAK2H,IAAIxH,KAiB1B,OAhBI+H,KACAtU,KAAKiG,KAAK8N,IAAIO,WAAaA,EAED,gBAAfA,IAA2BA,YAAsBC,QACxDvU,KAAKiG,KAAK8N,IAAIxH,MAAQ+H,EACftU,KAAKiG,KAAK8N,IAAIM,gBACrBrU,KAAKiG,KAAK8N,IAAIxH,MAAQ,SAAUpB,GAC5B,MAAOpL,GAAKkG,KAAK8N,IAAIM,cAActU,EAAKkG,KAAK8N,IAAIO,WAAWnJ,OASjEnL,QZ0xCP2E,IAAK,iBACLZ,MAAO,WYtxCP,GAAIoK,GAAgBnO,KAAK+F,OAAOkF,UAE5BnF,EAAO9F,KAAK8F,KACZG,EAAOjG,KAAKiG,IAChBA,GAAKmI,oBACLnI,EAAKgF,UAAYkD,EAAczF,KAC3BzC,EAAKgF,WAAchF,EAAKgF,UAAUjK,SAClCiF,EAAKgF,UAAYlG,EAAAY,MAAM0I,eAAevI,EAAM9F,KAAK+F,OAAOuI,OAAO3J,IAAK3E,KAAK+F,OAAOwI,gBAGpFtI,EAAKiF,UACLjF,EAAKuI,mBACLvI,EAAKgF,UAAUwD,QAAQ,SAASrD,EAAasD,GACzCzI,EAAKmI,iBAAiBhD,GAAejE,GAAGwH,OAAO7I,EAAM,SAASqF,GAAK,MAAOgD,GAAcpK,MAAMoH,EAAGC,IACjG,IAAIwD,GAAQxD,CACT+C,GAAcjD,QAAUiD,EAAcjD,OAAOlK,OAAO0N,IAEnDE,EAAQT,EAAcjD,OAAOwD,IAEjCzI,EAAKiF,OAAOhD,KAAK0G,GACjB3I,EAAKuI,gBAAgBpD,GAAewD,IAKxC3I,EAAKuO,eZ4xCL7P,IAAK,SACLZ,MAAO,WYxxCP,GAAIkC,GAAOjG,KAAKiG,KACZ9E,EAAI8E,EAAK9E,EACTiL,EAAOpM,KAAK+F,MAEhB5E,GAAE4C,MAAQqI,EAAKnB,UAAUlH,MACzB5C,EAAEkK,MAAQlE,GAAGkE,MAAMe,EAAKjL,EAAEkK,SAASG,OAAOY,EAAKH,QAAU,EAAGhG,EAAK6F,KAAOM,EAAKH,QAAU,IACvF9K,EAAEiM,IAAM,SAAUjC,EAAGsJ,GACjB,MAAOtT,GAAEkK,MAAMlK,EAAE4C,MAAMoH,EAAGsJ,KAE9BtT,EAAEuT,KAAOvN,GAAGH,IAAI0N,OAAOrJ,MAAMlK,EAAEkK,OAAOyI,OAAO1H,EAAKjL,EAAE2S,QAAQL,MAAMrH,EAAKqH,OACvEtS,EAAEuT,KAAKC,SAAS1O,EAAK6F,KAAO7F,EAAKgF,UAAUjK,WZ6xC3C2D,IAAK,SACLZ,MAAO,WYxxCP,GAAIkC,GAAOjG,KAAKiG,KACZxE,EAAIwE,EAAKxE,EACT2K,EAAOpM,KAAK+F,MAEhBtE,GAAEsC,MAAQqI,EAAKnB,UAAUlH,MACzBtC,EAAE4J,MAAQlE,GAAGkE,MAAMe,EAAK3K,EAAE4J,SAASG,OAAQvF,EAAK6F,KAAOM,EAAKH,QAAU,EAAGG,EAAKH,QAAU,IACxFxK,EAAE2L,IAAM,SAAUjC,EAAGsJ,GACjB,MAAOhT,GAAE4J,MAAM5J,EAAEsC,MAAMoH,EAAGsJ,KAE9BhT,EAAEiT,KAAMvN,GAAGH,IAAI0N,OAAOrJ,MAAM5J,EAAE4J,OAAOyI,OAAO1H,EAAK3K,EAAEqS,QAAQL,MAAMrH,EAAKqH,OACtEhS,EAAEiT,KAAKC,UAAU1O,EAAK6F,KAAO7F,EAAKgF,UAAUjK,WZ6xC5C2D,IAAK,OACLZ,MAAO,WYjvCP,QAAS6Q,GAAYC,GACjB,GAAI5O,GAAOlG,EAAKkG,IAChBA,GAAKuO,SAAStM,KAAK2M,EACnB,IAAIjJ,GAAOzE,GAAGC,OAAOpH,KAErBiG,GAAK9E,EAAEkK,MAAME,OAAOtF,EAAKmI,iBAAiByG,EAAE1T,IAC5C8E,EAAKxE,EAAE4J,MAAME,OAAOtF,EAAKmI,iBAAiByG,EAAEpT,IAE5CmK,EAAKoE,OAAO,QACP1I,KAAK,QAAS,YACdA,KAAK,IAAK8E,EAAKH,QAAU,GACzB3E,KAAK,IAAK8E,EAAKH,QAAU,GACzB3E,KAAK,QAAS8E,EAAKN,KAAOM,EAAKH,SAC/B3E,KAAK,SAAU8E,EAAKN,KAAOM,EAAKH,SAGrC4I,EAAElN,OAAS,WACP,GAAImN,GAAU9U,KACV+U,EAAOnJ,EAAKkE,UAAU,UACrBhK,KAAK/F,EAAK+F,KAEfiP,GAAKhF,QAAQC,OAAO,UAEpB+E,EAAKzN,KAAK,KAAM,SAAS6D,GAAG,MAAOlF,GAAK9E,EAAEiM,IAAIjC,EAAG2J,EAAQ3T,KACpDmG,KAAK,KAAM,SAAS6D,GAAG,MAAOlF,GAAKxE,EAAE2L,IAAIjC,EAAG2J,EAAQrT,KACpD6F,KAAK,IAAKvH,EAAKgG,OAAOgO,IAAInG,QAE3B3H,EAAK8N,IAAIxH,OACTwI,EAAKvN,MAAM,OAAQvB,EAAK8N,IAAIxH,OAG7BtG,EAAKP,SACJqP,EAAKxN,GAAG,YAAa,SAAS4D,GAC1BlF,EAAKP,QAAQiL,aACRC,SAAS,KACTpJ,MAAM,UAAW,GACtB,IAAIqJ,GAAO,IAAM5K,EAAK9E,EAAE4C,MAAMoH,EAAG2J,EAAQ3T,GAAK,KAAM8E,EAAKxE,EAAEsC,MAAMoH,EAAG2J,EAAQrT,GAAK,GACjFwE,GAAKP,QAAQmL,KAAKA,GACbrJ,MAAM,OAASL,GAAGqB,MAAMsI,MAAQ,EAAK,MACrCtJ,MAAM,MAAQL,GAAGqB,MAAMuI,MAAQ,GAAM,KAE1C,IAAIiE,GAAQjV,EAAKgG,OAAOuI,OAAOvK,MAAMoH,EACrC,IAAG6J,GAAiB,IAARA,EAAW,CACnBnE,GAAM,OACN,IAAIjC,GAAQ7O,EAAKgG,OAAOuI,OAAOM,KAC5BA,KACCiC,GAAMjC,EAAM,MAEhBiC,GAAMmE,EAEV/O,EAAKP,QAAQmL,KAAKA,GACbrJ,MAAM,OAASL,GAAGqB,MAAMsI,MAAQ,EAAK,MACrCtJ,MAAM,MAAQL,GAAGqB,MAAMuI,MAAQ,GAAM,QAEzCxJ,GAAG,WAAY,SAAS4D,GACrBlF,EAAKP,QAAQiL,aACRC,SAAS,KACTpJ,MAAM,UAAW,KAIlCuN,EAAK7E,OAAO7I,UAGhBwN,EAAElN,SAzGN,GAAI5H,GAAMC,KACNI,EAAIL,EAAKkG,KAAKgF,UAAUjK,OACxBoL,EAAOpM,KAAK+F,MAChBhG,GAAKkH,KAAK6I,UAAU,sBACfhK,KAAK/F,EAAKkG,KAAKgF,WACf8E,QAAQC,OAAO,KACf1I,KAAK,QAAS,qBAAqB8E,EAAKtB,OAAS,GAAK,kBACtDxD,KAAK,YAAa,SAAS6D,EAAGxK,GAAK,MAAO,cAAgBP,EAAIO,EAAI,GAAKZ,EAAKkG,KAAK6F,KAAO,QACxFmJ,KAAK,SAAS9J,GAAKpL,EAAKkG,KAAK9E,EAAEkK,MAAME,OAAOxL,EAAKkG,KAAKmI,iBAAiBjD,IAAKhE,GAAGC,OAAOpH,MAAMe,KAAKhB,EAAKkG,KAAK9E,EAAEuT,QAElH3U,EAAKkH,KAAK6I,UAAU,sBACfhK,KAAK/F,EAAKkG,KAAKgF,WACf8E,QAAQC,OAAO,KACf1I,KAAK,QAAS,qBAAqB8E,EAAKtB,OAAS,GAAK,kBACtDxD,KAAK,YAAa,SAAS6D,EAAGxK,GAAK,MAAO,eAAiBA,EAAIZ,EAAKkG,KAAK6F,KAAO,MAChFmJ,KAAK,SAAS9J,GAAKpL,EAAKkG,KAAKxE,EAAE4J,MAAME,OAAOxL,EAAKkG,KAAKmI,iBAAiBjD,IAAKhE,GAAGC,OAAOpH,MAAMe,KAAKhB,EAAKkG,KAAKxE,EAAEiT,OAElH,IAAI9I,GAAO7L,EAAKkH,KAAK6I,UAAU,YAC1BhK,KAAK/F,EAAKiG,MAAMkP,MAAMnV,EAAKkG,KAAKgF,UAAWlL,EAAKkG,KAAKgF,YACrD8E,QAAQC,OAAO,KACf1I,KAAK,QAAS,WACdA,KAAK,YAAa,SAAS6D,GAAK,MAAO,cAAgB/K,EAAI+K,EAAExK,EAAI,GAAKZ,EAAKkG,KAAK6F,KAAO,IAAMX,EAAE1C,EAAI1I,EAAKkG,KAAK6F,KAAO,KAEtHM,GAAKyH,OACJ7T,KAAKmV,UAAUvJ,GAGnBA,EAAKqJ,KAAKL,GAKVhJ,EAAKwJ,OAAO,SAASjK,GAAK,MAAOA,GAAExK,IAAMwK,EAAE1C,IAAMuH,OAAO,QACnD1I,KAAK,IAAK8E,EAAKH,SACf3E,KAAK,IAAK8E,EAAKH,SACf3E,KAAK,KAAM,SACX2I,KAAK,SAAS9E,GAAK,MAAOpL,GAAKkG,KAAKuI,gBAAgBrD,EAAEhK,QZ60C3DwD,IAAK,SACLZ,MAAO,WYlwCP/D,KAAKiG,KAAKuO,SAAS/F,QAAQ,SAASoG,GAAGA,EAAElN,cZwwCzChD,IAAK,YACLZ,MAAO,SYtwCD6H,GAeN,QAASyJ,GAAWR,GACZS,IAActV,OACdmH,GAAGC,OAAOkO,GAAWvU,KAAK8S,EAAM0B,SAChCxV,EAAKkG,KAAK9E,EAAEkK,MAAME,OAAOxL,EAAKkG,KAAKmI,iBAAiByG,EAAE1T,IACtDpB,EAAKkG,KAAKxE,EAAE4J,MAAME,OAAOxL,EAAKkG,KAAKmI,iBAAiByG,EAAEpT,IACtD6T,EAAYtV,MAKpB,QAASwV,GAAUX,GACf,GAAI3U,GAAI2T,EAAMlF,QACd5O,GAAKkH,KAAK6I,UAAU,UAAUqB,QAAQ,SAAU,SAAUhG,GACtD,MAAOjL,GAAE,GAAG,GAAKiL,EAAE0J,EAAE1T,IAAMgK,EAAE0J,EAAE1T,GAAKjB,EAAE,GAAG,IAClCA,EAAE,GAAG,GAAKiL,EAAE0J,EAAEpT,IAAM0J,EAAE0J,EAAEpT,GAAKvB,EAAE,GAAG,KAIjD,QAASuV,KACD5B,EAAM6B,SAAS3V,EAAKkH,KAAK6I,UAAU,WAAWqB,QAAQ,UAAU,GAjCxE,GAAIpR,GAAOC,KACP6T,EAAQ1M,GAAGH,IAAI6M,QACd1S,EAAEpB,EAAKkG,KAAK9E,EAAEkK,OACd5J,EAAE1B,EAAKkG,KAAKxE,EAAE4J,OACd9D,GAAG,aAAc8N,GACjB9N,GAAG,QAASiO,GACZjO,GAAG,WAAYkO,EAEpB7J,GAAKoE,OAAO,KAAKjP,KAAK8S,EAGtB,IAAIyB,OZ0xCD5C,GACTvK,EAAOnE,SAENiO,UAAU,EAAEE,gBAAgB,GAAGlJ,UAAU,KAAK0M,IAAI,SAASjV,EAAQjB,EAAOD,GAC7E,YAeA,SAASiE,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASuF,GAA2BpJ,EAAMgB,GAAQ,IAAKhB,EAAQ,KAAM,IAAIqJ,gBAAe,4DAAgE,QAAOrI,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BhB,EAAPgB,EAElO,QAASsI,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAI3F,WAAU,iEAAoE2F,GAAeD,GAASxE,UAAYjB,OAAO2F,OAAOD,GAAcA,EAAWzE,WAAa2E,aAAe1F,MAAOuF,EAAU9E,YAAY,EAAOE,UAAU,EAAMD,cAAc,KAAe8E,IAAY1F,OAAO6F,eAAiB7F,OAAO6F,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ,GAjBje1F,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,IAEXvE,EAAQuS,YAAcvS,EAAQmT,kBAAoBzO,MAElD,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,MAE5hBmG,EAAO,QAASC,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAASrF,UAAW,IAAIsF,GAAOvG,OAAOwG,yBAAyBL,EAAQC,EAAW,IAAa/F,SAATkG,EAAoB,CAAE,GAAIE,GAASzG,OAAO0G,eAAeP,EAAS,OAAe,QAAXM,EAAmB,OAAkCP,EAAIO,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,GAAQ,MAAOA,GAAKrG,KAAgB,IAAIyG,GAASJ,EAAKL,GAAK,IAAe7F,SAAXsG,EAA4C,MAAOA,GAAOzJ,KAAKmJ,Ia/lD5d/B,EAAAzH,EAAA,WACAqE,EAAArE,EAAA,WAEaiS,EbwmDWnT,EaxmDXmT,kBbwmDuC,SAAU/H,Ga/kD1D,QAAA+H,GAAY3N,GAAOvB,EAAAzD,KAAA2S,EAAA,IAAA9H,GAAA1B,EAAAnJ,KAAA6D,OAAA0G,eAAAoI,GAAA5R,KAAAf,MAAA6K,GAvBnB3F,SAAU,oBAuBS2F,EAtBnBC,QAAQ,EAsBWD,EArBnBnF,SAAS,EAqBUmF,EApBnB1J,GACIyN,MAAO,IACPjK,IAAK,EACLZ,MAAO,SAASoH,EAAGxG,GAAO,MAAOwG,GAAExG,IACnCmP,OAAQ,SACRzI,MAAO,UAeQR,EAbnBpJ,GACImN,MAAO,IACPjK,IAAK,EACLZ,MAAO,SAASoH,EAAGxG,GAAO,MAAOwG,GAAExG,IACnCmP,OAAQ,OACRzI,MAAO,UAQQR,EANnByD,QACI3J,IAAK,EACLZ,MAAO,SAASoH,EAAGxG,GAAO,MAAOwG,GAAExG,IACnCiK,MAAO,GAKP,IAAI7I,GAAA8E,CAFW,OAGfA,GAAKkJ,KACDnG,OAAQ,EACRrB,MAAO,SAASpB,GAAK,MAAOpF,GAAOuI,OAAOvK,MAAMoH,EAAGpF,EAAOuI,OAAO3J,MACjEyP,gBAAiB,cAGlBpP,GACCD,EAAAY,MAAMC,WAANiF,EAAuB7F,GAVZ6F,EbuoDnB,MAvDAxB,GAAUsJ,EAAmB/H,GAuDtB+H,GACTxK,EAAOlE,YAESzE,Ga1nDLuS,Yb0nD2B,SAAU7F,GaznD9C,QAAA6F,GAAY5F,EAAqBrG,EAAMC,GAAQ,MAAAtC,GAAAzD,KAAA+R,GAAA5I,EAAAnJ,KAAA6D,OAAA0G,eAAAwH,GAAAhR,KAAAf,KACrCmM,EAAqBrG,EAAM,GAAI6M,GAAkB5M,KbmzD3D,MA1LAsD,GAAU0I,EAAa7F,GAQvB/H,EAAa4N,IACTpN,IAAK,YACLZ,MAAO,SahoDDgC,GACN,MAAA+D,GAAAjG,OAAA0G,eAAAwH,EAAAjN,WAAA,YAAA9E,MAAAe,KAAAf,KAAuB,GAAI2S,GAAkB5M,ObmoD7CpB,IAAK,WACLZ,MAAO,WahoDP,GAAIhE,GAAKC,KACLqF,EAASrF,KAAK+F,OAAOV,OACrB+G,EAAOpM,KAAK+F,MAChB/F,MAAKiG,MACD9E,KACAM,KACAsS,KACIxH,MAAO,MAIf,IAAIpH,GAAQiH,EAAKjH,MACbsH,EAAkBzM,KAAK0M,sBAEvBvH,KACAA,EAAOsH,EAAgBG,wBAAwBzH,MAEnD,IAAIC,GAASgH,EAAKhH,MACdA,KACAA,EAAQqH,EAAgBG,wBAAwBxH,QAGpDpF,KAAKiG,KAAKd,MAAQA,EAAQE,EAAOC,KAAOD,EAAOE,MAC/CvF,KAAKiG,KAAKb,OAASA,EAASC,EAAOG,IAAMH,EAAOI,OAEhDzF,KAAKkU,SACLlU,KAAKmU,SAEF/H,EAAK2H,IAAIK,kBACRpU,KAAKiG,KAAK8N,IAAIM,cAAgBlN,GAAGkE,MAAMe,EAAK2H,IAAIK,mBAEpD,IAAIE,GAAalI,EAAK2H,IAAIxH,KAkB1B,OAjBG+H,KACCtU,KAAKiG,KAAK8N,IAAIO,WAAaA,EAED,gBAAfA,IAA2BA,YAAsBC,QACxDvU,KAAKiG,KAAK8N,IAAIxH,MAAQ+H,EACjBtU,KAAKiG,KAAK8N,IAAIM,gBACnBrU,KAAKiG,KAAK8N,IAAIxH,MAAQ,SAASpB,GAC3B,MAAOpL,GAAKkG,KAAK8N,IAAIM,cAActU,EAAKkG,KAAK8N,IAAIO,WAAWnJ,OAUjEnL,Qb+nDP2E,IAAK,SACLZ,MAAO,Wa3nDP,GAAIkC,GAAOjG,KAAKiG,KACZ9E,EAAI8E,EAAK9E,EACTiL,EAAOpM,KAAK+F,OAAO5E,CAQvBA,GAAE4C,MAAQ,SAAAoH,GAAA,MAAKiB,GAAKrI,MAAMoH,EAAGiB,EAAKzH,MAClCxD,EAAEkK,MAAQlE,GAAGkE,MAAMe,EAAKf,SAASG,OAAO,EAAGvF,EAAKd,QAChDhE,EAAEiM,IAAM,SAASjC,GAAK,MAAOhK,GAAEkK,MAAMlK,EAAE4C,MAAMoH,KAC7ChK,EAAEuT,KAAOvN,GAAGH,IAAI0N,OAAOrJ,MAAMlK,EAAEkK,OAAOyI,OAAO1H,EAAK0H,OAClD,IAAIhO,GAAO9F,KAAK8F,IAChBG,GAAK9E,EAAEkK,MAAME,QAAQpE,GAAG4F,IAAIjH,EAAMG,EAAK9E,EAAE4C,OAAO,EAAGoD,GAAG2F,IAAIhH,EAAMG,EAAK9E,EAAE4C,OAAO,IAC3E/D,KAAK+F,OAAO+E,QACX3J,EAAEuT,KAAKC,UAAU1O,EAAKb,WbqoD1BT,IAAK,SACLZ,MAAO,Wa/nDP,GAAIkC,GAAOjG,KAAKiG,KACZxE,EAAIwE,EAAKxE,EACT2K,EAAOpM,KAAK+F,OAAOtE,CAQvBA,GAAEsC,MAAQ,SAAAoH,GAAA,MAAKiB,GAAKrI,MAAMoH,EAAGiB,EAAKzH,MAClClD,EAAE4J,MAAQlE,GAAGkE,MAAMe,EAAKf,SAASG,OAAOvF,EAAKb,OAAQ,IACrD3D,EAAE2L,IAAM,SAASjC,GAAK,MAAO1J,GAAE4J,MAAM5J,EAAEsC,MAAMoH,KAC7C1J,EAAEiT,KAAOvN,GAAGH,IAAI0N,OAAOrJ,MAAM5J,EAAE4J,OAAOyI,OAAO1H,EAAK0H,QAE/C9T,KAAK+F,OAAO+E,QACXrJ,EAAEiT,KAAKC,UAAU1O,EAAKd,MAI1B,IAAIW,GAAO9F,KAAK8F,IAChBG,GAAKxE,EAAE4J,MAAME,QAAQpE,GAAG4F,IAAIjH,EAAMG,EAAKxE,EAAEsC,OAAO,EAAGoD,GAAG2F,IAAIhH,EAAMG,EAAKxE,EAAEsC,OAAO,ObuoD9EY,IAAK,OACLZ,MAAO,WapoDP/D,KAAK4V,YACL5V,KAAK6V,YACL7V,KAAK2H,YbwoDLhD,IAAK,YACLZ,MAAO,WanoDP,GAAIhE,GAAOC,KACPiG,EAAOlG,EAAKkG,KACZ6P,EAAW9V,KAAK+F,OAAO5E,CAC3BpB,GAAKkH,KAAKC,eAAe,uBAAuBnH,EAAKgG,OAAO+E,OAAS,GAAK,kBACrExD,KAAK,YAAa,eAAiBrB,EAAKb,OAAS,KACjDrE,KAAKkF,EAAK9E,EAAEuT,MACZxN,eAAe,iBACfI,KAAK,YAAa,aAAerB,EAAKd,MAAM,EAAI,IAAMpF,EAAKgG,OAAOV,OAAOI,OAAS,KAClF6B,KAAK,KAAM,QACXE,MAAM,cAAe,UACrByI,KAAK6F,EAASlH,UbkoDnBjK,IAAK,YACLZ,MAAO,Wa/nDP,GAAIhE,GAAOC,KACPiG,EAAOlG,EAAKkG,KACZ6P,EAAW9V,KAAK+F,OAAOtE,CAC3B1B,GAAKkH,KAAKC,eAAe,uBAAuBnH,EAAKgG,OAAO+E,OAAS,GAAK,kBACrE/J,KAAKkF,EAAKxE,EAAEiT,MACZxN,eAAe,iBACfI,KAAK,YAAa,cAAevH,EAAKgG,OAAOV,OAAOC,KAAM,IAAKW,EAAKb,OAAO,EAAG,gBAC9EkC,KAAK,KAAM,OACXE,MAAM,cAAe,UACrByI,KAAK6F,EAASlH,Ub8nDnBjK,IAAK,SACLZ,MAAO,Sa5nDJuL,GAEH,GAAIvP,GAAOC,KACPiG,EAAOlG,EAAKkG,KACZH,EAAO9F,KAAK8F,KACZiP,EAAOhV,EAAKkH,KAAK6I,UAAU,WAC1BhK,KAAKA,EAEViP,GAAKhF,QAAQC,OAAO,UACf1I,KAAK,QAAS,UAGnByN,EAAKzN,KAAK,IAAKvH,EAAKgG,OAAOgO,IAAInG,QAC1BtG,KAAK,KAAMrB,EAAK9E,EAAEiM,KAClB9F,KAAK,KAAMrB,EAAKxE,EAAE2L,KAEpBnH,EAAKP,SACJqP,EAAKxN,GAAG,YAAa,SAAS4D,GAC1BlF,EAAKP,QAAQiL,aACRC,SAAS,KACTpJ,MAAM,UAAW,GACtB,IAAIqJ,GAAO,IAAM5K,EAAK9E,EAAE4C,MAAMoH,GAAK,KAAMlF,EAAKxE,EAAEsC,MAAMoH,GAAK,IACvD6J,EAAQjV,EAAKgG,OAAOuI,OAAOvK,MAAMoH,EAAGpL,EAAKgG,OAAOuI,OAAO3J,IAC3D,IAAGqQ,GAAiB,IAARA,EAAW,CACnBnE,GAAM,OACN,IAAIjC,GAAQ7O,EAAKgG,OAAOuI,OAAOM,KAC5BA,KACCiC,GAAMjC,EAAM,MAEhBiC,GAAMmE,EAEV/O,EAAKP,QAAQmL,KAAKA,GACbrJ,MAAM,OAASL,GAAGqB,MAAMsI,MAAQ,EAAK,MACrCtJ,MAAM,MAAQL,GAAGqB,MAAMuI,MAAQ,GAAM,QAEzCxJ,GAAG,WAAY,SAAS4D,GACrBlF,EAAKP,QAAQiL,aACRC,SAAS,KACTpJ,MAAM,UAAW,KAI/BvB,EAAK8N,IAAIxH,OACRwI,EAAKvN,MAAM,OAAQvB,EAAK8N,IAAIxH,OAGhCwI,EAAK7E,OAAO7I,abonDT0K,GACT5J,EAAOnE,SAENiO,UAAU,EAAEhJ,UAAU,KAAK8M,IAAI,SAASrV,EAAQjB,EAAOD,GAC1D,Ycr2DA,IAAIwW,GAAKvW,EAAOD,QAAQmM,kBACxBqK,GAAGxU,kBAAoBd,EAAQ,kEdy2D5BuV,+DAA+D,IAAIC,IAAI,SAASxV,EAAQjB,EAAOD,GAClG,YAUA,SAAS2W,GAAgBC,EAAKzR,EAAKZ,GAAiK,MAApJY,KAAOyR,GAAOvS,OAAOC,eAAesS,EAAKzR,GAAOZ,MAAOA,EAAOS,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkB0R,EAAIzR,GAAOZ,EAAgBqS,EAE3M,QAAS3S,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAVhHC,OAAOC,eAAetE,EAAS,cAC3BuE,OAAO,GAGX,IAAIsS,GAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUH,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXE,SAAyBF,EAAI3M,cAAgB6M,OAAS,eAAkBF,IAEtOjS,EAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAI3D,GAAI,EAAGA,EAAI2D,EAAMtD,OAAQL,IAAK,CAAE,GAAI4D,GAAaD,EAAM3D,EAAI4D,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMb,OAAOC,eAAeO,EAAQE,EAAWI,IAAKJ,IAAiB,MAAO,UAAUZ,EAAaiB,EAAYC,GAAiJ,MAA9HD,IAAYR,EAAiBT,EAAYmB,UAAWF,GAAiBC,GAAaT,EAAiBT,EAAakB,GAAqBlB,KAMphBnE,Gez3DCmG,Mfy3De,WACxB,QAASA,KACLlC,EAAgBzD,KAAM2F,GAiK1B,MA9JAxB,GAAawB,EAAO,OAChBhB,IAAK,aAGLZ,MAAO,Seh4DOyS,GAEd,GAAIxQ,GAAQhG,MAIPwW,GAAO3O,UAAU7G,OAAS,GAAK8H,MAAM2N,QAAQ5O,UAAU,MACxD2O,MAEJA,EAAMA,KAEN,KAAK,GAAI7V,GAAI,EAAGA,EAAIkH,UAAU7G,OAAQL,IAAK,CACvC,GAAI+V,GAAS7O,UAAUlH,EACvB,IAAK+V,EAGL,IAAK,GAAI/R,KAAO+R,GACZ,GAAKA,EAAOC,eAAehS,GAA3B,CAGA,GAAI8R,GAAU3N,MAAM2N,QAAQD,EAAI7R,IAC5BiS,EAAW5Q,EAAM4Q,SAASJ,EAAI7R,IAC9BkS,EAAS7Q,EAAM4Q,SAASF,EAAO/R,GAE/BiS,KAAaH,GAAWI,EACxB7Q,EAAMJ,WAAW4Q,EAAI7R,GAAM+R,EAAO/R,IAElC6R,EAAI7R,GAAO+R,EAAO/R,IAK9B,MAAO6R,Mfi4DP7R,IAAK,YACLZ,MAAO,Se/3DMM,EAAQqS,GACrB,GAAII,GAASjT,OAAOkT,UAAW1S,EAa/B,OAZIsB,GAAMqR,iBAAiB3S,IAAWsB,EAAMqR,iBAAiBN,IACzD7S,OAAO6E,KAAKgO,GAAQjI,QAAQ,SAAA9J,GACpBgB,EAAMqR,iBAAiBN,EAAO/R,KACxBA,IAAON,GAGTyS,EAAOnS,GAAOgB,EAAMsR,UAAU5S,EAAOM,GAAM+R,EAAO/R,IAEtDd,OAAOkT,OAAOD,EAAdX,KAAyBxR,EAAM+R,EAAO/R,OAI3CmS,Kf+3DPnS,IAAK,QACLZ,MAAO,Se73DEtD,EAAGyW,GACZ,GAAwCvW,GAAG8H,EAAvCoF,KAAQzN,EAAIK,EAAEO,OAAQmW,EAAID,EAAElW,MAChC,KAAKL,OAAUA,EAAIP,GAAI,IAAKqI,OAAUA,EAAI0O,GAAItJ,EAAE3F,MAAM/G,EAAGV,EAAEE,GAAIA,EAAGA,EAAGc,EAAGyV,EAAEzO,GAAIA,EAAGA,GACjF,OAAOoF,Mfu4DPlJ,IAAK,iBACLZ,MAAO,Ser4DW+B,EAAMsR,EAAUC,GAClC,GAAIC,KACJ,IAAIxR,EAAK9E,OAAQ,CACb,GAAImK,GAAIrF,EAAK,EACb,IAAIqF,YAAarC,OACbwO,EAAMnM,EAAEiC,IAAI,SAAUc,EAAGvN,GACrB,MAAOA,SAET,IAAiB,YAAb,mBAAOwK,GAAP,YAAAkL,EAAOlL,IAEb,IAAK,GAAIoM,KAAQpM,GACTA,EAAEwL,eAAeY,IAErBD,EAAIpP,KAAKqP,GAIrB,IAAIF,EAAa,CACb,GAAI3I,GAAQ4I,EAAIE,QAAQJ,EACpB1I,OACA4I,EAAI3O,OAAO+F,EAAO,GAG1B,MAAO4I,Mfw4DP3S,IAAK,mBACLZ,MAAO,Sev4Da0T,GACpB,MAAQA,IAAwB,YAAhB,mBAAOA,GAAP,YAAApB,EAAOoB,MAAsB3O,MAAM2N,QAAQgB,IAAkB,OAATA,Kf04DpE9S,IAAK,WACLZ,MAAO,Sez4DKtD,GACZ,MAAa,QAANA,GAA2B,YAAb,mBAAOA,GAAP,YAAA4V,EAAO5V;If44D5BkE,IAAK,WACLZ,MAAO,Se14DKtD,GACZ,OAAQgC,MAAMhC,IAAmB,gBAANA,Mf64D3BkE,IAAK,aACLZ,MAAO,Se34DOtD,GACd,MAAoB,kBAANA,Mf84DdkE,IAAK,iBACLZ,MAAO,Se54DWuG,EAAQgG,EAAUoH,GACpC,GAAInF,GAAYjI,EAAOlD,OAAOkJ,EAC9B,IAAGiC,EAAUmD,QAAQ,CACjB,GAAGgC,EACC,MAAOpN,GAAO0F,OAAO0H,EAEzB,IAAIC,GAAgBrH,EAASsH,MAAM,WAEnC,KADAF,EAAUpN,EAAO0F,OAAO2H,EAAcE,SAC/BF,EAAc3W,OAAS,GAAG,CAC7B,GAAI8W,GAAmBH,EAAcE,QACjCE,EAAeJ,EAAcE,OACR,OAArBC,EACAJ,EAAUA,EAAQvG,QAAQ4G,GAAc,GACZ,MAArBD,IACPJ,EAAUA,EAAQpQ,KAAK,KAAMyQ,IAGrC,MAAOL,GAGX,MAAOnF,Mf84DP5N,IAAK,iBACLZ,MAAO,QAASyP,Ge54DExM,EAAKuM,EAAY/H,EAAOwM,EAAIC,EAAIC,EAAIC,GACtD,GAAIC,GAAOzS,EAAMuB,eAAeF,EAAK,QACjCwM,EAAiB4E,EAAKpI,OAAO,kBAC5B1I,KAAK,KAAMiM,EAEhBC,GACKlM,KAAK,KAAM0Q,EAAG,KACd1Q,KAAK,KAAM2Q,EAAG,KACd3Q,KAAK,KAAM4Q,EAAG,KACd5Q,KAAK,KAAM6Q,EAAG,IAGnB,IAAIE,GAAQ7E,EAAe1D,UAAU,QAChChK,KAAM0F,EAEX6M,GAAMtI,QAAQC,OAAO,QAErBqI,EAAM/Q,KAAK,SAAU,SAAC6D,EAAExK,GAAH,MAASA,IAAG6K,EAAMxK,OAAO,KACzCsG,KAAK,aAAc,SAAA6D,GAAA,MAAKA,KAE7BkN,EAAMnI,OAAO7I,af64DV1B,eAGA,KAAK","file":"odc-d3.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n/* @flow */\r\n\r\nvar sum = require('./sum');\r\n\r\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\r\nfunction mean(x /*: Array<number> */)/*:number*/ {\r\n    // The mean of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    return sum(x) / x.length;\r\n}\r\n\r\nmodule.exports = mean;\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ODCD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\nfunction mean(x /*: Array<number> */) /*:number*/{\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n\n},{\"./sum\":6}],2:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\nfunction sampleCorrelation(x /*: Array<number> */, y /*: Array<number> */) /*:number*/{\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n\n},{\"./sample_covariance\":3,\"./sample_standard_deviation\":4}],3:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/) /*:number*/{\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length <= 1 || x.length !== y.length) {\n        return NaN;\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n\n},{\"./mean\":1}],4:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\nfunction sampleStandardDeviation(x /*:Array<number>*/) /*:number*/{\n  // The standard deviation of no numbers is null\n  var sampleVarianceX = sampleVariance(x);\n  if (isNaN(sampleVarianceX)) {\n    return NaN;\n  }\n  return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n\n},{\"./sample_variance\":5}],5:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\nfunction sampleVariance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length <= 1) {\n        return NaN;\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n\n},{\"./sum_nth_power_deviations\":7}],6:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\n\nfunction sum(x /*: Array<number> */) /*: number */{\n\n    // like the traditional sum algorithm, we keep a running\n    // count of the current sum.\n    var sum = 0;\n\n    // but we also keep three extra variables as bookkeeping:\n    // most importantly, an error correction value. This will be a very\n    // small number that is the opposite of the floating point precision loss.\n    var errorCompensation = 0;\n\n    // this will be each number in the list corrected with the compensation value.\n    var correctedCurrentValue;\n\n    // and this will be the next sum\n    var nextSum;\n\n    for (var i = 0; i < x.length; i++) {\n        // first correct the value that we're going to add to the sum\n        correctedCurrentValue = x[i] - errorCompensation;\n\n        // compute the next sum. sum is likely a much larger number\n        // than correctedCurrentValue, so we'll lose precision here,\n        // and measure how much precision is lost in the next step\n        nextSum = sum + correctedCurrentValue;\n\n        // we intentionally didn't assign sum immediately, but stored\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\n        // not equal to 0? ideally it would be, but in practice it won't:\n        // it will be some very small number. that's what we record\n        // as errorCompensation.\n        errorCompensation = nextSum - sum - correctedCurrentValue;\n\n        // now that we've computed how much we'll correct for in the next\n        // loop, start treating the nextSum as the current sum.\n        sum = nextSum;\n    }\n\n    return sum;\n}\n\nmodule.exports = sum;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\nfunction sumNthPowerDeviations(x /*: Array<number> */, n /*: number */) /*:number*/{\n    var meanValue = mean(x),\n        sum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        sum += Math.pow(x[i] - meanValue, n);\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n\n},{\"./mean\":1}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chart = exports.ChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChartConfig = exports.ChartConfig = function ChartConfig(custom) {\n    _classCallCheck(this, ChartConfig);\n\n    this.cssClassPrefix = \"odc-\";\n    this.svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    this.tooltip = false;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar Chart = exports.Chart = function () {\n    function Chart(base, data, config) {\n        _classCallCheck(this, Chart);\n\n        this.utils = _utils.Utils;\n        this.plot = {\n            margin: {}\n        };\n        this._attached = {};\n        this._layers = {};\n        this._events = {};\n        this._isInitialized = false;\n\n\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n\n        this.init();\n        this.postInit();\n    }\n\n    _createClass(Chart, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new ChartConfig();\n            } else {\n                this.config = config;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setData',\n        value: function setData(data) {\n            this.data = data;\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n\n            self.initPlot();\n            self.initSvg();\n\n            self.initTooltip();\n            self.draw();\n            this._isInitialized = true;\n            return this;\n        }\n    }, {\n        key: 'postInit',\n        value: function postInit() {}\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            var config = this.config;\n            void 0;\n\n            var width = self.plot.width + config.margin.left + config.margin.right;\n            var height = self.plot.height + config.margin.top + config.margin.bottom;\n            var aspect = width / height;\n            if (!self._isAttached) {\n                if (!this._isInitialized) {\n                    d3.select(self.baseContainer).select(\"svg\").remove();\n                }\n                self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\n\n                self.svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height).attr(\"preserveAspectRatio\", \"xMidYMid meet\").attr(\"class\", config.svgClass);\n                self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n            } else {\n                void 0;\n                self.svg = self.baseContainer.svg;\n                self.svgG = self.svg.selectOrAppend(\"g.main-group.\" + config.svgClass);\n            }\n\n            self.svgG.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\n\n            if (!config.width || config.height) {\n                d3.select(window).on(\"resize\", function () {\n                    //TODO add responsiveness if width/height not specified\n                });\n            }\n        }\n    }, {\n        key: 'initTooltip',\n        value: function initTooltip() {\n            var self = this;\n            if (self.config.tooltip) {\n                if (!self._isAttached) {\n                    self.plot.tooltip = _utils.Utils.selectOrAppend(d3.select(self.baseContainer), 'div.mw-tooltip', 'div').attr(\"class\", \"mw-tooltip\").style(\"opacity\", 0);\n                } else {\n                    self.plot.tooltip = self.baseContainer.plot.tooltip;\n                }\n            }\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {}\n    }, {\n        key: 'update',\n        value: function update(data) {\n            if (data) {\n                this.setData(data);\n            }\n            var layerName, attachmentData;\n            for (var attachmentName in this._attached) {\n\n                attachmentData = data;\n\n                this._attached[attachmentName].update(attachmentData);\n            }\n            void 0;\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw(data) {\n            this.update(data);\n\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n         * method will be invoked whenever the containing chart's `draw` method is\r\n         * invoked.\r\n         *\r\n         * @externalExample chart-attach\r\n         *\r\n         * @param {String} attachmentName Name of the attachment\r\n         * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n         *        unspecified, this method will return the attachment previously\r\n         *        registered with the specified `attachmentName` (if any).\r\n         *\r\n         * @returns {Chart} Reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'attach',\n        value: function attach(attachmentName, chart) {\n            if (arguments.length === 1) {\n                return this._attached[attachmentName];\n            }\n\n            this._attached[attachmentName] = chart;\n            return chart;\n        }\n    }, {\n        key: 'on',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Subscribe a callback function to an event triggered on the chart. See {@link\r\n            * Chart#once} to subscribe a callback function to an event for one occurence.\r\n         *\r\n         * @externalExample {runnable} chart-on\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function on(name, callback, context) {\n            var events = this._events[name] || (this._events[name] = []);\n            events.push({\n                callback: callback,\n                context: context || this,\n                _chart: this\n            });\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         *\r\n         * Subscribe a callback function to an event triggered on the chart. This\r\n         * function will be invoked at the next occurance of the event and immediately\r\n         * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n         * event indefinitely.\r\n         *\r\n         * @externalExample {runnable} chart-once\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable)\r\n         */\n\n    }, {\n        key: 'once',\n        value: function once(name, callback, context) {\n            var self = this;\n            var once = function once() {\n                self.off(name, once);\n                callback.apply(this, arguments);\n            };\n            return this.on(name, once, context);\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Unsubscribe one or more callback functions from an event triggered on the\r\n         * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n         * When only a `name` is specified, all handlers subscribed to that event will\r\n         * be unsubscribed. When a `name` and `callback` are specified, only that\r\n         * function will be unsubscribed from that event. When a `name` and `context`\r\n         * are specified (but `callback` is omitted), all events bound to the given\r\n         * event with the given context will be unsubscribed.\r\n         *\r\n         * @externalExample {runnable} chart-off\r\n         *\r\n         * @param {String} [name] Name of the event to be unsubscribed\r\n         * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n         * @param {Object} [context] Contexts to be unsubscribe\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'off',\n        value: function off(name, callback, context) {\n            var names, n, events, event, i, j;\n\n            // remove all events\n            if (arguments.length === 0) {\n                for (name in this._events) {\n                    this._events[name].length = 0;\n                }\n                return this;\n            }\n\n            // remove all events for a specific name\n            if (arguments.length === 1) {\n                events = this._events[name];\n                if (events) {\n                    events.length = 0;\n                }\n                return this;\n            }\n\n            // remove all events that match whatever combination of name, context\n            // and callback.\n            names = name ? [name] : Object.keys(this._events);\n            for (i = 0; i < names.length; i++) {\n                n = names[i];\n                events = this._events[n];\n                j = events.length;\n                while (j--) {\n                    event = events[j];\n                    if (callback && callback === event.callback || context && context === event.context) {\n                        events.splice(j, 1);\n                    }\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'trigger',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Publish an event on this chart with the given `name`.\r\n         *\r\n         * @externalExample {runnable} chart-trigger\r\n         *\r\n         * @param {String} name Name of the event to publish\r\n         * @param {...*} arguments Values with which to invoke the registered\r\n         *        callbacks.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function trigger(name) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var events = this._events[name];\n            var i, ev;\n\n            if (events !== undefined) {\n                for (i = 0; i < events.length; i++) {\n                    ev = events[i];\n                    ev.callback.apply(ev.context, args);\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'getBaseContainerNode',\n        value: function getBaseContainerNode() {\n            if (this._isAttached) {\n                return this.baseContainer.svg.node();\n            }\n            return d3.select(this.baseContainer).node();\n        }\n    }]);\n\n    return Chart;\n}();\n\n},{\"./utils\":16}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CorrelationMatrix = exports.CorrelationMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _statisticsUtils = require('./statistics-utils');\n\nvar _legend = require('./legend');\n\nvar _scatterplot = require('./scatterplot');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CorrelationMatrixConfig = exports.CorrelationMatrixConfig = function (_ChartConfig) {\n    _inherits(CorrelationMatrixConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function CorrelationMatrixConfig(custom) {\n        _classCallCheck(this, CorrelationMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrixConfig).call(this));\n\n        _this.svgClass = 'odc-correlation-matrix';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.legend = true;\n        _this.highlightLabels = true;\n        _this.variables = {\n            labels: undefined,\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            }, // variable value accessor\n            scale: \"ordinal\"\n        };\n        _this.correlation = {\n            scale: \"linear\",\n            domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n            range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n            value: function value(xValues, yValues) {\n                return _statisticsUtils.StatisticsUtils.sampleCorrelation(xValues, yValues);\n            }\n\n        };\n        _this.cell = {\n            shape: \"ellipse\", //possible values: rect, circle, ellipse\n            size: undefined,\n            sizeMin: 5,\n            sizeMax: 80,\n            padding: 1\n        };\n        _this.margin = {\n            left: 60,\n            right: 50,\n            top: 30,\n            bottom: 60\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    } //show axis guides\n\n\n    return CorrelationMatrixConfig;\n}(_chart.ChartConfig);\n\nvar CorrelationMatrix = exports.CorrelationMatrix = function (_Chart) {\n    _inherits(CorrelationMatrix, _Chart);\n\n    function CorrelationMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, CorrelationMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrix).call(this, placeholderSelector, data, new CorrelationMatrixConfig(config)));\n    }\n\n    _createClass(CorrelationMatrix, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'setConfig', this).call(this, new CorrelationMatrixConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                correlation: {\n                    matrix: undefined,\n                    cells: undefined,\n                    color: {},\n                    shape: {}\n                }\n\n            };\n            this.setupVariables();\n            var width = conf.width;\n            var placeholderNode = this.getBaseContainerNode();\n            this.plot.placeholderNode = placeholderNode;\n\n            var parentWidth = placeholderNode.getBoundingClientRect().width;\n            if (width) {\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n                }\n            } else {\n                this.plot.cellSize = this.config.cell.size;\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, parentWidth / this.plot.variables.length));\n                }\n\n                width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n            }\n\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = this.plot.width;\n\n            this.setupVariablesScales();\n            this.setupCorrelationScales();\n            this.setupCorrelationMatrix();\n\n            return this;\n        }\n    }, {\n        key: 'setupVariablesScales',\n        value: function setupVariablesScales() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.variables;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = conf.value;\n            x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n        }\n    }, {\n        key: 'setupCorrelationScales',\n        value: function setupCorrelationScales() {\n            var plot = this.plot;\n            var corrConf = this.config.correlation;\n\n            plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\n            var shape = plot.correlation.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = cellConf.shape;\n\n            var shapeSize = plot.cellSize - cellConf.padding * 2;\n            if (shape.type == 'circle') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\n                shape.radius = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n            } else if (shape.type == 'ellipse') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\n                shape.radiusX = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n                shape.radiusY = radiusMax;\n\n                shape.rotateVal = function (v) {\n                    if (v == 0) return \"0\";\n                    if (v < 0) return \"-45\";\n                    return \"45\";\n                };\n            } else if (shape.type == 'rect') {\n                shape.size = shapeSize;\n            }\n        }\n    }, {\n        key: 'setupVariables',\n        value: function setupVariables() {\n\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n        }\n    }, {\n        key: 'setupCorrelationMatrix',\n        value: function setupCorrelationMatrix() {\n            var self = this;\n            var data = this.data;\n            var matrix = this.plot.correlation.matrix = [];\n            var matrixCells = this.plot.correlation.matrix.cells = [];\n            var plot = this.plot;\n\n            var variableToValues = {};\n            plot.variables.forEach(function (v, i) {\n\n                variableToValues[v] = data.map(function (d) {\n                    return plot.x.value(d, v);\n                });\n            });\n\n            plot.variables.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                plot.variables.forEach(function (v2, j) {\n                    var corr = 1;\n                    if (v1 != v2) {\n                        corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                    }\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: corr\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'update', this).call(this, newData);\n            // this.update\n            this.updateCells();\n            this.updateVariableLabels();\n\n            if (this.config.legend) {\n                this.updateLegend();\n            }\n        }\n    }, {\n        key: 'updateVariableLabels',\n        value: function updateVariableLabels() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = self.config.cssClassPrefix + \"label\";\n            var labelXClass = labelClass + \" \" + labelClass + \"-x\";\n            var labelYClass = labelClass + \" \" + labelClass + \"-y\";\n            plot.labelClass = labelClass;\n\n            var labelsX = self.svgG.selectAll(labelXClass).data(plot.variables, function (d, i) {\n                return d;\n            });\n\n            labelsX.enter().append(\"text\");\n\n            labelsX.attr(\"x\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"y\", plot.height).attr(\"dx\", -2).attr(\"transform\", function (d, i) {\n                return \"rotate(-90, \" + (i * plot.cellSize + plot.cellSize / 2) + \", \" + plot.height + \")\";\n            }).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelXClass + \" \" + labelXClass + \"-\" + i;\n            })\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            labelsX.exit().remove();\n\n            //////\n\n            var labelsY = self.svgG.selectAll(labelYClass).data(plot.variables);\n\n            labelsY.enter().append(\"text\");\n\n            labelsY.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"dx\", -2).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelYClass + \" \" + labelYClass + \"-\" + i;\n            })\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            labelsX.exit().remove();\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellClass = self.config.cssClassPrefix + \"cell\";\n            var cellShape = plot.correlation.shape.type;\n\n            var data = this.data;\n\n            var cells = self.svgG.selectAll(cellClass).data(plot.correlation.matrix.cells, function (c, i) {\n                return i;\n            });\n\n            var cellEnterG = cells.enter().append(\"g\").attr(\"class\", cellClass);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\";\n            });\n\n            var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n            var wrongShapes = cells.selectAll(selector);\n            wrongShapes.remove();\n\n            var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n            if (plot.correlation.shape.type == 'circle') {\n\n                shapes.attr(\"r\", plot.correlation.shape.radius).attr(\"cx\", 0).attr(\"cy\", 0);\n            }\n\n            if (plot.correlation.shape.type == 'ellipse') {\n                // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n                shapes.attr(\"rx\", plot.correlation.shape.radiusX).attr(\"ry\", plot.correlation.shape.radiusY).attr(\"cx\", 0).attr(\"cy\", 0).attr(\"transform\", function (c) {\n                    return \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\";\n                });\n            }\n\n            if (plot.correlation.shape.type == 'rect') {\n                shapes.attr(\"width\", plot.correlation.shape.size).attr(\"height\", plot.correlation.shape.size).attr(\"x\", -plot.cellSize / 2).attr(\"y\", -plot.cellSize / 2);\n            }\n\n            var mouseoverCallbacks = [];\n            var mouseoutCallbacks = [];\n\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value;\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (self.config.highlightLabels) {\n                var highlightClass = self.config.cssClassPrefix + \"highlight\";\n                var xLabelClass = function xLabelClass(c) {\n                    return plot.labelClass + \"-x-\" + c.col;\n                };\n                var yLabelClass = function yLabelClass(c) {\n                    return plot.labelClass + \"-y-\" + c.row;\n                };\n\n                mouseoverCallbacks.push(function (c) {\n\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n                });\n                mouseoutCallbacks.push(function (c) {\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n                });\n            }\n\n            cells.on(\"mouseover\", function (c) {\n                mouseoverCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            }).on(\"mouseout\", function (c) {\n                mouseoutCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            });\n\n            cells.on(\"click\", function (c) {\n                self.trigger(\"cell-selected\", c);\n            });\n\n            shapes.style(\"fill\", function (c) {\n                return plot.correlation.color.scale(c.value);\n            });\n\n            cells.exit().remove();\n        }\n    }, {\n        key: 'updateLegend',\n        value: function updateLegend() {\n\n            var plot = this.plot;\n            var legendX = this.plot.width + 10;\n            var legendY = 0;\n            var barWidth = 10;\n            var barHeight = this.plot.height - 2;\n            var scale = plot.correlation.color.scale;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        }\n    }, {\n        key: 'attachScatterPlot',\n        value: function attachScatterPlot(containerSelector, config) {\n            var _this3 = this;\n\n            var self = this;\n\n            config = config || {};\n\n            var scatterPlotConfig = {\n                height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                groups: {\n                    key: self.config.groups.key,\n                    label: self.config.groups.label\n                },\n                guides: true\n            };\n\n            scatterPlotConfig = _utils.Utils.deepExtend(scatterPlotConfig, config);\n            void 0;\n\n            this.on(\"cell-selected\", function (c) {\n\n                scatterPlotConfig.x = {\n                    key: c.rowVar,\n                    label: self.plot.labelByVariable[c.rowVar]\n                };\n                scatterPlotConfig.y = {\n                    key: c.colVar,\n                    label: self.plot.labelByVariable[c.colVar]\n                };\n                if (self.scatterPlot) {\n                    self.scatterPlot.setConfig(scatterPlotConfig).init();\n                } else {\n                    self.scatterPlot = new _scatterplot.ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                    _this3.attach(\"ScatterPlot\", self.scatterPlot);\n                }\n            });\n        }\n    }]);\n\n    return CorrelationMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":8,\"./legend\":12,\"./scatterplot\":14,\"./statistics-utils\":15,\"./utils\":16}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.D3Extensions = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar D3Extensions = exports.D3Extensions = function () {\n    function D3Extensions() {\n        _classCallCheck(this, D3Extensions);\n    }\n\n    _createClass(D3Extensions, null, [{\n        key: 'extend',\n        value: function extend() {\n            d3.selection.enter.prototype.selectOrAppend = d3.selection.prototype.selectOrAppend = function (selector) {\n                return _utils.Utils.selectOrAppend(this, selector);\n            };\n        }\n    }]);\n\n    return D3Extensions;\n}();\n\n},{\"./utils\":16}],11:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatisticsUtils = exports.CorrelationMatrixConfig = exports.CorrelationMatrix = exports.ScatterPlotMatrixConfig = exports.ScatterPlotMatrix = exports.ScatterPlotConfig = exports.ScatterPlot = undefined;\n\nvar _scatterplot = require(\"./scatterplot\");\n\nObject.defineProperty(exports, \"ScatterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlot;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlotConfig;\n  }\n});\n\nvar _scatterplotMatrix = require(\"./scatterplot-matrix\");\n\nObject.defineProperty(exports, \"ScatterPlotMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrix;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrixConfig;\n  }\n});\n\nvar _correlationMatrix = require(\"./correlation-matrix\");\n\nObject.defineProperty(exports, \"CorrelationMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrix;\n  }\n});\nObject.defineProperty(exports, \"CorrelationMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrixConfig;\n  }\n});\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nObject.defineProperty(exports, \"StatisticsUtils\", {\n  enumerable: true,\n  get: function get() {\n    return _statisticsUtils.StatisticsUtils;\n  }\n});\n\nvar _d3Extensions = require(\"./d3-extensions\");\n\n_d3Extensions.D3Extensions.extend();\n\n},{\"./correlation-matrix\":9,\"./d3-extensions\":10,\"./scatterplot\":14,\"./scatterplot-matrix\":13,\"./statistics-utils\":15}],12:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Legend = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Legend = exports.Legend = function () {\n    function Legend(svg, legendParent, scale, legendX, legendY) {\n        _classCallCheck(this, Legend);\n\n        this.cssClassPrefix = \"odc-\";\n        this.legendClass = this.cssClassPrefix + \"legend\";\n\n        this.scale = scale;\n        this.svg = svg;\n\n        this.container = _utils.Utils.selectOrAppend(legendParent, \"g.\" + this.legendClass, \"g\").attr(\"transform\", \"translate(\" + legendX + \",\" + legendY + \")\").classed(this.legendClass, true);\n    }\n\n    _createClass(Legend, [{\n        key: \"linearGradientBar\",\n        value: function linearGradientBar(barWidth, barHeight) {\n            var gradientId = this.cssClassPrefix + \"linear-gradient\";\n            var scale = this.scale;\n\n            this.linearGradient = _utils.Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n            this.container.append(\"rect\").attr(\"width\", barWidth).attr(\"height\", barHeight).attr(\"x\", 0).attr(\"y\", 0).style(\"fill\", \"url(#\" + gradientId + \")\");\n\n            var ticks = this.container.selectAll(\"text\").data(scale.domain());\n            var ticksNumber = scale.domain().length - 1;\n            ticks.enter().append(\"text\").attr(\"x\", barWidth).attr(\"y\", function (d, i) {\n                return barHeight - i * barHeight / ticksNumber;\n            }).attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\").text(function (d) {\n                return d;\n            });\n\n            ticks.exit().remove();\n\n            return this;\n        }\n    }]);\n\n    return Legend;\n}();\n\n},{\"./utils\":16}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlotMatrix = exports.ScatterPlotMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotMatrixConfig = exports.ScatterPlotMatrixConfig = function (_ScatterPlotConfig) {\n    _inherits(ScatterPlotMatrixConfig, _ScatterPlotConfig);\n\n    //ticks number, (default: computed using cell size)\n    //show axis guides\n    //scatter plot cell padding\n\n    function ScatterPlotMatrixConfig(custom) {\n        _classCallCheck(this, ScatterPlotMatrixConfig);\n\n        // this.svgClass = 'mw-d3-scatterplot-matrix';\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrixConfig).call(this));\n\n        _this.svgClass = 'mw-d3-scatterplot-matrix';\n        _this.size = 200;\n        _this.padding = 20;\n        _this.brush = true;\n        _this.guides = true;\n        _this.tooltip = true;\n        _this.ticks = undefined;\n        _this.x = { // X axis config\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: undefined, //object property name or array index with grouping variable\n            includeInPlot: false, //include group as variable in plot, boolean (default: false)\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.variables = {\n            labels: [], //optional array of variable labels (for the diagonal of the plot).\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                // variable value accessor\n                return d[variableKey];\n            }\n        };\n        void 0;\n        _utils.Utils.deepExtend(_this, custom);\n        return _this;\n    } //show tooltip on dot hover\n    //scatter plot cell size\n\n\n    return ScatterPlotMatrixConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar ScatterPlotMatrix = exports.ScatterPlotMatrix = function (_Chart) {\n    _inherits(ScatterPlotMatrix, _Chart);\n\n    function ScatterPlotMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlotMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrix).call(this, placeholderSelector, data, new ScatterPlotMatrixConfig(config)));\n    }\n\n    _createClass(ScatterPlotMatrix, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"setConfig\", this).call(this, new ScatterPlotMatrixConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            this.setupVariables();\n\n            this.plot.size = conf.size;\n\n            var width = conf.width;\n            var boundingClientRect = this.getBaseContainerNode().getBoundingClientRect();\n            if (!width) {\n                var maxWidth = margin.left + margin.right + this.plot.variables.length * this.plot.size;\n                width = Math.min(boundingClientRect.width, maxWidth);\n            }\n            var height = width;\n            if (!height) {\n                height = boundingClientRect.height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            if (conf.ticks === undefined) {\n                conf.ticks = this.plot.size / 40;\n            }\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: \"setupVariables\",\n        value: function setupVariables() {\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n\n            plot.subplots = [];\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config;\n\n            x.value = conf.variables.value;\n            x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\n            x.map = function (d, variable) {\n                return x.scale(x.value(d, variable));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\n            x.axis.tickSize(plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config;\n\n            y.value = conf.variables.value;\n            y.scale = d3.scale[conf.y.scale]().range([plot.size - conf.padding / 2, conf.padding / 2]);\n            y.map = function (d, variable) {\n                return y.scale(y.value(d, variable));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\n            y.axis.tickSize(-plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            var self = this;\n            var n = self.plot.variables.length;\n            var conf = this.config;\n            self.svgG.selectAll(\".mw-axis-x.mw-axis\").data(self.plot.variables).enter().append(\"g\").attr(\"class\", \"mw-axis-x mw-axis\" + (conf.guides ? '' : ' mw-no-guides')).attr(\"transform\", function (d, i) {\n                return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\";\n            }).each(function (d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.x.axis);\n            });\n\n            self.svgG.selectAll(\".mw-axis-y.mw-axis\").data(self.plot.variables).enter().append(\"g\").attr(\"class\", \"mw-axis-y mw-axis\" + (conf.guides ? '' : ' mw-no-guides')).attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * self.plot.size + \")\";\n            }).each(function (d) {\n                self.plot.y.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.y.axis);\n            });\n\n            var cell = self.svgG.selectAll(\".mw-cell\").data(self.utils.cross(self.plot.variables, self.plot.variables)).enter().append(\"g\").attr(\"class\", \"mw-cell\").attr(\"transform\", function (d) {\n                return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\";\n            });\n\n            if (conf.brush) {\n                this.drawBrush(cell);\n            }\n\n            cell.each(plotSubplot);\n\n            //Labels\n            cell.filter(function (d) {\n                return d.i === d.j;\n            }).append(\"text\").attr(\"x\", conf.padding).attr(\"y\", conf.padding).attr(\"dy\", \".71em\").text(function (d) {\n                return self.plot.labelByVariable[d.x];\n            });\n\n            function plotSubplot(p) {\n                var plot = self.plot;\n                plot.subplots.push(p);\n                var cell = d3.select(this);\n\n                plot.x.scale.domain(plot.domainByVariable[p.x]);\n                plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n                cell.append(\"rect\").attr(\"class\", \"mw-frame\").attr(\"x\", conf.padding / 2).attr(\"y\", conf.padding / 2).attr(\"width\", conf.size - conf.padding).attr(\"height\", conf.size - conf.padding);\n\n                p.update = function () {\n                    var subplot = this;\n                    var dots = cell.selectAll(\"circle\").data(self.data);\n\n                    dots.enter().append(\"circle\");\n\n                    dots.attr(\"cx\", function (d) {\n                        return plot.x.map(d, subplot.x);\n                    }).attr(\"cy\", function (d) {\n                        return plot.y.map(d, subplot.y);\n                    }).attr(\"r\", self.config.dot.radius);\n\n                    if (plot.dot.color) {\n                        dots.style(\"fill\", plot.dot.color);\n                    }\n\n                    if (plot.tooltip) {\n                        dots.on(\"mouseover\", function (d) {\n                            plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                            var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\n                            var group = self.config.groups.value(d);\n                            if (group || group === 0) {\n                                html += \"<br/>\";\n                                var label = self.config.groups.label;\n                                if (label) {\n                                    html += label + \": \";\n                                }\n                                html += group;\n                            }\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                        }).on(\"mouseout\", function (d) {\n                            plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                        });\n                    }\n\n                    dots.exit().remove();\n                };\n\n                p.update();\n            }\n        }\n    }, {\n        key: \"update\",\n        value: function update() {\n            this.plot.subplots.forEach(function (p) {\n                p.update();\n            });\n        }\n    }, {\n        key: \"drawBrush\",\n        value: function drawBrush(cell) {\n            var self = this;\n            var brush = d3.svg.brush().x(self.plot.x.scale).y(self.plot.y.scale).on(\"brushstart\", brushstart).on(\"brush\", brushmove).on(\"brushend\", brushend);\n\n            cell.append(\"g\").call(brush);\n\n            var brushCell;\n\n            // Clear the previously-active brush, if any.\n            function brushstart(p) {\n                if (brushCell !== this) {\n                    d3.select(brushCell).call(brush.clear());\n                    self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                    self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                    brushCell = this;\n                }\n            }\n\n            // Highlight the selected circles.\n            function brushmove(p) {\n                var e = brush.extent();\n                self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\n                    return e[0][0] > d[p.x] || d[p.x] > e[1][0] || e[0][1] > d[p.y] || d[p.y] > e[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            }\n        }\n    }]);\n\n    return ScatterPlotMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":8,\"./scatterplot\":14,\"./utils\":16}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlot = exports.ScatterPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotConfig = exports.ScatterPlotConfig = function (_ChartConfig) {\n    _inherits(ScatterPlotConfig, _ChartConfig);\n\n    //show axis guides\n\n    function ScatterPlotConfig(custom) {\n        _classCallCheck(this, ScatterPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotConfig).call(this));\n\n        _this.svgClass = 'mw-d3-scatterplot';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.x = { // X axis config\n            label: 'X', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return d[key];\n            }, // x value accessor\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            label: 'Y', // axis label,\n            key: 1,\n            value: function value(d, key) {\n                return d[key];\n            }, // y value accessor\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: 2,\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n\n        var config = _this;\n        _this.dot = {\n            radius: 2,\n            color: function color(d) {\n                return config.groups.value(d, config.groups.key);\n            }, // string or function returning color's value for color scale\n            d3ColorCategory: 'category10'\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } //show tooltip on dot hover\n\n\n    return ScatterPlotConfig;\n}(_chart.ChartConfig);\n\nvar ScatterPlot = exports.ScatterPlot = function (_Chart) {\n    _inherits(ScatterPlot, _Chart);\n\n    function ScatterPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlot).call(this, placeholderSelector, data, new ScatterPlotConfig(config)));\n    }\n\n    _createClass(ScatterPlot, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlot.prototype), 'setConfig', this).call(this, new ScatterPlotConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            var width = conf.width;\n            var placeholderNode = this.getBaseContainerNode();\n\n            if (!width) {\n                width = placeholderNode.getBoundingClientRect().width;\n            }\n            var height = conf.height;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            } else {}\n\n            return this;\n        }\n    }, {\n        key: 'setupX',\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            var data = this.data;\n            plot.x.scale.domain([d3.min(data, plot.x.value) - 1, d3.max(data, plot.x.value) + 1]);\n            if (this.config.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n        }\n    }, {\n        key: 'setupY',\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n\n            /*\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             */\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n\n            if (this.config.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n\n            var data = this.data;\n            plot.y.scale.domain([d3.min(data, plot.y.value) - 1, d3.max(data, plot.y.value) + 1]);\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.drawAxisX();\n            this.drawAxisY();\n            this.update();\n        }\n    }, {\n        key: 'drawAxisX',\n        value: function drawAxisX() {\n\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            self.svgG.selectOrAppend(\"g.mw-axis-x.mw-axis\" + (self.config.guides ? '' : '.mw-no-guides')).attr(\"transform\", \"translate(0,\" + plot.height + \")\").call(plot.x.axis).selectOrAppend(\"text.mw-label\").attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + self.config.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawAxisY',\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            self.svgG.selectOrAppend(\"g.mw-axis-y.mw-axis\" + (self.config.guides ? '' : '.mw-no-guides')).call(plot.y.axis).selectOrAppend(\"text.mw-label\").attr(\"transform\", \"translate(\" + -self.config.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            // D3ChartBase.prototype.update.call(this, newData);\n            var self = this;\n            var plot = self.plot;\n            var data = this.data;\n            var dots = self.svgG.selectAll(\".mw-dot\").data(data);\n\n            dots.enter().append(\"circle\").attr(\"class\", \"mw-dot\");\n\n            dots.attr(\"r\", self.config.dot.radius).attr(\"cx\", plot.x.map).attr(\"cy\", plot.y.map);\n\n            if (plot.tooltip) {\n                dots.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                    var group = self.config.groups.value(d, self.config.groups.key);\n                    if (group || group === 0) {\n                        html += \"<br/>\";\n                        var label = self.config.groups.label;\n                        if (label) {\n                            html += label + \": \";\n                        }\n                        html += group;\n                    }\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (plot.dot.color) {\n                dots.style(\"fill\", plot.dot.color);\n            }\n\n            dots.exit().remove();\n        }\n    }]);\n\n    return ScatterPlot;\n}(_chart.Chart);\n\n},{\"./chart\":8,\"./utils\":16}],15:[function(require,module,exports){\n'use strict';\n\nvar su = module.exports.StatisticsUtils = {};\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\n\n},{\"../bower_components/simple-statistics/src/sample_correlation\":2}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'inferVariables',\n        value: function inferVariables(data, groupKey, includeGroup) {\n            var res = [];\n            if (data.length) {\n                var d = data[0];\n                if (d instanceof Array) {\n                    res = d.map(function (v, i) {\n                        return i;\n                    });\n                } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object') {\n\n                    for (var prop in d) {\n                        if (!d.hasOwnProperty(prop)) continue;\n\n                        res.push(prop);\n                    }\n                }\n            }\n            if (!includeGroup) {\n                var index = res.indexOf(groupKey);\n                if (index > -1) {\n                    res.splice(index, 1);\n                }\n            }\n            return res;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                if (element) {\n                    return parent.append(element);\n                }\n                var selectorParts = selector.split(/([\\.\\#])/);\n                element = parent.append(selectorParts.shift());\n                while (selectorParts.length > 1) {\n                    var selectorModifier = selectorParts.shift();\n                    var selectorItem = selectorParts.shift();\n                    if (selectorModifier === \".\") {\n                        element = element.classed(selectorItem, true);\n                    } else if (selectorModifier === \"#\") {\n                        element = element.attr('id', selectorItem);\n                    }\n                }\n                return element;\n            }\n            return selection;\n        }\n    }, {\n        key: 'linearGradient',\n        value: function linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n            var defs = Utils.selectOrAppend(svg, \"defs\");\n            var linearGradient = defs.append(\"linearGradient\").attr(\"id\", gradientId);\n\n            linearGradient.attr(\"x1\", x1 + \"%\").attr(\"y1\", y1 + \"%\").attr(\"x2\", x2 + \"%\").attr(\"y2\", y2 + \"%\");\n\n            //Append multiple color stops by using D3's data/enter step\n            var stops = linearGradient.selectAll(\"stop\").data(range);\n\n            stops.enter().append(\"stop\");\n\n            stops.attr(\"offset\", function (d, i) {\n                return i / (range.length - 1);\n            }).attr(\"stop-color\", function (d) {\n                return d;\n            });\n\n            stops.exit().remove();\n        }\n    }]);\n\n    return Utils;\n}();\n\n},{}]},{},[11])(11)\n});\n\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleCovariance = require('./sample_covariance');\r\nvar sampleStandardDeviation = require('./sample_standard_deviation');\r\n\r\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\r\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\r\n    var cov = sampleCovariance(x, y),\r\n        xstd = sampleStandardDeviation(x),\r\n        ystd = sampleStandardDeviation(y);\r\n\r\n    return cov / xstd / ystd;\r\n}\r\n\r\nmodule.exports = sampleCorrelation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\r\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\r\n\r\n    // The two datasets must have the same length which must be more than 1\r\n    if (x.length <= 1 || x.length !== y.length) {\r\n        return NaN;\r\n    }\r\n\r\n    // determine the mean of each dataset so that we can judge each\r\n    // value of the dataset fairly as the difference from the mean. this\r\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\r\n    // does not suffer because of the difference in absolute values\r\n    var xmean = mean(x),\r\n        ymean = mean(y),\r\n        sum = 0;\r\n\r\n    // for each pair of values, the covariance increases when their\r\n    // difference from the mean is associated - if both are well above\r\n    // or if both are well below\r\n    // the mean, the covariance increases significantly.\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += (x[i] - xmean) * (y[i] - ymean);\r\n    }\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // the covariance is weighted by the length of the datasets.\r\n    return sum / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleCovariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleVariance = require('./sample_variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\r\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var sampleVarianceX = sampleVariance(x);\r\n    if (isNaN(sampleVarianceX)) { return NaN; }\r\n    return Math.sqrt(sampleVarianceX);\r\n}\r\n\r\nmodule.exports = sampleStandardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\r\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length <= 1) { return NaN; }\r\n\r\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // Find the mean value of that list\r\n    return sumSquaredDeviationsValue / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleVariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\r\nfunction sum(x/*: Array<number> */)/*: number */ {\r\n\r\n    // like the traditional sum algorithm, we keep a running\r\n    // count of the current sum.\r\n    var sum = 0;\r\n\r\n    // but we also keep three extra variables as bookkeeping:\r\n    // most importantly, an error correction value. This will be a very\r\n    // small number that is the opposite of the floating point precision loss.\r\n    var errorCompensation = 0;\r\n\r\n    // this will be each number in the list corrected with the compensation value.\r\n    var correctedCurrentValue;\r\n\r\n    // and this will be the next sum\r\n    var nextSum;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        // first correct the value that we're going to add to the sum\r\n        correctedCurrentValue = x[i] - errorCompensation;\r\n\r\n        // compute the next sum. sum is likely a much larger number\r\n        // than correctedCurrentValue, so we'll lose precision here,\r\n        // and measure how much precision is lost in the next step\r\n        nextSum = sum + correctedCurrentValue;\r\n\r\n        // we intentionally didn't assign sum immediately, but stored\r\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\r\n        // not equal to 0? ideally it would be, but in practice it won't:\r\n        // it will be some very small number. that's what we record\r\n        // as errorCompensation.\r\n        errorCompensation = nextSum - sum - correctedCurrentValue;\r\n\r\n        // now that we've computed how much we'll correct for in the next\r\n        // loop, start treating the nextSum as the current sum.\r\n        sum = nextSum;\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sum;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\r\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\r\n    var meanValue = mean(x),\r\n        sum = 0;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += Math.pow(x[i] - meanValue, n);\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sumNthPowerDeviations;\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class ChartConfig {\r\n    cssClassPrefix = \"odc-\";\r\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\r\n    width = undefined;\r\n    height = undefined;\r\n    margin = {\r\n        left: 50,\r\n        right: 30,\r\n        top: 30,\r\n        bottom: 50\r\n    };\r\n    tooltip = false;\r\n\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Chart {\r\n    utils = Utils;\r\n    baseContainer;\r\n    svg;\r\n    config;\r\n    plot = {\r\n        margin: {}\r\n    };\r\n    _attached = {};\r\n    _layers = {};\r\n    _events = {};\r\n    _isAttached;\r\n    _isInitialized=false;\r\n\r\n\r\n    constructor(base, data, config) {\r\n        \r\n        this._isAttached = base instanceof Chart;\r\n\r\n        this.baseContainer = base;\r\n\r\n        this.setConfig(config);\r\n\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n\r\n        this.init();\r\n        this.postInit();\r\n    }\r\n\r\n    setConfig(config) {\r\n        if (!config) {\r\n            this.config = new ChartConfig();\r\n        } else {\r\n            this.config = config;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setData(data) {\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n\r\n        self.initPlot();\r\n        self.initSvg();\r\n\r\n        self.initTooltip();\r\n        self.draw();\r\n        this._isInitialized=true;\r\n        return this;\r\n    }\r\n\r\n    postInit(){\r\n\r\n    }\r\n\r\n    initSvg() {\r\n        var self = this;\r\n        var config = this.config;\r\n        console.log(config.svgClass);\r\n\r\n        var width = self.plot.width + config.margin.left + config.margin.right;\r\n        var height = self.plot.height + config.margin.top + config.margin.bottom;\r\n        var aspect = width / height;\r\n        if(!self._isAttached){\r\n            if(!this._isInitialized){\r\n                d3.select(self.baseContainer).select(\"svg\").remove();\r\n            }\r\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\r\n\r\n            self.svg\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\r\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n                .attr(\"class\", config.svgClass);\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\r\n        }else{\r\n            console.log(self.baseContainer);\r\n            self.svg = self.baseContainer.svg;\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\r\n        }\r\n\r\n        self.svgG.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\r\n\r\n        if (!config.width || config.height) {\r\n            d3.select(window)\r\n                .on(\"resize\", function () {\r\n                    //TODO add responsiveness if width/height not specified\r\n                });\r\n        }\r\n    }\r\n\r\n    initTooltip(){\r\n        var self = this;\r\n        if (self.config.tooltip) {\r\n            if(!self._isAttached ){\r\n                self.plot.tooltip = Utils.selectOrAppend(d3.select(self.baseContainer), 'div.mw-tooltip', 'div')\r\n                    .attr(\"class\", \"mw-tooltip\")\r\n                    .style(\"opacity\", 0);\r\n            }else{\r\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    initPlot() {\r\n\r\n    }\r\n\r\n    update(data) {\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n        var layerName, attachmentData;\r\n        for (var attachmentName in this._attached) {\r\n\r\n            attachmentData = data;\r\n\r\n            this._attached[attachmentName].update(attachmentData);\r\n        }\r\n        console.log('base uppdate');\r\n        return this;\r\n    }\r\n\r\n    draw(data) {\r\n        this.update(data);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n     * method will be invoked whenever the containing chart's `draw` method is\r\n     * invoked.\r\n     *\r\n     * @externalExample chart-attach\r\n     *\r\n     * @param {String} attachmentName Name of the attachment\r\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n     *        unspecified, this method will return the attachment previously\r\n     *        registered with the specified `attachmentName` (if any).\r\n     *\r\n     * @returns {Chart} Reference to this chart (chainable).\r\n     */\r\n    attach(attachmentName, chart) {\r\n        if (arguments.length === 1) {\r\n            return this._attached[attachmentName];\r\n        }\r\n\r\n        this._attached[attachmentName] = chart;\r\n        return chart;\r\n    };\r\n\r\n    \r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Subscribe a callback function to an event triggered on the chart. See {@link\r\n        * Chart#once} to subscribe a callback function to an event for one occurence.\r\n     *\r\n     * @externalExample {runnable} chart-on\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    on(name, callback, context) {\r\n        var events = this._events[name] || (this._events[name] = []);\r\n        events.push({\r\n            callback: callback,\r\n            context: context || this,\r\n            _chart: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     *\r\n     * Subscribe a callback function to an event triggered on the chart. This\r\n     * function will be invoked at the next occurance of the event and immediately\r\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n     * event indefinitely.\r\n     *\r\n     * @externalExample {runnable} chart-once\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable)\r\n     */\r\n    once(name, callback, context) {\r\n        var self = this;\r\n        var once = function () {\r\n            self.off(name, once);\r\n            callback.apply(this, arguments);\r\n        };\r\n        return this.on(name, once, context);\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Unsubscribe one or more callback functions from an event triggered on the\r\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n     * When only a `name` is specified, all handlers subscribed to that event will\r\n     * be unsubscribed. When a `name` and `callback` are specified, only that\r\n     * function will be unsubscribed from that event. When a `name` and `context`\r\n     * are specified (but `callback` is omitted), all events bound to the given\r\n     * event with the given context will be unsubscribed.\r\n     *\r\n     * @externalExample {runnable} chart-off\r\n     *\r\n     * @param {String} [name] Name of the event to be unsubscribed\r\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n     * @param {Object} [context] Contexts to be unsubscribe\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n\r\n    off(name, callback, context) {\r\n        var names, n, events, event, i, j;\r\n\r\n        // remove all events\r\n        if (arguments.length === 0) {\r\n            for (name in this._events) {\r\n                this._events[name].length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events for a specific name\r\n        if (arguments.length === 1) {\r\n            events = this._events[name];\r\n            if (events) {\r\n                events.length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events that match whatever combination of name, context\r\n        // and callback.\r\n        names = name ? [name] : Object.keys(this._events);\r\n        for (i = 0; i < names.length; i++) {\r\n            n = names[i];\r\n            events = this._events[n];\r\n            j = events.length;\r\n            while (j--) {\r\n                event = events[j];\r\n                if ((callback && callback === event.callback) ||\r\n                    (context && context === event.context)) {\r\n                    events.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Publish an event on this chart with the given `name`.\r\n     *\r\n     * @externalExample {runnable} chart-trigger\r\n     *\r\n     * @param {String} name Name of the event to publish\r\n     * @param {...*} arguments Values with which to invoke the registered\r\n     *        callbacks.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    trigger(name) {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var events = this._events[name];\r\n        var i, ev;\r\n\r\n        if (events !== undefined) {\r\n            for (i = 0; i < events.length; i++) {\r\n                ev = events[i];\r\n                ev.callback.apply(ev.context, args);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    getBaseContainerNode(){\r\n        if(this._isAttached){\r\n            return this.baseContainer.svg.node();\r\n        }\r\n        return d3.select(this.baseContainer).node();\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\nimport {Legend} from './legend'\r\nimport {ScatterPlot} from './scatterplot'\r\n\r\nexport class CorrelationMatrixConfig extends ChartConfig {\r\n\r\n    svgClass = 'odc-correlation-matrix';\r\n    guides = false; //show axis guides\r\n    tooltip = true; //show tooltip on dot hover\r\n    legend = true;\r\n    highlightLabels = true;\r\n    variables = {\r\n        labels: undefined,\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey], // variable value accessor\r\n        scale: \"ordinal\"\r\n    };\r\n    correlation = {\r\n        scale: \"linear\",\r\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\r\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\r\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\r\n\r\n    };\r\n    cell = {\r\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\r\n        size: undefined,\r\n        sizeMin: 5,\r\n        sizeMax: 80,\r\n        padding: 1\r\n    };\r\n    margin = {\r\n        left: 60,\r\n        right: 50,\r\n        top: 30,\r\n        bottom: 60\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CorrelationMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new CorrelationMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot = {\r\n            x: {},\r\n            correlation: {\r\n                matrix: undefined,\r\n                cells: undefined,\r\n                color: {},\r\n                shape: {}\r\n            }\r\n\r\n\r\n        };\r\n        this.setupVariables();\r\n        var width = conf.width;\r\n        var placeholderNode = this.getBaseContainerNode();\r\n        this.plot.placeholderNode = placeholderNode;\r\n\r\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\r\n        if (width) {\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n        } else {\r\n            this.plot.cellSize = this.config.cell.size;\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, parentWidth / this.plot.variables.length));\r\n            }\r\n\r\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\r\n\r\n        }\r\n\r\n        var height = width;\r\n        if (!height) {\r\n            height = placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = this.plot.width;\r\n\r\n        this.setupVariablesScales();\r\n        this.setupCorrelationScales();\r\n        this.setupCorrelationMatrix();\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    setupVariablesScales() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.variables;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = conf.value;\r\n        x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n    };\r\n\r\n    setupCorrelationScales() {\r\n        var plot = this.plot;\r\n        var corrConf = this.config.correlation;\r\n\r\n        plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\r\n        var shape = plot.correlation.shape = {};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = cellConf.shape;\r\n\r\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\r\n        if (shape.type == 'circle') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\r\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\r\n        } else if (shape.type == 'ellipse') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\r\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\r\n            shape.radiusY = radiusMax;\r\n\r\n            shape.rotateVal = v => {\r\n                if (v == 0) return \"0\";\r\n                if (v < 0) return \"-45\";\r\n                return \"45\"\r\n            }\r\n        } else if (shape.type == 'rect') {\r\n            shape.size = shapeSize;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupVariables() {\r\n\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if (!plot.variables || !plot.variables.length) {\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\r\n                return variablesConf.value(d, variableKey)\r\n            });\r\n            var label = variableKey;\r\n            if (variablesConf.labels && variablesConf.labels.length > index) {\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n    };\r\n\r\n\r\n    setupCorrelationMatrix() {\r\n        var self = this;\r\n        var data = this.data;\r\n        var matrix = this.plot.correlation.matrix = [];\r\n        var matrixCells = this.plot.correlation.matrix.cells = [];\r\n        var plot = this.plot;\r\n\r\n        var variableToValues = {};\r\n        plot.variables.forEach((v, i) => {\r\n\r\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\r\n        });\r\n\r\n        plot.variables.forEach((v1, i) => {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            plot.variables.forEach((v2, j) => {\r\n                var corr = 1;\r\n                if (v1 != v2) {\r\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\r\n                }\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: corr\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        // this.update\r\n        this.updateCells();\r\n        this.updateVariableLabels();\r\n\r\n        if (this.config.legend) {\r\n            this.updateLegend();\r\n        }\r\n    };\r\n\r\n    updateVariableLabels() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = self.config.cssClassPrefix + \"label\";\r\n        var labelXClass = labelClass + \" \" + labelClass + \"-x\";\r\n        var labelYClass = labelClass + \" \" + labelClass + \"-y\";\r\n        plot.labelClass = labelClass;\r\n\r\n\r\n        var labelsX = self.svgG.selectAll(labelXClass)\r\n            .data(plot.variables, (d, i)=>d);\r\n\r\n        labelsX.enter().append(\"text\");\r\n\r\n\r\n        labelsX\r\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"y\", plot.height)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"transform\", (d, i) => \"rotate(-90, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelXClass + \" \" + labelXClass + \"-\" + i)\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        labelsX.exit().remove();\r\n\r\n        //////\r\n\r\n        var labelsY = self.svgG.selectAll(labelYClass)\r\n            .data(plot.variables);\r\n\r\n        labelsY.enter().append(\"text\");\r\n\r\n\r\n        labelsY\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelYClass + \" \" + labelYClass + \"-\" + i)\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        labelsX.exit().remove();\r\n\r\n\r\n    }\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellClass = self.config.cssClassPrefix + \"cell\";\r\n        var cellShape = plot.correlation.shape.type;\r\n\r\n\r\n        var data = this.data;\r\n\r\n        var cells = self.svgG.selectAll(cellClass)\r\n            .data(plot.correlation.matrix.cells, (c,i)=>i);\r\n\r\n\r\n        var cellEnterG = cells.enter().append(\"g\")\r\n            .attr(\"class\", cellClass);\r\n        cells.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\r\n\r\n\r\n        var selector = \"*:not(.cell-shape-\"+cellShape+\")\";\r\n       \r\n        var wrongShapes = cells.selectAll(selector);\r\n        wrongShapes.remove();\r\n        \r\n        var shapes = cells.selectOrAppend(cellShape+\".cell-shape-\"+cellShape);\r\n\r\n        if (plot.correlation.shape.type == 'circle') {\r\n\r\n            shapes\r\n                .attr(\"r\", plot.correlation.shape.radius)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0);\r\n        }\r\n\r\n        if (plot.correlation.shape.type == 'ellipse') {\r\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\r\n            shapes\r\n                .attr(\"rx\", plot.correlation.shape.radiusX)\r\n                .attr(\"ry\", plot.correlation.shape.radiusY)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0)\r\n\r\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\r\n        }\r\n\r\n\r\n        if (plot.correlation.shape.type == 'rect') {\r\n            shapes\r\n                .attr(\"width\", plot.correlation.shape.size)\r\n                .attr(\"height\", plot.correlation.shape.size)\r\n                .attr(\"x\", -plot.cellSize / 2)\r\n                .attr(\"y\", -plot.cellSize / 2);\r\n        }\r\n\r\n        var mouseoverCallbacks = [];\r\n        var mouseoutCallbacks = [];\r\n\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value;\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (self.config.highlightLabels) {\r\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\r\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\r\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\r\n\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\r\n            });\r\n            mouseoutCallbacks.push(c=> {\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\r\n            });\r\n        }\r\n\r\n\r\n        cells.on(\"mouseover\", c => {\r\n            mouseoverCallbacks.forEach(callback=>callback(c));\r\n        })\r\n            .on(\"mouseout\", c => {\r\n                mouseoutCallbacks.forEach(callback=>callback(c));\r\n            });\r\n\r\n        cells.on(\"click\", c=>{\r\n           self.trigger(\"cell-selected\", c);\r\n        });\r\n\r\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n\r\n    updateLegend() {\r\n\r\n        var plot = this.plot;\r\n        var legendX = this.plot.width + 10;\r\n        var legendY = 0;\r\n        var barWidth = 10;\r\n        var barHeight = this.plot.height - 2;\r\n        var scale = plot.correlation.color.scale;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\r\n\r\n\r\n    }\r\n\r\n    attachScatterPlot(containerSelector, config) {\r\n        var self = this;\r\n\r\n        config = config || {};\r\n\r\n\r\n        var scatterPlotConfig = {\r\n            height: self.plot.height+self.config.margin.top+ self.config.margin.bottom,\r\n            width: self.plot.height+self.config.margin.top+ self.config.margin.bottom,\r\n            groups:{\r\n                key: self.config.groups.key,\r\n                label: self.config.groups.label\r\n            },\r\n            guides: true\r\n        };\r\n\r\n\r\n\r\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\r\n        console.log(scatterPlotConfig);\r\n\r\n        this.on(\"cell-selected\", c=>{\r\n\r\n\r\n\r\n            scatterPlotConfig.x={\r\n                key: c.rowVar,\r\n                label: self.plot.labelByVariable[c.rowVar]\r\n            };\r\n            scatterPlotConfig.y={\r\n                key: c.colVar,\r\n                label: self.plot.labelByVariable[c.colVar]\r\n            };\r\n            if(self.scatterPlot){\r\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\r\n            }else{\r\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\r\n                this.attach(\"ScatterPlot\", self.scatterPlot);\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n}\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class D3Extensions{\r\n\r\n    static extend(){\r\n        d3.selection.enter.prototype.selectOrAppend =\r\n            d3.selection.prototype.selectOrAppend = function(selector) {\r\n                return Utils.selectOrAppend(this, selector);\r\n            };\r\n    }\r\n}\r\n","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\r\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\r\nexport {StatisticsUtils} from './statistics-utils'\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Utils} from \"./utils\";\r\n\r\nexport class Legend {\r\n\r\n    cssClassPrefix=\"odc-\";\r\n    legendClass=this.cssClassPrefix+\"legend\";\r\n    container;\r\n    scale;\r\n\r\n\r\n    constructor(svg, legendParent, scale, legendX, legendY){\r\n        this.scale=scale;\r\n        this.svg = svg;\r\n\r\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\r\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\r\n            .classed(this.legendClass, true);\r\n\r\n    }\r\n\r\n    linearGradientBar(barWidth, barHeight){\r\n        var gradientId = this.cssClassPrefix+\"linear-gradient\";\r\n        var scale= this.scale;\r\n\r\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\r\n\r\n        this.container.append(\"rect\")\r\n            .attr(\"width\", barWidth)\r\n            .attr(\"height\", barHeight)\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\r\n\r\n\r\n        var ticks = this.container.selectAll(\"text\")\r\n            .data( scale.domain() );\r\n        var ticksNumber =scale.domain().length-1;\r\n        ticks.enter().append(\"text\")\r\n            .attr(\"x\", barWidth)\r\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\r\n            .attr(\"dx\", 3)\r\n            // .attr(\"dy\", 1)\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .text(d=>d);\r\n\r\n        ticks.exit().remove();\r\n\r\n        return this;\r\n    }\r\n\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\r\n\r\n    svgClass= 'mw-d3-scatterplot-matrix';\r\n    size= 200; //scatter plot cell size\r\n    padding= 20; //scatter plot cell padding\r\n    brush= true;\r\n    guides= true; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    ticks= undefined; //ticks number, (default: computed using cell size)\r\n    x={// X axis config\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: undefined, //object property name or array index with grouping variable\r\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    variables= {\r\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\r\n        keys: [], //optional array of variable keys\r\n        value: function (d, variableKey) {// variable value accessor\r\n            return d[variableKey];\r\n        }\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        // this.svgClass = 'mw-d3-scatterplot-matrix';\r\n        console.log(custom);\r\n        Utils.deepExtend(this, custom);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ScatterPlotMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n\r\n\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot = {\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        this.setupVariables();\r\n\r\n        this.plot.size = conf.size;\r\n\r\n\r\n        var width = conf.width;\r\n        var boundingClientRect = this.getBaseContainerNode().getBoundingClientRect();\r\n        if (!width) {\r\n            var maxWidth = margin.left + margin.right + this.plot.variables.length*this.plot.size;\r\n            width = Math.min(boundingClientRect.width, maxWidth);\r\n\r\n        }\r\n        var height = width;\r\n        if (!height) {\r\n            height = boundingClientRect.height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n\r\n        if(conf.ticks===undefined){\r\n            conf.ticks = this.plot.size / 40;\r\n        }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if (conf.dot.d3ColorCategory) {\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if (colorValue) {\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String) {\r\n                this.plot.dot.color = colorValue;\r\n            } else if (this.plot.dot.colorCategory) {\r\n                this.plot.dot.color = function (d) {\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    setupVariables() {\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach(function(variableKey, index) {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function(d) { return variablesConf.value(d, variableKey) });\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n        plot.subplots = [];\r\n    };\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config;\r\n\r\n        x.value = conf.variables.value;\r\n        x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\r\n        x.map = function (d, variable) {\r\n            return x.scale(x.value(d, variable));\r\n        };\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\r\n        x.axis.tickSize(plot.size * plot.variables.length);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config;\r\n\r\n        y.value = conf.variables.value;\r\n        y.scale = d3.scale[conf.y.scale]().range([ plot.size - conf.padding / 2, conf.padding / 2]);\r\n        y.map = function (d, variable) {\r\n            return y.scale(y.value(d, variable));\r\n        };\r\n        y.axis= d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\r\n        y.axis.tickSize(-plot.size * plot.variables.length);\r\n    };\r\n\r\n    draw() {\r\n        var self =this;\r\n        var n = self.plot.variables.length;\r\n        var conf = this.config;\r\n        self.svgG.selectAll(\".mw-axis-x.mw-axis\")\r\n            .data(self.plot.variables)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-axis-x mw-axis\"+(conf.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", function(d, i) { return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\"; })\r\n            .each(function(d) { self.plot.x.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.x.axis); });\r\n\r\n        self.svgG.selectAll(\".mw-axis-y.mw-axis\")\r\n            .data(self.plot.variables)\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-axis-y mw-axis\"+(conf.guides ? '' : ' mw-no-guides'))\r\n            .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * self.plot.size + \")\"; })\r\n            .each(function(d) { self.plot.y.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.y.axis); });\r\n\r\n        var cell = self.svgG.selectAll(\".mw-cell\")\r\n            .data(self.utils.cross(self.plot.variables, self.plot.variables))\r\n            .enter().append(\"g\")\r\n            .attr(\"class\", \"mw-cell\")\r\n            .attr(\"transform\", function(d) { return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\"; });\r\n\r\n        if(conf.brush){\r\n            this.drawBrush(cell);\r\n        }\r\n\r\n        cell.each(plotSubplot);\r\n\r\n\r\n\r\n        //Labels\r\n        cell.filter(function(d) { return d.i === d.j; }).append(\"text\")\r\n            .attr(\"x\", conf.padding)\r\n            .attr(\"y\", conf.padding)\r\n            .attr(\"dy\", \".71em\")\r\n            .text(function(d) { return self.plot.labelByVariable[d.x]; });\r\n\r\n\r\n\r\n\r\n        function plotSubplot(p) {\r\n            var plot = self.plot;\r\n            plot.subplots.push(p);\r\n            var cell = d3.select(this);\r\n\r\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\r\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\r\n\r\n            cell.append(\"rect\")\r\n                .attr(\"class\", \"mw-frame\")\r\n                .attr(\"x\", conf.padding / 2)\r\n                .attr(\"y\", conf.padding / 2)\r\n                .attr(\"width\", conf.size - conf.padding)\r\n                .attr(\"height\", conf.size - conf.padding);\r\n\r\n\r\n            p.update = function(){\r\n                var subplot = this;\r\n                var dots = cell.selectAll(\"circle\")\r\n                    .data(self.data);\r\n\r\n                dots.enter().append(\"circle\");\r\n\r\n                dots.attr(\"cx\", function(d){return plot.x.map(d, subplot.x)})\r\n                    .attr(\"cy\", function(d){return plot.y.map(d, subplot.y)})\r\n                    .attr(\"r\", self.config.dot.radius);\r\n\r\n                if (plot.dot.color) {\r\n                    dots.style(\"fill\", plot.dot.color)\r\n                }\r\n\r\n                if(plot.tooltip){\r\n                    dots.on(\"mouseover\", function(d) {\r\n                        plot.tooltip.transition()\r\n                            .duration(200)\r\n                            .style(\"opacity\", .9);\r\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" +plot.y.value(d, subplot.y) + \")\";\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n                        var group = self.config.groups.value(d);\r\n                        if(group || group===0 ){\r\n                            html+=\"<br/>\";\r\n                            var label = self.config.groups.label;\r\n                            if(label){\r\n                                html+=label+\": \";\r\n                            }\r\n                            html+=group\r\n                        }\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                        .on(\"mouseout\", function(d) {\r\n                            plot.tooltip.transition()\r\n                                .duration(500)\r\n                                .style(\"opacity\", 0);\r\n                        });\r\n                }\r\n\r\n                dots.exit().remove();\r\n            };\r\n\r\n            p.update();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    update() {\r\n        this.plot.subplots.forEach(function(p){p.update()});\r\n    };\r\n\r\n    drawBrush(cell) {\r\n        var self = this;\r\n        var brush = d3.svg.brush()\r\n            .x(self.plot.x.scale)\r\n            .y(self.plot.y.scale)\r\n            .on(\"brushstart\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"brushend\", brushend);\r\n\r\n        cell.append(\"g\").call(brush);\r\n\r\n\r\n        var brushCell;\r\n\r\n        // Clear the previously-active brush, if any.\r\n        function brushstart(p) {\r\n            if (brushCell !== this) {\r\n                d3.select(brushCell).call(brush.clear());\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\r\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\r\n                brushCell = this;\r\n            }\r\n        }\r\n\r\n        // Highlight the selected circles.\r\n        function brushmove(p) {\r\n            var e = brush.extent();\r\n            self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\r\n                return e[0][0] > d[p.x] || d[p.x] > e[1][0]\r\n                    || e[0][1] > d[p.y] || d[p.y] > e[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        }\r\n    };\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotConfig extends ChartConfig{\r\n\r\n    svgClass= 'mw-d3-scatterplot';\r\n    guides= false; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    x={// X axis config\r\n        label: 'X', // axis label\r\n        key: 0,\r\n        value: function(d, key) { return d[key] }, // x value accessor\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        label: 'Y', // axis label,\r\n        key: 1,\r\n        value: function(d, key) { return d[key] }, // y value accessor\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: 2,\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n        var config = this;\r\n        this.dot={\r\n            radius: 2,\r\n            color: function(d) { return config.groups.value(d, config.groups.key) }, // string or function returning color's value for color scale\r\n            d3ColorCategory: 'category10'\r\n        };\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ScatterPlot extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ScatterPlotConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        var self=this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot={\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        var width = conf.width;\r\n        var placeholderNode = this.getBaseContainerNode();\r\n\r\n        if(!width){\r\n            width =placeholderNode.getBoundingClientRect().width;\r\n        }\r\n        var height = conf.height;\r\n        if(!height){\r\n            height =placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if(conf.dot.d3ColorCategory){\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if(colorValue){\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String){\r\n                this.plot.dot.color = colorValue;\r\n            }else if(this.plot.dot.colorCategory){\r\n                this.plot.dot.color = function(d){\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }else{\r\n\r\n\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = function(d) { return x.scale(x.value(d));};\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        var data = this.data;\r\n        plot.x.scale.domain([d3.min(data, plot.x.value)-1, d3.max(data, plot.x.value)+1]);\r\n        if(this.config.guides) {\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n\r\n        /*\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         */\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = function(d) { return y.scale(y.value(d));};\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n\r\n        if(this.config.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n\r\n\r\n        var data = this.data;\r\n        plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\r\n    };\r\n\r\n    draw(){\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.update();\r\n    };\r\n\r\n    drawAxisX(){\r\n\r\n        \r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        self.svgG.selectOrAppend(\"g.mw-axis-x.mw-axis\"+(self.config.guides ? '' : '.mw-no-guides'))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\")\r\n            .call(plot.x.axis)\r\n            .selectOrAppend(\"text.mw-label\")\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (self.config.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        self.svgG.selectOrAppend(\"g.mw-axis-y.mw-axis\"+(self.config.guides ? '' : '.mw-no-guides'))\r\n            .call(plot.y.axis)\r\n            .selectOrAppend(\"text.mw-label\")\r\n            .attr(\"transform\", \"translate(\"+ -self.config.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    update(newData){\r\n        // D3ChartBase.prototype.update.call(this, newData);\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var data = this.data;\r\n        var dots = self.svgG.selectAll(\".mw-dot\")\r\n            .data(data);\r\n\r\n        dots.enter().append(\"circle\")\r\n            .attr(\"class\", \"mw-dot\");\r\n\r\n\r\n        dots.attr(\"r\", self.config.dot.radius)\r\n            .attr(\"cx\", plot.x.map)\r\n            .attr(\"cy\", plot.y.map);\r\n\r\n        if(plot.tooltip){\r\n            dots.on(\"mouseover\", function(d) {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = \"(\" + plot.x.value(d) + \", \" +plot.y.value(d) + \")\";\r\n                var group = self.config.groups.value(d, self.config.groups.key);\r\n                if(group || group===0 ){\r\n                    html+=\"<br/>\";\r\n                    var label = self.config.groups.label;\r\n                    if(label){\r\n                        html+=label+\": \";\r\n                    }\r\n                    html+=group\r\n                }\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", function(d) {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        if(plot.dot.color){\r\n            dots.style(\"fill\", plot.dot.color)\r\n        }\r\n\r\n        dots.exit().remove();\r\n\r\n    };\r\n}\r\n","var su = module.exports.StatisticsUtils ={};\r\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');","export class Utils {\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, { [key]: source[key] });\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static inferVariables(data, groupKey, includeGroup) {\r\n        var res = [];\r\n        if (data.length) {\r\n            var d = data[0];\r\n            if (d instanceof Array) {\r\n                res=  d.map(function (v, i) {\r\n                    return i;\r\n                });\r\n            }else if (typeof d === 'object'){\r\n\r\n                for (var prop in d) {\r\n                    if(!d.hasOwnProperty(prop)) continue;\r\n\r\n                    res.push(prop);\r\n                }\r\n            }\r\n        }\r\n        if(!includeGroup){\r\n            var index = res.indexOf(groupKey);\r\n            if (index > -1) {\r\n                res.splice(index, 1);\r\n            }\r\n        }\r\n        return res\r\n    };\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if(selection.empty()){\r\n            if(element){\r\n                return parent.append(element);\r\n            }\r\n            var selectorParts = selector.split(/([\\.\\#])/);\r\n            element = parent.append(selectorParts.shift());\r\n            while (selectorParts.length > 1) {\r\n                var selectorModifier = selectorParts.shift();\r\n                var selectorItem = selectorParts.shift();\r\n                if (selectorModifier === \".\") {\r\n                    element = element.classed(selectorItem, true);\r\n                } else if (selectorModifier === \"#\") {\r\n                    element = element.attr('id', selectorItem);\r\n                }\r\n            }\r\n            return element;\r\n\r\n        }\r\n        return selection;\r\n    };\r\n    \r\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2){\r\n        var defs = Utils.selectOrAppend(svg, \"defs\");\r\n        var linearGradient = defs.append(\"linearGradient\")\r\n            .attr(\"id\", gradientId);\r\n\r\n        linearGradient\r\n            .attr(\"x1\", x1+\"%\")\r\n            .attr(\"y1\", y1+\"%\")\r\n            .attr(\"x2\", x2+\"%\")\r\n            .attr(\"y2\", y2+\"%\");\r\n\r\n        //Append multiple color stops by using D3's data/enter step\r\n        var stops = linearGradient.selectAll(\"stop\")\r\n            .data( range );\r\n\r\n        stops.enter().append(\"stop\");\r\n\r\n        stops.attr(\"offset\", (d,i) => i/(range.length-1) )\r\n            .attr(\"stop-color\", d => d );\r\n\r\n        stops.exit().remove();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}