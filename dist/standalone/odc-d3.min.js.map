{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d3-array/dist/d3-array.js","node_modules/d3-axis/dist/d3-axis.js","node_modules/d3-brush/dist/d3-brush.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-dispatch/dist/d3-dispatch.js","node_modules/d3-drag/dist/d3-drag.js","node_modules/d3-ease/dist/d3-ease.js","node_modules/d3-format/dist/d3-format.js","node_modules/d3-hierarchy/dist/d3-hierarchy.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-path/dist/d3-path.js","node_modules/d3-scale/dist/d3-scale.js","node_modules/d3-selection/dist/d3-selection.js","node_modules/d3-shape/dist/d3-shape.js","node_modules/d3-svg-legend/indexRollup.js","node_modules/d3-svg-legend/node_modules/d3-array/build/d3-array.js","node_modules/d3-svg-legend/node_modules/d3-dispatch/build/d3-dispatch.js","node_modules/d3-svg-legend/node_modules/d3-format/build/d3-format.js","node_modules/d3-svg-legend/node_modules/d3-scale/build/d3-scale.js","node_modules/d3-svg-legend/node_modules/d3-selection/build/d3-selection.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/d3-timer/dist/d3-timer.js","node_modules/d3-transition/dist/d3-transition.js","node_modules/simple-statistics/src/error_function.js","node_modules/simple-statistics/src/linear_regression.js","node_modules/simple-statistics/src/linear_regression_line.js","node_modules/simple-statistics/src/mean.js","node_modules/simple-statistics/src/quantile.js","node_modules/simple-statistics/src/quantile_sorted.js","node_modules/simple-statistics/src/quickselect.js","node_modules/simple-statistics/src/sample_correlation.js","node_modules/simple-statistics/src/sample_covariance.js","node_modules/simple-statistics/src/sample_standard_deviation.js","node_modules/simple-statistics/src/sample_variance.js","node_modules/simple-statistics/src/standard_deviation.js","node_modules/simple-statistics/src/sum.js","node_modules/simple-statistics/src/sum_nth_power_deviations.js","node_modules/simple-statistics/src/variance.js","node_modules/simple-statistics/src/z_score.js","src/bar-chart.js","src/box-plot-base.js","src/box-plot.js","src/chart-with-color-groups.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/d3.js","src/diverging-stacked-bar-chart.js","src/heatmap-timeseries.js","src/heatmap.js","src/histogram.js","src/index.js","src/legend.js","src/line-chart.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","window","global","self","this","ODCD3","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","ascending","b","NaN","bisector","compare","d","x","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pair","number","variance","values","valueof","value","delta","m","mean","sum","isNaN","deviation","array","v","Math","sqrt","extent","min","max","Array","prototype","slice","map","constant","identity","range","start","stop","step","arguments","ceil","e10","e5","e2","tickIncrement","count","power","floor","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","quantile","i0","value0","transpose","matrix","j","row","bisect","cross","values0","values1","reduce","i1","n0","n1","descending","histogram","domain","threshold","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","random","ticks","reverse","isFinite","zip","Object","defineProperty","factory","d3","top","bottom","epsilon","translateX","translateY","y","entering","__axis","axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","d3Dispatch","d3Drag","d3Interpolate","d3Selection","d3Transition","BrushEvent","target","type","nopropagation","event","stopImmediatePropagation","noevent","preventDefault","MODE_DRAG","name","MODE_SPACE","MODE_HANDLE","MODE_CENTER","number1","number2","X","handles","input","output","xy","Y","XY","cursors","overlay","s","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","ctrlKey","button","defaultExtent","svg","ownerSVGElement","hasAttribute","viewBox","baseVal","width","height","defaultTouchable","navigator","maxTouchPoints","local","node","__brush","brush$1","dim","touchending","touchable","keys","listeners","dispatch","brush","handleSize","group","property","initialize","handle","redraw","on","started","touchmoved","touchended","style","emitter","that","args","clean","Emitter","state","active","touches","w0","w1","e0","e1","s0","s1","moving","lockX","lockY","__data__","mode","metaKey","altKey","signX","signY","W","N","E","S","dx","dy","shifting","shiftKey","pointer","identifier","touch","toucher","changedTouches","mouse","point0","point","emit","beforestart","moved","ended","view","keyCode","move","dragDisable","interrupt","point1","clearTimeout","setTimeout","dragEnable","empty","end","tween","selection0","selection1","interpolate","clear","starting","customEvent","keyModifiers","brushSelection","brushX","brushY","prefix","Map","object","key","set","createObject","setObject","createMap","setMap","map$$1","Set","constructor","has","get","entries","size","proto","add","nest","sortValues","rollup","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","sortKey","extend","parent","definition","create","Color","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","trim","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","g","rgbConvert","rgb","opacity","hex","toString","h","l","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","B","C","D","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","cosh","sinh","lch","noop","Dispatch","callback","concat","typename","T","typenames","types","split","indexOf","parseTypenames","nodrag","root","document","documentElement","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","defaultContainer","defaultSubject","drag","mousedownx","mousedowny","mousemoving","container","gestures","clickDistance2","mousedowned","touchstarted","gesture","mousemoved","mouseupped","clientX","clientY","sublisteners","p0","clickDistance","quadInOut","cubicInOut","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinInOut","expInOut","circleInOut","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","overshoot","backIn","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","formatDecimal","toExponential","coefficient","prefixExponent","re","formatSpecifier","specifier","match","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","undefined","formatRounded","join","formatTypes","%","toFixed","toPrecision","toUpperCase","locale","prefixes","formatLocale","grouping","thousands","substring","formatGroup","Number","currencyPrefix","currency","currencySuffix","decimal","numerals","replace","formatNumerals","String","percent","minus","nan","newFormat","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","charCodeAt","Infinity","padding","formatPrefix","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","defaultSeparation","meanXReduce","maxYReduce","children","hierarchy","child","childs","Node","valued","nodes","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","current","next","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","links","source","enclose","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","y1","r1","x2","y2","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","d2","ab","xa","xb","ya","yb","A","place","intersects","score","Node$1","circle","previous","packEnclose","aa","ca","sj","sk","pack","required","constantZero","defaultRadius","radiusLeaf","radius","packChildren","translateChild","roundNode","y0","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","TreeNode","treemapSlice","phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","rows","dice","squarify","resquarify","_squarify","cluster","separation","nodeSize","previousNode","meanX","maxY","leafLeft","leafRight","optional","packSiblings","partition","positionNode","stratify","nodeId","nodeKey","nodeByKey","tree","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","change","executeShifts","midpoint","vip","vop","vim","vom","sip","sop","sim","som","wm","wp","apportion","treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingOuter","treemapBinary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","treemapSliceDice","treemapSquarify","treemapResquarify","d3Color","basis","v0","v1","v2","v3","basis$1","basisClosed","linear","hue","gamma","nogamma","exponential","rgbGamma","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","nb","na","date","Date","setTime","reA","reB","string","am","bm","bs","bi","lastIndex","q","index","one","valueOf","cssNode","cssRoot","cssView","svgNode","degrees","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","translate","interpolateTransformCss","createElement","defaultView","getComputedStyle","appendChild","getPropertyValue","removeChild","interpolateTransformSvg","createElementNS","setAttribute","consolidate","rho","SQRT2","exp","hue$$1","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateDiscrete","interpolateHue","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","p1","ux0","uy0","ux1","uy1","r0","coshr0","tanh","duration","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","piecewise","I","quantize","interpolator","samples","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","rect","d3Collection","d3Array","d3Format","d3Time","d3TimeFormat","initRange","initInterpolator","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","unit","normalize","clamper","bimap","d0","polymap","clamp","transformer","untransform","invert","continuous","linearish","nice","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","transformSymlog","log1p","transformSymexp","expm1","symlogish","transformPow","transformSqrt","transformSquare","powish","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","every","transformer$1","k10","copy$1","sequentialPow","transformer$2","k21","divergingPow","scaleBand","scalePoint","pointish","scaleIdentity","identity$1","scaleLinear","scaleLog","scaleSymlog","symlog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","invertExtent","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","scaleSequential","sequential","scaleSequentialLog","sequentialLog","scaleSequentialPow","scaleSequentialSqrt","scaleSequentialSymlog","sequentialSymlog","scaleSequentialQuantile","sequentialQuantile","scaleDiverging","diverging","scaleDivergingLog","divergingLog","scaleDivergingPow","scaleDivergingSqrt","scaleDivergingSymlog","divergingSymlog","xhtml","namespaces","xlink","xml","xmlns","namespace","space","creator","fullname","ownerDocument","uri","namespaceURI","none","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","update","EnterNode","datum","_next","_parent","insertBefore","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","styleValue","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","contains","filterEvents","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","subgroups","subnode","subgroup","bind","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","selection$$1","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","nextId","Local","sourceEvent","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","clientPoint","points","d3Path","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","_context","curveLinear","x$$1","y$$1","defined","curve","buffer","defined0","lineStart","lineEnd","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","_line","_point","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","angle","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","link","argv","curveHorizontal","curveVertical","curveRadial$1","p2","p3","draw","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","_x","_y","bundle","point$1","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","cardinal$$1","CardinalOpen","cardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","catmullRom$$1","CatmullRomOpen","catmullRomOpen","LinearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","series","none$1","stackValue","appearance","peaks","peak","vi","vj","_t0","px","py","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","intersect","ax","ay","bx","by","kc","lc","centroid","pie","arcs","pa","radialArea","radialLine","linkHorizontal","linkVertical","linkRadial","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stack","oz","kz","sz","sij","ki","si","stackOffsetExpand","stackOffsetDiverging","yp","yn","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAppearance","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","d3Scale","d3_identity","d3_reverse","arr","mirror","d3_textWrapping","word","words","parseFloat","tspan","getComputedTextLength","_typeof","Symbol","iterator","obj","helper","d3_drawShapes","shape","shapes","shapeHeight","shapeWidth","shapeRadius","d3_addText","labels","classPrefix","labelWidth","d3_calcType","cells","labelFormat","labelDelimiter","feature","d3_quantLegend","increment","d3_linearLegend","d3_ordinalLegend","gen","customLabels","genLength","_i","generatedLabels","d3_mergeLabels","d3_filterCells","cellFilter","filterCells","label","dataValues","labelValues","d3_placement","cell","cellTrans","textTrans","labelAlign","d3_addEvents","dispatcher","cellDispatcher","d3_cellOver","d3_cellOut","d3_cellClick","d3_title","title","titleWidth","cellsSvg","yOffset","getBBox","xOffset","d3_defaultLocale","d3_defaultFormatSpecifier","d3_defaultDelimiter","shapePadding","useClass","labelOffset","labelWrap","legendDispatcher","legend","cellEnter","textSize","shapeSize","cellSize","textAlign","textWrap","legendG","bbox","stroke","maxH","maxW","legendHelpers","thresholdLabels","_ref","legendColor","legendSize","legendSymbol","indexRollup","","map$1","deinterpolate","reinterpolate","deinterpolate$$","deinterpolateClamp","reinterpolateClamp","deinterpolate$1","category10","category20b","category20c","category20","warm","cool","rainbow","ramp","viridis","magma","inferno","plasma","quantile$1","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","localDate","H","M","L","setFullYear","utcDate","setUTCFullYear","newYear","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","getHours","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","getUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","getUTCHours","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","utcMonday","getUTCFullYear","getUTCDate","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","timeParse","isoSpecifier","formatIso","toISOString","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","newInterval","floori","offseti","field","milliseconds","seconds","minutes","hours","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","restart","timerFlush","wake","sleep","nap","poke","clearInterval","setInterval","TypeError","elapsed","total","d3Timer","d3Ease","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","timing","schedules","__transition","ease","init","schedule$$1","tweenValue","_id","styleRemove","Transition","_name","newId","selection_prototype","inherit","transition$$1","id0","id1","on0","on1","sit","onFunction","attrTween","interpolate$$1","string00","string10","interpolate0","string0","string1","value1","_value","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleFunction","listener0","styleMaybeRemove","styleConstant","styleInterpolate","textFunction","textConstant","removeFunction","tween0","tween1","easeConstant","Promise","resolve","reject","cancel","defaultTiming","sumX","sumY","sumXX","sumXY","mb","quantileSorted","quickselect","quantileSelect","quantileIndex","len","idx","indices","multiQuantileSelect","results","swap","tmp","sd","newLeft","newRight","sampleCovariance","sampleStandardDeviation","xmean","ymean","sampleVariance","sampleVarianceX","sumNthPowerDeviations","correction","tempValue","meanValue","standardDeviation","_chartWithColorGroups","_utils","_interopRequireWildcard","BarChartConfig","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","svgClass","cssClassPrefix","showLegend","showTooltip","Utils","isNumber","_assertThisInitialized","deepExtend","ChartWithColorGroupsConfig","BarChart","placeholderSelector","config","ChartWithColorGroups","_get","plot","computePlotSize","setupY","setupX","setupGroupStacks","setupYDomain","conf","createAxis","createScale","layers","layer","groupData","y0s","groupedData","forEach","mapToPoint","prevY0","axisConf","svgG","selectOrAppend","prefixClass","guides","axisT","margin","layerClass","barClass","layerMerge","bar","barEnter","barRectEnter","barMerge","barRect","barRectT","barT","layerT","transitionEnabled","yDomain","seriesColor","tooltip","hideTooltip","newData","drawAxisX","drawAxisY","drawBars","_chart","BoxPlotBaseConfig","domainMargin","Q1","Q2","Q3","Wl","whiskerLow","Wh","whiskerHigh","outliers","outlierValue","outlierLabel","minBoxWidth","maxBoxWidth","d3ColorCategory","ChartConfig","BoxPlotBase","Chart","getDataToPlot","setupColor","_this2","yMin","yMax","q1","q3","wl","wh","boxplotClass","boxplots","boxplotEnter","boxplotsMerge","boxplotsT","boxWidth","boxLeft","boxRight","boxClass","boxRects","boxRectsT","medianClass","medianLine","whiskerClass","tickClass","whiskers","box","endpoint","whisker","outlierClass","outlierEnterCircle","outliersMerge","outliersT","drawBoxPlots","_this3","colorSchemeCategory","capitalizeFirstLetter","colorCategory","colorValue","_boxPlotBase","_statisticsUtils","BoxPlotConfig","displayValue","tukey","BoxPlot","groupingEnabled","isGroupingEnabled","groupValue","getDisplayValue","isFunction","isObject","StatisticsUtils","IQR","_legend","forceLegend","setupGroups","getOwnPropertyNames","groupToLabel","computeGroupColorDomain","getLabel","groupColorDomain","_this4","enabledGroups","updateLegend","legendX","legendY","Legend","onLegendCellClick","updateLegendCellStatuses","cellValue","updateEnabledGroups","isDisabled","titleSize","titleMargin","subtitle","subtitleSize","subtitleMargin","utils","_attached","_layers","_events","_isInitialized","guid","_isAttached","baseContainer","setConfig","setData","postInit","initConfigAccessors","initPlot","initSvg","initTooltip","svgWidth","svgHeight","titleMarginSize","attachmentData","attachmentName","updateTitle","updateSubtitle","titleClass","subtitleClass","chart","once","off","events","ev","getBaseContainer","clazz","addDot","availableWidth","availableHeight","pageX","pageY","removePropertyAccessors","initPropertyAccessors","bindTo","returnObj","recursive","accessor","initPropertyAccessor","isObjectNotArray","propertyKey","_scatterplot","CorrelationMatrixConfig","highlightLabels","rotateLabelsX","rotateLabelsY","variables","variableKey","correlation","xValues","yValues","sampleCorrelation","sizeMin","sizeMax","CorrelationMatrix","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","corrConf","cellConf","radiusMax","radiusScale","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","includeInPlot","labelByVariable","matrixCells","variableToValues","corr","rowVar","colVar","col","updateCells","updateVariableLabels","labelClass","updateAxisX","updateAxisY","labelXClass","labelsMerge","maxWidth","computeXAxisLabelsWidth","placeTextWithEllipsisAndTooltip","labelYClass","computeYAxisLabelsWidth","SQRT_2","fontSize","cellClass","cellShape","cellsMerge","scatterPlot","mouseoverCallbacks","mouseoutCallbacks","highlightClass","xLabelClass","yLabelClass","trigger","barHeight","linearGradientBar","containerSelector","scatterPlotConfig","ScatterPlot","attach","D3Extensions","insertSelector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","_d3Dispatch","enumerable","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","_d3Collection","_d3Ease","_d3Axis","DivergingStackedBarChartConfig","showBarValues","colorRange","categoryNames","middleValue","DivergingStackedBarChart","neutralIndex","originalValues","categories","catIndex","boxes","originalValue","_toConsumableArray","titleY","titleDY","rowClass","rowMerge","bars","barsEnter","barsM","textM","_heatmap","HeatmapTimeSeriesConfig","fillMissing","intervalStep","displayFormat","intervalToFormats","sortComparator","isString","localeCompare","formatter","Intl","NumberFormat","HeatmapConfig","HeatmapTimeSeries","Heatmap","guessTimeFormat","initTimeFormatAndInterval","timeParser","getTimeParser","uniqueValues","prev","parseTime","nextTimeTickValue","missing","iteration","compareTimeValues","timeString","formatTime","updateGroups","parser","getTimeFormatter","isDate","rowIndex","prevRowValue","colIndex","guessInterval","intervalFormat","some","timeFormatter","noDataText","rotateLabels","decimalPlaces","sortLabels","overlap","notAvailableValue","noDataColor","reverseScale","matrixes","setupValues","buildCells","groupByX","allTitlesWidth","groupByY","_allTitlesWidth","setupZScale","level","valueMap","minZ","maxZ","xVal","yVal","zValRaw","zVal","groupY","groupX","setupValuesBeforeGroupsSort","gaps","totalValuesCount","allValuesList","sortGroups","val","axisVal","rootGroup","axisGroupsConfig","currentGroup","groupKey","groupKeyIndex","groupingValue","axisConfig","allValuesCount","allValuesBeforeCount","gapsBefore","gapsSize","computeGapsSize","gapsBeforeSize","childrenList","childrenCount","childProp","gapsInside","gapsInsideSize","cellWidth","xGapsSize","computedCellWidth","yGapsSize","computedCellHeight","cellHeight","unshift","drawGroupsY","drawGroupsX","updateAxisTitles","offsetX","gapSize","computeGapSize","formatValueX","elem","offsetY","formatValueY","parentGroup","groupClass","groupYClass","valuesBeforeCount","groupsEnter","titleGroupEnter","titleRectWidth","groupTitleRectHeight","groupsMerge","groupWidth","tileRects","setGroupMouseCallbacks","groupXClass","titleRectHeight","groupHeight","cellContainerClass","paddingX","paddingY","cellContainer","formatValueZ","formatLegendValue","setRotateLabels","gapLevel","maxGroupGapSize","gapsNumber","gapsLevel","HistogramConfig","frequency","Histogram","setupHistogram","yStackMax","stackedHistograms","histogramBins","drawHistogram","_d3Extensions","_scatterplotMatrix","_regression","_correlationMatrix","_heatmapTimeseries","_histogram","_barChart","_boxPlot","_divergingStackedBarChart","_lineChart","_d3SvgLegend","legendParent","legendClass","barWidth","gradientId","linearGradient","ticksNumber","ticksMerge","LineChartConfig","dotRadius","dotId","onDotHover","onDotHoverOut","lineId","onLineHover","onLineHoverOut","LineChart","updateLines","lineClass","linesContainerClass","layerEnter","linePathEnter","linePath","linePathMerge","linePathT","dotClass","dots","dotsMerge","dotsT","RegressionConfig","mainRegression","groupRegression","confidence","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","areaCurve","ScatterPlotConfig","Regression","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","groupVal","linearRegression","linearRegressionLine","extentX","linePoints","computeConfidence","xMySum","xSum","xPowSum","ySum","yPowSum","Sy2","Sa2","errorFn","fitInPlot","centerX","confidenceAreaPoints","moe","updateRegressionLines","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionClass","confidenceAreaClass","regressionSelector","regressionEnter","regressionMerge","lineT","areaT","ScatterPlotMatrixConfig","minCellSize","maxCellSize","ScatterPlotMatrix","dot","subplots","variable","axisClass","xAxisSelector","yAxisSelector","noGuidesClass","xAxis","yAxis","yAxisMerge","cellMerge","drawBrush","frameClass","subplot","hiddenClass","brushCell","clearBrush","updateDots","$n","$p","integer","precision_string","_subt","SIGNIFICANT","_subu","$y","$x","$round","$u","$u2","$n1","$delta","_subtprob","round_to_precision","$a","$w","$z","$i","$max","_statisticsDistributions","su","errorFunction","zScore","standardError","tdistr","srcObj","assign","mergeDeep","_defineProperty","includeGroup","res","prop","item","stops","s4","textD3Obj","textString","textObj","getSubStringLength","placeTextWithEllipsis","scaleName","scaleFunctionName","axisFnName","sanitizeHeight","sanitizeWidth"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-axis/ v1.0.12 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nfunction identity(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-brush/ v1.1.3 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function(target) {\n    return d3Selection.touch(target, d3Selection.event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return (!clean && that.__brush.emitter) || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      else this.emit(\"brush\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !d3Selection.event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (keys && d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        pointer = d3Selection.event.touches ? toucher(d3Selection.event.changedTouches[0].identifier) : d3Selection.mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushSelection = brushSelection;\nexports.brushX = brushX;\nexports.brushY = brushY;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.2.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.lch = lch;\nexports.gray = gray;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-dispatch/ v1.0.5 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-drag/ v1.2.4 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Selection) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction nodrag(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.ctrlKey && !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-ease/ v1.0.5 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-format/ v1.4.1 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\nexports.FormatSpecifier = FormatSpecifier;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-hierarchy/ v1.1.8 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice = Array.prototype.slice;\n\nfunction shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$1() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-interpolate/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHue = hue$1;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-path/ v1.0.8 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// https://d3js.org/d3-scale/ v2.2.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n\nvar array = Array.prototype;\n\nvar map = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal() {\n  var index = d3Collection.map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3Interpolate.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = d3Array.tickStep(start, stop, count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity$1(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity$1(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$1() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$1()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((d3Array.bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer$2() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer$2()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer$2()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity$1;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleSymlog = symlog;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.tickFormat = tickFormat;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-selection/ v1.4.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nfunction matcher(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_join(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nexports.create = create;\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-shape/ v1.3.5 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x,\n      y$$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction appearance(series) {\n  var peaks = series.map(peak);\n  return none$1(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAppearance = appearance;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-format'), require('d3-dispatch'), require('d3-scale'), require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-format', 'd3-dispatch', 'd3-scale', 'd3-array'], factory) :\n\t(factory((global.indexRollup = global.indexRollup || {}),global.d3Selection,global.d3Format,global.d3Dispatch,global.d3Scale,global.d3Array));\n}(this, (function (exports,d3Selection,d3Format,d3Dispatch,d3Scale,d3Array) { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar d3_identity = function d3_identity(d) {\n  return d;\n};\n\nvar d3_reverse = function d3_reverse(arr) {\n  var mirror = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1];\n  }\n  return mirror;\n};\n\n//Text wrapping code adapted from Mike Bostock\nvar d3_textWrapping = function d3_textWrapping(text, width) {\n  text.each(function () {\n    var text = d3Selection.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.2,\n        //ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n};\n\nvar d3_mergeLabels = function d3_mergeLabels() {\n  var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments[1];\n  var domain = arguments[2];\n  var range = arguments[3];\n  var labelDelimiter = arguments[4];\n\n  if ((typeof labels === \"undefined\" ? \"undefined\" : _typeof(labels)) === \"object\") {\n    if (labels.length === 0) return gen;\n\n    var i = labels.length;\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n    return labels;\n  } else if (typeof labels === \"function\") {\n    var customLabels = [];\n    var genLength = gen.length;\n    for (var _i = 0; _i < genLength; _i++) {\n      customLabels.push(labels({\n        i: _i,\n        genLength: genLength,\n        generatedLabels: gen,\n        domain: domain,\n        range: range,\n        labelDelimiter: labelDelimiter\n      }));\n    }\n    return customLabels;\n  }\n\n  return gen;\n};\n\nvar d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {\n  var data = [];\n\n  if (cells.length > 1) {\n    data = cells;\n  } else {\n    var domain = scale.domain(),\n        increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);\n    var i = 0;\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment);\n    }\n  }\n\n  var labels = data.map(labelFormat);\n  return {\n    data: data,\n    labels: labels,\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n  });\n\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  };\n};\n\nvar d3_ordinalLegend = function d3_ordinalLegend(scale) {\n  return {\n    data: scale.domain(),\n    labels: scale.domain(),\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellover\", obj, d);\n};\n\nvar d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellout\", obj, d);\n};\n\nvar d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellclick\", obj, d);\n};\n\nvar helper = {\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    var text = svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").data(labels).text(d3_identity);\n\n    if (labelWidth) {\n      svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").call(d3_textWrapping, labelWidth);\n    }\n\n    return text;\n  },\n\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale);\n\n    //for d3.scaleSequential that doesn't have a range function\n    var range = scale.range && scale.range() || scale.domain();\n    type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels);\n      type.data = d3_reverse(type.data);\n    }\n\n    return type;\n  },\n\n  d3_filterCells: function d3_filterCells(type, cellFilter) {\n    var filterCells = type.data.map(function (d, i) {\n      return { data: d, label: type.labels[i] };\n    }).filter(cellFilter);\n    var dataValues = filterCells.map(function (d) {\n      return d.data;\n    });\n    var labelValues = filterCells.map(function (d) {\n      return d.label;\n    });\n    type.data = type.data.filter(function (d) {\n      return dataValues.indexOf(d) !== -1;\n    });\n    type.labels = type.labels.filter(function (d) {\n      return labelValues.indexOf(d) !== -1;\n    });\n    return type;\n  },\n\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    cells.on(\"mouseover.legend\", function (d) {\n      d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      d3_cellClick(dispatcher, d, this);\n    });\n  },\n\n  d3_title: function d3_title(svg, title, classPrefix, titleWidth) {\n    if (title !== \"\") {\n      var titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\");\n\n      titleText.data([title]).enter().append(\"text\").attr(\"class\", classPrefix + \"legendTitle\");\n\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title);\n\n      if (titleWidth) {\n        svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").call(d3_textWrapping, titleWidth);\n      }\n\n      var cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\");\n      var yOffset = svg.select(\".\" + classPrefix + \"legendTitle\").nodes().map(function (d) {\n        return d.getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.nodes().map(function (d) {\n        return d.getBBox().x;\n      })[0];\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n    }\n  },\n\n  d3_defaultLocale: {\n    format: d3Format.format,\n    formatPrefix: d3Format.formatPrefix\n  },\n\n  d3_defaultFormatSpecifier: \".01f\",\n\n  d3_defaultDelimiter: \"to\"\n};\n\nfunction color() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\").data(type.data);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \", \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n          \" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === \"string\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.textWrap = function (_) {\n    if (!arguments.length) return textWrap;\n    textWrap = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction size() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    //sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n      return bbox;\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n        var y = shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0;\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n\n          return \"translate(0, \" + (y + height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n          \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      (function () {\n        cellTrans = function cellTrans(d, i) {\n          var width = d3Array.sum(shapeSize.slice(0, i), function (d) {\n            return d.width;\n          });\n          var y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0;\n          return \"translate(\" + (width + i * shapePadding) + \", \" + y + \")\";\n        };\n\n        var offset = shape == \"line\" ? maxH / 2 : maxH;\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (offset + labelOffset) + \")\";\n        };\n      })();\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction symbol() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    //remove old shapes\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(maxH, d.height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \" )\";\n        };\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n              \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate( \" + i * (maxW + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nvar thresholdLabels = function thresholdLabels(_ref) {\n  var i = _ref.i,\n      genLength = _ref.genLength,\n      generatedLabels = _ref.generatedLabels,\n      labelDelimiter = _ref.labelDelimiter;\n\n  if (i === 0) {\n    var values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return \"Less than \" + values[1];\n  } else if (i === genLength - 1) {\n    var _values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return _values[0] + \" or more\";\n  }\n  return generatedLabels[i];\n};\n\nvar legendHelpers = {\n  thresholdLabels: thresholdLabels\n};\n\nvar index = {\n  legendColor: color,\n  legendSize: size,\n  legendSymbol: symbol,\n  legendHelpers: legendHelpers\n};\n\nexports.legendColor = color;\nexports.legendSize = size;\nexports.legendSymbol = symbol;\nexports.legendHelpers = legendHelpers;\nexports['default'] = index;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=indexRollup.js.map\n","// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-time-format/ v2.1.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-time/ v1.0.10 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-timer/ v1.0.9 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-transition/ v1.2.0 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-timer'), require('d3-color'), require('d3-interpolate'), require('d3-selection'), require('d3-ease')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-timer', 'd3-color', 'd3-interpolate', 'd3-selection', 'd3-ease'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Timer,d3Color,d3Interpolate,d3Selection,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    schedule$$1.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate$$1, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate$$1, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate$$1, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate$$1(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate$$1, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate$$1(string00 = string0, value1));\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleNull(name, interpolate$$1) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        string1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate$$1, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate$$1(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate$$1, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate$$1(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule$$1 = set(this, id),\n        on = schedule$$1.on,\n        listener = schedule$$1.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nfunction transition_end() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule$$1 = set(this, id),\n          on = schedule$$1.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule$$1.on = on1;\n    });\n  });\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n/* @flow */\n\n/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x/*: number */)/*: number */ {\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) -\n        1.26551223 +\n        1.00002368 * t +\n        0.37409196 * Math.pow(t, 2) +\n        0.09678418 * Math.pow(t, 3) -\n        0.18628806 * Math.pow(t, 4) +\n        0.27886807 * Math.pow(t, 5) -\n        1.13520398 * Math.pow(t, 6) +\n        1.48851587 * Math.pow(t, 7) -\n        0.82215223 * Math.pow(t, 8) +\n        0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n","'use strict';\n/* @flow */\n\n/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0, sumY = 0,\n            sumXX = 0, sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\n            ((dataLength * sumXX) - (sumX * sumX));\n\n        // `b` is the y-intercept of the line.\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\n\nmodule.exports = linearRegression;\n","'use strict';\n/* @flow */\n\n/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function(x) {\n        return mb.b + (mb.m * x);\n    };\n}\n\nmodule.exports = linearRegressionLine;\n","'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs on `O(n)`, linear time in respect to the array\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x /*: Array<number> */)/*:number*/ {\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        throw new Error('mean requires at least one data point');\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n","'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\nvar quickselect = require('./quickselect');\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x /*: Array<number> */, p /*: Array<number> | number */) {\n    var copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        var results = [];\n        // For each requested quantile\n        for (var i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        var idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    var indices = [0];\n    for (var i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    var stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        var r = Math.ceil(stack.pop());\n        var l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        var m = Math.floor((l + r) / 2);\n        quantileSelect(arr, indices[m], indices[l], indices[r]);\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len /*: number */, p /*: number */)/*:number*/ {\n    var idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nmodule.exports = quantile;\n","'use strict';\n/* @flow */\n\n/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x /*: Array<number> */, p /*: number */)/*:number*/ {\n    var idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error('quantile requires at least one data point.');\n    } else if (p < 0 || p > 1) {\n        throw new Error('quantiles must be between 0 and 1');\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nmodule.exports = quantileSorted;\n","'use strict';\n/* @flow */\n\nmodule.exports = quickselect;\n\n/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @private\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} left left index\n * @param {number} right right index\n * @returns {undefined}\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {\n    left = left || 0;\n    right = right || (arr.length - 1);\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error('sampleCovariance requires samples with equal lengths');\n    }\n\n    if (x.length < 2) {\n        throw new Error('sampleCovariance requires at least two data points in each sample');\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n","'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\n    // The standard deviation of no numbers is null\n    var sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length < 2) {\n        throw new Error('sampleVariance requires at least two data points');\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n","'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\n    if (x.length === 1) {\n        return 0;\n    }\n    var v = variance(x);\n    return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n","'use strict';\n/* @flow */\n\n/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs on `O(n)`, linear time in respect to the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x/*: Array<number> */)/*: number */ {\n\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    var sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    var correction = 0;\n\n    var transition;\n\n    for (var i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += ((sum - transition) + x[i]);\n        }\n        else {\n            correction += ((x[i] - transition) + sum);\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nmodule.exports = sum;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * var variance = sumNthPowerDeviations(input) / input.length;\n */\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\n    var meanValue = mean(x),\n        sum = 0,\n        tempValue,\n        i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x/*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        throw new Error('variance requires at least one data point');\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n","'use strict';\n/* @flow */\n\n/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\n    return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class BarChartConfig extends ChartWithColorGroupsConfig {\n\n    svgClass = this.cssClassPrefix + 'bar-chart';\n    showLegend = true;\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        scale: \"ordinal\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y = {// Y axis config\n        key: 1,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    transition = true;\n\n    constructor(custom) {\n        super();\n        var config = this;\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BarChart extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BarChartConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new BarChartConfig(config));\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.computePlotSize();\n        this.setupY();\n        this.setupX();\n        this.setupGroupStacks();\n        this.setupYDomain();\n\n        return this;\n    }\n\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = d3.scaleBand().range([0, plot.width]).paddingInner(.08);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if (conf.ticks) {\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else if (!this.config.series) {\n            domain = d3.map(data, x.value).keys();\n        } else {\n            domain = d3.map(data[0].values, x.value).keys();\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value(d, conf.key);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var domain;\n        var yStackMax = d3.max(plot.layers, layer => d3.max(layer.points, d => d.y0 + d.y));\n\n\n        // var min = d3.min(data, s=>d3.min(s.values, plot.y.value));\n        var max = yStackMax;\n        domain = [0, max];\n\n        plot.y.scale.domain(domain);\n        // console.log(' plot.y.scale.domain', plot.y.scale.domain());\n    }\n\n    setupGroupStacks() {\n        var self = this;\n        this.groupData();\n\n        var y0s = [];\n        this.plot.groupedData.forEach(s=> {\n            s.points = s.values.map(v=>self.mapToPoint(v));\n            s.points.forEach((p, i)=> {\n                var prevY0 = y0s[i];\n                if(!prevY0) prevY0 = 0;\n                p.y0 = prevY0;\n                y0s[i] = p.y+prevY0;\n            });\n\n        });\n        this.plot.layers = this.plot.groupedData;\n\n    }\n\n    mapToPoint(value) {\n        var plot = this.plot;\n        return {\n            x: plot.x.value(value),\n            y: parseFloat(plot.y.value(value))\n        }\n    }\n\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.margin.bottom) + \")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawBars() {\n        var self = this;\n        var plot = self.plot;\n\n        // console.log('layers', plot.layers);\n\n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\" + layerClass)\n            .data(plot.layers);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n        var bar = layerMerge.selectAll(\".\" + barClass)\n            .data(d => d.points);\n\n        var barEnter = bar.enter().append(\"g\")\n            .attr(\"class\", barClass);\n        var barRectEnter = barEnter.append(\"rect\")\n            .attr(\"x\", 1);\n        var barMerge = barEnter.merge(bar);\n\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT = layerMerge.transition();\n        }\n\n        barEnter.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0)) + \")\";\n        });\n        var yDomain = plot.y.scale.domain();\n        barT.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 + d.y)) + \")\";\n        });\n        barRectEnter\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", 0);\n        barRectT\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", d => plot.y.scale(d.y0) - plot.y.scale(d.y0 + d.y - yDomain[0]));\n\n\n        if (this.plot.seriesColor) {\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData) {\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        return this;\n    };\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotBaseConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        value: s => s.key, // x value accessor\n        guides: false, //show axis guides\n        orient: 'bottom',\n\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d, // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    Q1 = d => d.values.Q1;\n    Q2 = d => d.values.Q2;\n    Q3 = d => d.values.Q3;\n    Wl = d => d.values.whiskerLow;\n    Wh = d => d.values.whiskerHigh;\n    outliers= d=> d.values.outliers;\n    outlierValue = (d,i)=> d;\n    outlierLabel = (d,i)=> d;\n    minBoxWidth = 35;\n    maxBoxWidth = 100;\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BoxPlotBase extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotBaseConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotBaseConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = data.map(x.value);\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var values = [], yMin, yMax;\n        data.forEach(function (d, i) {\n            let q1 = c.Q1(d), \n                q3 = c.Q3(d), \n                wl = c.Wl(d), \n                wh = c.Wh(d),\n                outliers = c.outliers(d);\n            \n            if (outliers) {\n                outliers.forEach(function (o, i) {\n                    values.push(c.outlierValue(o, i));\n                });\n            }\n            if (wl) { values.push(wl) }\n            if (q1) { values.push(q1) }\n            if (q3) { values.push(q3) }\n            if (wh) { values.push(wh) }\n        });\n        yMin = d3.min(values);\n        yMax = d3.max(values);\n        var margin = (yMax-yMin)* this.config.y.domainMargin;\n        yMin-=margin;\n        yMax+=margin;\n        var domain = [ yMin, yMax ] ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.label);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBoxPlots() {\n        var self = this,\n            plot = self.plot,\n            config = self.config,\n            boxplotClass = self.prefixClass(\"boxplot-item\")\n        \n        var boxplots = self.svgG.selectAll('.'+boxplotClass).data(plot.data);\n        var boxplotEnter = boxplots.enter()\n            .append('g')\n            .attr('class', boxplotClass)\n            .style('stroke-opacity', 1e-6)\n            .style('fill-opacity', 1e-6);\n\n        var boxplotsMerge = boxplotEnter.merge(boxplots);\n        var duration = 1000;\n        var boxplotsT = boxplotsMerge;\n        if (self.transitionEnabled()) {\n            boxplotsT = boxplotsMerge.transition();\n            boxplotsT.delay(function(d,i) { return i * duration / plot.data.length })\n        }\n\n        boxplotsT\n            .style('fill', plot.color)\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 0.75)\n            .attr('transform', (d,i) =>'translate(' + (plot.x.map(d,i) + plot.x.scale.bandwidth() * 0.05) + ', 0)')\n        boxplots.exit().remove();\n\n        var boxWidth = !config.maxBoxWidth ? plot.x.scale.bandwidth() * 0.9 : Math.min(config.maxBoxWidth, Math.max(config.minBoxWidth, plot.x.scale.bandwidth() * 0.9));\n        var boxLeft  = plot.x.scale.bandwidth() * 0.45 - boxWidth/2;\n        var boxRight = plot.x.scale.bandwidth() * 0.45 + boxWidth/2;\n\n        var boxClass = self.prefixClass(\"box\");\n\n        boxplotEnter.append('rect')\n            .attr('class', boxClass)\n            // tooltip events\n            .on('mouseover', function(d,i) {\n                d3.select(this).classed('hover', true);\n                var html = 'Q3: '+config.Q3(d,i)+'<br/>Q2: '+config.Q2(d,i)+'<br/>Q1: '+config.Q1(d,i);\n                self.showTooltip(html)\n            })\n            .on('mouseout', function(d,i) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var boxRects = boxplotsMerge.select('rect.'+boxClass);\n\n        var boxRectsT = boxRects;\n        if (self.config.transition) {\n            boxRectsT = boxRects.transition();\n        }\n\n        boxRectsT.attr('y', (d,i) => plot.y.scale(config.Q3(d)))\n            .attr('width', boxWidth)\n            .attr('x', boxLeft )\n            .attr('height', (d,i) => Math.abs(plot.y.scale(config.Q3(d)) - plot.y.scale(config.Q1(d))) || 1)\n            .style('stroke', plot.color);\n\n        // median line\n        var medianClass = self.prefixClass('median');\n        boxplotEnter.append('line').attr('class', medianClass);\n\n        var medianLine = boxplotsMerge.select('line.'+medianClass);\n        if (self.config.transition) {\n            medianLine = medianLine.transition();\n        }\n        medianLine\n            .attr('x1', boxLeft)\n            .attr('y1', (d,i) => plot.y.scale(config.Q2(d)))\n            .attr('x2', boxRight)\n            .attr('y2', (d,i) => plot.y.scale(config.Q2(d)));\n\n\n        //whiskers\n\n        var whiskerClass= self.prefixClass(\"whisker\"),\n            tickClass = self.prefixClass(\"boxplot-tick\");\n\n        var whiskers = [{key: 'low', value: config.Wl}, {key: 'high', value: config.Wh}];\n\n        boxplotEnter.each(function(d,i) {\n            var box = d3.select(this);\n\n            whiskers.forEach(f=> {\n                if (f.value(d)) {\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', whiskerClass+' ' + boxplotClass+'-'+f.key);\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', tickClass+' ' + boxplotClass+'-'+f.key);\n                }\n            });\n        });\n\n        whiskers.forEach(f => {\n            var endpoint = (f.key === 'low') ? config.Q1 : config.Q3;\n\n            var whisker = boxplotsMerge.select('.'+whiskerClass+'.'+boxplotClass+'-'+f.key);\n            var tick = boxplotsMerge.select('.'+tickClass+'.'+boxplotClass+'-'+f.key);\n            if (self.config.transition) {\n                whisker = whisker.transition();\n                tick=tick.transition();\n            }\n            whisker\n                .attr('x1', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y2', (d,i) => plot.y.scale(endpoint(d)));\n\n            tick\n                .attr('x1', boxLeft )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', boxRight )\n                .attr('y2', (d,i) => plot.y.scale(f.value(d)));\n\n            boxplotEnter.selectAll('.'+boxplotClass+'-'+f.key)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    self.showTooltip(f.value(d))\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    self.hideTooltip();\n                })\n        });\n\n\n        // outliers\n        var outlierClass = self.prefixClass(\"outlier\");\n        var outliers = boxplotsMerge.selectAll('.'+outlierClass).data((d,i) => config.outliers(d,i) || []);\n\n        var outlierEnterCircle = outliers.enter().append('circle')\n            .attr('class', outlierClass)\n            .style('z-index', 9000);\n\n        outlierEnterCircle\n            .on('mouseover', function (d, i, j) {\n                d3.select(this).classed('hover', true);\n                self.showTooltip(config.outlierLabel(d,i))\n            })\n            .on('mouseout', function (d, i, j) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var outliersMerge = outlierEnterCircle.merge(outliers);\n        var outliersT = outliersMerge;\n        if (self.config.transition) {\n            outliersT = outliersMerge.transition();\n        }\n        outliersT\n            .attr('cx', plot.x.scale.bandwidth() * 0.45)\n            .attr('cy', (d,i) => plot.y.scale(config.outlierValue(d,i)))\n            .attr('r', '3');\n        outliers.exit().remove();\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBoxPlots();\n        return this;\n    };\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.x.value(d));\n        }\n    }\n}\n","import {BoxPlotBase, BoxPlotBaseConfig} from \"./box-plot-base\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotConfig extends BoxPlotBaseConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showLegend = true;\n    showTooltip = true;\n    y = {// Y axis config\n        key: undefined,\n        value: function(d) { return this.y.key===undefined ? d : d[this.y.key]} , // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    series = false;\n    groups={\n        key: undefined,\n        value: function(d) { return this.groups.key===undefined ? '' : d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    tukey= false;\n    \n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class BoxPlot extends BoxPlotBase{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotConfig(config));\n    }\n\n    getDataToPlot(){\n        var self = this;\n        var conf = self.config;\n        self.plot.groupingEnabled = this.isGroupingEnabled();\n\n        var data = this.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.label || s.key || '',\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupValue = d => conf.groups.value.call(conf, d);\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n\n                var getDisplayValue= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getDisplayValue = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getDisplayValue = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                self.plot.groupedData.forEach(g => {\n                    g.key = getDisplayValue(g.key);\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n\n        self.plot.groupedData.forEach(s=>{\n            if(!Array.isArray(s.values)){\n                return;\n            }\n\n            var values = s.values.map(d=>parseFloat(self.config.y.value.call(self.config, d)));\n            s.values.Q1 = StatisticsUtils.quantile(values, 0.25);\n            s.values.Q2 = StatisticsUtils.quantile(values, 0.5);\n            s.values.Q3 = StatisticsUtils.quantile(values, 0.75);\n            var IQR =  s.values.Q3 - s.values.Q1;\n\n            if(!self.config.tukey){\n                s.values.whiskerLow = d3.min(values);\n                s.values.whiskerHigh = d3.max(values);\n            }else{\n                s.values.whiskerLow = s.values.Q1 - 1.5*IQR;\n                s.values.whiskerHigh = s.values.Q3 + 1.5*IQR;\n                s.values.outliers = values.filter(d=> d<s.values.whiskerLow || d>s.values.whiskerHigh);\n            }\n        });\n\n        return self.plot.groupedData;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ChartWithColorGroupsConfig extends ChartConfig{\n\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    groups={\n        key: 2,\n        value: function(d) { return d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    series = false;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ChartWithColorGroups extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ChartWithColorGroupsConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ChartWithColorGroupsConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n       \n        this.plot.showLegend = conf.showLegend;\n        this.setupGroups();\n        this.plot.data = this.getDataToPlot();\n        this.groupData();\n\n        if(this.plot.showLegend){\n            var scale = this.plot.colorCategory;\n            if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n                this.plot.showLegend = false;\n            }else{\n                this.plot.margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\n            }\n        }\n        return this;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n\n    computeGroupColorDomain(){\n        var map = d3.set(this.data, d => this.plot.groupValue(d));\n        return Object.getOwnPropertyNames(map).map(d=>map[d]);\n    }\n\n    setupGroups() {\n        var self=this;\n        var conf = this.config;\n\n        this.plot.groupingEnabled = this.isGroupingEnabled();\n        var domain = [];\n        if(this.plot.groupingEnabled){\n            self.plot.groupToLabel = {};\n            if(this.config.series){\n                this.plot.groupValue = s => s.key;\n                domain = this.computeGroupColorDomain();\n\n                this.data.forEach(s=>{\n                    self.plot.groupToLabel[s.key] = s.label||s.key;\n                })\n            }else{\n                this.plot.groupValue = d => conf.groups.value.call(conf, d);\n                domain = this.computeGroupColorDomain();\n                var getLabel= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getLabel = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getLabel = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                domain.forEach(k=>{\n                    self.plot.groupToLabel[k] = getLabel(k);\n                })\n            }\n\n        }else{\n            this.plot.groupValue = d => null;\n        }\n        this.plot.groupColorDomain = domain;\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n\n        if (colorValue){\n            if(typeof colorValue === 'string' || colorValue instanceof String){\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n            }else{\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n                var range = domain.map(v=>this.plot.seriesColor({key: v}));\n                this.plot.colorCategory = d3.scaleOrdinal(range);\n                this.plot.colorCategory.domain(domain);\n\n            }\n\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            self.plot.colorCategory.domain(domain);\n\n            this.plot.seriesColor = s =>  self.plot.colorCategory(s.key);\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.groupValue(d));\n            \n        }else{\n            this.plot.color = this.plot.seriesColor = s=> 'black'\n        }\n\n    }\n\n    groupData(){\n        var self=this;\n        var data = this.plot.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: null,\n                label: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.key,\n                        label: s.label,\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n                self.plot.groupedData.forEach(g => {\n                    g.label = self.plot.groupToLabel[g.key];\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n        // this.plot.seriesColor\n\n    }\n\n    getDataToPlot(){\n        if(!this.plot.groupingEnabled || !this.enabledGroups){\n            return this.data;\n        }\n        return this.data.filter(d => this.enabledGroups.indexOf(this.plot.groupValue(d))>-1);\n    }\n\n\n\n    update(newData){\n        super.update(newData);\n        this.updateLegend();\n\n        return this;\n    };\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.colorCategory;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n\n        plot.legendColor.on('cellclick', c=> self.onLegendCellClick(c));\n        \n        plot.legend.container\n            .call(plot.legendColor);\n\n        this.updateLegendCellStatuses();\n    }\n\n    onLegendCellClick(cellValue){\n        this.updateEnabledGroups(cellValue);\n        this.init();\n    }\n    updateLegendCellStatuses() {\n        var self = this;\n        this.plot.legend.container.selectAll(\"g.cell\").each(function(cell){\n            var isDisabled = self.enabledGroups && self.enabledGroups.indexOf(cell)<0;\n            d3.select(this).classed(\"odc-disabled\", isDisabled);\n        });\n    }\n\n    updateEnabledGroups(cellValue) {\n        if (!this.enabledGroups) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n        var index = this.enabledGroups.indexOf(cellValue);\n\n        if (index < 0) {\n            this.enabledGroups.push(cellValue);\n        } else {\n            this.enabledGroups.splice(index, 1);\n        }\n\n        if (!this.enabledGroups.length) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n\n    }\n\n    setData(data){\n        super.setData(data);\n        this.enabledGroups = null;\n        return this;\n    }\n}\n","import {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ChartConfig {\n    cssClassPrefix = \"odc-\";\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    showTooltip = false;\n    transition = true;\n\n    title = undefined;\n    titleSize=20;\n    titleMargin={\n        left: 0,\n        right: 0,\n        top: 15,\n        bottom: 20\n    };\n\n    subtitle = undefined;\n    subtitleSize=14;\n    subtitleMargin={\n        left: 0,\n        right: 0,\n        top: 10,\n        bottom: 20\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n\n\n}\n\nexport class Chart {\n    utils = Utils;\n    baseContainer;\n    svg;\n    config;\n    plot = {\n        margin: {}\n    };\n    _attached = {};\n    _layers = {};\n    _events = {};\n    _isAttached;\n    _isInitialized=false;\n\n\n    constructor(base, data, config) {\n        this._id = Utils.guid();\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n        this.init();\n        this.postInit();\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new ChartConfig();\n        } else {\n            this.config = config;\n        }\n        this.initConfigAccessors();\n        return this;\n    }\n\n    setData(data) {\n        this.data = data;\n        return this;\n    }\n\n    init() {\n        var self = this;\n        self.initPlot();\n        self.initSvg();\n\n        if(!this._isInitialized){\n            self.initTooltip();\n        }\n        self.draw();\n        this._isInitialized=true;\n        return this;\n    }\n\n    redraw(){\n        this.initConfigAccessors(true);\n        return this.init();\n    }\n\n    postInit(){\n\n    }\n\n    initSvg() {\n        var self = this;\n        var config = this.config;\n\n        var margin = self.plot.margin;\n        var width = self.svgWidth = self.plot.width + margin.left + margin.right;\n        var height = self.svgHeight =  self.plot.height + margin.top + margin.bottom;\n        var aspect = width / height;\n        if(!self._isAttached){\n            if(!this._isInitialized){\n                d3.select(self.baseContainer).select(\"svg\").remove();\n            }\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\").classed(config.svgClass, true);\n\n            self.svg\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n        }else{\n            // console.log(self.baseContainer);\n            self.svg = self.baseContainer.svg;\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\n        }\n\n        self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (!config.width || config.height) {\n            d3.select(window)\n                .on(\"resize.\"+self._id, function () {\n                    var transition = self.config.transition;\n                    self.config.transition=false;\n                    self.init();\n                    self.config.transition = transition;\n                });\n        }\n    }\n\n    destroy(){\n        d3.select(this.baseContainer).selectAll(\"*\").remove();\n        d3.select(window).on(\"resize.\" + this._id, null);\n    }\n\n    initTooltip(){\n        var self = this;\n        if (self.config.showTooltip) {\n            if(!self._isAttached ){\n                self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\n                    .style(\"opacity\", 0);\n            }else{\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\n            }\n\n        }else{\n            self.plot.tooltip = null;\n        }\n    }\n\n    initPlot() {\n        var margin = this.config.margin;\n        this.plot = this.plot || {};\n        this.plot.margin = {\n            top: margin.top,\n            bottom: margin.bottom,\n            left: margin.left,\n            right: margin.right\n        };\n\n\n        var titleMarginSize = 0;\n        if(this.config.title){\n            titleMarginSize= this.config.titleSize+this.config.titleMargin.top;\n            if(!this.config.subtitle){\n                titleMarginSize += this.config.titleMargin.bottom;\n            }\n\n            this.plot.margin.top=Math.max(this.plot.margin.top,titleMarginSize);\n        }\n\n        if(this.config.subtitle){\n\n            this.plot.margin.top=Math.max(this.plot.margin.top, titleMarginSize+this.config.subtitleMargin.top+this.config.subtitleSize+this.config.subtitleMargin.bottom);\n        }\n\n    }\n\n    update(data) {\n        if (data) {\n            this.setData(data);\n        }\n        this.updateTitle();\n        this.updateSubtitle();\n\n        var layerName, attachmentData;\n        for (var attachmentName in this._attached) {\n\n            attachmentData = data;\n\n            this._attached[attachmentName].update(attachmentData);\n        }\n        return this;\n    }\n\n    updateTitle() {\n        var titleClass = this.prefixClass('plot-title');\n        if(!this.config.title){\n            this.svg.select(\"text.\"+titleClass).remove();\n            return;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+titleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (this.config.titleMargin.top) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.titleSize+\"px\")\n            .text(this.config.title);\n    }\n\n    updateSubtitle() {\n        var subtitleClass = this.prefixClass('plot-subtitle');\n        if(!this.config.subtitle){\n            this.svg.select(\"text.\"+subtitleClass).remove();\n            return;\n        }\n\n        var y = this.config.subtitleMargin.top;\n        if(this.config.title){\n            y+=this.config.titleMargin.top+this.config.titleSize;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+subtitleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (y) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.subtitleSize+\"px\")\n            .text(this.config.subtitle);\n    }\n\n    draw(data) {\n        this.update(data);\n\n\n        return this;\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\n     * method will be invoked whenever the containing chart's `draw` method is\n     * invoked.\n     *\n     * @externalExample chart-attach\n     *\n     * @param {String} attachmentName Name of the attachment\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\n     *        unspecified, this method will return the attachment previously\n     *        registered with the specified `attachmentName` (if any).\n     *\n     * @returns {Chart} Reference to this chart (chainable).\n     */\n    attach(attachmentName, chart) {\n        if (arguments.length === 1) {\n            return this._attached[attachmentName];\n        }\n\n        this._attached[attachmentName] = chart;\n        return chart;\n    };\n\n    \n\n    //Borrowed from d3.chart\n    /**\n     * Subscribe a callback function to an event triggered on the chart. See {@link\n        * Chart#once} to subscribe a callback function to an event for one occurence.\n     *\n     * @externalExample {runnable} chart-on\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    on(name, callback, context) {\n        var events = this._events[name] || (this._events[name] = []);\n        events.push({\n            callback: callback,\n            context: context || this,\n            _chart: this\n        });\n        return this;\n    }\n\n    //Borrowed from d3.chart\n    /**\n     *\n     * Subscribe a callback function to an event triggered on the chart. This\n     * function will be invoked at the next occurance of the event and immediately\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\n     * event indefinitely.\n     *\n     * @externalExample {runnable} chart-once\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance\n     *\n     * @returns {Chart} A reference to this chart (chainable)\n     */\n    once(name, callback, context) {\n        var self = this;\n        var once = function () {\n            self.off(name, once);\n            callback.apply(this, arguments);\n        };\n        return this.on(name, once, context);\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Unsubscribe one or more callback functions from an event triggered on the\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\n     * When only a `name` is specified, all handlers subscribed to that event will\n     * be unsubscribed. When a `name` and `callback` are specified, only that\n     * function will be unsubscribed from that event. When a `name` and `context`\n     * are specified (but `callback` is omitted), all events bound to the given\n     * event with the given context will be unsubscribed.\n     *\n     * @externalExample {runnable} chart-off\n     *\n     * @param {String} [name] Name of the event to be unsubscribed\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\n     * @param {Object} [context] Contexts to be unsubscribe\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n\n    off(name, callback, context) {\n        var names, n, events, event, i, j;\n\n        // remove all events\n        if (arguments.length === 0) {\n            for (name in this._events) {\n                this._events[name].length = 0;\n            }\n            return this;\n        }\n\n        // remove all events for a specific name\n        if (arguments.length === 1) {\n            events = this._events[name];\n            if (events) {\n                events.length = 0;\n            }\n            return this;\n        }\n\n        // remove all events that match whatever combination of name, context\n        // and callback.\n        names = name ? [name] : Object.keys(this._events);\n        for (i = 0; i < names.length; i++) {\n            n = names[i];\n            events = this._events[n];\n            j = events.length;\n            while (j--) {\n                event = events[j];\n                if ((callback && callback === event.callback) ||\n                    (context && context === event.context)) {\n                    events.splice(j, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    //Borrowed from d3.chart\n    /**\n     * Publish an event on this chart with the given `name`.\n     *\n     * @externalExample {runnable} chart-trigger\n     *\n     * @param {String} name Name of the event to publish\n     * @param {...*} arguments Values with which to invoke the registered\n     *        callbacks.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    trigger(name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var events = this._events[name];\n        var i, ev;\n\n        if (events !== undefined) {\n            for (i = 0; i < events.length; i++) {\n                ev = events[i];\n                ev.callback.apply(ev.context, args);\n            }\n        }\n\n        return this;\n    };\n    getBaseContainer(){\n        if(this._isAttached){\n            return this.baseContainer.svg;\n        }\n        return d3.select(this.baseContainer);\n    }\n\n    getBaseContainerNode(){\n\n        return this.getBaseContainer().node();\n    }\n\n    prefixClass(clazz, addDot){\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\n    }\n    computePlotSize() {\n        this.plot.width = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        this.plot.height = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n    }\n\n    transitionEnabled(){\n        return this._isInitialized && this.config.transition;\n    }\n\n    showTooltip(html){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n        this.plot.tooltip.html(html)\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n    }\n\n    hideTooltip(){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n    }\n\n    initConfigAccessors(clean) {\n        if(clean){\n            this.removePropertyAccessors(this,this, this.config, \"$\");\n        }\n        this.initPropertyAccessors(this,this, this.config, \"$\", true);\n    }\n\n    removePropertyAccessors(bindTo,returnObj, source, prefix) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            delete bindTo[prefix + i];\n        }\n    }\n\n    initPropertyAccessors(bindTo,returnObj, source, prefix, recursive) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            var accessor = self.initPropertyAccessor(bindTo,returnObj, source, i, prefix);\n\n            if(recursive && Utils.isObjectNotArray(source[i])){\n                self.initPropertyAccessors(accessor, bindTo, source[i], prefix, recursive)\n            }\n        }\n    }\n\n    initPropertyAccessor(bindTo, returnObj, source, propertyKey, prefix) {\n        return bindTo[prefix + propertyKey] = function (_) {\n            if (!arguments.length) {\n                return source[propertyKey];\n            }\n            source[propertyKey] = _;\n            return returnObj;\n        };\n    }\n\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport {Legend} from './legend'\nimport {ScatterPlot} from './scatterplot'\nimport * as d3 from './d3'\n\nexport class CorrelationMatrixConfig extends ChartConfig {\n\n    svgClass = this.cssClassPrefix+'correlation-matrix';\n    guides = false; //show axis guides\n    showTooltip = true; //show tooltip on dot hover\n    showLegend = true;\n    highlightLabels = true;\n    rotateLabelsX = true;\n    rotateLabelsY = true;\n    variables = {\n        labels: undefined,\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => parseFloat(d[variableKey]), // variable value accessor\n        scale: \"ordinal\"\n    };\n    correlation = {\n        scale: \"linear\",\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\n\n    };\n    cell = {\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\n        size: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 1\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 60\n    };\n    groups={\n        key: null,\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class CorrelationMatrix extends Chart {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new CorrelationMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.correlation = {\n            matrix: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupVariables();\n        var width = conf.width;\n        var placeholderNode = this.getBaseContainerNode();\n        this.plot.placeholderNode = placeholderNode;\n\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\n        if (width) {\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n        } else {\n            this.plot.cellSize = this.config.cell.size;\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n\n        }\n\n        var height = width;\n        if (!height) {\n            height = placeholderNode.getBoundingClientRect().height;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = this.plot.width;\n\n        this.setupVariablesScales();\n        this.setupCorrelationScales();\n        this.setupCorrelationMatrix();\n\n\n        return this;\n    }\n\n    setupVariablesScales() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.variables;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([plot.width, 0]);\n        x.map = d => x.scale(x.value(d));\n\n    };\n\n    setupCorrelationScales() {\n        var plot = this.plot;\n        var corrConf = this.config.correlation;\n\n        plot.correlation.color.scale = Utils.createScale(corrConf.scale).domain(corrConf.domain).range(corrConf.range);\n        var shape = plot.correlation.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = cellConf.shape;\n\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\n        if (shape.type == 'circle') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([2, radiusMax]);\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\n        } else if (shape.type == 'ellipse') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([radiusMax, 2]);\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\n            shape.radiusY = radiusMax;\n\n            shape.rotateVal = v => {\n                if (v == 0) return \"0\";\n                if (v < 0) return \"-45\";\n                return \"45\"\n            }\n        } else if (shape.type == 'rect') {\n            shape.size = shapeSize;\n        }\n\n    }\n\n\n    setupVariables() {\n\n        var variablesConf = this.config.variables;\n\n        var data = this.data;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if (!plot.variables || !plot.variables.length) {\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            plot.domainByVariable[variableKey] = d3.extent(data, (d) => variablesConf.value(d, variableKey));\n            var label = variableKey;\n            if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        // console.log(plot.labelByVariable);\n\n    };\n\n\n    setupCorrelationMatrix() {\n        var self = this;\n        var data = this.data;\n        var matrix = this.plot.correlation.matrix = [];\n        var matrixCells = this.plot.correlation.matrix.cells = [];\n        var plot = this.plot;\n\n        var variableToValues = {};\n        plot.variables.forEach((v, i) => {\n\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\n        });\n\n        plot.variables.forEach((v1, i) => {\n            var row = [];\n            matrix.push(row);\n\n            plot.variables.forEach((v2, j) => {\n                var corr = 1;\n                if (v1 != v2) {\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                }\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: corr\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n\n        });\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        // this.update\n        this.updateCells();\n        this.updateVariableLabels();\n\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n    };\n\n    updateVariableLabels() {\n        this.plot.labelClass = this.prefixClass(\"label\");\n        this.updateAxisX();\n        this.updateAxisY();\n    }\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelXClass = labelClass + \"-x\";\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.variables, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"y\", plot.height)\n            .attr(\"dx\", -2)\n            .attr(\"dy\", 5)\n            .attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsX) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\n        }\n\n        var maxWidth = self.computeXAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelYClass = plot.labelClass + \"-y\";\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.variables);\n\n        var labelsMerge = labels.enter().append(\"text\").merge(labels);\n\n        labelsMerge\n            .attr(\"x\", 0)\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsY) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + 0 + \", \" + (i * plot.cellSize + plot.cellSize / 2) + \")\")\n                .attr(\"text-anchor\", \"end\");\n        }\n\n        var maxWidth = self.computeYAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    computeYAxisLabelsWidth() {\n        var maxWidth = this.plot.margin.left;\n        if (!this.config.rotateLabelsY) {\n            return maxWidth;\n        }\n\n        maxWidth *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        maxWidth -= fontSize / 2;\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.rotateLabelsX) {\n            return this.plot.cellSize - 2;\n        }\n        var size = this.plot.margin.bottom;\n        size *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        size -= fontSize / 2;\n        return size;\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.correlation.shape.type;\n\n        var cells = self.svgG.selectAll(\"g.\" + cellClass)\n            .data(plot.correlation.matrix.cells);\n\n        var cellsEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\n\n        cellsMerge.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n        var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n        var wrongShapes = cells.selectAll(selector);\n        wrongShapes.remove();\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        if (plot.correlation.shape.type == 'circle') {\n\n            shapes\n                .attr(\"r\", plot.correlation.shape.radius)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0);\n        }\n\n        if (plot.correlation.shape.type == 'ellipse') {\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n            shapes\n                .attr(\"rx\", plot.correlation.shape.radiusX)\n                .attr(\"ry\", plot.correlation.shape.radiusY)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\n        }\n\n\n        if (plot.correlation.shape.type == 'rect') {\n            shapes\n                .attr(\"width\", plot.correlation.shape.size)\n                .attr(\"height\", plot.correlation.shape.size)\n                .attr(\"x\", -plot.cellSize / 2)\n                .attr(\"y\", -plot.cellSize / 2);\n        }\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n\n\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n\n    updateLegend() {\n\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var legendY = 0;\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.correlation.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        \n    }\n\n    attachScatterPlot(containerSelector, config) {\n        var self = this;\n\n        config = config || {};\n\n\n        var scatterPlotConfig = {\n            height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            groups: {\n                key: self.config.groups.key,\n                label: self.config.groups.label\n            },\n            guides: true,\n            showLegend: false\n        };\n\n        self.scatterPlot = true;\n\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\n        this.update();\n\n        this.on(\"cell-selected\", c=> {\n\n\n            scatterPlotConfig.x = {\n                key: c.rowVar,\n                label: self.plot.labelByVariable[c.rowVar]\n            };\n            scatterPlotConfig.y = {\n                key: c.colVar,\n                label: self.plot.labelByVariable[c.colVar]\n            };\n            if (self.scatterPlot && self.scatterPlot !== true) {\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\n            } else {\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                this.attach(\"ScatterPlot\", self.scatterPlot);\n            }\n\n\n        });\n\n\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\nexport * from 'd3-collection'\nexport * from 'd3-ease'\nexport * from 'd3-axis'\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class DivergingStackedBarChartConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'diverging-stacked-bar-chart';\n    showTooltip = true;\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    x = {// X axis config\n        title: '', // axis label\n        value: d => d.values, // x value accessor\n        guides: true, //show axis guides\n        orient: 'top',\n        scale: \"linear\",\n        domainMargin: 0.02,\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d.key, // y value accessor\n        scale: \"ordinal\",\n        orient: 'left',\n        guides: true //show axis guides\n    };\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n    showBarValues = true;\n\n\n    colorRange = undefined;\n\n    categoryNames = undefined;\n    middleValue = 0;\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class DivergingStackedBarChart extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new DivergingStackedBarChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new DivergingStackedBarChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.plot.showLegend = this.config.showLegend;\n        if(this.plot.showLegend){\n            this.plot.margin.right = this.config.margin.right + this.config.legend.width+this.config.legend.margin*2;\n\n        }\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = d => conf.value.call(this.config, d);\n        x.scale = Utils.createScale(conf.scale).rangeRound([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n\n\n        plot.categoryNames = this.config.categoryNames;\n\n        plot.neutralIndex = Math.floor(plot.categoryNames.length/2);\n\n        plot.rows = data.map(d=> {\n            let originalValues = x.value(d);\n            let x0 = this.config.middleValue - d3.sum(originalValues.map((v,i) =>  i < plot.neutralIndex ? v : 0 ));\n            if (plot.categoryNames.length & 1)\n                x0 += -1 * originalValues[plot.neutralIndex]/2;\n\n            let values = originalValues.map((v, i) => i<plot.neutralIndex ? this.config.middleValue - v : this.config.middleValue + v);\n            let total = d3.sum(originalValues);\n            let categories = plot.categoryNames;\n            if(d.categories){\n                categories = d.categories.map((catIndex, i)=>plot.categoryNames[catIndex])\n            }\n\n            return {\n                datum: d,\n                originalValues: originalValues,\n                values: values,\n                categories: [],\n                min: x0,\n                max: x0+total,\n                total: total,\n                boxes: values.map((v, i)=>{\n                    return {\n                        name: categories[i],\n                        x0: x0,\n                        x1: x0+=originalValues[i],\n                        originalValue: originalValues[i]\n                    }\n                })\n            }\n        });\n\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = d3.extent([].concat(...plot.rows.map(b=>[b.min, b.max])));\n            let margin = ((domain[1]-domain[0])* conf.domainMargin) || conf.domainMargin*domain[0];\n\n            domain[0]-=margin;\n            domain[1]+=margin;\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = d3.scaleBand().range([0, plot.height]).padding(.3);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var domain = data.map(plot.y.value) ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n\n        if(axisConf.orient === 'bottom') {\n            axis.attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        }\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        var titleY = axisConf.orient === 'bottom' ? plot.margin.bottom : 0;\n        var titleDY = axisConf.orient === 'bottom' ? \"-1em\" : \"-1.5em\";\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (titleY) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", titleDY)\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBars() {\n        let self = this,\n            plot = self.plot,\n            config = self.config;\n\n        let rowClass = self.prefixClass(\"row\");\n        let rows = self.svgG.selectAll(\".\"+ rowClass)\n            .data(plot.rows);\n\n        let rowEnter = rows.enter().appendSelector(\"g.\"+rowClass);\n\n        let rowMerge = rowEnter.merge(rows)\n            .attr(\"transform\", d => \"translate(0,\" + plot.y.map(d.datum) + \")\");\n\n        rows.exit().remove();\n\n\n        let barClass = self.prefixClass(\"bar\");\n\n        let bars = rowMerge.selectAll(\"g.\"+ barClass)\n            .data(function(d) { return d.boxes; });\n        bars.exit().remove();\n\n        let barsEnter = bars.enter()\n            .append(\"g\")\n            .attr(\"class\", barClass);\n\n        barsEnter.append(\"rect\");\n        if(config.showBarValues){\n            barsEnter.append(\"text\");\n        }\n\n\n        let barsM =  barsEnter.merge(bars);\n\n        barsM.select(\"rect\").attr(\"height\", plot.y.scale.bandwidth())\n            .attr(\"x\", d =>plot.x.scale(d.x0))\n            .attr(\"width\", d => plot.x.scale(d.x1) - plot.x.scale(d.x0))\n            .style(\"fill\", (d, i) => plot.color(d.name, i));\n\n\n        let textM = barsM.select(\"text\");\n        if(config.showBarValues){\n            textM.attr(\"x\", d => plot.x.scale(d.x0))\n                .attr(\"y\", plot.y.scale.bandwidth()/2)\n                .attr(\"dy\", \"0.5em\")\n                .attr(\"dx\", d=>(plot.x.scale(d.x1)-plot.x.scale(d.x0))/2)\n                .style(\"text-anchor\", \"middle\")\n                .text(d => d.originalValue !== 0 && (d.x1-d.x0)>0.04 ? d.originalValue : \"\");\n        }else{\n            textM.remove();\n        }\n\n\n\n        self.svgG.selectOrAppend(\"line.\"+self.prefixClass(\"middle-line\"))\n            .attr(\"x1\", plot.x.scale(self.config.middleValue))\n            .attr(\"y1\", 0)\n            .attr(\"x2\", plot.x.scale(self.config.middleValue))\n            .attr(\"y2\", plot.height);\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        this.updateLegend();\n        return this;\n    };\n\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if (conf.colorRange){\n            this.plot.color = Utils.createScale(\"ordinal\").domain(this.plot.categoryNames).range(conf.colorRange);\n        }\n        else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = this.plot.colorCategory\n        }\n    }\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.color;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            // .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n        plot.legend.container\n            .call(plot.legendColor);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Heatmap, HeatmapConfig} from \"./heatmap\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class HeatmapTimeSeriesConfig extends HeatmapConfig {\n    x = {\n        fillMissing: false, // fill missing values using interval and intervalStep\n        interval: undefined, //used in filling missing ticks\n        intervalStep: 1,\n        format: undefined, //input data d3 time format\n        displayFormat: undefined,//d3 time format for display\n        intervalToFormats: [ //used to guess interval and format\n            {\n                name: 'year',\n                formats: [\"%Y\"]\n            },\n            {\n                name: 'month',\n                formats: [\"%Y-%m\"]\n            },\n            {\n                name: 'day',\n                formats: [\"%Y-%m-%d\"]\n            },\n            {\n                name: 'hour',\n                formats: ['%H', '%Y-%m-%d %H']\n            },\n            {\n                name: 'minute',\n                formats: ['%H:%M', '%Y-%m-%d %H:%M']\n            },\n            {\n                name: 'second',\n                formats: ['%H:%M:%S', '%Y-%m-%d %H:%M:%S']\n            }\n        ],\n\n        sortComparator: function sortComparator(a, b) {\n            return Utils.isString(a) ?  a.localeCompare(b) :  a - b;\n        },\n        formatter: undefined\n    };\n    z = {\n        fillMissing: true // fiill missing values with nearest previous value\n    };\n\n    legend = {\n        formatter: function (v) {\n            var suffix = \"\";\n            if (v / 1000000 >= 1) {\n                suffix = \" M\";\n                v = Number(v / 1000000).toFixed(3);\n            }\n            var nf = Intl.NumberFormat();\n            return nf.format(v) + suffix;\n        }\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class HeatmapTimeSeries extends Heatmap {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapTimeSeriesConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapTimeSeriesConfig(config));\n    }\n\n\n    setupValuesBeforeGroupsSort() {\n\n        this.plot.x.timeFormat = this.config.x.format;\n        if(this.config.x.displayFormat && !this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n\n        super.setupValuesBeforeGroupsSort();\n        if (!this.config.x.fillMissing) {\n            return;\n        }\n\n        var self = this;\n\n        this.initTimeFormatAndInterval();\n\n        this.plot.x.intervalStep = this.config.x.intervalStep || 1;\n\n        this.plot.x.timeParser = this.getTimeParser();\n\n\n\n        this.plot.x.uniqueValues.sort(this.config.x.sortComparator);\n\n        var prev = null;\n\n        this.plot.x.uniqueValues.forEach((x, i)=> {\n            var current = this.parseTime(x);\n            if (prev === null) {\n                prev = current;\n                return;\n            }\n\n            var next = self.nextTimeTickValue(prev);\n            var missing = [];\n            var iteration = 0;\n            while (self.compareTimeValues(next, current)<=0) {\n                iteration++;\n                if (iteration > 100) {\n                    break;\n                }\n                var d = {};\n                var timeString = self.formatTime(next);\n                d[this.config.x.key] = timeString;\n\n                self.updateGroups(d, timeString, self.plot.x.groups, self.config.x.groups);\n                missing.push(next);\n                next = self.nextTimeTickValue(next);\n            }\n            prev = current;\n        });\n\n    }\n\n    parseTime(x) {\n        var parser = this.getTimeParser();\n        return parser(x);\n    }\n\n    formatTime(date){\n        var formatter = this.getTimeFormatter();\n        return formatter(date);\n    }\n\n    formatValueX(value) { //used only for display\n        if (this.config.x.formatter) return this.config.x.formatter.call(this.config, value);\n\n        if(this.config.x.displayFormat){\n            var date = this.parseTime(value);\n            return d3.timeFormat(this.config.x.displayFormat)(date);\n        }\n\n        if(!this.plot.x.timeFormat) return value;\n\n        if(Utils.isDate(value)){\n            return this.formatTime(value);\n        }\n\n        return value;\n    }\n\n    compareTimeValues(a, b){\n        return a-b;\n    }\n\n    timeValuesEqual(a, b) {\n        var parser = this.plot.x.timeParser;\n        return parser(a) === parser(b);\n    }\n\n    nextTimeTickValue(t) {\n        var interval = 'time'+Utils.capitalizeFirstLetter(this.plot.x.interval);\n\n        return d3[interval].offset(t, this.plot.x.intervalStep);\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        if (this.config.z.fillMissing) {\n            this.plot.matrix.forEach((row, rowIndex) => {\n                var prevRowValue = undefined;\n                row.forEach((cell, colIndex) => {\n                    if (cell.value === undefined && prevRowValue !== undefined) {\n                        cell.value = prevRowValue;\n                        cell.missing = true;\n                    }\n                    prevRowValue = cell.value;\n                });\n            });\n        }\n\n\n    }\n\n    update(newData) {\n        super.update(newData);\n\n    };\n\n\n    initTimeFormatAndInterval() {\n\n        this.plot.x.interval = this.config.x.interval;\n\n        if(!this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n        if(!this.plot.x.interval && this.plot.x.timeFormat){\n            this.guessInterval();\n        }\n    }\n\n    guessTimeFormat() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++){\n            let intervalFormat = self.config.x.intervalToFormats[i];\n            var format = null;\n            var formatMatch = intervalFormat.formats.some(f=>{\n                format = f;\n                var parser = d3.timeParse(f);\n                return self.plot.x.uniqueValues.every(x=>{\n                    return parser(x) !== null\n                });\n            });\n            if(formatMatch){\n                self.plot.x.timeFormat = format;\n                // console.log('Guessed timeFormat', format);\n                if(!self.plot.x.interval){\n                    self.plot.x.interval = intervalFormat.name;\n                    // console.log('Guessed interval', self.plot.x.interval);\n                }\n                return;\n            }\n        }\n    }\n\n    guessInterval() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++) {\n            let intervalFormat = self.config.x.intervalToFormats[i];\n\n            if(intervalFormat.formats.indexOf(self.plot.x.timeFormat) >= 0){\n                self.plot.x.interval = intervalFormat.name;\n                // console.log('Guessed interval', self.plot.x.interval);\n                return;\n            }\n\n        }\n\n    }\n\n    getTimeFormatter() {\n        if(!this.plot.x.timeFormatter){\n            this.plot.x.timeFormatter = d3.timeFormat(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeFormatter;\n    }\n    getTimeParser() {\n        if(!this.plot.x.timeParser){\n            this.plot.x.timeParser = d3.timeParse(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeParser;\n    }\n}\n\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from './legend'\nimport * as d3 from './d3'\n\nexport class HeatmapConfig extends ChartConfig {\n\n    svgClass = 'odc-heatmap';\n    showTooltip = true; //show tooltip on dot hover\n    tooltip = {\n        noDataText: \"N/A\"\n    };\n    showLegend = true;\n    legend = {\n        width: 30,\n        rotateLabels: false,\n        decimalPlaces: undefined,\n        formatter: v => this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(this.legend.decimalPlaces)\n    }\n    highlightLabels = true;\n    x = {// X axis config\n        title: '', // axis title\n        key: 0,\n        value: (d) => d[this.x.key], // x value accessor\n        rotateLabels: true,\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(a) ? a - b : a.localeCompare(b),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                top: 20,\n                bottom: 20\n            }\n        },\n        formatter: undefined // value formatter function\n\n    };\n    y = {// Y axis config\n        title: '', // axis title,\n        rotateLabels: true,\n        key: 1,\n        value: (d) => d[this.y.key], // y value accessor\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(b) ? b - a : b.localeCompare(a),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                left: 20,\n                right: 20\n            }\n        },\n        formatter: undefined// value formatter function\n    };\n    z = {\n        key: 2,\n        value: (d) => d[this.z.key],\n        notAvailableValue: (v) => v === null || v === undefined,\n\n        decimalPlaces: undefined,\n        formatter: v => this.z.decimalPlaces === undefined ? v : Number(v).toFixed(this.z.decimalPlaces)// value formatter function\n\n    };\n    color = {\n        noDataColor: \"white\",\n        scale: \"linear\",\n        reverseScale: false,\n        range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\n    };\n    cell = {\n        width: undefined,\n        height: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 0\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 80\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//TODO refactor\nexport class Heatmap extends Chart {\n\n    static maxGroupGapSize = 24;\n    static groupTitleRectHeight = 6;\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n        this.plot.z = {\n            matrixes: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupValues();\n        this.buildCells();\n\n        var titleRectWidth = 6;\n        this.plot.x.overlap = {\n            top: 0,\n            bottom: 0\n        };\n        if (this.plot.groupByX) {\n            let depth = self.config.x.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n\n            this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\n            this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\n            this.plot.margin.top = this.plot.margin.top + conf.x.groups.overlap.top;\n            this.plot.margin.bottom = this.plot.margin.bottom + conf.x.groups.overlap.bottom;\n        }\n\n\n        this.plot.y.overlap = {\n            left: 0,\n            right: 0\n        };\n\n\n        if (this.plot.groupByY) {\n            let depth = self.config.y.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n            this.plot.y.overlap.right = self.config.y.groups.overlap.left + allTitlesWidth;\n            this.plot.y.overlap.left = self.config.y.groups.overlap.left;\n            this.plot.margin.left = this.plot.margin.left + this.plot.y.overlap.left;\n            this.plot.margin.right = this.plot.margin.right + this.plot.y.overlap.right;\n        }\n        this.plot.showLegend = conf.showLegend;\n        if (this.plot.showLegend) {\n            this.plot.margin.right += conf.legend.width;\n        }\n        this.computePlotSize();\n        this.setupZScale();\n\n        return this;\n    }\n\n    setupValues() {\n        var self = this;\n        var config = self.config;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n\n\n        x.value = d => config.x.value.call(config, d);\n        y.value = d => config.y.value.call(config, d);\n        z.value = d => config.z.value.call(config, d);\n\n        x.uniqueValues = [];\n        y.uniqueValues = [];\n\n\n        self.plot.groupByY = !!config.y.groups.keys.length;\n        self.plot.groupByX = !!config.x.groups.keys.length;\n\n        y.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n        x.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n\n        var valueMap = {};\n        var minZ = undefined;\n        var maxZ = undefined;\n        this.data.forEach(d=> {\n\n            var xVal = x.value(d);\n            var yVal = y.value(d);\n            var zValRaw = z.value(d);\n            var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\n\n\n            if (x.uniqueValues.indexOf(xVal) === -1) {\n                x.uniqueValues.push(xVal);\n            }\n\n            if (y.uniqueValues.indexOf(yVal) === -1) {\n                y.uniqueValues.push(yVal);\n            }\n\n            var groupY = y.groups;\n            if (self.plot.groupByY) {\n                groupY = this.updateGroups(d, yVal, y.groups, config.y.groups);\n            }\n            var groupX = x.groups;\n            if (self.plot.groupByX) {\n\n                groupX = this.updateGroups(d, xVal, x.groups, config.x.groups);\n            }\n\n            if (!valueMap[groupY.index]) {\n                valueMap[groupY.index] = {};\n            }\n\n            if (!valueMap[groupY.index][groupX.index]) {\n                valueMap[groupY.index][groupX.index] = {};\n            }\n            if (!valueMap[groupY.index][groupX.index][yVal]) {\n                valueMap[groupY.index][groupX.index][yVal] = {};\n            }\n            valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\n\n\n            if (minZ === undefined || zVal < minZ) {\n                minZ = zVal;\n            }\n            if (maxZ === undefined || zVal > maxZ) {\n                maxZ = zVal;\n            }\n        });\n        self.plot.valueMap = valueMap;\n\n\n        if (!self.plot.groupByX) {\n            x.groups.values = x.uniqueValues;\n        }\n\n        if (!self.plot.groupByY) {\n            y.groups.values = y.uniqueValues;\n        }\n\n        this.setupValuesBeforeGroupsSort();\n\n        x.gaps = [];\n        x.totalValuesCount = 0;\n        x.allValuesList = [];\n        this.sortGroups(x, x.groups, config.x);\n\n        y.gaps = [];\n        y.totalValuesCount = 0;\n        y.allValuesList = [];\n        this.sortGroups(y, y.groups, config.y);\n\n        z.min = minZ;\n        z.max = maxZ;\n\n    }\n\n    setupValuesBeforeGroupsSort() {\n    }\n\n    buildCells() {\n        var self = this;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n        var valueMap = self.plot.valueMap;\n\n        var matrixCells = self.plot.cells = [];\n        var matrix = self.plot.matrix = [];\n\n        y.allValuesList.forEach((v1, i)=> {\n            var row = [];\n            matrix.push(row);\n\n            x.allValuesList.forEach((v2, j) => {\n                var zVal = undefined;\n                try {\n                    zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val]\n                } catch (e) {\n                }\n\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: zVal\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n        });\n\n    }\n\n    updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\n\n        var config = this.config;\n        var currentGroup = rootGroup;\n        axisGroupsConfig.keys.forEach((groupKey, groupKeyIndex) => {\n            currentGroup.key = groupKey;\n\n            if (!currentGroup.children) {\n                currentGroup.children = {};\n            }\n\n            var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\n\n            if (!currentGroup.children.hasOwnProperty(groupingValue)) {\n                rootGroup.lastIndex++;\n                currentGroup.children[groupingValue] = {\n                    values: [],\n                    children: null,\n                    groupingValue: groupingValue,\n                    level: currentGroup.level + 1,\n                    index: rootGroup.lastIndex,\n                    key: groupKey\n                }\n            }\n\n            currentGroup = currentGroup.children[groupingValue];\n        });\n\n        if (currentGroup.values.indexOf(axisVal) === -1) {\n            currentGroup.values.push(axisVal);\n        }\n\n        return currentGroup;\n    }\n\n    sortGroups(axis, group, axisConfig, gaps) {\n        if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\n            group.label = axisConfig.groups.labels[group.level];\n        } else {\n            group.label = group.key;\n        }\n\n        if (!gaps) {\n            gaps = [0];\n        }\n        if (gaps.length <= group.level) {\n            gaps.push(0);\n        }\n\n        group.allValuesCount = group.allValuesCount || 0;\n        group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\n\n        group.gaps = gaps.slice();\n        group.gapsBefore = gaps.slice();\n\n\n        group.gapsSize = Heatmap.computeGapsSize(group.gaps);\n        group.gapsBeforeSize = group.gapsSize;\n        if (group.values) {\n            if (axisConfig.sortLabels) {\n                group.values.sort(axisConfig.sortComparator);\n            }\n            group.values.forEach(v=>axis.allValuesList.push({val: v, group: group}));\n            group.allValuesBeforeCount = axis.totalValuesCount;\n            axis.totalValuesCount += group.values.length;\n            group.allValuesCount += group.values.length;\n        }\n\n        group.childrenList = [];\n        if (group.children) {\n            var childrenCount = 0;\n\n            for (var childProp in group.children) {\n                if (group.children.hasOwnProperty(childProp)) {\n                    var child = group.children[childProp];\n                    group.childrenList.push(child);\n                    childrenCount++;\n\n                    this.sortGroups(axis, child, axisConfig, gaps);\n                    group.allValuesCount += child.allValuesCount;\n                    gaps[group.level] += 1;\n                }\n            }\n\n            if (gaps && childrenCount > 1) {\n                gaps[group.level] -= 1;\n            }\n\n            group.gapsInside = [];\n            gaps.forEach((d, i)=> {\n                group.gapsInside.push(d - (group.gapsBefore[i] || 0));\n            });\n            group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\n\n            if (axis.gaps.length < gaps.length) {\n                axis.gaps = gaps;\n            }\n        }\n\n    }\n\n    computeYAxisLabelsWidth(offset) {\n        var maxWidth = this.plot.margin.left;\n        if (this.config.y.title) {\n            maxWidth -= 15;\n        }\n        if (offset && offset.x) {\n            maxWidth += offset.x;\n        }\n\n        if (this.config.y.rotateLabels) {\n            maxWidth *= Utils.SQRT_2;\n            var fontSize = 11; //todo check actual font size\n            maxWidth -=fontSize/2;\n        }\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.x.rotateLabels) {\n            return this.plot.cellWidth - 2;\n        }\n        var size = this.plot.margin.bottom;\n        if (this.config.x.title) {\n            size -= 15;\n        }\n        if (offset && offset.y) {\n            size -= offset.y;\n        }\n\n        size *= Utils.SQRT_2;\n\n        var fontSize = 11; //todo check actual font size\n        size -=fontSize/2;\n\n        return size;\n    }\n\n    static computeGapSize(gapLevel) {\n        return Heatmap.maxGroupGapSize / (gapLevel + 1);\n    }\n\n    static computeGapsSize(gaps) {\n        var gapsSize = 0;\n        gaps.forEach((gapsNumber, gapsLevel)=> gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel));\n        return gapsSize;\n    }\n\n    computePlotSize() {\n\n        var plot = this.plot;\n        var conf = this.config;\n        var margin = plot.margin;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n        var width = availableWidth;\n        var height = availableHeight;\n\n        var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\n\n\n        var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\n        if (this.config.width) {\n\n            if (!this.config.cell.width) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        } else {\n            this.plot.cellWidth = this.config.cell.width;\n\n            if (!this.plot.cellWidth) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        }\n        width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\n\n        var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\n        var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\n        if (this.config.height) {\n            if (!this.config.cell.height) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n        } else {\n            this.plot.cellHeight = this.config.cell.height;\n\n            if (!this.plot.cellHeight) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n\n        }\n\n        height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\n\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n    }\n\n\n    setupZScale() {\n\n        var self = this;\n        var config = self.config;\n        var z = self.plot.z;\n        var range = config.color.range;\n        var extent = z.max - z.min;\n        var scale;\n        z.domain = [];\n        if (config.color.scale == \"pow\") {\n            var exponent = 10;\n            range.forEach((c, i)=> {\n                var v = z.max - (extent / Math.pow(10, i));\n                z.domain.push(v)\n            });\n            scale = d3.scalePow().exponent(exponent);\n        } else if (config.color.scale == \"log\") {\n\n            range.forEach((c, i)=> {\n                var v = z.min + (extent / Math.pow(10, i));\n                z.domain.unshift(v)\n\n            });\n\n            scale = d3.scaleLog()\n        } else {\n            range.forEach((c, i)=> {\n                var v = z.min + (extent * (i / (range.length - 1)));\n                z.domain.push(v)\n            });\n            scale = Utils.createScale(config.color.scale);\n\n        }\n\n\n        z.domain[0] = z.min; //removing unnecessary floating points\n        z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\n        // console.log(z.domain);\n\n        if (config.color.reverseScale) {\n            z.domain.reverse();\n        }\n\n        var plot = this.plot;\n\n        // console.log(range);\n\n        plot.z.color.scale = scale.domain(z.domain).range(range);\n        var shape = plot.z.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = \"rect\";\n\n        plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\n        plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        if (this.plot.groupByY) {\n            this.drawGroupsY(this.plot.y.groups, this.svgG);\n        }\n        if (this.plot.groupByX) {\n            this.drawGroupsX(this.plot.x.groups, this.svgG);\n        }\n\n        this.updateCells();\n\n        // this.updateVariableLabels();\n\n        this.updateAxisX();\n        this.updateAxisY();\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n\n        this.updateAxisTitles();\n    };\n\n    updateAxisTitles() {\n        var self = this;\n        var plot = self.plot;\n\n\n    }\n\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelXClass = labelClass + \"-x\";\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n        var offsetX = {\n            x: 0,\n            y: 0\n        };\n        let gapSize = Heatmap.computeGapSize(0);\n        if (plot.groupByX) {\n            let overlap = self.config.x.groups.overlap;\n\n            offsetX.x = gapSize / 2;\n            offsetX.y = overlap.bottom + gapSize / 2 + 6;\n        } else if (plot.groupByY) {\n            offsetX.y = gapSize;\n        }\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.x.allValuesList, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => (i * plot.cellWidth + plot.cellWidth / 2) + (d.group.gapsSize) + offsetX.x)\n            .attr(\"y\", plot.height + offsetX.y)\n            .attr(\"dy\", 10)\n\n            .attr(\"text-anchor\", \"middle\")\n            .text(d=>self.formatValueX(d.val));\n\n\n\n        var maxWidth = self.computeXAxisLabelsWidth(offsetX);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueX(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.x.rotateLabels) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + ((i * plot.cellWidth + plot.cellWidth / 2) + d.group.gapsSize + offsetX.x ) + \", \" + ( plot.height + offsetX.y) + \")\")\n                .attr(\"dx\", -2)\n                .attr(\"dy\", 8)\n                .attr(\"text-anchor\", \"end\");\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.height + plot.margin.bottom) + \")\")\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n\n            .attr(\"dy\", \"-0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.x.title);\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.y.allValuesList);\n\n        var labelsEnter = labels.enter().append(\"text\");\n        var labelsMerge = labelsEnter.merge(labels);\n\n        var offsetY = {\n            x: 0,\n            y: 0\n        };\n        if (plot.groupByY) {\n            let overlap = self.config.y.groups.overlap;\n            let gapSize = Heatmap.computeGapSize(0);\n            offsetY.x = -overlap.left;\n\n            offsetY.y = gapSize / 2;\n        }\n        labelsMerge\n            .attr(\"x\", offsetY.x)\n            .attr(\"y\", (d, i) => (i * plot.cellHeight + plot.cellHeight / 2) + d.group.gapsSize + offsetY.y)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n\n            .text(function (d) {\n                var formatted = self.formatValueY(d.val);\n                return formatted\n            });\n\n        var maxWidth = self.computeYAxisLabelsWidth(offsetY);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueY(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.y.rotateLabels) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + (offsetY.x  ) + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\")\n                .attr(\"text-anchor\", \"end\");\n            // .attr(\"dx\", -7);\n        } else {\n            labelsMerge.attr(\"dominant-baseline\", \"middle\")\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y'))\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.y.title);\n\n    }\n\n\n    drawGroupsY(parentGroup, container, availableWidth) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupYClass = groupClass + \"-y\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupYClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n\n        var titleRectWidth = Heatmap.groupTitleRectHeight;\n        var depth = self.config.y.groups.keys.length - parentGroup.level;\n        var overlap = {\n            left: 0,\n            right: 0\n        };\n\n        if (!availableWidth) {\n            overlap.right = plot.y.overlap.left;\n            overlap.left = plot.y.overlap.left;\n            availableWidth = plot.width + gapSize + overlap.left + overlap.right;\n        }\n\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + (padding - overlap.left) + \",\" + ((plot.cellHeight * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n\n        var groupWidth = availableWidth - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\");\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"width\", titleRectWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"width\", groupWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\")\n\n\n        groupsMerge.each(function (group) {\n\n            self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\n        });\n\n        groups.exit().remove();\n    }\n\n    drawGroupsX(parentGroup, container, availableHeight) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupXClass = groupClass + \"-x\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupXClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n        var titleRectHeight = Heatmap.groupTitleRectHeight;\n\n        var depth = self.config.x.groups.keys.length - parentGroup.level;\n\n        var overlap = {\n            top: 0,\n            bottom: 0\n        };\n\n        if (!availableHeight) {\n            overlap.bottom = plot.x.overlap.bottom;\n            overlap.top = plot.x.overlap.top;\n            availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\n\n        } else {\n            overlap.top = -titleRectHeight;\n        }\n        // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + ((plot.cellWidth * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n        var groupHeight = availableHeight - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(0, \" + (0) + \")\");\n\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"height\", titleRectHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"height\", groupHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\");\n\n        groupsMerge.each(function (group) {\n            self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\n        });\n\n        groups.exit().remove();\n\n    }\n\n    setGroupMouseCallbacks(parentGroup, tileRects) {\n        var plot = this.plot;\n        var self = this;\n        var mouseoverCallbacks = [];\n        mouseoverCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', true);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\n        });\n\n        var mouseoutCallbacks = [];\n        mouseoutCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', false);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\n        });\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(d=> {\n                var html = parentGroup.label + \": \" + d.groupingValue;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(d=> {\n                self.hideTooltip();\n            });\n\n\n        }\n        tileRects.on(\"mouseover\", function (d) {\n            var self = this;\n            mouseoverCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n        tileRects.on(\"mouseout\", function (d) {\n            var self = this;\n            mouseoutCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellContainerClass = self.prefixClass(\"cells\");\n        var gapSize = Heatmap.computeGapSize(0);\n        var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\n        var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\n        var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\n        cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\n\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.z.shape.type;\n\n        var cells = cellContainer.selectAll(\"g.\" + cellClass)\n            .data(self.plot.cells);\n\n        var cellEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n\n        var cellsMerge = cellEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + ((plot.cellWidth * c.col + plot.cellWidth / 2) + c.colVar.group.gapsSize) + \",\" + ((plot.cellHeight * c.row + plot.cellHeight / 2) + c.rowVar.group.gapsSize) + \")\");\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        shapes\n            .attr(\"width\", plot.z.shape.width)\n            .attr(\"height\", plot.z.shape.height)\n            .attr(\"x\", -plot.cellWidth / 2)\n            .attr(\"y\", -plot.cellHeight / 2);\n\n        shapes.style(\"fill\", c=> c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value));\n        shapes.attr(\"fill-opacity\", d=> d.value === undefined ? 0 : 1);\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\n                self.showTooltip(html);\n\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n    formatValueX(value) {\n        if (!this.config.x.formatter) return value;\n\n        return this.config.x.formatter.call(this.config, value);\n    }\n\n    formatValueY(value) {\n        if (!this.config.y.formatter) return value;\n\n        return this.config.y.formatter.call(this.config, value);\n    }\n\n    formatValueZ(value) {\n        if (!this.config.z.formatter) return value;\n\n        return this.config.z.formatter.call(this.config, value);\n    }\n\n    formatLegendValue(value) {\n        if (!this.config.legend.formatter) return value;\n\n        return this.config.legend.formatter.call(this.config, value);\n    }\n\n    updateLegend() {\n        var self = this;\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var gapSize = Heatmap.computeGapSize(0);\n        if (this.plot.groupByY) {\n            legendX += gapSize / 2 + plot.y.overlap.right;\n        } else if (this.plot.groupByX) {\n            legendX += gapSize;\n        }\n        var legendY = 0;\n        if (this.plot.groupByX || this.plot.groupByY) {\n            legendY += gapSize / 2;\n        }\n\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.z.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY, v => self.formatLegendValue(v)).setRotateLabels(self.config.legend.rotateLabels).linearGradientBar(barWidth, barHeight);\n    }\n\n\n}\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class HistogramConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'histogram';\n    showLegend=true;\n    showTooltip =true;\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : parseFloat(d[key]), // x value accessor\n        scale: \"linear\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    frequency=true;\n    groups={\n        key: 1\n    };\n    transition= true;\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Histogram extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HistogramConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new HistogramConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.bar={\n            color: null//color scale mapping function\n        };\n        \n        this.computePlotSize();\n        \n        this.setupX();\n        this.setupHistogram();\n        this.setupGroupStacks();\n        this.setupY();\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        if(conf.ticks){\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.groupedData;\n        plot.x.scale.domain([d3.min(data, s=>d3.min(s.values, plot.x.value)), d3.max(data, s=>d3.max(s.values, plot.x.value))]);\n        \n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        var data = this.plot.data;\n        var yStackMax = d3.max(plot.stackedHistograms, layer => d3.max(layer.histogramBins, d => d.y0 + d.y));\n        plot.y.scale.domain([0, yStackMax]);\n\n    };\n\n\n    setupHistogram() {\n        var plot = this.plot;\n        var x = plot.x;\n        var y = plot.y;\n        var ticks = this.config.x.ticks ? x.scale.ticks(this.config.x.ticks) : x.scale.ticks();\n\n        plot.histogram = d3.histogram()\n            .domain(x.scale.domain())\n            .value(x.value)\n            .thresholds(ticks);\n    }\n\n    setupGroupStacks() {\n        var self=this;\n        var y0s = [];\n        this.plot.groupedData.forEach(d=>{\n            d.histogramBins = this.plot.histogram(d.values);\n\n                d.histogramBins.forEach((b,i) => {\n                    b.x =b.x0;\n                    b.dx = b.x1-b.x0;\n                    b.y = b.length;\n                    var prevY0 = y0s[i];\n                    if(!prevY0) prevY0 = 0;\n                    b.y0 = prevY0;\n\n                    if(!this.config.frequency){\n                        b.y/=this.plot.dataLength\n                    }\n                    y0s[i] = b.y+prevY0;\n                });\n\n\n        });\n        var keys = this.plot.groupedData.map(d=>d.key);\n        // console.log(this.plot.groupedData);\n\n        this.plot.stack = d3.stack().keys(keys).value(d=>d.histogramBins);\n        this.plot.stackedHistograms = this.plot.groupedData;\n    }\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawHistogram() {\n        var self = this;\n        var plot = self.plot;\n        \n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\"+layerClass)\n            .data(plot.stackedHistograms);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n\n        var bar = layerMerge.selectAll(\".\"+barClass)\n            .data(d => d.histogramBins);\n\n        var barEnter = bar.enter().append(\"g\");\n        barEnter\n            .attr(\"class\", barClass)\n            .append(\"rect\")\n            .attr(\"x\", 1);\n\n        var barMerge = barEnter.merge(bar);\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT= layerMerge.transition();\n        }\n\n        barT.attr(\"transform\", function(d) { return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 +d.y)) + \")\"; });\n        var rectWidth = plot.stackedHistograms.length ? (plot.stackedHistograms[0].histogramBins.length ?  plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x1)-plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x0)-1 : 0) : 0;\n\n\n        barRectT\n            .attr(\"width\",  d=>  Math.max(0, plot.x.scale(d.x1)-plot.x.scale(d.x0)-1) )\n            .attr(\"height\", d =>   plot.height - plot.y.scale(d.y));\n\n        if(this.plot.color){\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.drawHistogram();\n        return this;\n    };\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\nexport {Regression, RegressionConfig} from './regression'\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\nexport {Heatmap, HeatmapConfig} from './heatmap'\nexport {HeatmapTimeSeries, HeatmapTimeSeriesConfig} from './heatmap-timeseries'\nexport {Histogram, HistogramConfig} from './histogram'\nexport {BarChart, BarChartConfig} from './bar-chart'\nexport {BoxPlotBase, BoxPlotBaseConfig} from './box-plot-base'\nexport {BoxPlot, BoxPlotConfig} from './box-plot'\nexport {DivergingStackedBarChart, DivergingStackedBarChartConfig} from './diverging-stacked-bar-chart'\nexport {LineChart, LineChartConfig} from './line-chart'\nexport {StatisticsUtils} from './statistics-utils'\nexport {Utils} from './utils'\nexport {Legend} from './legend'\n\n\n\n\n\n","import {Utils} from \"./utils\";\n\nimport {legendColor, legendSize, legendSymbol} from 'd3-svg-legend'\n\n\n/*var d3 = require('../bower_components/d3');\n*/\n// var legend = require('../bower_components/d3-legend/no-extend');\n//\n// module.exports.legend = legend;\n\nexport class Legend {\n\n    cssClassPrefix=\"odc-\";\n    legendClass=this.cssClassPrefix+\"legend\";\n    container;\n    scale;\n    color= legendColor;\n    size = legendSize;\n    symbol= legendSymbol;\n    guid;\n\n    labelFormat = undefined;\n\n    constructor(svg, legendParent, scale, legendX, legendY, labelFormat){\n        this.scale=scale;\n        this.svg = svg;\n        this.guid = Utils.guid();\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\n            .classed(this.legendClass, true);\n\n        this.labelFormat = labelFormat;\n    }\n\n\n\n    linearGradientBar(barWidth, barHeight, title){\n        var gradientId = this.cssClassPrefix+\"linear-gradient\"+\"-\"+this.guid;\n        var scale= this.scale;\n        var self = this;\n\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n        this.container.selectOrAppend(\"rect\")\n            .attr(\"width\", barWidth)\n            .attr(\"height\", barHeight)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\n\n\n        var ticks = this.container.selectAll(\"text\")\n            .data( scale.domain() );\n        var ticksNumber =scale.domain().length-1;\n        var ticksMerge = ticks.enter().append(\"text\").merge(ticks);\n\n        ticksMerge.attr(\"x\", barWidth)\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\n            .attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(d=> self.labelFormat ? self.labelFormat(d) : d);\n        ticksMerge.attr(\"dominant-baseline\", \"middle\")\n        if(this.rotateLabels){\n            ticksMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + barWidth + \", \" + (barHeight -(i*barHeight/ticksNumber)) + \")\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"dx\", 5)\n                .attr(\"dy\", 5);\n\n        }else{\n\n        }\n\n        ticks.exit().remove();\n\n        return this;\n    }\n\n    setRotateLabels(rotateLabels) {\n        this.rotateLabels = rotateLabels;\n        return this;\n    }\n\n    \n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class LineChartConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'line-chart';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n    lineId = (d, i)=> undefined;\n    transition= true;\n    onLineHover = (d, i) => {};\n    onLineHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LineChart extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LineChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new LineChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.updateLines();\n    };\n\n    updateLines() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var lineClass = this.lineClass = self.prefixClass('line');\n        self.linesContainerClass = self.prefixClass('lines-container');\n\n        var linesContainer = self.svgG.selectOrAppend(\"g.\" + self.linesContainerClass);\n\n        var layer = linesContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n        var linePathEnter = layerEnter.append(\"path\")\n            .attr(\"class\", lineClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var linePath = layerMerge.select('.' + lineClass)\n            .datum(d=>d.values);\n\n        var linePathMerge = linePathEnter.merge(linePath);\n\n        var linePathT = linePathMerge;\n        if (self.transitionEnabled()) {\n            linePathT = linePathMerge.transition();\n        }\n\n        var line = d3.line()\n            .x(plot.x.map)\n            .y(plot.y.map);\n\n        linePathT\n            .attr(\"fill\", \"none\")\n            // .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"id\", this.config.lineId)\n            .attr(\"d\", line);\n\n\n        //TODO add tooltip\n\n        linePathMerge.on(\"mouseover.onLineHover\", this.config.onLineHover);\n        linePathMerge.on(\"mouseout.onLineHoverOut\", this.config.onLineHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"stroke\", plot.seriesColor)\n        }else if(plot.color){\n            linePathMerge.style(\"stroke\", plot.color)\n        }\n\n        linePath.exit().remove();\n        var dotClass = this.dotClass = self.prefixClass('dot');\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values);\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n\n\n\n        layer.exit().remove();\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class RegressionConfig extends ScatterPlotConfig{\n\n    mainRegression = true;\n    groupRegression = true;\n    confidence={\n        level: 0.95,\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\n        marginOfError: undefined, //custom  margin Of Error function (x, points)\n        areaCurve: d3.curveNatural\n    };\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Regression extends ScatterPlot{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new RegressionConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new RegressionConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.initRegressionLines();\n    }\n\n    initRegressionLines(){\n\n        var self = this;\n        var groupsAvailable = self.plot.groupingEnabled;\n\n        self.plot.regressions= [];\n\n\n        if(groupsAvailable && self.config.mainRegression){\n            var regression = this.initRegression(this.plot.data, false);\n            self.plot.regressions.push(regression);\n        }\n\n        if(self.config.groupRegression){\n            this.initGroupRegression();\n        }\n\n    }\n\n    initGroupRegression() {\n        var self = this;\n\n        self.plot.groupedData.forEach(group=>{\n            if(group.values.length<2){\n                return;\n            }\n\n            var regression = this.initRegression(group.values, group.key);\n            self.plot.regressions.push(regression);\n        });\n    }\n\n    initRegression(values, groupVal){\n        var self = this;\n\n        var points = values.map(d=>{\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n        });\n\n        // points.sort((a,b) => a[0]-b[0]);\n\n        var linearRegression =  StatisticsUtils.linearRegression(points);\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\n\n\n        var extentX = d3.extent(points, d=>d[0]);\n\n\n        var linePoints = [\n            {\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            },\n            {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }\n        ];\n\n        var line = d3.line()\n            .curve(d3.curveBasis)\n            .x(d => self.plot.x.scale(d.x))\n            .y(d => self.plot.y.scale(d.y));\n\n        var color = self.plot.color;\n\n        var defaultColor = \"black\";\n        if(Utils.isFunction(color)){\n            if(values.length && groupVal!==false){\n                if(self.config.series){\n                    color =self.plot.colorCategory(groupVal);\n                }else{\n                    color = color(values[0]);\n                }\n\n            }else{\n                color = defaultColor;\n            }\n        }else if(!color && groupVal===false){\n            color = defaultColor;\n        }\n\n\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\n        return {\n            group: groupVal || false,\n            line: line,\n            linePoints: linePoints,\n            color: color,\n            confidence: confidence\n        };\n    }\n\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\n        var self = this;\n        var slope = linearRegression.m;\n        var n = points.length;\n        var degreesOfFreedom = Math.max(0, n-2);\n\n        var alpha = 1 - self.config.confidence.level;\n        var criticalProbability  = 1 - alpha/2;\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\n\n        var xValues = points.map(d=>d[0]);\n        var meanX = StatisticsUtils.mean(xValues);\n        var xMySum=0;\n        var xSum=0;\n        var xPowSum=0;\n        var ySum=0;\n        var yPowSum=0;\n        points.forEach(p=>{\n            var x = p[0];\n            var y = p[1];\n\n            xMySum += x*y;\n            xSum+=x;\n            ySum+=y;\n            xPowSum+= x*x;\n            yPowSum+= y*y;\n        });\n        var a = linearRegression.m;\n        var b = linearRegression.b;\n\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\n\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n        var marginOfError =  x=> criticalValue* errorFn(x);\n\n\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n\n        var computeConfidenceAreaPoint = x=>{\n            var linearRegression = linearRegressionLine(x);\n            var moe = marginOfError(x);\n            var confDown = linearRegression - moe;\n            var confUp = linearRegression + moe;\n            return {\n                x: x,\n                y0: confDown,\n                y1: confUp\n            }\n\n        };\n\n        var centerX = (extentX[1]+extentX[0])/2;\n\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n\n        var fitInPlot = y => y;\n\n        var confidenceArea =  d3.area()\n        .curve(self.config.confidence.areaCurve)\n            .x(d => self.plot.x.scale(d.x))\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\n\n        return {\n            area:confidenceArea,\n            points:confidenceAreaPoints\n        };\n    }\n\n    update(newData){\n        super.update(newData);\n        this.updateRegressionLines();\n\n    };\n\n    updateRegressionLines() {\n        var self = this;\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\n\n        var clipPathId = self.prefixClass(\"clip\");\n\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\n            .attr(\"id\", clipPathId);\n\n\n        regressionContainerClip.selectOrAppend('rect')\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        regressionContainer.attr(\"clip-path\", (d,i) => \"url(#\"+clipPathId+\")\");\n\n        var regressionClass = this.prefixClass(\"regression\");\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\n        var regressionSelector = \"g.\"+regressionClass;\n        var regression = regressionContainer.selectAll(regressionSelector)\n            .data(self.plot.regressions, (d,i)=> d.group);\n\n\n        var regressionEnter = regression.enter().appendSelector(regressionSelector);\n        var regressionMerge = regressionEnter.merge(regression);\n        var lineClass = self.prefixClass(\"line\");\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", lineClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\");\n\n        var line = regressionMerge.select(\"path.\"+lineClass)\n            .style(\"stroke\", r => r.color);\n        \n        var lineT = line;\n        if (self.transitionEnabled()) {\n            lineT = line.transition();\n        }\n\n        lineT.attr(\"d\", r => r.line(r.linePoints))\n\n\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", confidenceAreaClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .style(\"opacity\", \"0.4\");\n\n\n\n        var area = regressionMerge.select(\"path.\"+confidenceAreaClass);\n\n        var areaT = area;\n        if (self.transitionEnabled()) {\n            areaT = area.transition();\n        }\n        areaT.attr(\"d\", r => r.confidence.area(r.confidence.points));\n        areaT.style(\"fill\", r => r.color)\n        regression.exit().remove();\n\n    }\n\n\n\n}\n\n","import {ChartWithColorGroups} from \"./chart-with-color-groups\";\nimport {ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\n    size= undefined; //scatter plot cell size\n    minCellSize = 50;\n    maxCellSize = 1000;\n    padding= 20; //scatter plot cell padding\n    brush= true;\n    guides= true; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n    ticks= undefined; //ticks number, (default: computed using cell size)\n    x={// X axis config\n        orient: \"bottom\",\n        scale: \"linear\"\n    };\n    y={// Y axis config\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    groups={\n        key: undefined, //object property name or array index with grouping variable\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\n    };\n    variables= {\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => d[variableKey] // variable value accessor\n    };\n\n    constructor(custom){\n        super();\n        Utils.deepExtend(this, custom);\n    }\n\n\n}\n\nexport class ScatterPlotMatrix extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        var self = this;\n        var margin = this.plot.margin;\n        var conf = this.config;\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.dot={\n            color: null//color scale mapping function\n        };\n        \n        this.setupVariables();\n\n        this.plot.size = conf.size;\n\n\n        var width = conf.width;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), margin);\n        if (!width) {\n            if(!this.plot.size){\n                this.plot.size =  Math.min(conf.maxCellSize, Math.max(conf.minCellSize, availableWidth/this.plot.variables.length));\n            }\n            width = margin.left + margin.right + this.plot.variables.length*this.plot.size;\n        }\n        if(!this.plot.size){\n            this.plot.size = (width - (margin.left + margin.right)) / this.plot.variables.length;\n        }\n\n        var height = width;\n        if (!height) {\n            height = availableHeight;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n\n\n        this.plot.ticks = conf.ticks;\n\n        if(this.plot.ticks===undefined){\n            this.plot.ticks = this.plot.size / 40;\n        }\n\n        this.setupX();\n        this.setupY();\n\n        return this;\n\n    };\n\n    setupVariables() {\n        var variablesConf = this.config.variables;\n\n        var data = this.plot.groupedData;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if(!plot.variables || !plot.variables.length){\n\n            plot.variables = data.length ? Utils.inferVariables(data[0].values, this.config.groups.key, this.config.includeInPlot) : [];\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            var min = d3.min(data, s=>d3.min(s.values, d=>variablesConf.value(d, variableKey)));\n            var max = d3.max(data, s=>d3.max(s.values, d=>variablesConf.value(d, variableKey)));\n            plot.domainByVariable[variableKey] = [min,max];\n            var label = variableKey;\n            if(variablesConf.labels && variablesConf.labels.length>index){\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        plot.subplots = [];\n    };\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config;\n\n        \n        x.value = conf.variables.value;\n        x.scale = Utils.createScale(conf.x.scale).range([conf.padding / 2, plot.size - conf.padding / 2]);\n        x.map = (d, variable) => x.scale(x.value(d, variable));\n\n        x.axis = Utils.createAxis(conf.x.orient, x.scale).ticks(plot.ticks);\n        x.axis.tickSize(plot.size * plot.variables.length);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config;\n\n        y.value = conf.variables.value;\n        y.scale = Utils.createScale(conf.y.scale).range([ plot.size - conf.padding / 2, conf.padding / 2]);\n\n        y.map = (d, variable) => y.scale(y.value(d, variable));\n        y.axis = Utils.createAxis(conf.y.orient, y.scale).ticks(plot.ticks);\n        y.axis.tickSize(-plot.size * plot.variables.length);\n    };\n\n    update( newData) {\n        super.update(newData);\n\n        var self =this;\n        var n = self.plot.variables.length;\n        var conf = this.config;\n\n        var axisClass = self.prefixClass(\"axis\");\n        var axisXClass = axisClass+\"-x\";\n        var axisYClass = axisClass+\"-y\";\n\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\n\n        var noGuidesClass = self.prefixClass(\"no-guides\");\n        var xAxis = self.svgG.selectAll(xAxisSelector)\n            .data(self.plot.variables);\n\n        var xAxisMerge = xAxis.enter().appendSelector(xAxisSelector)\n            .classed(noGuidesClass, !conf.guides).merge(xAxis);\n\n\n        xAxisMerge.attr(\"transform\", (d, i) => \"translate(\" + (n - i - 1) * self.plot.size + \",0)\")\n            .each(function(d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);\n                var axis = d3.select(this);\n                if (self.transitionEnabled()) {\n                    axis = axis.transition();\n                }\n                axis.call(self.plot.x.axis);\n\n            });\n\n        xAxis.exit().remove();\n\n        var yAxis = self.svgG.selectAll(yAxisSelector)\n            .data(self.plot.variables);\n        var yAxisMerge = yAxis.enter().appendSelector(yAxisSelector).merge(yAxis);\n        yAxisMerge.classed(noGuidesClass, !conf.guides)\n            .attr(\"transform\", (d, i) => \"translate(0,\" + i * self.plot.size + \")\");\n        yAxisMerge.each(function(d) {\n            self.plot.y.scale.domain(self.plot.domainByVariable[d]);\n            var axis = d3.select(this);\n            if (self.transitionEnabled()) {\n                axis = axis.transition();\n            }\n            axis.call(self.plot.y.axis);\n\n        });\n\n        yAxis.exit().remove();\n\n        var cellClass =  self.prefixClass(\"cell\");\n        var cell = self.svgG.selectAll(\".\"+cellClass)\n            .data(self.utils.cross(self.plot.variables, self.plot.variables));\n\n        var cellEnter =  cell.enter().appendSelector(\"g.\"+cellClass);\n        cellEnter.filter(d => d.i === d.j).append(\"text\");\n\n        var cellMerge = cellEnter.merge(cell);\n        cellMerge.attr(\"transform\", d => \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\");\n\n        if(conf.brush){\n            this.drawBrush(cellMerge);\n        }\n\n\n        cellMerge.each(plotSubplot);\n\n        //Labels\n        cellMerge.select(\"text\")\n            .attr(\"x\", conf.padding)\n            .attr(\"y\", conf.padding)\n            .attr(\"dy\", \".71em\")\n            .text( d => self.plot.labelByVariable[d.x]);\n\n        cell.exit().remove();\n\n        function plotSubplot(p) {\n            var plot = self.plot;\n            plot.subplots.push(p);\n            var cell = d3.select(this);\n\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n            var frameClass =  self.prefixClass(\"frame\");\n            cell.selectOrAppend(\"rect.\"+frameClass)\n                .attr(\"class\", frameClass)\n                .attr(\"x\", conf.padding / 2)\n                .attr(\"y\", conf.padding / 2)\n                .attr(\"width\", plot.size - conf.padding)\n                .attr(\"height\", plot.size - conf.padding);\n            \n            p.update = function() {\n\n                var subplot = this;\n                var layerClass = self.prefixClass('layer');\n\n\n                var layer = cell.selectAll(\"g.\"+layerClass).data(self.plot.groupedData);\n\n                var layerMerge = layer.enter().appendSelector(\"g.\"+layerClass).merge(layer);\n\n                var dots = layerMerge.selectAll(\"circle\")\n                    .data(d=>d.values);\n\n                var dotsMerge = dots.enter().append(\"circle\").merge(dots);\n\n                var dotsT = dotsMerge;\n                if (self.transitionEnabled()) {\n                    dotsT = dotsMerge.transition();\n                }\n\n                dotsT.attr(\"cx\", (d) => plot.x.map(d, subplot.x))\n                    .attr(\"cy\", (d) => plot.y.map(d, subplot.y))\n                    .attr(\"r\", self.config.dotRadius);\n\n\n                if (plot.seriesColor) {\n                    layerMerge.style(\"fill\", plot.seriesColor)\n                }else if(plot.color){\n                    dotsMerge.style(\"fill\", plot.color)\n                }\n\n\n                if (plot.tooltip) {\n                    dotsMerge.on(\"mouseover\", (d) => {\n\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                        var group = self.config.groups ? self.config.groups.value.call(self.config, d) : null;\n                        if (group || group === 0) {\n                            group = plot.groupToLabel[group];\n                            html += \"<br/>\";\n                            var label = self.config.groups.label;\n                            if (label) {\n                                html += label + \": \";\n                            }\n                            html += group\n                        }\n                        self.showTooltip(html);\n                    })\n                        .on(\"mouseout\", (d)=> {\n                            self.hideTooltip();\n                        });\n                }\n\n                dots.exit().remove();\n                layer.exit().remove();\n            };\n            p.update();\n\n        }\n    };\n\n    drawBrush(cell) {\n        var self = this;\n        var hiddenClass = self.plot.hiddenClass =  self.prefixClass(\"hidden\");\n        var brush = d3.brush()\n            // .x(self.plot.x.scale)\n            // .y(self.plot.y.scale)\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n        brush.extent([[0, 0], [self.plot.size, self.plot.size]]);\n        cell.selectOrAppend(\"g.brush-container\").call(brush);\n\n        self.clearBrush();\n\n        // Clear the previously-active brush, if any.\n        function brushstart(p) {\n            if (self.plot.brushCell !== this) {\n                self.clearBrush();\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                self.plot.brushCell = this;\n                self.plot.brush = brush;\n            }\n        }\n\n        // Highlight the selected circles.\n        function brushmove(p) {\n            var s = d3.event.selection;\n            if(!s)return;\n            var e = s.map(_=> [self.plot.x.scale.invert(_[0]), self.plot.y.scale.invert(_[1])]);\n            // console.log(e);\n\n            self.svgG.selectAll(\"circle\").classed(hiddenClass, function (d) {\n                var x = parseFloat(d[p.x]),\n                    y = parseFloat(d[p.y]);\n\n                return e[0][0] > x || x > e[1][0]\n                    || e[1][1] > y || y > e[0][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) self.svgG.selectAll(\".\"+hiddenClass).classed(hiddenClass, false);\n        }\n    };\n\n    clearBrush(){\n        var self = this;\n        if(!self.plot.brushCell){\n            return;\n        }\n        \n        self.plot.brush.move(d3.select(self.plot.brushCell), null);\n        self.svgG.selectAll(\".\"+self.plot.hiddenClass).classed(self.plot.hiddenClass, false);\n        self.plot.brushCell=null;\n\n    }\n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ScatterPlotConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ScatterPlot extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ScatterPlotConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.updateDots();\n    };\n\n    updateDots() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var dotClass = this.dotClass = self.prefixClass('dot');\n        self.dotsContainerClass = self.prefixClass('dots-container');\n\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n        var layer = dotsContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values)\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n        layer.exit().remove();\n    }\n}\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\n\nvar su = module.exports.StatisticsUtils ={};\nsu.sampleCorrelation = require('simple-statistics/src/sample_correlation');\nsu.linearRegression = require('simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('simple-statistics/src/error_function');\nsu.standardDeviation = require('simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('simple-statistics/src/sample_standard_deviation');\nsu.variance = require('simple-statistics/src/variance');\nsu.mean = require('simple-statistics/src/mean');\nsu.zScore = require('simple-statistics/src/z_score');\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\nsu.quantile = require('simple-statistics/src/quantile');\n\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return tdistr(degreesOfFreedom, criticalProbability);\n};","import * as d3 from './d3'\n\nexport class Utils {\n    static SQRT_2 = 1.41421356237;\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n    static deepExtend(out) {\n\n        var utils = this;\n        var emptyOut = {};\n\n\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n            out = [];\n        }\n        out = out || {};\n\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            if (!source)\n                continue;\n\n            for (var key in source) {\n                if (!source.hasOwnProperty(key)) {\n                    continue;\n                }\n                var isArray = Array.isArray(out[key]);\n                var isObject = utils.isObject(out[key]);\n                var srcObj = utils.isObject(source[key]);\n\n                if (isObject && !isArray && srcObj) {\n                    utils.deepExtend(out[key], source[key]);\n                } else {\n                    out[key] = source[key];\n                }\n            }\n        }\n\n        return out;\n    };\n\n    static mergeDeep(target, source) {\n        let output = Object.assign({}, target);\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n            Object.keys(source).forEach(key => {\n                if (Utils.isObjectNotArray(source[key])) {\n                    if (!(key in target))\n                        Object.assign(output, {[key]: source[key]});\n                    else\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\n                } else {\n                    Object.assign(output, {[key]: source[key]});\n                }\n            });\n        }\n        return output;\n    }\n\n    static cross(a, b) {\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\n        return c;\n    };\n\n    static inferVariables(data, groupKey, includeGroup) {\n        var res = [];\n        if(!data){\n            return res;\n        }\n\n        if (data.length) {\n            var d = data[0];\n            if (d instanceof Array) {\n                res = d.map(function (v, i) {\n                    return i;\n                });\n            } else if (typeof d === 'object') {\n\n                for (var prop in d) {\n                    if (!d.hasOwnProperty(prop)) continue;\n\n                    res.push(prop);\n                }\n            }\n        }\n        if (groupKey !== null && groupKey !== undefined && !includeGroup) {\n            var index = res.indexOf(groupKey);\n            if (index > -1) {\n                res.splice(index, 1);\n            }\n        }\n        return res\n    };\n\n    static isObjectNotArray(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\n    };\n\n    static isArray(item) {\n        return Array.isArray(item);\n    };\n\n    static isObject(a) {\n        return a !== null && typeof a === 'object';\n    };\n\n    static isNumber(a) {\n        return !isNaN(a) && typeof a === 'number';\n    };\n\n    static isFunction(a) {\n        return typeof a === 'function';\n    };\n\n    static isDate(a){\n        return Object.prototype.toString.call(a) === '[object Date]'\n    }\n\n    static isString(a){\n        return typeof a === 'string' || a instanceof String\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n        \n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return Utils.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return Utils.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n        var defs = Utils.selectOrAppend(svg, \"defs\");\n        var linearGradient = defs.append(\"linearGradient\")\n            .attr(\"id\", gradientId);\n\n        linearGradient\n            .attr(\"x1\", x1 + \"%\")\n            .attr(\"y1\", y1 + \"%\")\n            .attr(\"x2\", x2 + \"%\")\n            .attr(\"y2\", y2 + \"%\");\n\n        //Append multiple color stops by using D3's data/enter step\n        var stops = linearGradient.selectAll(\"stop\")\n            .data(range);\n\n        var stopsMerge = stops.enter().append(\"stop\").merge(stops);\n\n        stopsMerge.attr(\"offset\", (d, i) => i / (range.length - 1))\n            .attr(\"stop-color\", d => d);\n\n        stops.exit().remove();\n    }\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width){\n        var textObj = textD3Obj.node();\n        textObj.textContent=textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength()>width+margin){\n            for (var x=textString.length-3;x>0;x-=1){\n                if (textObj.getSubStringLength(0,x)+ellipsisLength<=width+margin){\n                    textObj.textContent=textString.substring(0,x)+\"...\";\n                    return true;\n                }\n            }\n            textObj.textContent=\"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip){\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if(ellipsisPlaced && tooltip){\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element){\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    static createScale(scaleName) {\n        var scaleFunctionName = 'scale'+Utils.capitalizeFirstLetter(scaleName);\n        try{\n            return d3[scaleFunctionName]();\n        }catch (e){\n            throw 'ODC-D3 - scale not supported: '+scaleName+ ' ('+scaleFunctionName+')';\n        }\n    }\n\n    static createAxis(orient, scale){\n        var axisFnName = 'axis'+Utils.capitalizeFirstLetter(orient);\n        try{\n            return d3[axisFnName](scale)\n        }catch (e){\n            throw 'ODC-D3 - axis orient not supported: '+orient;\n        }\n    }\n}\n"]}