{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d3-array/dist/d3-array.js","node_modules/d3-axis/dist/d3-axis.js","node_modules/d3-brush/dist/d3-brush.js","node_modules/d3-collection/dist/d3-collection.js","node_modules/d3-color/dist/d3-color.js","node_modules/d3-dispatch/dist/d3-dispatch.js","node_modules/d3-drag/dist/d3-drag.js","node_modules/d3-ease/dist/d3-ease.js","node_modules/d3-format/dist/d3-format.js","node_modules/d3-hierarchy/dist/d3-hierarchy.js","node_modules/d3-interpolate/dist/d3-interpolate.js","node_modules/d3-path/dist/d3-path.js","node_modules/d3-scale/build/d3-scale.js","node_modules/d3-selection/dist/d3-selection.js","node_modules/d3-shape/dist/d3-shape.js","node_modules/d3-svg-legend/indexRollup.js","node_modules/d3-svg-legend/node_modules/d3-array/build/d3-array.js","node_modules/d3-svg-legend/node_modules/d3-dispatch/build/d3-dispatch.js","node_modules/d3-svg-legend/node_modules/d3-format/build/d3-format.js","node_modules/d3-svg-legend/node_modules/d3-scale/build/d3-scale.js","node_modules/d3-svg-legend/node_modules/d3-selection/build/d3-selection.js","node_modules/d3-time-format/dist/d3-time-format.js","node_modules/d3-time/dist/d3-time.js","node_modules/d3-timer/dist/d3-timer.js","node_modules/d3-transition/dist/d3-transition.js","node_modules/simple-statistics/src/error_function.js","node_modules/simple-statistics/src/linear_regression.js","node_modules/simple-statistics/src/linear_regression_line.js","node_modules/simple-statistics/src/mean.js","node_modules/simple-statistics/src/quantile.js","node_modules/simple-statistics/src/quantile_sorted.js","node_modules/simple-statistics/src/quickselect.js","node_modules/simple-statistics/src/sample_correlation.js","node_modules/simple-statistics/src/sample_covariance.js","node_modules/simple-statistics/src/sample_standard_deviation.js","node_modules/simple-statistics/src/sample_variance.js","node_modules/simple-statistics/src/standard_deviation.js","node_modules/simple-statistics/src/sum.js","node_modules/simple-statistics/src/sum_nth_power_deviations.js","node_modules/simple-statistics/src/variance.js","node_modules/simple-statistics/src/z_score.js","src/bar-chart.js","src/box-plot-base.js","src/box-plot.js","src/chart-with-color-groups.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/d3.js","src/diverging-stacked-bar-chart.js","src/heatmap-timeseries.js","src/heatmap.js","src/histogram.js","src/index.js","src/legend.js","src/line-chart.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","window","global","self","this","ODCD3","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","ascending","b","NaN","bisector","compare","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","pair","number","variance","values","valueof","value","delta","m","mean","sum","isNaN","deviation","array","v","Math","sqrt","extent","min","max","Array","prototype","slice","map","constant","identity","range","start","stop","step","arguments","ceil","e10","e5","e2","tickIncrement","count","power","floor","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","quantile","i0","value0","transpose","matrix","j","row","bisect","cross","values0","values1","reduce","i1","n0","n1","descending","histogram","domain","threshold","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","random","ticks","reverse","isFinite","zip","Object","defineProperty","factory","d3","top","bottom","epsilon","translateX","translateY","y","entering","__axis","axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","d3Selection","d3Dispatch","d3Drag","d3Interpolate","d3Transition","BrushEvent","target","type","nopropagation","event","stopImmediatePropagation","noevent","preventDefault","MODE_DRAG","name","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","input","output","xy","Y","XY","cursors","overlay","s","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultFilter","button","defaultExtent","svg","ownerSVGElement","width","baseVal","height","local","node","__brush","empty","brush$1","dim","touchending","listeners","dispatch","brush","handleSize","group","property","initialize","handle","redraw","style","on","started","emitter","that","args","Emitter","state","active","touches","changedTouches","w0","w1","e0","e1","s0","s1","dx","dy","moving","lockX","lockY","__data__","mode","metaKey","altKey","signX","signY","W","N","E","S","shifting","shiftKey","point0","mouse","point","emit","beforestart","moved","ended","view","keyCode","move","dragDisable","interrupt","point1","clearTimeout","setTimeout","dragEnable","end","tween","selection0","selection1","interpolate","starting","customEvent","brushX","brushY","brushSelection","prefix","Map","object","key","set","createObject","setObject","createMap","setMap","map$$1","Set","constructor","has","get","clear","keys","entries","size","proto","add","nest","sortValues","rollup","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","result","sortKey","extend","parent","definition","create","Color","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","trim","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","hasOwnProperty","g","rgbConvert","rgb","opacity","hex","toString","h","l","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","B","C","D","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","cosh","sinh","lch","noop","Dispatch","callback","concat","typename","types","T","split","indexOf","nodrag","root","document","documentElement","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","subject","id","identifier","defaultContainer","defaultSubject","defaultTouchable","drag","mousedownx","mousedowny","mousemoving","container","touchable","gestures","clickDistance2","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","clientX","clientY","touch","sublisteners","p0","clickDistance","quadInOut","cubicInOut","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinInOut","expInOut","circleInOut","b1","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","overshoot","backIn","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","formatDecimal","toExponential","coefficient","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","match","fill","align","sign","symbol","zero","comma","precision","formatRounded","join","formatTypes","%","toFixed","toPrecision","toUpperCase","locale","prefixes","formatLocale","numerals","grouping","thousands","substring","currency","decimal","replace","percent","newFormat","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","formatTrim","charCodeAt","Infinity","padding","formatPrefix","defaultLocale","formatDefaultLocale","precisionFixed","precisionPrefix","precisionRound","defaultSeparation","meanXReduce","maxYReduce","children","hierarchy","child","childs","Node","valued","nodes","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","current","next","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","splice","descendants","leaves","links","source","enclose","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","y1","r1","x2","y2","r2","x21","y21","r21","x3","y3","r3","a2","a3","c2","c3","d1","d2","ab","xa","xb","ya","yb","A","place","intersects","score","Node$1","circle","previous","packEnclose","aa","ca","sj","sk","pack","required","constantZero","defaultRadius","radiusLeaf","radius","packChildren","translateChild","roundNode","y0","treemapDice","preroot","ambiguous","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","TreeNode","treemapSlice","phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","rows","dice","squarify","resquarify","_squarify","cluster","separation","nodeSize","previousNode","leafLeft","leafRight","packSiblings","partition","stratify","nodeId","nodeKey","nodeByKey","tree","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","siblings","change","executeShifts","midpoint","vip","vop","vim","vom","sip","sop","sim","som","wm","wp","apportion","treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","positionNode","paddingOuter","treemapBinary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","treemapSliceDice","treemapSquarify","treemapResquarify","d3Color","basis","v0","v1","v2","v3","basis$1","basisClosed","linear","hue","gamma","nogamma","rgbGamma","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","nb","na","date","Date","setTime","reA","reB","string","am","bm","bs","bi","lastIndex","q","index","valueOf","cssNode","cssRoot","cssView","svgNode","degrees","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","translate","interpolateTransformCss","createElement","defaultView","getComputedStyle","appendChild","getPropertyValue","removeChild","interpolateTransformSvg","createElementNS","setAttribute","consolidate","rho","SQRT2","exp","hue$$1","hsl$1","hslLong","hcl$1","hclLong","cubehelixGamma","cubehelix$1","cubehelixLong","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateDiscrete","interpolateHue","interpolateNumber","interpolateObject","interpolateRound","interpolateString","interpolateZoom","p1","ux0","uy0","ux1","uy1","r0","coshr0","duration","interpolateRgb","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","piecewise","I","quantize","interpolator","samples","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","rect","d3Array","d3Collection","d3Format","d3Time","d3TimeFormat","map$1","implicit","ordinal","range$$1","unknown","band","undefined","ordinalRange","rescale","rangeRound","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","interpolate$$1","invert","linearish","nice","interval","pow10","powp","base","logp","log10","log2","reflect","raise","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","format$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","every","category10","category20b","category20c","category20","warm","cool","rainbow","ramp","viridis","magma","inferno","plasma","scaleBand","scalePoint","pointish","scaleIdentity","scaleLinear","scaleLog","logs","pows","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","quantile$1","invertExtent","quantiles","scaleQuantize","scaleThreshold","scaleTime","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","ts","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","sequential","xhtml","namespaces","xlink","xml","xmlns","namespace","space","creator","fullname","ownerDocument","uri","namespaceURI","none","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","sparse","update","EnterNode","datum","_next","_parent","insertBefore","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","styleValue","classArray","classList","ClassList","_node","_names","classedAdd","names","list","classedRemove","textRemove","textContent","htmlRemove","innerHTML","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","contains","filterEvents","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","subgroups","subnode","subgroup","bind","enterGroup","updateGroup","_enter","_exit","selection$$1","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","typenames","nextId","Local","sourceEvent","createSVGPoint","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","clientPoint","points","d3Path","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","_context","curveLinear","x$$1","y$$1","defined","curve","buffer","defined0","lineStart","lineEnd","area","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","_line","_point","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","angle","lineRadial$1","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","link","argv","curveHorizontal","curveVertical","curveRadial$1","p2","p3","draw","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","_x2","_x3","_x4","_y2","_y3","_y4","_x","_y","bundle","point$1","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","cardinal$$1","CardinalOpen","cardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","catmullRomClosed","catmullRom$$1","CatmullRomOpen","catmullRomOpen","LinearClosed","slope3","h0","h1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","Step","_t","series","none$1","stackValue","_t0","px","py","cornerRadius","padRadius","x32","y32","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","ax","ay","bx","by","kc","lc","centroid","pie","arcs","pa","radialArea","radialLine","linkHorizontal","linkVertical","linkRadial","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stack","oz","kz","sz","sij","ki","si","stackOffsetExpand","stackOffsetDiverging","yp","yn","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","s2","sij0","s3","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","tops","bottoms","stackOrderNone","stackOrderReverse","d3Scale","_typeof","Symbol","iterator","obj","d3_identity","d3_reverse","arr","mirror","d3_textWrapping","word","words","parseFloat","tspan","getComputedTextLength","helper","d3_drawShapes","shape","shapes","shapeHeight","shapeWidth","shapeRadius","d3_addText","labels","classPrefix","labelWidth","d3_calcType","cells","labelFormat","labelDelimiter","feature","increment","d3_linearLegend","gen","customLabels","genLength","_i","generatedLabels","d3_mergeLabels","d3_filterCells","cellFilter","filterCells","label","dataValues","labelValues","d3_placement","cell","cellTrans","textTrans","labelAlign","d3_addEvents","dispatcher","d3_title","title","titleWidth","cellsSvg","yOffset","getBBox","xOffset","d3_defaultLocale","d3_defaultFormatSpecifier","d3_defaultDelimiter","shapePadding","useClass","labelOffset","labelWrap","legendDispatcher","legend","cellEnter","textSize","shapeSize","cellSize","textAlign","textWrap","legendG","bbox","stroke","maxH","maxW","legendHelpers","thresholdLabels","_ref","legendColor","legendSize","legendSymbol","indexRollup","","deinterpolate$$","deinterpolate$1","localDate","H","M","L","setFullYear","utcDate","setUTCFullYear","newYear","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","getMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","getHours","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","getUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","getUTCHours","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","utcMonday","getUTCFullYear","getUTCDate","timeMonday","getFullYear","getDate","utcParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","getTimezoneOffset","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","timeParse","isoSpecifier","formatIso","toISOString","parseIso","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","newInterval","floori","offseti","field","milliseconds","seconds","minutes","hours","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","timeInterval","timeMilliseconds","utcMilliseconds","timeSeconds","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeeks","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","restart","timerFlush","wake","sleep","nap","poke","clearInterval","setInterval","TypeError","elapsed","total","d3Timer","d3Ease","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","schedule","timing","schedules","__transition","ease","init","schedule$$1","tweenValue","_id","Transition","_name","newId","selection_prototype","inherit","transition$$1","id0","id1","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","_value","styleTween","tween0","tween1","easeConstant","defaultTiming","sumX","sumY","sumXX","sumXY","mb","quantileSorted","quickselect","quantileSelect","quantileIndex","len","idx","indices","multiQuantileSelect","results","swap","tmp","sd","newLeft","newRight","sampleCovariance","sampleStandardDeviation","xmean","ymean","sampleVariance","sampleVarianceX","sumNthPowerDeviations","correction","tempValue","meanValue","standardDeviation","_chartWithColorGroups","_utils","_interopRequireWildcard","BarChartConfig","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","svgClass","cssClassPrefix","showLegend","showTooltip","Utils","isNumber","_assertThisInitialized","deepExtend","ChartWithColorGroupsConfig","BarChart","placeholderSelector","config","ChartWithColorGroups","_get","plot","computePlotSize","setupY","setupX","setupGroupStacks","setupYDomain","conf","createAxis","createScale","layers","layer","groupData","y0s","groupedData","forEach","mapToPoint","prevY0","axisConf","svgG","selectOrAppend","prefixClass","guides","axisT","margin","layerClass","barClass","layerMerge","bar","barEnter","barRectEnter","barMerge","barRect","barRectT","barT","layerT","transitionEnabled","yDomain","seriesColor","tooltip","hideTooltip","newData","drawAxisX","drawAxisY","drawBars","_chart","BoxPlotBaseConfig","domainMargin","Q1","Q2","Q3","Wl","whiskerLow","Wh","whiskerHigh","outliers","outlierValue","outlierLabel","minBoxWidth","maxBoxWidth","d3ColorCategory","ChartConfig","BoxPlotBase","Chart","getDataToPlot","setupColor","_this2","yMin","yMax","q1","q3","wl","wh","boxplotClass","boxplots","boxplotEnter","boxplotsMerge","boxplotsT","boxWidth","boxLeft","boxRight","boxClass","boxRects","boxRectsT","medianClass","medianLine","whiskerClass","tickClass","whiskers","box","endpoint","whisker","outlierClass","outlierEnterCircle","outliersMerge","outliersT","drawBoxPlots","_this3","colorSchemeCategory","capitalizeFirstLetter","colorCategory","colorValue","String","_boxPlotBase","_statisticsUtils","BoxPlotConfig","displayValue","tukey","BoxPlot","groupingEnabled","isGroupingEnabled","groupValue","getDisplayValue","isFunction","isObject","StatisticsUtils","IQR","_legend","forceLegend","setupGroups","getOwnPropertyNames","groupToLabel","computeGroupColorDomain","getLabel","groupColorDomain","_this4","enabledGroups","updateLegend","legendX","legendY","Legend","onLegendCellClick","updateLegendCellStatuses","cellValue","updateEnabledGroups","isDisabled","titleSize","titleMargin","subtitle","subtitleSize","subtitleMargin","utils","_attached","_layers","_events","_isInitialized","guid","_isAttached","baseContainer","setConfig","setData","postInit","initConfigAccessors","initPlot","initSvg","initTooltip","svgWidth","svgHeight","titleMarginSize","attachmentData","attachmentName","updateTitle","updateSubtitle","titleClass","subtitleClass","chart","once","off","events","ev","getBaseContainer","clazz","addDot","availableWidth","availableHeight","pageX","pageY","clean","removePropertyAccessors","initPropertyAccessors","bindTo","returnObj","recursive","accessor","initPropertyAccessor","isObjectNotArray","propertyKey","_scatterplot","CorrelationMatrixConfig","highlightLabels","rotateLabelsX","rotateLabelsY","variables","variableKey","correlation","xValues","yValues","sampleCorrelation","sizeMin","sizeMax","CorrelationMatrix","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","corrConf","cellConf","radiusMax","radiusScale","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","includeInPlot","labelByVariable","matrixCells","variableToValues","corr","rowVar","colVar","col","updateCells","updateVariableLabels","labelClass","updateAxisX","updateAxisY","labelXClass","labelsMerge","maxWidth","computeXAxisLabelsWidth","placeTextWithEllipsisAndTooltip","labelYClass","computeYAxisLabelsWidth","SQRT_2","fontSize","cellClass","cellShape","cellsMerge","scatterPlot","mouseoverCallbacks","mouseoutCallbacks","highlightClass","xLabelClass","yLabelClass","trigger","barHeight","linearGradientBar","containerSelector","scatterPlotConfig","ScatterPlot","attach","D3Extensions","insertSelector","appendSelector","selectOrInsert","operation","selectorParts","selectorModifier","selectorItem","insertOrAppendSelector","_d3Dispatch","enumerable","_d3Scale","_d3Selection","_d3Shape","_d3Drag","_d3Brush","_d3Array","_d3Hierarchy","_d3TimeFormat","_d3Collection","_d3Ease","_d3Axis","DivergingStackedBarChartConfig","showBarValues","colorRange","categoryNames","middleValue","DivergingStackedBarChart","neutralIndex","originalValues","categories","catIndex","boxes","originalValue","_toConsumableArray","titleY","titleDY","rowClass","rowMerge","bars","barsEnter","barsM","textM","_heatmap","HeatmapTimeSeriesConfig","fillMissing","intervalStep","displayFormat","intervalToFormats","sortComparator","isString","localeCompare","formatter","Number","Intl","NumberFormat","HeatmapConfig","HeatmapTimeSeries","Heatmap","guessTimeFormat","initTimeFormatAndInterval","timeParser","getTimeParser","uniqueValues","prev","parseTime","nextTimeTickValue","missing","iteration","compareTimeValues","timeString","formatTime","updateGroups","parser","getTimeFormatter","isDate","rowIndex","prevRowValue","colIndex","guessInterval","intervalFormat","some","timeFormatter","noDataText","rotateLabels","decimalPlaces","sortLabels","overlap","notAvailableValue","noDataColor","reverseScale","gapLevel","maxGroupGapSize","gaps","gapsSize","gapsNumber","gapsLevel","computeGapSize","matrixes","setupValues","buildCells","groupByX","allTitlesWidth","groupByY","_allTitlesWidth","setupZScale","level","valueMap","minZ","maxZ","xVal","yVal","zValRaw","zVal","groupY","groupX","setupValuesBeforeGroupsSort","totalValuesCount","allValuesList","sortGroups","val","axisVal","rootGroup","axisGroupsConfig","currentGroup","groupKey","groupKeyIndex","groupingValue","axisConfig","allValuesCount","allValuesBeforeCount","gapsBefore","computeGapsSize","gapsBeforeSize","childrenList","childrenCount","childProp","gapsInside","gapsInsideSize","cellWidth","xGapsSize","computedCellWidth","yGapsSize","computedCellHeight","cellHeight","unshift","drawGroupsY","drawGroupsX","updateAxisTitles","offsetX","gapSize","formatValueX","elem","offsetY","formatValueY","parentGroup","groupClass","groupYClass","valuesBeforeCount","groupsEnter","titleGroupEnter","titleRectWidth","groupTitleRectHeight","groupsMerge","groupWidth","tileRects","setGroupMouseCallbacks","groupXClass","titleRectHeight","groupHeight","cellContainerClass","paddingX","paddingY","cellContainer","formatValueZ","formatLegendValue","setRotateLabels","HistogramConfig","frequency","Histogram","setupHistogram","yStackMax","stackedHistograms","histogramBins","drawHistogram","_d3Extensions","_scatterplotMatrix","_regression","_correlationMatrix","_heatmapTimeseries","_histogram","_barChart","_boxPlot","_divergingStackedBarChart","_lineChart","_d3SvgLegend","legendParent","legendClass","barWidth","gradientId","linearGradient","ticksNumber","ticksMerge","LineChartConfig","dotRadius","dotId","onDotHover","onDotHoverOut","lineId","onLineHover","onLineHoverOut","LineChart","updateLines","lineClass","linesContainerClass","layerEnter","linePathEnter","linePath","linePathMerge","linePathT","dotClass","dots","dotsMerge","dotsT","RegressionConfig","mainRegression","groupRegression","confidence","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","areaCurve","ScatterPlotConfig","Regression","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","groupVal","linearRegression","linearRegressionLine","extentX","linePoints","computeConfidence","meanX","xMySum","xSum","xPowSum","ySum","yPowSum","Sa2","Sy2","centerX","confidenceAreaPoints","moe","fitInPlot","updateRegressionLines","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionClass","confidenceAreaClass","regressionSelector","regressionEnter","regressionMerge","lineT","areaT","ScatterPlotMatrixConfig","minCellSize","maxCellSize","ScatterPlotMatrix","dot","subplots","variable","axisClass","xAxisSelector","yAxisSelector","noGuidesClass","xAxis","yAxis","yAxisMerge","cellMerge","drawBrush","frameClass","subplot","hiddenClass","brushCell","clearBrush","updateDots","$n","$p","integer","precision_string","_subt","SIGNIFICANT","_subu","$y","$x","$round","$u","$u2","$n1","$delta","_subtprob","round_to_precision","$a","$w","$z","$i","$max","_statisticsDistributions","su","errorFunction","zScore","standardError","tdistr","srcObj","assign","mergeDeep","_defineProperty","includeGroup","res","prop","item","stops","s4","textD3Obj","textString","textObj","getSubStringLength","placeTextWithEllipsis","scaleName","scaleFunctionName","axisFnName","sanitizeHeight","sanitizeWidth"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// https://d3js.org/d3-array/ v1.2.4 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nfunction pairs(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction cross(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction variance(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\nfunction deviation(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\nfunction histogram() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction quantile(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\nfunction max(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n\nfunction mean(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\nfunction median(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\nfunction merge(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\nfunction min(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\nfunction permute(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n\nfunction scan(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\nfunction shuffle(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n\nfunction sum(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-axis/ v1.0.12 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nfunction identity(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-brush/ v1.0.6 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-transition'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch,d3Drag,d3Interpolate,d3Transition) { 'use strict';\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction BrushEvent(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = d3Dispatch.dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      d3Selection.customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (d3Selection.event.touches) { if (d3Selection.event.changedTouches.length < d3Selection.event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = d3Selection.event.target.__data__.type,\n        mode = (d3Selection.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && d3Selection.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = d3Selection.mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (d3Selection.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = d3Selection.select(d3Selection.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      d3Drag.dragDisable(d3Selection.event.view);\n    }\n\n    nopropagation();\n    d3Transition.interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = d3Selection.mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (d3Selection.event.touches) {\n        if (d3Selection.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        d3Drag.dragEnable(d3Selection.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (d3Selection.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (d3Selection.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-collection/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nfunction nest() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map$$1, depth) {\n    if (++depth > keys.length) return map$$1;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map$$1.entries();\n    else array = [], map$$1.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map$$1, key, value) {\n  map$$1.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nfunction keys(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n\nfunction values(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n\nfunction entries(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n\nexports.nest = nest;\nexports.set = set;\nexports.map = map;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-color/ v1.2.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.lch = lch;\nexports.gray = gray;\nexports.cubehelix = cubehelix;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-dispatch/ v1.0.5 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-drag/ v1.2.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3));\n}(this, (function (exports,d3Selection,d3Dispatch) { 'use strict';\n\nfunction nopropagation() {\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction noevent() {\n  d3Selection.event.preventDefault();\n  d3Selection.event.stopImmediatePropagation();\n}\n\nfunction nodrag(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !d3Selection.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: d3Selection.event.x, y: d3Selection.event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), d3Selection.mouse, this, arguments);\n    if (!gesture) return;\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(d3Selection.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = d3Selection.event.clientX;\n    mousedowny = d3Selection.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = d3Selection.event.clientX - mousedownx, dy = d3Selection.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    d3Selection.select(d3Selection.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(d3Selection.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = d3Selection.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, d3Selection.touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = d3Selection.event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!d3Selection.customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      d3Selection.customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-ease/ v1.0.5 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-format/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nfunction formatDecimal(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-hierarchy/ v1.1.8 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n\nfunction node_eachBefore(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nvar slice = Array.prototype.slice;\n\nfunction shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$1() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-interpolate/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction array(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nfunction zoom(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n\nfunction hsl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue$$1((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHue = hue$1;\nexports.interpolateNumber = number;\nexports.interpolateObject = object;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-path/ v1.0.7 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-scale/ Version 1.0.7. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\nvar array = Array.prototype;\n\nvar map$1 = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range$$1) {\n  var index = d3Collection.map(),\n      domain = [],\n      unknown = implicit;\n\n  range$$1 = range$$1 == null ? [] : slice.call(range$$1);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range$$1[(i - 1) % range$$1.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), scale) : range$$1.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range$$1)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = d3Interpolate.interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice.call(_), interpolate$$1 = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[d3Array.bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format$$1) {\n  var scale = continuous(deinterpolateLinear, d3Interpolate.interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format$$1(\".%L\"),\n      formatSecond = format$$1(\":%S\"),\n      formatMinute = format$$1(\"%I:%M\"),\n      formatHour = format$$1(\"%I %p\"),\n      formatDay = format$$1(\"%a %d\"),\n      formatWeek = format$$1(\"%b %d\"),\n      formatMonth = format$$1(\"%B\"),\n      formatYear = format$$1(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format$$1(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format$$1));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar rainbow = d3Color.cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range$$1) {\n  var n = range$$1.length;\n  return function(t) {\n    return range$$1[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$1;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$1;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-selection/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nexports.create = create;\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-shape/ v1.2.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant(0),\n      y1 = y,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nvar slice = Array.prototype.slice;\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x,\n      y$$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal$$1(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal$$1.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal$$1;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom$$1(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom$$1.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom$$1;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none$1(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending$1(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none$1(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.line = line;\nexports.pie = pie;\nexports.areaRadial = areaRadial;\nexports.radialArea = areaRadial;\nexports.lineRadial = lineRadial$1;\nexports.radialLine = lineRadial$1;\nexports.pointRadial = pointRadial;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending$1;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-format'), require('d3-dispatch'), require('d3-scale'), require('d3-array')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-format', 'd3-dispatch', 'd3-scale', 'd3-array'], factory) :\n\t(factory((global.indexRollup = global.indexRollup || {}),global.d3Selection,global.d3Format,global.d3Dispatch,global.d3Scale,global.d3Array));\n}(this, (function (exports,d3Selection,d3Format,d3Dispatch,d3Scale,d3Array) { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar d3_identity = function d3_identity(d) {\n  return d;\n};\n\nvar d3_reverse = function d3_reverse(arr) {\n  var mirror = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1];\n  }\n  return mirror;\n};\n\n//Text wrapping code adapted from Mike Bostock\nvar d3_textWrapping = function d3_textWrapping(text, width) {\n  text.each(function () {\n    var text = d3Selection.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.2,\n        //ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")) || 0,\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"dy\", dy + \"em\");\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"dy\", lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n};\n\nvar d3_mergeLabels = function d3_mergeLabels() {\n  var gen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var labels = arguments[1];\n  var domain = arguments[2];\n  var range = arguments[3];\n  var labelDelimiter = arguments[4];\n\n  if ((typeof labels === \"undefined\" ? \"undefined\" : _typeof(labels)) === \"object\") {\n    if (labels.length === 0) return gen;\n\n    var i = labels.length;\n    for (; i < gen.length; i++) {\n      labels.push(gen[i]);\n    }\n    return labels;\n  } else if (typeof labels === \"function\") {\n    var customLabels = [];\n    var genLength = gen.length;\n    for (var _i = 0; _i < genLength; _i++) {\n      customLabels.push(labels({\n        i: _i,\n        genLength: genLength,\n        generatedLabels: gen,\n        domain: domain,\n        range: range,\n        labelDelimiter: labelDelimiter\n      }));\n    }\n    return customLabels;\n  }\n\n  return gen;\n};\n\nvar d3_linearLegend = function d3_linearLegend(scale, cells, labelFormat) {\n  var data = [];\n\n  if (cells.length > 1) {\n    data = cells;\n  } else {\n    var domain = scale.domain(),\n        increment = (domain[domain.length - 1] - domain[0]) / (cells - 1);\n    var i = 0;\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment);\n    }\n  }\n\n  var labels = data.map(labelFormat);\n  return {\n    data: data,\n    labels: labels,\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_quantLegend = function d3_quantLegend(scale, labelFormat, labelDelimiter) {\n  var labels = scale.range().map(function (d) {\n    var invert = scale.invertExtent(d);\n    return labelFormat(invert[0]) + \" \" + labelDelimiter + \" \" + labelFormat(invert[1]);\n  });\n\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  };\n};\n\nvar d3_ordinalLegend = function d3_ordinalLegend(scale) {\n  return {\n    data: scale.domain(),\n    labels: scale.domain(),\n    feature: function feature(d) {\n      return scale(d);\n    }\n  };\n};\n\nvar d3_cellOver = function d3_cellOver(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellover\", obj, d);\n};\n\nvar d3_cellOut = function d3_cellOut(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellout\", obj, d);\n};\n\nvar d3_cellClick = function d3_cellClick(cellDispatcher, d, obj) {\n  cellDispatcher.call(\"cellclick\", obj, d);\n};\n\nvar helper = {\n  d3_drawShapes: function d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path) {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth);\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius);\n    } else if (shape === \"line\") {\n      shapes.attr(\"x1\", 0).attr(\"x2\", shapeWidth).attr(\"y1\", 0).attr(\"y2\", 0);\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path);\n    }\n  },\n\n  d3_addText: function d3_addText(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\");\n    var text = svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").data(labels).text(d3_identity);\n\n    if (labelWidth) {\n      svg.selectAll(\"g.\" + classPrefix + \"cell text.\" + classPrefix + \"label\").call(d3_textWrapping, labelWidth);\n    }\n\n    return text;\n  },\n\n  d3_calcType: function d3_calcType(scale, ascending, cells, labels, labelFormat, labelDelimiter) {\n    var type = scale.invertExtent ? d3_quantLegend(scale, labelFormat, labelDelimiter) : scale.ticks ? d3_linearLegend(scale, cells, labelFormat) : d3_ordinalLegend(scale);\n\n    //for d3.scaleSequential that doesn't have a range function\n    var range = scale.range && scale.range() || scale.domain();\n    type.labels = d3_mergeLabels(type.labels, labels, scale.domain(), range, labelDelimiter);\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels);\n      type.data = d3_reverse(type.data);\n    }\n\n    return type;\n  },\n\n  d3_filterCells: function d3_filterCells(type, cellFilter) {\n    var filterCells = type.data.map(function (d, i) {\n      return { data: d, label: type.labels[i] };\n    }).filter(cellFilter);\n    var dataValues = filterCells.map(function (d) {\n      return d.data;\n    });\n    var labelValues = filterCells.map(function (d) {\n      return d.label;\n    });\n    type.data = type.data.filter(function (d) {\n      return dataValues.indexOf(d) !== -1;\n    });\n    type.labels = type.labels.filter(function (d) {\n      return labelValues.indexOf(d) !== -1;\n    });\n    return type;\n  },\n\n  d3_placement: function d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign) {\n    cell.attr(\"transform\", cellTrans);\n    text.attr(\"transform\", textTrans);\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign);\n    }\n  },\n\n  d3_addEvents: function d3_addEvents(cells, dispatcher) {\n    cells.on(\"mouseover.legend\", function (d) {\n      d3_cellOver(dispatcher, d, this);\n    }).on(\"mouseout.legend\", function (d) {\n      d3_cellOut(dispatcher, d, this);\n    }).on(\"click.legend\", function (d) {\n      d3_cellClick(dispatcher, d, this);\n    });\n  },\n\n  d3_title: function d3_title(svg, title, classPrefix, titleWidth) {\n    if (title !== \"\") {\n      var titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\");\n\n      titleText.data([title]).enter().append(\"text\").attr(\"class\", classPrefix + \"legendTitle\");\n\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title);\n\n      if (titleWidth) {\n        svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").call(d3_textWrapping, titleWidth);\n      }\n\n      var cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\");\n      var yOffset = svg.select(\".\" + classPrefix + \"legendTitle\").nodes().map(function (d) {\n        return d.getBBox().height;\n      })[0],\n          xOffset = -cellsSvg.nodes().map(function (d) {\n        return d.getBBox().x;\n      })[0];\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\");\n    }\n  },\n\n  d3_defaultLocale: {\n    format: d3Format.format,\n    formatPrefix: d3Format.formatPrefix\n  },\n\n  d3_defaultFormatSpecifier: \".01f\",\n\n  d3_defaultDelimiter: \"to\"\n};\n\nfunction color() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      useClass = false,\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\").data(type.data);\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, path);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature);\n      } else {\n        shapes.style(\"fill\", type.feature);\n      }\n    } else {\n      shapes.attr(\"class\", function (d) {\n        return classPrefix + \"swatch \" + type.feature(d);\n      });\n    }\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width + shapeSize[i].x + labelOffset) + \", \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate(\" + i * (shapeSize[i].width + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate(\" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n          \" + (shapeSize[i].height + shapeSize[i].y + labelOffset + 8) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\" || _ == \"path\" && typeof d === \"string\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapeHeight = function (_) {\n    if (!arguments.length) return shapeHeight;\n    shapeHeight = +_;\n    return legend;\n  };\n\n  legend.shapeRadius = function (_) {\n    if (!arguments.length) return shapeRadius;\n    shapeRadius = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.useClass = function (_) {\n    if (!arguments.length) return useClass;\n    if (_ === true || _ === false) {\n      useClass = _;\n    }\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.textWrap = function (_) {\n    if (!arguments.length) return textWrap;\n    textWrap = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction size() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"rect\",\n      shapeWidth = 15,\n      shapePadding = 2,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelOffset = 10,\n      labelAlign = \"middle\",\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      path = void 0,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    cell.exit().transition().style(\"opacity\", 0).remove();\n\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth);\n      shapes.attr(\"stroke-width\", type.feature);\n    } else {\n      helper.d3_drawShapes(shape, shapes, type.feature, type.feature, type.feature, path);\n    }\n\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    //sets placement\n\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d, i) {\n      var bbox = d.getBBox();\n      var stroke = scale(type.data[i]);\n\n      if (shape === \"line\" && orient === \"horizontal\") {\n        bbox.height = bbox.height + stroke;\n      } else if (shape === \"line\" && orient === \"vertical\") {\n        bbox.width = bbox.width;\n      }\n      return bbox;\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height + d.y;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width + d.x;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(d.height, shapeSize[i].height);\n        });\n        var y = shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0;\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n\n          return \"translate(0, \" + (y + height + i * shapePadding) + \")\";\n        };\n\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n          \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      (function () {\n        cellTrans = function cellTrans(d, i) {\n          var width = d3Array.sum(shapeSize.slice(0, i), function (d) {\n            return d.width;\n          });\n          var y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0;\n          return \"translate(\" + (width + i * shapePadding) + \", \" + y + \")\";\n        };\n\n        var offset = shape == \"line\" ? maxH / 2 : maxH;\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (offset + labelOffset) + \")\";\n        };\n      })();\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shape = function (_, d) {\n    if (!arguments.length) return shape;\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _;\n      path = d;\n    }\n    return legend;\n  };\n\n  legend.shapeWidth = function (_) {\n    if (!arguments.length) return shapeWidth;\n    shapeWidth = +_;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nfunction symbol() {\n  var scale = d3Scale.scaleLinear(),\n      shape = \"path\",\n      shapeWidth = 15,\n      shapeHeight = 15,\n      shapeRadius = 10,\n      shapePadding = 5,\n      cells = [5],\n      cellFilter = void 0,\n      labels = [],\n      classPrefix = \"\",\n      title = \"\",\n      locale = helper.d3_defaultLocale,\n      specifier = helper.d3_defaultFormatSpecifier,\n      labelAlign = \"middle\",\n      labelOffset = 10,\n      labelDelimiter = helper.d3_defaultDelimiter,\n      labelWrap = void 0,\n      orient = \"vertical\",\n      ascending = false,\n      titleWidth = void 0,\n      legendDispatcher = d3Dispatch.dispatch(\"cellover\", \"cellout\", \"cellclick\");\n\n  function legend(svg) {\n    var type = helper.d3_calcType(scale, ascending, cells, labels, locale.format(specifier), labelDelimiter),\n        legendG = svg.selectAll(\"g\").data([scale]);\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter);\n    }\n\n    legendG.enter().append(\"g\").attr(\"class\", classPrefix + \"legendCells\");\n\n    var cell = svg.select(\".\" + classPrefix + \"legendCells\").selectAll(\".\" + classPrefix + \"cell\").data(type.data);\n    var cellEnter = cell.enter().append(\"g\").attr(\"class\", classPrefix + \"cell\");\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\");\n\n    var shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\");\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher);\n\n    //remove old shapes\n    cell.exit().transition().style(\"opacity\", 0).remove();\n    shapes.exit().transition().style(\"opacity\", 0).remove();\n    shapes = shapes.merge(shapes);\n\n    helper.d3_drawShapes(shape, shapes, shapeHeight, shapeWidth, shapeRadius, type.feature);\n    var text = helper.d3_addText(svg, cellEnter, type.labels, classPrefix, labelWrap);\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell);\n\n    // sets placement\n    var textSize = text.nodes().map(function (d) {\n      return d.getBBox();\n    }),\n        shapeSize = shapes.nodes().map(function (d) {\n      return d.getBBox();\n    });\n\n    var maxH = d3Array.max(shapeSize, function (d) {\n      return d.height;\n    }),\n        maxW = d3Array.max(shapeSize, function (d) {\n      return d.width;\n    });\n\n    var cellTrans = void 0,\n        textTrans = void 0,\n        textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1;\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      (function () {\n        var cellSize = textSize.map(function (d, i) {\n          return Math.max(maxH, d.height);\n        });\n\n        cellTrans = function cellTrans(d, i) {\n          var height = d3Array.sum(cellSize.slice(0, i));\n          return \"translate(0, \" + (height + i * shapePadding) + \" )\";\n        };\n        textTrans = function textTrans(d, i) {\n          return \"translate( \" + (maxW + labelOffset) + \",\\n              \" + (shapeSize[i].y + shapeSize[i].height / 2 + 5) + \")\";\n        };\n      })();\n    } else if (orient === \"horizontal\") {\n      cellTrans = function cellTrans(d, i) {\n        return \"translate( \" + i * (maxW + shapePadding) + \",0)\";\n      };\n      textTrans = function textTrans(d, i) {\n        return \"translate( \" + (shapeSize[i].width * textAlign + shapeSize[i].x) + \",\\n              \" + (maxH + labelOffset) + \")\";\n      };\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign);\n    helper.d3_title(svg, title, classPrefix, titleWidth);\n    cell.transition().style(\"opacity\", 1);\n  }\n\n  legend.scale = function (_) {\n    if (!arguments.length) return scale;\n    scale = _;\n    return legend;\n  };\n\n  legend.cells = function (_) {\n    if (!arguments.length) return cells;\n    if (_.length > 1 || _ >= 2) {\n      cells = _;\n    }\n    return legend;\n  };\n\n  legend.cellFilter = function (_) {\n    if (!arguments.length) return cellFilter;\n    cellFilter = _;\n    return legend;\n  };\n\n  legend.shapePadding = function (_) {\n    if (!arguments.length) return shapePadding;\n    shapePadding = +_;\n    return legend;\n  };\n\n  legend.labels = function (_) {\n    if (!arguments.length) return labels;\n    labels = _;\n    return legend;\n  };\n\n  legend.labelAlign = function (_) {\n    if (!arguments.length) return labelAlign;\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _;\n    }\n    return legend;\n  };\n\n  legend.locale = function (_) {\n    if (!arguments.length) return locale;\n    locale = d3Format.formatLocale(_);\n    return legend;\n  };\n\n  legend.labelFormat = function (_) {\n    if (!arguments.length) return legend.locale().format(specifier);\n    specifier = d3Format.formatSpecifier(_);\n    return legend;\n  };\n\n  legend.labelOffset = function (_) {\n    if (!arguments.length) return labelOffset;\n    labelOffset = +_;\n    return legend;\n  };\n\n  legend.labelDelimiter = function (_) {\n    if (!arguments.length) return labelDelimiter;\n    labelDelimiter = _;\n    return legend;\n  };\n\n  legend.labelWrap = function (_) {\n    if (!arguments.length) return labelWrap;\n    labelWrap = _;\n    return legend;\n  };\n\n  legend.orient = function (_) {\n    if (!arguments.length) return orient;\n    _ = _.toLowerCase();\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _;\n    }\n    return legend;\n  };\n\n  legend.ascending = function (_) {\n    if (!arguments.length) return ascending;\n    ascending = !!_;\n    return legend;\n  };\n\n  legend.classPrefix = function (_) {\n    if (!arguments.length) return classPrefix;\n    classPrefix = _;\n    return legend;\n  };\n\n  legend.title = function (_) {\n    if (!arguments.length) return title;\n    title = _;\n    return legend;\n  };\n\n  legend.titleWidth = function (_) {\n    if (!arguments.length) return titleWidth;\n    titleWidth = _;\n    return legend;\n  };\n\n  legend.on = function () {\n    var value = legendDispatcher.on.apply(legendDispatcher, arguments);\n    return value === legendDispatcher ? legend : value;\n  };\n\n  return legend;\n}\n\nvar thresholdLabels = function thresholdLabels(_ref) {\n  var i = _ref.i,\n      genLength = _ref.genLength,\n      generatedLabels = _ref.generatedLabels,\n      labelDelimiter = _ref.labelDelimiter;\n\n  if (i === 0) {\n    var values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return \"Less than \" + values[1];\n  } else if (i === genLength - 1) {\n    var _values = generatedLabels[i].split(\" \" + labelDelimiter + \" \");\n    return _values[0] + \" or more\";\n  }\n  return generatedLabels[i];\n};\n\nvar legendHelpers = {\n  thresholdLabels: thresholdLabels\n};\n\nvar index = {\n  legendColor: color,\n  legendSize: size,\n  legendSymbol: symbol,\n  legendHelpers: legendHelpers\n};\n\nexports.legendColor = color;\nexports.legendSize = size;\nexports.legendSymbol = symbol;\nexports.legendHelpers = legendHelpers;\nexports['default'] = index;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=indexRollup.js.map\n","// https://d3js.org/d3-array/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-dispatch/ Version 1.0.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-format/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  }\n\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatLocale = formatLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-scale/ Version 1.0.3. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-collection'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format'), require('d3-color')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :\n  (factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';\n\n  var array = Array.prototype;\n\n  var map$1 = array.map;\n  var slice = array.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = d3Collection.map(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = d3Collection.map();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range[1] < range[0],\n          start = range[reverse - 0],\n          stop = range[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = d3Array.range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = d3Array.bisect(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate = d3Interpolate.interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate = _, rescale()) : interpolate;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = d3Array.tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n        return d3Format.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return d3Format.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = d3Array.tickStep(start, stop, n);\n\n      if (step) {\n        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear() {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile$1() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(d3Array.ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  var durationSecond = 1000;\n  var durationMinute = durationSecond * 60;\n  var durationHour = durationMinute * 60;\n  var durationDay = durationHour * 24;\n  var durationWeek = durationDay * 7;\n  var durationMonth = durationDay * 30;\n  var durationYear = durationDay * 365;\n  function date(t) {\n    return new Date(t);\n  }\n\n  function number$1(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond],\n      [second,  5,  5 * durationSecond],\n      [second, 15, 15 * durationSecond],\n      [second, 30, 30 * durationSecond],\n      [minute,  1,      durationMinute],\n      [minute,  5,  5 * durationMinute],\n      [minute, 15, 15 * durationMinute],\n      [minute, 30, 30 * durationMinute],\n      [  hour,  1,      durationHour  ],\n      [  hour,  3,  3 * durationHour  ],\n      [  hour,  6,  6 * durationHour  ],\n      [  hour, 12, 12 * durationHour  ],\n      [   day,  1,      durationDay   ],\n      [   day,  2,  2 * durationDay   ],\n      [  week,  1,      durationWeek  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = d3Array.tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$1.call(_, number$1)) : domain().map(date);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$1 = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\n  var warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\n  var rainbow = d3Color.cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  exports.scaleBand = band;\n  exports.scalePoint = point;\n  exports.scaleIdentity = identity;\n  exports.scaleLinear = linear;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile$1;\n  exports.scaleQuantize = quantize;\n  exports.scaleThreshold = threshold;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.interpolateCubehelixDefault = cubehelix$1;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.scaleSequential = sequential;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-selection/ Version 1.0.2. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function none() {}\n\n  function selector(selector) {\n    return selector == null ? none : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function defaultView(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  exports.creator = creator;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = defaultView;\n  exports.customEvent = customEvent;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));","// https://d3js.org/d3-time-format/ v2.1.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-time/ v1.0.10 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-timer/ v1.0.9 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-transition/ v1.1.3 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-timer'), require('d3-color'), require('d3-interpolate'), require('d3-selection'), require('d3-ease')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-timer', 'd3-color', 'd3-interpolate', 'd3-selection', 'd3-ease'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Dispatch,d3Timer,d3Color,d3Interpolate,d3Selection,d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule$$1 = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule$$1.state > STARTING && schedule$$1.state < ENDING;\n    schedule$$1.state = ENDED;\n    schedule$$1.timer.stop();\n    if (active) schedule$$1.on.call(\"interrupt\", node, node.__data__, schedule$$1.index, schedule$$1.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule$$1 = set(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule$$1 = set(this, id),\n        tween = schedule$$1.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule$$1.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule$$1 = set(this, id);\n    (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition$$1) {\n  if (transition$$1._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule$$1 = sit(this, id),\n        on = schedule$$1.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule$$1.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleRemove(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name),\n        value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = d3Selection.style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = d3Timer.now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule$$1,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule$$1 = schedules[i]).state > SCHEDULED && schedule$$1.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","'use strict';\n/* @flow */\n\n/**\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\n *\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\n * normal distribution with standard deviation sd is within x of the mean.\n *\n * This function returns a numerical approximation to the exact value.\n *\n * @param {number} x input\n * @return {number} error estimation\n * @example\n * errorFunction(1).toFixed(2); // => '0.84'\n */\nfunction errorFunction(x/*: number */)/*: number */ {\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) -\n        1.26551223 +\n        1.00002368 * t +\n        0.37409196 * Math.pow(t, 2) +\n        0.09678418 * Math.pow(t, 3) -\n        0.18628806 * Math.pow(t, 4) +\n        0.27886807 * Math.pow(t, 5) -\n        1.13520398 * Math.pow(t, 6) +\n        1.48851587 * Math.pow(t, 7) -\n        0.82215223 * Math.pow(t, 8) +\n        0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n","'use strict';\n/* @flow */\n\n/**\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\n * is a simple way to find a fitted line\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\n * using the least sum of squares.\n *\n * @param {Array<Array<number>>} data an array of two-element of arrays,\n * like `[[0, 1], [2, 3]]`\n * @returns {Object} object containing slope and intersect of regression line\n * @example\n * linearRegression([[0, 0], [1, 1]]); // => { m: 1, b: 0 }\n */\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0, sumY = 0,\n            sumXX = 0, sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\n            ((dataLength * sumXX) - (sumX * sumX));\n\n        // `b` is the y-intercept of the line.\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\n\nmodule.exports = linearRegression;\n","'use strict';\n/* @flow */\n\n/**\n * Given the output of `linearRegression`: an object\n * with `m` and `b` values indicating slope and intercept,\n * respectively, generate a line function that translates\n * x values into y values.\n *\n * @param {Object} mb object with `m` and `b` members, representing\n * slope and intersect of desired line\n * @returns {Function} method that computes y-value at any given\n * x-value on the line.\n * @example\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\n * l(0) // = 0\n * l(2) // = 2\n * linearRegressionLine({ b: 0, m: 1 })(1); // => 1\n * linearRegressionLine({ b: 1, m: 1 })(1); // => 2\n */\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function(x) {\n        return mb.b + (mb.m * x);\n    };\n}\n\nmodule.exports = linearRegressionLine;\n","'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\n * The mean, _also known as average_,\n * is the sum of all values over the number of values.\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\n * a method of finding a typical or central value of a set of numbers.\n *\n * This runs on `O(n)`, linear time in respect to the array\n *\n * @param {Array<number>} x sample of one or more data points\n * @throws {Error} if the the length of x is less than one\n * @returns {number} mean\n * @example\n * mean([0, 10]); // => 5\n */\nfunction mean(x /*: Array<number> */)/*:number*/ {\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        throw new Error('mean requires at least one data point');\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n","'use strict';\n/* @flow */\n\nvar quantileSorted = require('./quantile_sorted');\nvar quickselect = require('./quickselect');\n\n/**\n * The [quantile](https://en.wikipedia.org/wiki/Quantile):\n * this is a population quantile, since we assume to know the entire\n * dataset in this library. This is an implementation of the\n * [Quantiles of a Population](http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population)\n * algorithm from wikipedia.\n *\n * Sample is a one-dimensional array of numbers,\n * and p is either a decimal number from 0 to 1 or an array of decimal\n * numbers from 0 to 1.\n * In terms of a k/q quantile, p = k/q - it's just dealing with fractions or dealing\n * with decimal values.\n * When p is an array, the result of the function is also an array containing the appropriate\n * quantiles in input order\n *\n * @param {Array<number>} x sample of one or more numbers\n * @param {number} p the desired quantile, as a number between 0 and 1\n * @returns {number} quantile\n * @example\n * quantile([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantile(x /*: Array<number> */, p /*: Array<number> | number */) {\n    var copy = x.slice();\n\n    if (Array.isArray(p)) {\n        // rearrange elements so that each element corresponding to a requested\n        // quantile is on a place it would be if the array was fully sorted\n        multiQuantileSelect(copy, p);\n        // Initialize the result array\n        var results = [];\n        // For each requested quantile\n        for (var i = 0; i < p.length; i++) {\n            results[i] = quantileSorted(copy, p[i]);\n        }\n        return results;\n    } else {\n        var idx = quantileIndex(copy.length, p);\n        quantileSelect(copy, idx, 0, copy.length - 1);\n        return quantileSorted(copy, p);\n    }\n}\n\nfunction quantileSelect(arr, k, left, right) {\n    if (k % 1 === 0) {\n        quickselect(arr, k, left, right);\n    } else {\n        k = Math.floor(k);\n        quickselect(arr, k, left, right);\n        quickselect(arr, k + 1, k + 1, right);\n    }\n}\n\nfunction multiQuantileSelect(arr, p) {\n    var indices = [0];\n    for (var i = 0; i < p.length; i++) {\n        indices.push(quantileIndex(arr.length, p[i]));\n    }\n    indices.push(arr.length - 1);\n    indices.sort(compare);\n\n    var stack = [0, indices.length - 1];\n\n    while (stack.length) {\n        var r = Math.ceil(stack.pop());\n        var l = Math.floor(stack.pop());\n        if (r - l <= 1) continue;\n\n        var m = Math.floor((l + r) / 2);\n        quantileSelect(arr, indices[m], indices[l], indices[r]);\n\n        stack.push(l, m, m, r);\n    }\n}\n\nfunction compare(a, b) {\n    return a - b;\n}\n\nfunction quantileIndex(len /*: number */, p /*: number */)/*:number*/ {\n    var idx = len * p;\n    if (p === 1) {\n        // If p is 1, directly return the last index\n        return len - 1;\n    } else if (p === 0) {\n        // If p is 0, directly return the first index\n        return 0;\n    } else if (idx % 1 !== 0) {\n        // If index is not integer, return the next index in array\n        return Math.ceil(idx) - 1;\n    } else if (len % 2 === 0) {\n        // If the list has even-length, we'll return the middle of two indices\n        // around quantile to indicate that we need an average value of the two\n        return idx - 0.5;\n    } else {\n        // Finally, in the simple case of an integer index\n        // with an odd-length list, return the index\n        return idx;\n    }\n}\n\nmodule.exports = quantile;\n","'use strict';\n/* @flow */\n\n/**\n * This is the internal implementation of quantiles: when you know\n * that the order is sorted, you don't need to re-sort it, and the computations\n * are faster.\n *\n * @param {Array<number>} x sample of one or more data points\n * @param {number} p desired quantile: a number between 0 to 1, inclusive\n * @returns {number} quantile value\n * @throws {Error} if p ix outside of the range from 0 to 1\n * @throws {Error} if x is empty\n * @example\n * quantileSorted([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20], 0.5); // => 9\n */\nfunction quantileSorted(x /*: Array<number> */, p /*: number */)/*:number*/ {\n    var idx = x.length * p;\n    if (x.length === 0) {\n        throw new Error('quantile requires at least one data point.');\n    } else if (p < 0 || p > 1) {\n        throw new Error('quantiles must be between 0 and 1');\n    } else if (p === 1) {\n        // If p is 1, directly return the last element\n        return x[x.length - 1];\n    } else if (p === 0) {\n        // If p is 0, directly return the first element\n        return x[0];\n    } else if (idx % 1 !== 0) {\n        // If p is not integer, return the next element in array\n        return x[Math.ceil(idx) - 1];\n    } else if (x.length % 2 === 0) {\n        // If the list has even-length, we'll take the average of this number\n        // and the next value, if there is one\n        return (x[idx - 1] + x[idx]) / 2;\n    } else {\n        // Finally, in the simple case of an integer value\n        // with an odd-length list, return the x value at the index.\n        return x[idx];\n    }\n}\n\nmodule.exports = quantileSorted;\n","'use strict';\n/* @flow */\n\nmodule.exports = quickselect;\n\n/**\n * Rearrange items in `arr` so that all items in `[left, k]` range are the smallest.\n * The `k`-th element will have the `(k - left + 1)`-th smallest value in `[left, right]`.\n *\n * Implements Floyd-Rivest selection algorithm https://en.wikipedia.org/wiki/Floyd-Rivest_algorithm\n *\n * @private\n * @param {Array<number>} arr input array\n * @param {number} k pivot index\n * @param {number} left left index\n * @param {number} right right index\n * @returns {undefined}\n * @example\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * // = [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n */\nfunction quickselect(arr /*: Array<number> */, k /*: number */, left /*: number */, right /*: number */) {\n    left = left || 0;\n    right = right || (arr.length - 1);\n\n    while (right > left) {\n        // 600 and 0.5 are arbitrary constants chosen in the original paper to minimize execution time\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n);\n            if (m - n / 2 < 0) sd *= -1;\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (arr[right] > t) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (arr[i] < t) i++;\n            while (arr[j] > t) j--;\n        }\n\n        if (arr[left] === t) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\n * a measure of how correlated two datasets are, between -1 and 1\n *\n * @param {Array<number>} x first input\n * @param {Array<number>} y second input\n * @returns {number} sample correlation\n * @example\n * sampleCorrelation([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5, 60]).toFixed(2);\n * // => '0.69'\n */\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\n * how much do the two datasets move together?\n * x and y are two datasets, represented as arrays of numbers.\n *\n * @param {Array<number>} x a sample of two or more data points\n * @param {Array<number>} y a sample of two or more data points\n * @throws {Error} if x and y do not have equal lengths\n * @throws {Error} if x or y have length of one or less\n * @returns {number} sample covariance\n * @example\n * sampleCovariance([1, 2, 3, 4, 5, 6], [6, 5, 4, 3, 2, 1]); // => -3.5\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length !== y.length) {\n        throw new Error('sampleCovariance requires samples with equal lengths');\n    }\n\n    if (x.length < 2) {\n        throw new Error('sampleCovariance requires at least two data points in each sample');\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n","'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\n * The [sample standard deviation](http://en.wikipedia.org/wiki/Standard_deviation#Sample_standard_deviation)\n * is the square root of the sample variance.\n *\n * @param {Array<number>} x input array\n * @returns {number} sample standard deviation\n * @example\n * sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]).toFixed(2);\n * // => '2.14'\n */\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\n    // The standard deviation of no numbers is null\n    var sampleVarianceX = sampleVariance(x);\n    return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\n * is the sum of squared deviations from the mean. The sample variance\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\n * instead of dividing the sum of squared deviations by the length of the input,\n * it is divided by the length minus one. This corrects the bias in estimating\n * a value from a set that you don't know if full.\n *\n * References:\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\n *\n * @param {Array<number>} x a sample of two or more data points\n * @throws {Error} if the length of x is less than 2\n * @return {number} sample variance\n * @example\n * sampleVariance([1, 2, 3, 4, 5]); // => 2.5\n */\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length < 2) {\n        throw new Error('sampleVariance requires at least two data points');\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n","'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\n * is the square root of the variance. This is also known as the population\n * standard deviation. It's useful for measuring the amount\n * of variation or dispersion in a set of values.\n *\n * Standard deviation is only appropriate for full-population knowledge: for\n * samples of a population, {@link sampleStandardDeviation} is\n * more appropriate.\n *\n * @param {Array<number>} x input\n * @returns {number} standard deviation\n * @example\n * variance([2, 4, 4, 4, 5, 5, 7, 9]); // => 4\n * standardDeviation([2, 4, 4, 4, 5, 5, 7, 9]); // => 2\n */\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\n    if (x.length === 1) {\n        return 0;\n    }\n    var v = variance(x);\n    return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n","'use strict';\n/* @flow */\n\n/**\n * Our default sum is the [Kahan-Babuska algorithm](https://pdfs.semanticscholar.org/1760/7d467cda1d0277ad272deb2113533131dc09.pdf).\n * This method is an improvement over the classical\n * [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm).\n * It aims at computing the sum of a list of numbers while correcting for\n * floating-point errors. Traditionally, sums are calculated as many\n * successive additions, each one with its own floating-point roundoff. These\n * losses in precision add up as the number of numbers increases. This alternative\n * algorithm is more accurate than the simple way of calculating sums by simple\n * addition.\n *\n * This runs on `O(n)`, linear time in respect to the array.\n *\n * @param {Array<number>} x input\n * @return {number} sum of all input numbers\n * @example\n * sum([1, 2, 3]); // => 6\n */\nfunction sum(x/*: Array<number> */)/*: number */ {\n\n    // If the array is empty, we needn't bother computing its sum\n    if (x.length === 0) {\n        return 0;\n    }\n\n    // Initializing the sum as the first number in the array\n    var sum = x[0];\n\n    // Keeping track of the floating-point error correction\n    var correction = 0;\n\n    var transition;\n\n    for (var i = 1; i < x.length; i++) {\n        transition = sum + x[i];\n\n        // Here we need to update the correction in a different fashion\n        // if the new absolute value is greater than the absolute sum\n        if (Math.abs(sum) >= Math.abs(x[i])) {\n            correction += ((sum - transition) + x[i]);\n        }\n        else {\n            correction += ((x[i] - transition) + sum);\n        }\n\n        sum = transition;\n    }\n\n    // Returning the corrected sum\n    return sum + correction;\n}\n\nmodule.exports = sum;\n","'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\n * The sum of deviations to the Nth power.\n * When n=2 it's the sum of squared deviations.\n * When n=3 it's the sum of cubed deviations.\n *\n * @param {Array<number>} x\n * @param {number} n power\n * @returns {number} sum of nth power deviations\n * @example\n * var input = [1, 2, 3];\n * // since the variance of a set is the mean squared\n * // deviations, we can calculate that with sumNthPowerDeviations:\n * var variance = sumNthPowerDeviations(input) / input.length;\n */\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\n    var meanValue = mean(x),\n        sum = 0,\n        tempValue,\n        i;\n\n    // This is an optimization: when n is 2 (we're computing a number squared),\n    // multiplying the number by itself is significantly faster than using\n    // the Math.pow method.\n    if (n === 2) {\n        for (i = 0; i < x.length; i++) {\n            tempValue = x[i] - meanValue;\n            sum += tempValue * tempValue;\n        }\n    } else {\n        for (i = 0; i < x.length; i++) {\n            sum += Math.pow(x[i] - meanValue, n);\n        }\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n","'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\n * The [variance](http://en.wikipedia.org/wiki/Variance)\n * is the sum of squared deviations from the mean.\n *\n * This is an implementation of variance, not sample variance:\n * see the `sampleVariance` method if you want a sample measure.\n *\n * @param {Array<number>} x a population of one or more data points\n * @returns {number} variance: a value greater than or equal to zero.\n * zero indicates that all values are identical.\n * @throws {Error} if x's length is 0\n * @example\n * variance([1, 2, 3, 4, 5, 6]); // => 2.9166666666666665\n */\nfunction variance(x/*: Array<number> */)/*:number*/ {\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        throw new Error('variance requires at least one data point');\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n","'use strict';\n/* @flow */\n\n/**\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\n *\n * The standard score is the number of standard deviations an observation\n * or datum is above or below the mean. Thus, a positive standard score\n * represents a datum above the mean, while a negative standard score\n * represents a datum below the mean. It is a dimensionless quantity\n * obtained by subtracting the population mean from an individual raw\n * score and then dividing the difference by the population standard\n * deviation.\n *\n * The z-score is only defined if one knows the population parameters;\n * if one only has a sample set, then the analogous computation with\n * sample mean and sample standard deviation yields the\n * Student's t-statistic.\n *\n * @param {number} x\n * @param {number} mean\n * @param {number} standardDeviation\n * @return {number} z score\n * @example\n * zScore(78, 80, 5); // => -0.4\n */\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\n    return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class BarChartConfig extends ChartWithColorGroupsConfig {\n\n    svgClass = this.cssClassPrefix + 'bar-chart';\n    showLegend = true;\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        scale: \"ordinal\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y = {// Y axis config\n        key: 1,\n        value: (d, key) => Utils.isNumber(d) ? d : d[key], // x value accessor\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    transition = true;\n\n    constructor(custom) {\n        super();\n        var config = this;\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BarChart extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BarChartConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new BarChartConfig(config));\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.computePlotSize();\n        this.setupY();\n        this.setupX();\n        this.setupGroupStacks();\n        this.setupYDomain();\n\n        return this;\n    }\n\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = d3.scaleBand().range([0, plot.width]).paddingInner(.08);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if (conf.ticks) {\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else if (!this.config.series) {\n            domain = d3.map(data, x.value).keys();\n        } else {\n            domain = d3.map(data[0].values, x.value).keys();\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value(d, conf.key);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var domain;\n        var yStackMax = d3.max(plot.layers, layer => d3.max(layer.points, d => d.y0 + d.y));\n\n\n        // var min = d3.min(data, s=>d3.min(s.values, plot.y.value));\n        var max = yStackMax;\n        domain = [0, max];\n\n        plot.y.scale.domain(domain);\n        // console.log(' plot.y.scale.domain', plot.y.scale.domain());\n    }\n\n    setupGroupStacks() {\n        var self = this;\n        this.groupData();\n\n        var y0s = [];\n        this.plot.groupedData.forEach(s=> {\n            s.points = s.values.map(v=>self.mapToPoint(v));\n            s.points.forEach((p, i)=> {\n                var prevY0 = y0s[i];\n                if(!prevY0) prevY0 = 0;\n                p.y0 = prevY0;\n                y0s[i] = p.y+prevY0;\n            });\n\n        });\n        this.plot.layers = this.plot.groupedData;\n\n    }\n\n    mapToPoint(value) {\n        var plot = this.plot;\n        return {\n            x: plot.x.value(value),\n            y: parseFloat(plot.y.value(value))\n        }\n    }\n\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.margin.bottom) + \")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawBars() {\n        var self = this;\n        var plot = self.plot;\n\n        // console.log('layers', plot.layers);\n\n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\" + layerClass)\n            .data(plot.layers);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n        var bar = layerMerge.selectAll(\".\" + barClass)\n            .data(d => d.points);\n\n        var barEnter = bar.enter().append(\"g\")\n            .attr(\"class\", barClass);\n        var barRectEnter = barEnter.append(\"rect\")\n            .attr(\"x\", 1);\n        var barMerge = barEnter.merge(bar);\n\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT = layerMerge.transition();\n        }\n\n        barEnter.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0)) + \")\";\n        });\n        var yDomain = plot.y.scale.domain();\n        barT.attr(\"transform\", function (d) {\n            return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 + d.y)) + \")\";\n        });\n        barRectEnter\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", 0);\n        barRectT\n            .attr(\"width\", plot.x.scale.bandwidth())\n            .attr(\"height\", d => plot.y.scale(d.y0) - plot.y.scale(d.y0 + d.y - yDomain[0]));\n\n\n        if (this.plot.seriesColor) {\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData) {\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        return this;\n    };\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotBaseConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showTooltip = true;\n    x = {// X axis config\n        title: '', // axis label\n        value: s => s.key, // x value accessor\n        guides: false, //show axis guides\n        orient: 'bottom',\n\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d, // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    Q1 = d => d.values.Q1;\n    Q2 = d => d.values.Q2;\n    Q3 = d => d.values.Q3;\n    Wl = d => d.values.whiskerLow;\n    Wh = d => d.values.whiskerHigh;\n    outliers= d=> d.values.outliers;\n    outlierValue = (d,i)=> d;\n    outlierLabel = (d,i)=> d;\n    minBoxWidth = 35;\n    maxBoxWidth = 100;\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class BoxPlotBase extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotBaseConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotBaseConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = data.map(x.value);\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var values = [], yMin, yMax;\n        data.forEach(function (d, i) {\n            let q1 = c.Q1(d), \n                q3 = c.Q3(d), \n                wl = c.Wl(d), \n                wh = c.Wh(d),\n                outliers = c.outliers(d);\n            \n            if (outliers) {\n                outliers.forEach(function (o, i) {\n                    values.push(c.outlierValue(o, i));\n                });\n            }\n            if (wl) { values.push(wl) }\n            if (q1) { values.push(q1) }\n            if (q3) { values.push(q3) }\n            if (wh) { values.push(wh) }\n        });\n        yMin = d3.min(values);\n        yMax = d3.max(values);\n        var margin = (yMax-yMin)* this.config.y.domainMargin;\n        yMin-=margin;\n        yMax+=margin;\n        var domain = [ yMin, yMax ] ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.label);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBoxPlots() {\n        var self = this,\n            plot = self.plot,\n            config = self.config,\n            boxplotClass = self.prefixClass(\"boxplot-item\")\n        \n        var boxplots = self.svgG.selectAll('.'+boxplotClass).data(plot.data);\n        var boxplotEnter = boxplots.enter()\n            .append('g')\n            .attr('class', boxplotClass)\n            .style('stroke-opacity', 1e-6)\n            .style('fill-opacity', 1e-6);\n\n        var boxplotsMerge = boxplotEnter.merge(boxplots);\n        var duration = 1000;\n        var boxplotsT = boxplotsMerge;\n        if (self.transitionEnabled()) {\n            boxplotsT = boxplotsMerge.transition();\n            boxplotsT.delay(function(d,i) { return i * duration / plot.data.length })\n        }\n\n        boxplotsT\n            .style('fill', plot.color)\n            .style('stroke-opacity', 1)\n            .style('fill-opacity', 0.75)\n            .attr('transform', (d,i) =>'translate(' + (plot.x.map(d,i) + plot.x.scale.bandwidth() * 0.05) + ', 0)')\n        boxplots.exit().remove();\n\n        var boxWidth = !config.maxBoxWidth ? plot.x.scale.bandwidth() * 0.9 : Math.min(config.maxBoxWidth, Math.max(config.minBoxWidth, plot.x.scale.bandwidth() * 0.9));\n        var boxLeft  = plot.x.scale.bandwidth() * 0.45 - boxWidth/2;\n        var boxRight = plot.x.scale.bandwidth() * 0.45 + boxWidth/2;\n\n        var boxClass = self.prefixClass(\"box\");\n\n        boxplotEnter.append('rect')\n            .attr('class', boxClass)\n            // tooltip events\n            .on('mouseover', function(d,i) {\n                d3.select(this).classed('hover', true);\n                var html = 'Q3: '+config.Q3(d,i)+'<br/>Q2: '+config.Q2(d,i)+'<br/>Q1: '+config.Q1(d,i);\n                self.showTooltip(html)\n            })\n            .on('mouseout', function(d,i) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var boxRects = boxplotsMerge.select('rect.'+boxClass);\n\n        var boxRectsT = boxRects;\n        if (self.config.transition) {\n            boxRectsT = boxRects.transition();\n        }\n\n        boxRectsT.attr('y', (d,i) => plot.y.scale(config.Q3(d)))\n            .attr('width', boxWidth)\n            .attr('x', boxLeft )\n            .attr('height', (d,i) => Math.abs(plot.y.scale(config.Q3(d)) - plot.y.scale(config.Q1(d))) || 1)\n            .style('stroke', plot.color);\n\n        // median line\n        var medianClass = self.prefixClass('median');\n        boxplotEnter.append('line').attr('class', medianClass);\n\n        var medianLine = boxplotsMerge.select('line.'+medianClass);\n        if (self.config.transition) {\n            medianLine = medianLine.transition();\n        }\n        medianLine\n            .attr('x1', boxLeft)\n            .attr('y1', (d,i) => plot.y.scale(config.Q2(d)))\n            .attr('x2', boxRight)\n            .attr('y2', (d,i) => plot.y.scale(config.Q2(d)));\n\n\n        //whiskers\n\n        var whiskerClass= self.prefixClass(\"whisker\"),\n            tickClass = self.prefixClass(\"boxplot-tick\");\n\n        var whiskers = [{key: 'low', value: config.Wl}, {key: 'high', value: config.Wh}];\n\n        boxplotEnter.each(function(d,i) {\n            var box = d3.select(this);\n\n            whiskers.forEach(f=> {\n                if (f.value(d)) {\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', whiskerClass+' ' + boxplotClass+'-'+f.key);\n                    box.append('line')\n                        .style('stroke', plot.color(d,i))\n                        .attr('class', tickClass+' ' + boxplotClass+'-'+f.key);\n                }\n            });\n        });\n\n        whiskers.forEach(f => {\n            var endpoint = (f.key === 'low') ? config.Q1 : config.Q3;\n\n            var whisker = boxplotsMerge.select('.'+whiskerClass+'.'+boxplotClass+'-'+f.key);\n            var tick = boxplotsMerge.select('.'+tickClass+'.'+boxplotClass+'-'+f.key);\n            if (self.config.transition) {\n                whisker = whisker.transition();\n                tick=tick.transition();\n            }\n            whisker\n                .attr('x1', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', plot.x.scale.bandwidth() * 0.45 )\n                .attr('y2', (d,i) => plot.y.scale(endpoint(d)));\n\n            tick\n                .attr('x1', boxLeft )\n                .attr('y1', (d,i) => plot.y.scale(f.value(d)))\n                .attr('x2', boxRight )\n                .attr('y2', (d,i) => plot.y.scale(f.value(d)));\n\n            boxplotEnter.selectAll('.'+boxplotClass+'-'+f.key)\n                .on('mouseover', function(d,i,j) {\n                    d3.select(this).classed('hover', true);\n                    self.showTooltip(f.value(d))\n                })\n                .on('mouseout', function(d,i,j) {\n                    d3.select(this).classed('hover', false);\n                    self.hideTooltip();\n                })\n        });\n\n\n        // outliers\n        var outlierClass = self.prefixClass(\"outlier\");\n        var outliers = boxplotsMerge.selectAll('.'+outlierClass).data((d,i) => config.outliers(d,i) || []);\n\n        var outlierEnterCircle = outliers.enter().append('circle')\n            .attr('class', outlierClass)\n            .style('z-index', 9000);\n\n        outlierEnterCircle\n            .on('mouseover', function (d, i, j) {\n                d3.select(this).classed('hover', true);\n                self.showTooltip(config.outlierLabel(d,i))\n            })\n            .on('mouseout', function (d, i, j) {\n                d3.select(this).classed('hover', false);\n                self.hideTooltip();\n            });\n\n        var outliersMerge = outlierEnterCircle.merge(outliers);\n        var outliersT = outliersMerge;\n        if (self.config.transition) {\n            outliersT = outliersMerge.transition();\n        }\n        outliersT\n            .attr('cx', plot.x.scale.bandwidth() * 0.45)\n            .attr('cy', (d,i) => plot.y.scale(config.outlierValue(d,i)))\n            .attr('r', '3');\n        outliers.exit().remove();\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBoxPlots();\n        return this;\n    };\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.x.value(d));\n        }\n    }\n}\n","import {BoxPlotBase, BoxPlotBaseConfig} from \"./box-plot-base\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class BoxPlotConfig extends BoxPlotBaseConfig{\n\n    svgClass = this.cssClassPrefix + 'box-plot';\n    showLegend = true;\n    showTooltip = true;\n    y = {// Y axis config\n        key: undefined,\n        value: function(d) { return this.y.key===undefined ? d : d[this.y.key]} , // y value accessor\n        scale: \"linear\",\n        orient: 'left',\n        domainMargin: 0.1,\n        guides: true //show axis guides\n    };\n    series = false;\n    groups={\n        key: undefined,\n        value: function(d) { return this.groups.key===undefined ? '' : d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    tukey= false;\n    \n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class BoxPlot extends BoxPlotBase{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new BoxPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new BoxPlotConfig(config));\n    }\n\n    getDataToPlot(){\n        var self = this;\n        var conf = self.config;\n        self.plot.groupingEnabled = this.isGroupingEnabled();\n\n        var data = this.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.label || s.key || '',\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupValue = d => conf.groups.value.call(conf, d);\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n\n                var getDisplayValue= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getDisplayValue = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getDisplayValue = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                self.plot.groupedData.forEach(g => {\n                    g.key = getDisplayValue(g.key);\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n\n        self.plot.groupedData.forEach(s=>{\n            if(!Array.isArray(s.values)){\n                return;\n            }\n\n            var values = s.values.map(d=>parseFloat(self.config.y.value.call(self.config, d)));\n            s.values.Q1 = StatisticsUtils.quantile(values, 0.25);\n            s.values.Q2 = StatisticsUtils.quantile(values, 0.5);\n            s.values.Q3 = StatisticsUtils.quantile(values, 0.75);\n            var IQR =  s.values.Q3 - s.values.Q1;\n\n            if(!self.config.tukey){\n                s.values.whiskerLow = d3.min(values);\n                s.values.whiskerHigh = d3.max(values);\n            }else{\n                s.values.whiskerLow = s.values.Q1 - 1.5*IQR;\n                s.values.whiskerHigh = s.values.Q3 + 1.5*IQR;\n                s.values.outliers = values.filter(d=> d<s.values.whiskerLow || d>s.values.whiskerHigh);\n            }\n        });\n\n        return self.plot.groupedData;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ChartWithColorGroupsConfig extends ChartConfig{\n\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    groups={\n        key: 2,\n        value: function(d) { return d[this.groups.key]}  , // grouping value accessor,\n        label: \"\",\n        displayValue: undefined // optional function returning display value (series label) for given group value, or object/array mapping value to display value\n    };\n    series = false;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ChartWithColorGroups extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ChartWithColorGroupsConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ChartWithColorGroupsConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n       \n        this.plot.showLegend = conf.showLegend;\n        this.setupGroups();\n        this.plot.data = this.getDataToPlot();\n        this.groupData();\n\n        if(this.plot.showLegend){\n            var scale = this.plot.colorCategory;\n            if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n                this.plot.showLegend = false;\n            }else{\n                this.plot.margin.right = conf.margin.right + conf.legend.width+conf.legend.margin*2;\n            }\n        }\n        return this;\n    }\n\n    isGroupingEnabled(){\n        return this.config.series || !!(this.config.groups && this.config.groups.value);\n    }\n\n    computeGroupColorDomain(){\n        var map = d3.set(this.data, d => this.plot.groupValue(d));\n        return Object.getOwnPropertyNames(map).map(d=>map[d]);\n    }\n\n    setupGroups() {\n        var self=this;\n        var conf = this.config;\n\n        this.plot.groupingEnabled = this.isGroupingEnabled();\n        var domain = [];\n        if(this.plot.groupingEnabled){\n            self.plot.groupToLabel = {};\n            if(this.config.series){\n                this.plot.groupValue = s => s.key;\n                domain = this.computeGroupColorDomain();\n\n                this.data.forEach(s=>{\n                    self.plot.groupToLabel[s.key] = s.label||s.key;\n                })\n            }else{\n                this.plot.groupValue = d => conf.groups.value.call(conf, d);\n                domain = this.computeGroupColorDomain();\n                var getLabel= k => k;\n                if(self.config.groups.displayValue){\n                    if(Utils.isFunction(self.config.groups.displayValue)){\n                        getLabel = k=>self.config.groups.displayValue(k) || k;\n                    }else if(Utils.isObject(self.config.groups.displayValue)){\n                        getLabel = k => self.config.groups.displayValue[k] || k;\n                    }\n                }\n                domain.forEach(k=>{\n                    self.plot.groupToLabel[k] = getLabel(k);\n                })\n            }\n\n        }else{\n            this.plot.groupValue = d => null;\n        }\n        this.plot.groupColorDomain = domain;\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n        var colorValue = conf.color;\n\n        if (colorValue){\n            if(typeof colorValue === 'string' || colorValue instanceof String){\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n            }else{\n                this.plot.color = colorValue;\n                this.plot.seriesColor = this.plot.color;\n                var range = domain.map(v=>this.plot.seriesColor({key: v}));\n                this.plot.colorCategory = d3.scaleOrdinal(range);\n                this.plot.colorCategory.domain(domain);\n\n            }\n\n        }else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            self.plot.colorCategory.domain(domain);\n\n            this.plot.seriesColor = s =>  self.plot.colorCategory(s.key);\n            this.plot.color = d =>  self.plot.colorCategory(this.plot.groupValue(d));\n            \n        }else{\n            this.plot.color = this.plot.seriesColor = s=> 'black'\n        }\n\n    }\n\n    groupData(){\n        var self=this;\n        var data = this.plot.data;\n        if(!self.plot.groupingEnabled ){\n            self.plot.groupedData =  [{\n                key: null,\n                label: '',\n                values: data\n            }];\n            self.plot.dataLength = data.length;\n        }else{\n\n            if(self.config.series){\n                self.plot.groupedData =  data.map(s=>{\n                    return{\n                        key: s.key,\n                        label: s.label,\n                        values: s.values\n                    }\n                });\n            }else{\n                self.plot.groupedData = d3.nest().key(this.plot.groupValue).entries(data);\n                self.plot.groupedData.forEach(g => {\n                    g.label = self.plot.groupToLabel[g.key];\n                });\n            }\n\n            self.plot.dataLength = d3.sum(this.plot.groupedData, s=>s.values.length);\n        }\n\n        // this.plot.seriesColor\n\n    }\n\n    getDataToPlot(){\n        if(!this.plot.groupingEnabled || !this.enabledGroups){\n            return this.data;\n        }\n        return this.data.filter(d => this.enabledGroups.indexOf(this.plot.groupValue(d))>-1);\n    }\n\n\n\n    update(newData){\n        super.update(newData);\n        this.updateLegend();\n\n        return this;\n    };\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.colorCategory;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n\n        plot.legendColor.on('cellclick', c=> self.onLegendCellClick(c));\n        \n        plot.legend.container\n            .call(plot.legendColor);\n\n        this.updateLegendCellStatuses();\n    }\n\n    onLegendCellClick(cellValue){\n        this.updateEnabledGroups(cellValue);\n        this.init();\n    }\n    updateLegendCellStatuses() {\n        var self = this;\n        this.plot.legend.container.selectAll(\"g.cell\").each(function(cell){\n            var isDisabled = self.enabledGroups && self.enabledGroups.indexOf(cell)<0;\n            d3.select(this).classed(\"odc-disabled\", isDisabled);\n        });\n    }\n\n    updateEnabledGroups(cellValue) {\n        if (!this.enabledGroups) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n        var index = this.enabledGroups.indexOf(cellValue);\n\n        if (index < 0) {\n            this.enabledGroups.push(cellValue);\n        } else {\n            this.enabledGroups.splice(index, 1);\n        }\n\n        if (!this.enabledGroups.length) {\n            this.enabledGroups = this.plot.colorCategory.domain().slice();\n        }\n\n    }\n\n    setData(data){\n        super.setData(data);\n        this.enabledGroups = null;\n        return this;\n    }\n}\n","import {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ChartConfig {\n    cssClassPrefix = \"odc-\";\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    width = undefined;\n    height = undefined;\n    margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    showTooltip = false;\n    transition = true;\n\n    title = undefined;\n    titleSize=20;\n    titleMargin={\n        left: 0,\n        right: 0,\n        top: 15,\n        bottom: 20\n    };\n\n    subtitle = undefined;\n    subtitleSize=14;\n    subtitleMargin={\n        left: 0,\n        right: 0,\n        top: 10,\n        bottom: 20\n    };\n\n    constructor(custom) {\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n\n\n}\n\nexport class Chart {\n    utils = Utils;\n    baseContainer;\n    svg;\n    config;\n    plot = {\n        margin: {}\n    };\n    _attached = {};\n    _layers = {};\n    _events = {};\n    _isAttached;\n    _isInitialized=false;\n\n\n    constructor(base, data, config) {\n        this._id = Utils.guid();\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n        this.init();\n        this.postInit();\n    }\n\n    setConfig(config) {\n        if (!config) {\n            this.config = new ChartConfig();\n        } else {\n            this.config = config;\n        }\n        this.initConfigAccessors();\n        return this;\n    }\n\n    setData(data) {\n        this.data = data;\n        return this;\n    }\n\n    init() {\n        var self = this;\n        self.initPlot();\n        self.initSvg();\n\n        if(!this._isInitialized){\n            self.initTooltip();\n        }\n        self.draw();\n        this._isInitialized=true;\n        return this;\n    }\n\n    redraw(){\n        this.initConfigAccessors(true);\n        return this.init();\n    }\n\n    postInit(){\n\n    }\n\n    initSvg() {\n        var self = this;\n        var config = this.config;\n\n        var margin = self.plot.margin;\n        var width = self.svgWidth = self.plot.width + margin.left + margin.right;\n        var height = self.svgHeight =  self.plot.height + margin.top + margin.bottom;\n        var aspect = width / height;\n        if(!self._isAttached){\n            if(!this._isInitialized){\n                d3.select(self.baseContainer).select(\"svg\").remove();\n            }\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\").classed(config.svgClass, true);\n\n            self.svg\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n        }else{\n            // console.log(self.baseContainer);\n            self.svg = self.baseContainer.svg;\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\n        }\n\n        self.svgG.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (!config.width || config.height) {\n            d3.select(window)\n                .on(\"resize.\"+self._id, function () {\n                    var transition = self.config.transition;\n                    self.config.transition=false;\n                    self.init();\n                    self.config.transition = transition;\n                });\n        }\n    }\n\n    destroy(){\n        d3.select(this.baseContainer).selectAll(\"*\").remove();\n        d3.select(window).on(\"resize.\" + this._id, null);\n    }\n\n    initTooltip(){\n        var self = this;\n        if (self.config.showTooltip) {\n            if(!self._isAttached ){\n                self.plot.tooltip = d3.select(\"body\").selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\n                    .style(\"opacity\", 0);\n            }else{\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\n            }\n\n        }else{\n            self.plot.tooltip = null;\n        }\n    }\n\n    initPlot() {\n        var margin = this.config.margin;\n        this.plot = this.plot || {};\n        this.plot.margin = {\n            top: margin.top,\n            bottom: margin.bottom,\n            left: margin.left,\n            right: margin.right\n        };\n\n\n        var titleMarginSize = 0;\n        if(this.config.title){\n            titleMarginSize= this.config.titleSize+this.config.titleMargin.top;\n            if(!this.config.subtitle){\n                titleMarginSize += this.config.titleMargin.bottom;\n            }\n\n            this.plot.margin.top=Math.max(this.plot.margin.top,titleMarginSize);\n        }\n\n        if(this.config.subtitle){\n\n            this.plot.margin.top=Math.max(this.plot.margin.top, titleMarginSize+this.config.subtitleMargin.top+this.config.subtitleSize+this.config.subtitleMargin.bottom);\n        }\n\n    }\n\n    update(data) {\n        if (data) {\n            this.setData(data);\n        }\n        this.updateTitle();\n        this.updateSubtitle();\n\n        var layerName, attachmentData;\n        for (var attachmentName in this._attached) {\n\n            attachmentData = data;\n\n            this._attached[attachmentName].update(attachmentData);\n        }\n        return this;\n    }\n\n    updateTitle() {\n        var titleClass = this.prefixClass('plot-title');\n        if(!this.config.title){\n            this.svg.select(\"text.\"+titleClass).remove();\n            return;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+titleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (this.config.titleMargin.top) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.titleSize+\"px\")\n            .text(this.config.title);\n    }\n\n    updateSubtitle() {\n        var subtitleClass = this.prefixClass('plot-subtitle');\n        if(!this.config.subtitle){\n            this.svg.select(\"text.\"+subtitleClass).remove();\n            return;\n        }\n\n        var y = this.config.subtitleMargin.top;\n        if(this.config.title){\n            y+=this.config.titleMargin.top+this.config.titleSize;\n        }\n\n        this.svg.selectOrAppend(\"text.\"+subtitleClass)\n            .attr(\"transform\", \"translate(\"+ (this.svgWidth/2) +\",\"+ (y) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .style(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", this.config.subtitleSize+\"px\")\n            .text(this.config.subtitle);\n    }\n\n    draw(data) {\n        this.update(data);\n\n\n        return this;\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\n     * method will be invoked whenever the containing chart's `draw` method is\n     * invoked.\n     *\n     * @externalExample chart-attach\n     *\n     * @param {String} attachmentName Name of the attachment\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\n     *        unspecified, this method will return the attachment previously\n     *        registered with the specified `attachmentName` (if any).\n     *\n     * @returns {Chart} Reference to this chart (chainable).\n     */\n    attach(attachmentName, chart) {\n        if (arguments.length === 1) {\n            return this._attached[attachmentName];\n        }\n\n        this._attached[attachmentName] = chart;\n        return chart;\n    };\n\n    \n\n    //Borrowed from d3.chart\n    /**\n     * Subscribe a callback function to an event triggered on the chart. See {@link\n        * Chart#once} to subscribe a callback function to an event for one occurence.\n     *\n     * @externalExample {runnable} chart-on\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    on(name, callback, context) {\n        var events = this._events[name] || (this._events[name] = []);\n        events.push({\n            callback: callback,\n            context: context || this,\n            _chart: this\n        });\n        return this;\n    }\n\n    //Borrowed from d3.chart\n    /**\n     *\n     * Subscribe a callback function to an event triggered on the chart. This\n     * function will be invoked at the next occurance of the event and immediately\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\n     * event indefinitely.\n     *\n     * @externalExample {runnable} chart-once\n     *\n     * @param {String} name Name of the event\n     * @param {ChartEventHandler} callback Function to be invoked when the event\n     *        occurs\n     * @param {Object} [context] Value to set as `this` when invoking the\n     *        `callback`. Defaults to the chart instance\n     *\n     * @returns {Chart} A reference to this chart (chainable)\n     */\n    once(name, callback, context) {\n        var self = this;\n        var once = function () {\n            self.off(name, once);\n            callback.apply(this, arguments);\n        };\n        return this.on(name, once, context);\n    }\n\n\n    //Borrowed from d3.chart\n    /**\n     * Unsubscribe one or more callback functions from an event triggered on the\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\n     * When only a `name` is specified, all handlers subscribed to that event will\n     * be unsubscribed. When a `name` and `callback` are specified, only that\n     * function will be unsubscribed from that event. When a `name` and `context`\n     * are specified (but `callback` is omitted), all events bound to the given\n     * event with the given context will be unsubscribed.\n     *\n     * @externalExample {runnable} chart-off\n     *\n     * @param {String} [name] Name of the event to be unsubscribed\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\n     * @param {Object} [context] Contexts to be unsubscribe\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n\n    off(name, callback, context) {\n        var names, n, events, event, i, j;\n\n        // remove all events\n        if (arguments.length === 0) {\n            for (name in this._events) {\n                this._events[name].length = 0;\n            }\n            return this;\n        }\n\n        // remove all events for a specific name\n        if (arguments.length === 1) {\n            events = this._events[name];\n            if (events) {\n                events.length = 0;\n            }\n            return this;\n        }\n\n        // remove all events that match whatever combination of name, context\n        // and callback.\n        names = name ? [name] : Object.keys(this._events);\n        for (i = 0; i < names.length; i++) {\n            n = names[i];\n            events = this._events[n];\n            j = events.length;\n            while (j--) {\n                event = events[j];\n                if ((callback && callback === event.callback) ||\n                    (context && context === event.context)) {\n                    events.splice(j, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    //Borrowed from d3.chart\n    /**\n     * Publish an event on this chart with the given `name`.\n     *\n     * @externalExample {runnable} chart-trigger\n     *\n     * @param {String} name Name of the event to publish\n     * @param {...*} arguments Values with which to invoke the registered\n     *        callbacks.\n     *\n     * @returns {Chart} A reference to this chart (chainable).\n     */\n    trigger(name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var events = this._events[name];\n        var i, ev;\n\n        if (events !== undefined) {\n            for (i = 0; i < events.length; i++) {\n                ev = events[i];\n                ev.callback.apply(ev.context, args);\n            }\n        }\n\n        return this;\n    };\n    getBaseContainer(){\n        if(this._isAttached){\n            return this.baseContainer.svg;\n        }\n        return d3.select(this.baseContainer);\n    }\n\n    getBaseContainerNode(){\n\n        return this.getBaseContainer().node();\n    }\n\n    prefixClass(clazz, addDot){\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\n    }\n    computePlotSize() {\n        this.plot.width = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        this.plot.height = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n    }\n\n    transitionEnabled(){\n        return this._isInitialized && this.config.transition;\n    }\n\n    showTooltip(html){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(200)\n            .style(\"opacity\", .9);\n        this.plot.tooltip.html(html)\n            .style(\"left\", (d3.event.pageX + 5) + \"px\")\n            .style(\"top\", (d3.event.pageY - 28) + \"px\");\n    }\n\n    hideTooltip(){\n        if(!this.plot.tooltip){\n            return;\n        }\n        this.plot.tooltip.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n    }\n\n    initConfigAccessors(clean) {\n        if(clean){\n            this.removePropertyAccessors(this,this, this.config, \"$\");\n        }\n        this.initPropertyAccessors(this,this, this.config, \"$\", true);\n    }\n\n    removePropertyAccessors(bindTo,returnObj, source, prefix) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            delete bindTo[prefix + i];\n        }\n    }\n\n    initPropertyAccessors(bindTo,returnObj, source, prefix, recursive) {\n        var self  = this;\n        for (var i in source) {\n            if(!source.hasOwnProperty(i)){\n                continue;\n            }\n\n            var accessor = self.initPropertyAccessor(bindTo,returnObj, source, i, prefix);\n\n            if(recursive && Utils.isObjectNotArray(source[i])){\n                self.initPropertyAccessors(accessor, bindTo, source[i], prefix, recursive)\n            }\n        }\n    }\n\n    initPropertyAccessor(bindTo, returnObj, source, propertyKey, prefix) {\n        return bindTo[prefix + propertyKey] = function (_) {\n            if (!arguments.length) {\n                return source[propertyKey];\n            }\n            source[propertyKey] = _;\n            return returnObj;\n        };\n    }\n\n\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport {Legend} from './legend'\nimport {ScatterPlot} from './scatterplot'\nimport * as d3 from './d3'\n\nexport class CorrelationMatrixConfig extends ChartConfig {\n\n    svgClass = this.cssClassPrefix+'correlation-matrix';\n    guides = false; //show axis guides\n    showTooltip = true; //show tooltip on dot hover\n    showLegend = true;\n    highlightLabels = true;\n    rotateLabelsX = true;\n    rotateLabelsY = true;\n    variables = {\n        labels: undefined,\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => parseFloat(d[variableKey]), // variable value accessor\n        scale: \"ordinal\"\n    };\n    correlation = {\n        scale: \"linear\",\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\n\n    };\n    cell = {\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\n        size: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 1\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 60\n    };\n    groups={\n        key: null,\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class CorrelationMatrix extends Chart {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new CorrelationMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.correlation = {\n            matrix: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupVariables();\n        var width = conf.width;\n        var placeholderNode = this.getBaseContainerNode();\n        this.plot.placeholderNode = placeholderNode;\n\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\n        if (width) {\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n        } else {\n            this.plot.cellSize = this.config.cell.size;\n\n            if (!this.plot.cellSize) {\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n            }\n\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n\n        }\n\n        var height = width;\n        if (!height) {\n            height = placeholderNode.getBoundingClientRect().height;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = this.plot.width;\n\n        this.setupVariablesScales();\n        this.setupCorrelationScales();\n        this.setupCorrelationMatrix();\n\n\n        return this;\n    }\n\n    setupVariablesScales() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.variables;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = conf.value;\n        x.scale = d3.scaleBand().range([plot.width, 0]);\n        x.map = d => x.scale(x.value(d));\n\n    };\n\n    setupCorrelationScales() {\n        var plot = this.plot;\n        var corrConf = this.config.correlation;\n\n        plot.correlation.color.scale = Utils.createScale(corrConf.scale).domain(corrConf.domain).range(corrConf.range);\n        var shape = plot.correlation.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = cellConf.shape;\n\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\n        if (shape.type == 'circle') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([2, radiusMax]);\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\n        } else if (shape.type == 'ellipse') {\n            var radiusMax = shapeSize / 2;\n            shape.radiusScale = d3.scaleLinear().domain([0, 1]).range([radiusMax, 2]);\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\n            shape.radiusY = radiusMax;\n\n            shape.rotateVal = v => {\n                if (v == 0) return \"0\";\n                if (v < 0) return \"-45\";\n                return \"45\"\n            }\n        } else if (shape.type == 'rect') {\n            shape.size = shapeSize;\n        }\n\n    }\n\n\n    setupVariables() {\n\n        var variablesConf = this.config.variables;\n\n        var data = this.data;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if (!plot.variables || !plot.variables.length) {\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            plot.domainByVariable[variableKey] = d3.extent(data, (d) => variablesConf.value(d, variableKey));\n            var label = variableKey;\n            if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        // console.log(plot.labelByVariable);\n\n    };\n\n\n    setupCorrelationMatrix() {\n        var self = this;\n        var data = this.data;\n        var matrix = this.plot.correlation.matrix = [];\n        var matrixCells = this.plot.correlation.matrix.cells = [];\n        var plot = this.plot;\n\n        var variableToValues = {};\n        plot.variables.forEach((v, i) => {\n\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\n        });\n\n        plot.variables.forEach((v1, i) => {\n            var row = [];\n            matrix.push(row);\n\n            plot.variables.forEach((v2, j) => {\n                var corr = 1;\n                if (v1 != v2) {\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                }\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: corr\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n\n        });\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        // this.update\n        this.updateCells();\n        this.updateVariableLabels();\n\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n    };\n\n    updateVariableLabels() {\n        this.plot.labelClass = this.prefixClass(\"label\");\n        this.updateAxisX();\n        this.updateAxisY();\n    }\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelXClass = labelClass + \"-x\";\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.variables, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"y\", plot.height)\n            .attr(\"dx\", -2)\n            .attr(\"dy\", 5)\n            .attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsX) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\n        }\n\n        var maxWidth = self.computeXAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = plot.labelClass;\n        var labelYClass = plot.labelClass + \"-y\";\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.variables);\n\n        var labelsMerge = labels.enter().append(\"text\").merge(labels);\n\n        labelsMerge\n            .attr(\"x\", 0)\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(v=>plot.labelByVariable[v]);\n\n        if (this.config.rotateLabelsY) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + 0 + \", \" + (i * plot.cellSize + plot.cellSize / 2) + \")\")\n                .attr(\"text-anchor\", \"end\");\n        }\n\n        var maxWidth = self.computeYAxisLabelsWidth();\n        labelsMerge.each(function (label) {\n            Utils.placeTextWithEllipsisAndTooltip(d3.select(this), label, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        labels.exit().remove();\n    }\n\n    computeYAxisLabelsWidth() {\n        var maxWidth = this.plot.margin.left;\n        if (!this.config.rotateLabelsY) {\n            return maxWidth;\n        }\n\n        maxWidth *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        maxWidth -= fontSize / 2;\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.rotateLabelsX) {\n            return this.plot.cellSize - 2;\n        }\n        var size = this.plot.margin.bottom;\n        size *= Utils.SQRT_2;\n        var fontSize = 11; //todo check actual font size\n        size -= fontSize / 2;\n        return size;\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.correlation.shape.type;\n\n        var cells = self.svgG.selectAll(\"g.\" + cellClass)\n            .data(plot.correlation.matrix.cells);\n\n        var cellsEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n        var cellsMerge = cellsEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\n\n        cellsMerge.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n        var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n        var wrongShapes = cells.selectAll(selector);\n        wrongShapes.remove();\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        if (plot.correlation.shape.type == 'circle') {\n\n            shapes\n                .attr(\"r\", plot.correlation.shape.radius)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0);\n        }\n\n        if (plot.correlation.shape.type == 'ellipse') {\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n            shapes\n                .attr(\"rx\", plot.correlation.shape.radiusX)\n                .attr(\"ry\", plot.correlation.shape.radiusY)\n                .attr(\"cx\", 0)\n                .attr(\"cy\", 0)\n\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\n        }\n\n\n        if (plot.correlation.shape.type == 'rect') {\n            shapes\n                .attr(\"width\", plot.correlation.shape.size)\n                .attr(\"height\", plot.correlation.shape.size)\n                .attr(\"x\", -plot.cellSize / 2)\n                .attr(\"y\", -plot.cellSize / 2);\n        }\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n\n\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n\n    updateLegend() {\n\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var legendY = 0;\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.correlation.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        \n    }\n\n    attachScatterPlot(containerSelector, config) {\n        var self = this;\n\n        config = config || {};\n\n\n        var scatterPlotConfig = {\n            height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n            groups: {\n                key: self.config.groups.key,\n                label: self.config.groups.label\n            },\n            guides: true,\n            showLegend: false\n        };\n\n        self.scatterPlot = true;\n\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\n        this.update();\n\n        this.on(\"cell-selected\", c=> {\n\n\n            scatterPlotConfig.x = {\n                key: c.rowVar,\n                label: self.plot.labelByVariable[c.rowVar]\n            };\n            scatterPlotConfig.y = {\n                key: c.colVar,\n                label: self.plot.labelByVariable[c.colVar]\n            };\n            if (self.scatterPlot && self.scatterPlot !== true) {\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\n            } else {\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                this.attach(\"ScatterPlot\", self.scatterPlot);\n            }\n\n\n        });\n\n\n    }\n}\n","import * as d3 from './d3'\n\nexport class D3Extensions {\n\n    static extend() {\n\n        d3.selection.prototype.enter.prototype.insertSelector =\n            d3.selection.prototype.insertSelector = function (selector, before) {\n                return D3Extensions.insertSelector(this, selector, before);\n            };\n\n        d3.selection.prototype.enter.prototype.appendSelector =\n            d3.selection.prototype.appendSelector = function (selector) {\n                return D3Extensions.appendSelector(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrAppend =\n            d3.selection.prototype.selectOrAppend = function (selector) {\n                return D3Extensions.selectOrAppend(this, selector);\n            };\n\n        d3.selection.prototype.enter.prototype.selectOrInsert =\n            d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return D3Extensions.selectOrInsert(this, selector, before);\n            };\n\n\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n\n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return D3Extensions.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return D3Extensions.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return D3Extensions.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n}\n","export * from 'd3-dispatch';\nexport * from 'd3-scale';\nexport * from 'd3-selection';\nexport * from 'd3-shape'\nexport * from 'd3-drag';\nexport * from 'd3-brush'\nexport * from 'd3-array'\nexport * from 'd3-hierarchy'\nexport * from 'd3-time-format'\nexport * from 'd3-collection'\nexport * from 'd3-ease'\nexport * from 'd3-axis'\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class DivergingStackedBarChartConfig extends ChartConfig{\n\n    svgClass = this.cssClassPrefix + 'diverging-stacked-bar-chart';\n    showTooltip = true;\n    showLegend=true;\n    forceLegend=false;\n    legend={\n        width: 80,\n        margin: 10,\n        shapeWidth: 20\n    };\n    x = {// X axis config\n        title: '', // axis label\n        value: d => d.values, // x value accessor\n        guides: true, //show axis guides\n        orient: 'top',\n        scale: \"linear\",\n        domainMargin: 0.02,\n    };\n    y = {// Y axis config\n        title: '',\n        value: d => d.key, // y value accessor\n        scale: \"ordinal\",\n        orient: 'left',\n        guides: true //show axis guides\n    };\n\n    transition = true;\n    color =  undefined;// string or function returning color's value for color scale\n    d3ColorCategory= 'category10';\n    showBarValues = true;\n\n\n    colorRange = undefined;\n\n    categoryNames = undefined;\n    middleValue = 0;\n\n    constructor(custom){\n        super();\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class DivergingStackedBarChart extends Chart{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new DivergingStackedBarChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new DivergingStackedBarChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.plot.showLegend = this.config.showLegend;\n        if(this.plot.showLegend){\n            this.plot.margin.right = this.config.margin.right + this.config.legend.width+this.config.legend.margin*2;\n\n        }\n        super.computePlotSize();\n        this.plot.x = {};\n        this.plot.y = {};\n\n        this.plot.data = this.getDataToPlot();\n\n        this.setupY();\n        this.setupX();\n\n        this.setupColor();\n\n    }\n\n    getDataToPlot() {\n        return this.data;\n    }\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        x.value = d => conf.value.call(this.config, d);\n        x.scale = Utils.createScale(conf.scale).rangeRound([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n        if(conf.guides){\n            x.axis.tickSize(-plot.height);\n        }\n\n        var data = this.plot.data;\n\n\n        plot.categoryNames = this.config.categoryNames;\n\n        plot.neutralIndex = Math.floor(plot.categoryNames.length/2);\n\n        plot.rows = data.map(d=> {\n            let originalValues = x.value(d);\n            let x0 = this.config.middleValue - d3.sum(originalValues.map((v,i) =>  i < plot.neutralIndex ? v : 0 ));\n            if (plot.categoryNames.length & 1)\n                x0 += -1 * originalValues[plot.neutralIndex]/2;\n\n            let values = originalValues.map((v, i) => i<plot.neutralIndex ? this.config.middleValue - v : this.config.middleValue + v);\n            let total = d3.sum(originalValues);\n            let categories = plot.categoryNames;\n            if(d.categories){\n                categories = d.categories.map((catIndex, i)=>plot.categoryNames[catIndex])\n            }\n\n            return {\n                datum: d,\n                originalValues: originalValues,\n                values: values,\n                categories: [],\n                min: x0,\n                max: x0+total,\n                total: total,\n                boxes: values.map((v, i)=>{\n                    return {\n                        name: categories[i],\n                        x0: x0,\n                        x1: x0+=originalValues[i],\n                        originalValue: originalValues[i]\n                    }\n                })\n            }\n        });\n\n        var domain;\n        if (!data || !data.length) {\n            domain = [];\n        } else {\n            domain = d3.extent([].concat(...plot.rows.map(b=>[b.min, b.max])));\n            let margin = ((domain[1]-domain[0])* conf.domainMargin) || conf.domainMargin*domain[0];\n\n            domain[0]-=margin;\n            domain[1]+=margin;\n        }\n\n        plot.x.scale.domain(domain);\n\n    };\n\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.value = d => conf.value.call(this.config, d);\n        y.scale = d3.scaleBand().range([0, plot.height]).padding(.3);\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        if (conf.ticks) {\n            y.axis.ticks(conf.ticks);\n        }\n        if(conf.guides){\n            y.axis.tickSize(-plot.width);\n        }\n        this.setupYDomain();\n    };\n\n    setupYDomain() {\n        var plot = this.plot;\n        var data = this.plot.data;\n        var c = this.config;\n\n        var domain = data.map(plot.y.value) ;\n\n        plot.y.scale.domain(domain);\n    }\n\n    drawAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')))\n\n        if(axisConf.orient === 'bottom') {\n            axis.attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        }\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        var titleY = axisConf.orient === 'bottom' ? plot.margin.bottom : 0;\n        var titleDY = axisConf.orient === 'bottom' ? \"-1em\" : \"-1.5em\";\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (titleY) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", titleDY)\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (axisConf.guides ? '' : '.' + self.prefixClass('no-guides')));\n\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawBars() {\n        let self = this,\n            plot = self.plot,\n            config = self.config;\n\n        let rowClass = self.prefixClass(\"row\");\n        let rows = self.svgG.selectAll(\".\"+ rowClass)\n            .data(plot.rows);\n\n        let rowEnter = rows.enter().appendSelector(\"g.\"+rowClass);\n\n        let rowMerge = rowEnter.merge(rows)\n            .attr(\"transform\", d => \"translate(0,\" + plot.y.map(d.datum) + \")\");\n\n        rows.exit().remove();\n\n\n        let barClass = self.prefixClass(\"bar\");\n\n        let bars = rowMerge.selectAll(\"g.\"+ barClass)\n            .data(function(d) { return d.boxes; });\n        bars.exit().remove();\n\n        let barsEnter = bars.enter()\n            .append(\"g\")\n            .attr(\"class\", barClass);\n\n        barsEnter.append(\"rect\");\n        if(config.showBarValues){\n            barsEnter.append(\"text\");\n        }\n\n\n        let barsM =  barsEnter.merge(bars);\n\n        barsM.select(\"rect\").attr(\"height\", plot.y.scale.bandwidth())\n            .attr(\"x\", d =>plot.x.scale(d.x0))\n            .attr(\"width\", d => plot.x.scale(d.x1) - plot.x.scale(d.x0))\n            .style(\"fill\", (d, i) => plot.color(d.name, i));\n\n\n        let textM = barsM.select(\"text\");\n        if(config.showBarValues){\n            textM.attr(\"x\", d => plot.x.scale(d.x0))\n                .attr(\"y\", plot.y.scale.bandwidth()/2)\n                .attr(\"dy\", \"0.5em\")\n                .attr(\"dx\", d=>(plot.x.scale(d.x1)-plot.x.scale(d.x0))/2)\n                .style(\"text-anchor\", \"middle\")\n                .text(d => d.originalValue !== 0 && (d.x1-d.x0)>0.04 ? d.originalValue : \"\");\n        }else{\n            textM.remove();\n        }\n\n\n\n        self.svgG.selectOrAppend(\"line.\"+self.prefixClass(\"middle-line\"))\n            .attr(\"x1\", plot.x.scale(self.config.middleValue))\n            .attr(\"y1\", 0)\n            .attr(\"x2\", plot.x.scale(self.config.middleValue))\n            .attr(\"y2\", plot.height);\n\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.drawBars();\n        this.updateLegend();\n        return this;\n    };\n\n\n    setupColor() {\n        var self=this;\n        var conf = this.config;\n\n        if(conf.d3ColorCategory){\n            var colorSchemeCategory = 'scheme'+Utils.capitalizeFirstLetter(conf.d3ColorCategory);\n            this.plot.colorCategory = d3.scaleOrdinal(d3[colorSchemeCategory]);\n        }\n\n        var colorValue = conf.color;\n        if (colorValue && typeof colorValue === 'string' || colorValue instanceof String){\n            this.plot.color = colorValue;\n        }else if (conf.colorRange){\n            this.plot.color = Utils.createScale(\"ordinal\").domain(this.plot.categoryNames).range(conf.colorRange);\n        }\n        else if(this.plot.colorCategory){\n            self.plot.colorValue=colorValue;\n            this.plot.color = this.plot.colorCategory\n        }\n    }\n\n    updateLegend() {\n\n        var self =this;\n        var plot = this.plot;\n\n        var scale = plot.color;\n\n        if(!scale.domain() || !this.config.forceLegend && scale.domain().length<2){\n            plot.showLegend = false;\n        }\n\n        if(!plot.showLegend){\n            if(plot.legend && plot.legend.container){\n                plot.legend.container.remove();\n            }\n            return;\n        }\n\n\n        var legendX = this.plot.width + this.config.legend.margin;\n        var legendY = this.config.legend.margin;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY);\n\n        plot.legendColor = plot.legend.color()\n            .shapeWidth(this.config.legend.shapeWidth)\n            .orient('vertical')\n            .scale(scale)\n            .labelWrap(this.config.legend.width)\n            // .labels(scale.domain().map(v=>plot.groupToLabel[v]));\n\n        plot.legend.container\n            .call(plot.legendColor);\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Heatmap, HeatmapConfig} from \"./heatmap\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class HeatmapTimeSeriesConfig extends HeatmapConfig {\n    x = {\n        fillMissing: false, // fill missing values using interval and intervalStep\n        interval: undefined, //used in filling missing ticks\n        intervalStep: 1,\n        format: undefined, //input data d3 time format\n        displayFormat: undefined,//d3 time format for display\n        intervalToFormats: [ //used to guess interval and format\n            {\n                name: 'year',\n                formats: [\"%Y\"]\n            },\n            {\n                name: 'month',\n                formats: [\"%Y-%m\"]\n            },\n            {\n                name: 'day',\n                formats: [\"%Y-%m-%d\"]\n            },\n            {\n                name: 'hour',\n                formats: ['%H', '%Y-%m-%d %H']\n            },\n            {\n                name: 'minute',\n                formats: ['%H:%M', '%Y-%m-%d %H:%M']\n            },\n            {\n                name: 'second',\n                formats: ['%H:%M:%S', '%Y-%m-%d %H:%M:%S']\n            }\n        ],\n\n        sortComparator: function sortComparator(a, b) {\n            return Utils.isString(a) ?  a.localeCompare(b) :  a - b;\n        },\n        formatter: undefined\n    };\n    z = {\n        fillMissing: true // fiill missing values with nearest previous value\n    };\n\n    legend = {\n        formatter: function (v) {\n            var suffix = \"\";\n            if (v / 1000000 >= 1) {\n                suffix = \" M\";\n                v = Number(v / 1000000).toFixed(3);\n            }\n            var nf = Intl.NumberFormat();\n            return nf.format(v) + suffix;\n        }\n    };\n\n    constructor(custom) {\n        super();\n\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\nexport class HeatmapTimeSeries extends Heatmap {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapTimeSeriesConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapTimeSeriesConfig(config));\n    }\n\n\n    setupValuesBeforeGroupsSort() {\n\n        this.plot.x.timeFormat = this.config.x.format;\n        if(this.config.x.displayFormat && !this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n\n        super.setupValuesBeforeGroupsSort();\n        if (!this.config.x.fillMissing) {\n            return;\n        }\n\n        var self = this;\n\n        this.initTimeFormatAndInterval();\n\n        this.plot.x.intervalStep = this.config.x.intervalStep || 1;\n\n        this.plot.x.timeParser = this.getTimeParser();\n\n\n\n        this.plot.x.uniqueValues.sort(this.config.x.sortComparator);\n\n        var prev = null;\n\n        this.plot.x.uniqueValues.forEach((x, i)=> {\n            var current = this.parseTime(x);\n            if (prev === null) {\n                prev = current;\n                return;\n            }\n\n            var next = self.nextTimeTickValue(prev);\n            var missing = [];\n            var iteration = 0;\n            while (self.compareTimeValues(next, current)<=0) {\n                iteration++;\n                if (iteration > 100) {\n                    break;\n                }\n                var d = {};\n                var timeString = self.formatTime(next);\n                d[this.config.x.key] = timeString;\n\n                self.updateGroups(d, timeString, self.plot.x.groups, self.config.x.groups);\n                missing.push(next);\n                next = self.nextTimeTickValue(next);\n            }\n            prev = current;\n        });\n\n    }\n\n    parseTime(x) {\n        var parser = this.getTimeParser();\n        return parser(x);\n    }\n\n    formatTime(date){\n        var formatter = this.getTimeFormatter();\n        return formatter(date);\n    }\n\n    formatValueX(value) { //used only for display\n        if (this.config.x.formatter) return this.config.x.formatter.call(this.config, value);\n\n        if(this.config.x.displayFormat){\n            var date = this.parseTime(value);\n            return d3.timeFormat(this.config.x.displayFormat)(date);\n        }\n\n        if(!this.plot.x.timeFormat) return value;\n\n        if(Utils.isDate(value)){\n            return this.formatTime(value);\n        }\n\n        return value;\n    }\n\n    compareTimeValues(a, b){\n        return a-b;\n    }\n\n    timeValuesEqual(a, b) {\n        var parser = this.plot.x.timeParser;\n        return parser(a) === parser(b);\n    }\n\n    nextTimeTickValue(t) {\n        var interval = 'time'+Utils.capitalizeFirstLetter(this.plot.x.interval);\n\n        return d3[interval].offset(t, this.plot.x.intervalStep);\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        if (this.config.z.fillMissing) {\n            this.plot.matrix.forEach((row, rowIndex) => {\n                var prevRowValue = undefined;\n                row.forEach((cell, colIndex) => {\n                    if (cell.value === undefined && prevRowValue !== undefined) {\n                        cell.value = prevRowValue;\n                        cell.missing = true;\n                    }\n                    prevRowValue = cell.value;\n                });\n            });\n        }\n\n\n    }\n\n    update(newData) {\n        super.update(newData);\n\n    };\n\n\n    initTimeFormatAndInterval() {\n\n        this.plot.x.interval = this.config.x.interval;\n\n        if(!this.plot.x.timeFormat){\n            this.guessTimeFormat();\n        }\n\n        if(!this.plot.x.interval && this.plot.x.timeFormat){\n            this.guessInterval();\n        }\n    }\n\n    guessTimeFormat() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++){\n            let intervalFormat = self.config.x.intervalToFormats[i];\n            var format = null;\n            var formatMatch = intervalFormat.formats.some(f=>{\n                format = f;\n                var parser = d3.timeParse(f);\n                return self.plot.x.uniqueValues.every(x=>{\n                    return parser(x) !== null\n                });\n            });\n            if(formatMatch){\n                self.plot.x.timeFormat = format;\n                // console.log('Guessed timeFormat', format);\n                if(!self.plot.x.interval){\n                    self.plot.x.interval = intervalFormat.name;\n                    // console.log('Guessed interval', self.plot.x.interval);\n                }\n                return;\n            }\n        }\n    }\n\n    guessInterval() {\n        var self = this;\n        for(let i=0; i < self.config.x.intervalToFormats.length; i++) {\n            let intervalFormat = self.config.x.intervalToFormats[i];\n\n            if(intervalFormat.formats.indexOf(self.plot.x.timeFormat) >= 0){\n                self.plot.x.interval = intervalFormat.name;\n                // console.log('Guessed interval', self.plot.x.interval);\n                return;\n            }\n\n        }\n\n    }\n\n    getTimeFormatter() {\n        if(!this.plot.x.timeFormatter){\n            this.plot.x.timeFormatter = d3.timeFormat(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeFormatter;\n    }\n    getTimeParser() {\n        if(!this.plot.x.timeParser){\n            this.plot.x.timeParser = d3.timeParse(this.plot.x.timeFormat);\n        }\n        return this.plot.x.timeParser;\n    }\n}\n\n","import {Chart, ChartConfig} from \"./chart\";\nimport {Utils} from './utils'\nimport {Legend} from './legend'\nimport * as d3 from './d3'\n\nexport class HeatmapConfig extends ChartConfig {\n\n    svgClass = 'odc-heatmap';\n    showTooltip = true; //show tooltip on dot hover\n    tooltip = {\n        noDataText: \"N/A\"\n    };\n    showLegend = true;\n    legend = {\n        width: 30,\n        rotateLabels: false,\n        decimalPlaces: undefined,\n        formatter: v => this.legend.decimalPlaces === undefined ? v : Number(v).toFixed(this.legend.decimalPlaces)\n    }\n    highlightLabels = true;\n    x = {// X axis config\n        title: '', // axis title\n        key: 0,\n        value: (d) => d[this.x.key], // x value accessor\n        rotateLabels: true,\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(a) ? a - b : a.localeCompare(b),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                top: 20,\n                bottom: 20\n            }\n        },\n        formatter: undefined // value formatter function\n\n    };\n    y = {// Y axis config\n        title: '', // axis title,\n        rotateLabels: true,\n        key: 1,\n        value: (d) => d[this.y.key], // y value accessor\n        sortLabels: false,\n        sortComparator: (a, b)=> Utils.isNumber(b) ? b - a : b.localeCompare(a),\n        groups: {\n            keys: [],\n            labels: [],\n            value: (d, key) => d[key],\n            overlap: {\n                left: 20,\n                right: 20\n            }\n        },\n        formatter: undefined// value formatter function\n    };\n    z = {\n        key: 2,\n        value: (d) => d[this.z.key],\n        notAvailableValue: (v) => v === null || v === undefined,\n\n        decimalPlaces: undefined,\n        formatter: v => this.z.decimalPlaces === undefined ? v : Number(v).toFixed(this.z.decimalPlaces)// value formatter function\n\n    };\n    color = {\n        noDataColor: \"white\",\n        scale: \"linear\",\n        reverseScale: false,\n        range: [\"darkblue\", \"lightskyblue\", \"orange\", \"crimson\", \"darkred\"]\n    };\n    cell = {\n        width: undefined,\n        height: undefined,\n        sizeMin: 15,\n        sizeMax: 250,\n        padding: 0\n    };\n    margin = {\n        left: 60,\n        right: 50,\n        top: 30,\n        bottom: 80\n    };\n\n    constructor(custom) {\n        super();\n        if (custom) {\n            Utils.deepExtend(this, custom);\n        }\n    }\n}\n\n//TODO refactor\nexport class Heatmap extends Chart {\n\n    static maxGroupGapSize = 24;\n    static groupTitleRectHeight = 6;\n\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HeatmapConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new HeatmapConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n        var self = this;\n        var margin = this.config.margin;\n        var conf = this.config;\n\n        this.plot.x = {};\n        this.plot.y = {};\n        this.plot.z = {\n            matrixes: undefined,\n            cells: undefined,\n            color: {},\n            shape: {}\n        };\n\n\n        this.setupValues();\n        this.buildCells();\n\n        var titleRectWidth = 6;\n        this.plot.x.overlap = {\n            top: 0,\n            bottom: 0\n        };\n        if (this.plot.groupByX) {\n            let depth = self.config.x.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n\n            this.plot.x.overlap.bottom = self.config.x.groups.overlap.bottom;\n            this.plot.x.overlap.top = self.config.x.groups.overlap.top + allTitlesWidth;\n            this.plot.margin.top = this.plot.margin.top + conf.x.groups.overlap.top;\n            this.plot.margin.bottom = this.plot.margin.bottom + conf.x.groups.overlap.bottom;\n        }\n\n\n        this.plot.y.overlap = {\n            left: 0,\n            right: 0\n        };\n\n\n        if (this.plot.groupByY) {\n            let depth = self.config.y.groups.keys.length;\n            let allTitlesWidth = depth * (titleRectWidth);\n            this.plot.y.overlap.right = self.config.y.groups.overlap.left + allTitlesWidth;\n            this.plot.y.overlap.left = self.config.y.groups.overlap.left;\n            this.plot.margin.left = this.plot.margin.left + this.plot.y.overlap.left;\n            this.plot.margin.right = this.plot.margin.right + this.plot.y.overlap.right;\n        }\n        this.plot.showLegend = conf.showLegend;\n        if (this.plot.showLegend) {\n            this.plot.margin.right += conf.legend.width;\n        }\n        this.computePlotSize();\n        this.setupZScale();\n\n        return this;\n    }\n\n    setupValues() {\n        var self = this;\n        var config = self.config;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n\n\n        x.value = d => config.x.value.call(config, d);\n        y.value = d => config.y.value.call(config, d);\n        z.value = d => config.z.value.call(config, d);\n\n        x.uniqueValues = [];\n        y.uniqueValues = [];\n\n\n        self.plot.groupByY = !!config.y.groups.keys.length;\n        self.plot.groupByX = !!config.x.groups.keys.length;\n\n        y.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n        x.groups = {\n            key: undefined,\n            label: '',\n            values: [],\n            children: null,\n            level: 0,\n            index: 0,\n            lastIndex: 0\n        };\n\n        var valueMap = {};\n        var minZ = undefined;\n        var maxZ = undefined;\n        this.data.forEach(d=> {\n\n            var xVal = x.value(d);\n            var yVal = y.value(d);\n            var zValRaw = z.value(d);\n            var zVal = config.z.notAvailableValue(zValRaw) ? undefined : parseFloat(zValRaw);\n\n\n            if (x.uniqueValues.indexOf(xVal) === -1) {\n                x.uniqueValues.push(xVal);\n            }\n\n            if (y.uniqueValues.indexOf(yVal) === -1) {\n                y.uniqueValues.push(yVal);\n            }\n\n            var groupY = y.groups;\n            if (self.plot.groupByY) {\n                groupY = this.updateGroups(d, yVal, y.groups, config.y.groups);\n            }\n            var groupX = x.groups;\n            if (self.plot.groupByX) {\n\n                groupX = this.updateGroups(d, xVal, x.groups, config.x.groups);\n            }\n\n            if (!valueMap[groupY.index]) {\n                valueMap[groupY.index] = {};\n            }\n\n            if (!valueMap[groupY.index][groupX.index]) {\n                valueMap[groupY.index][groupX.index] = {};\n            }\n            if (!valueMap[groupY.index][groupX.index][yVal]) {\n                valueMap[groupY.index][groupX.index][yVal] = {};\n            }\n            valueMap[groupY.index][groupX.index][yVal][xVal] = zVal;\n\n\n            if (minZ === undefined || zVal < minZ) {\n                minZ = zVal;\n            }\n            if (maxZ === undefined || zVal > maxZ) {\n                maxZ = zVal;\n            }\n        });\n        self.plot.valueMap = valueMap;\n\n\n        if (!self.plot.groupByX) {\n            x.groups.values = x.uniqueValues;\n        }\n\n        if (!self.plot.groupByY) {\n            y.groups.values = y.uniqueValues;\n        }\n\n        this.setupValuesBeforeGroupsSort();\n\n        x.gaps = [];\n        x.totalValuesCount = 0;\n        x.allValuesList = [];\n        this.sortGroups(x, x.groups, config.x);\n\n        y.gaps = [];\n        y.totalValuesCount = 0;\n        y.allValuesList = [];\n        this.sortGroups(y, y.groups, config.y);\n\n        z.min = minZ;\n        z.max = maxZ;\n\n    }\n\n    setupValuesBeforeGroupsSort() {\n    }\n\n    buildCells() {\n        var self = this;\n        var x = self.plot.x;\n        var y = self.plot.y;\n        var z = self.plot.z;\n        var valueMap = self.plot.valueMap;\n\n        var matrixCells = self.plot.cells = [];\n        var matrix = self.plot.matrix = [];\n\n        y.allValuesList.forEach((v1, i)=> {\n            var row = [];\n            matrix.push(row);\n\n            x.allValuesList.forEach((v2, j) => {\n                var zVal = undefined;\n                try {\n                    zVal = valueMap[v1.group.index][v2.group.index][v1.val][v2.val]\n                } catch (e) {\n                }\n\n                var cell = {\n                    rowVar: v1,\n                    colVar: v2,\n                    row: i,\n                    col: j,\n                    value: zVal\n                };\n                row.push(cell);\n\n                matrixCells.push(cell);\n            });\n        });\n\n    }\n\n    updateGroups(d, axisVal, rootGroup, axisGroupsConfig) {\n\n        var config = this.config;\n        var currentGroup = rootGroup;\n        axisGroupsConfig.keys.forEach((groupKey, groupKeyIndex) => {\n            currentGroup.key = groupKey;\n\n            if (!currentGroup.children) {\n                currentGroup.children = {};\n            }\n\n            var groupingValue = axisGroupsConfig.value.call(config, d, groupKey);\n\n            if (!currentGroup.children.hasOwnProperty(groupingValue)) {\n                rootGroup.lastIndex++;\n                currentGroup.children[groupingValue] = {\n                    values: [],\n                    children: null,\n                    groupingValue: groupingValue,\n                    level: currentGroup.level + 1,\n                    index: rootGroup.lastIndex,\n                    key: groupKey\n                }\n            }\n\n            currentGroup = currentGroup.children[groupingValue];\n        });\n\n        if (currentGroup.values.indexOf(axisVal) === -1) {\n            currentGroup.values.push(axisVal);\n        }\n\n        return currentGroup;\n    }\n\n    sortGroups(axis, group, axisConfig, gaps) {\n        if (axisConfig.groups.labels && axisConfig.groups.labels.length > group.level) {\n            group.label = axisConfig.groups.labels[group.level];\n        } else {\n            group.label = group.key;\n        }\n\n        if (!gaps) {\n            gaps = [0];\n        }\n        if (gaps.length <= group.level) {\n            gaps.push(0);\n        }\n\n        group.allValuesCount = group.allValuesCount || 0;\n        group.allValuesBeforeCount = group.allValuesBeforeCount || 0;\n\n        group.gaps = gaps.slice();\n        group.gapsBefore = gaps.slice();\n\n\n        group.gapsSize = Heatmap.computeGapsSize(group.gaps);\n        group.gapsBeforeSize = group.gapsSize;\n        if (group.values) {\n            if (axisConfig.sortLabels) {\n                group.values.sort(axisConfig.sortComparator);\n            }\n            group.values.forEach(v=>axis.allValuesList.push({val: v, group: group}));\n            group.allValuesBeforeCount = axis.totalValuesCount;\n            axis.totalValuesCount += group.values.length;\n            group.allValuesCount += group.values.length;\n        }\n\n        group.childrenList = [];\n        if (group.children) {\n            var childrenCount = 0;\n\n            for (var childProp in group.children) {\n                if (group.children.hasOwnProperty(childProp)) {\n                    var child = group.children[childProp];\n                    group.childrenList.push(child);\n                    childrenCount++;\n\n                    this.sortGroups(axis, child, axisConfig, gaps);\n                    group.allValuesCount += child.allValuesCount;\n                    gaps[group.level] += 1;\n                }\n            }\n\n            if (gaps && childrenCount > 1) {\n                gaps[group.level] -= 1;\n            }\n\n            group.gapsInside = [];\n            gaps.forEach((d, i)=> {\n                group.gapsInside.push(d - (group.gapsBefore[i] || 0));\n            });\n            group.gapsInsideSize = Heatmap.computeGapsSize(group.gapsInside);\n\n            if (axis.gaps.length < gaps.length) {\n                axis.gaps = gaps;\n            }\n        }\n\n    }\n\n    computeYAxisLabelsWidth(offset) {\n        var maxWidth = this.plot.margin.left;\n        if (this.config.y.title) {\n            maxWidth -= 15;\n        }\n        if (offset && offset.x) {\n            maxWidth += offset.x;\n        }\n\n        if (this.config.y.rotateLabels) {\n            maxWidth *= Utils.SQRT_2;\n            var fontSize = 11; //todo check actual font size\n            maxWidth -=fontSize/2;\n        }\n\n        return maxWidth;\n    }\n\n    computeXAxisLabelsWidth(offset) {\n        if (!this.config.x.rotateLabels) {\n            return this.plot.cellWidth - 2;\n        }\n        var size = this.plot.margin.bottom;\n        if (this.config.x.title) {\n            size -= 15;\n        }\n        if (offset && offset.y) {\n            size -= offset.y;\n        }\n\n        size *= Utils.SQRT_2;\n\n        var fontSize = 11; //todo check actual font size\n        size -=fontSize/2;\n\n        return size;\n    }\n\n    static computeGapSize(gapLevel) {\n        return Heatmap.maxGroupGapSize / (gapLevel + 1);\n    }\n\n    static computeGapsSize(gaps) {\n        var gapsSize = 0;\n        gaps.forEach((gapsNumber, gapsLevel)=> gapsSize += gapsNumber * Heatmap.computeGapSize(gapsLevel));\n        return gapsSize;\n    }\n\n    computePlotSize() {\n\n        var plot = this.plot;\n        var conf = this.config;\n        var margin = plot.margin;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), this.plot.margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), this.plot.margin);\n        var width = availableWidth;\n        var height = availableHeight;\n\n        var xGapsSize = Heatmap.computeGapsSize(plot.x.gaps);\n\n\n        var computedCellWidth = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableWidth - xGapsSize) / this.plot.x.totalValuesCount));\n        if (this.config.width) {\n\n            if (!this.config.cell.width) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        } else {\n            this.plot.cellWidth = this.config.cell.width;\n\n            if (!this.plot.cellWidth) {\n                this.plot.cellWidth = computedCellWidth;\n            }\n\n        }\n        width = this.plot.cellWidth * this.plot.x.totalValuesCount + margin.left + margin.right + xGapsSize;\n\n        var yGapsSize = Heatmap.computeGapsSize(plot.y.gaps);\n        var computedCellHeight = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (availableHeight - yGapsSize) / this.plot.y.totalValuesCount));\n        if (this.config.height) {\n            if (!this.config.cell.height) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n        } else {\n            this.plot.cellHeight = this.config.cell.height;\n\n            if (!this.plot.cellHeight) {\n                this.plot.cellHeight = computedCellHeight;\n            }\n\n        }\n\n        height = this.plot.cellHeight * this.plot.y.totalValuesCount + margin.top + margin.bottom + yGapsSize;\n\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n    }\n\n\n    setupZScale() {\n\n        var self = this;\n        var config = self.config;\n        var z = self.plot.z;\n        var range = config.color.range;\n        var extent = z.max - z.min;\n        var scale;\n        z.domain = [];\n        if (config.color.scale == \"pow\") {\n            var exponent = 10;\n            range.forEach((c, i)=> {\n                var v = z.max - (extent / Math.pow(10, i));\n                z.domain.push(v)\n            });\n            scale = d3.scalePow().exponent(exponent);\n        } else if (config.color.scale == \"log\") {\n\n            range.forEach((c, i)=> {\n                var v = z.min + (extent / Math.pow(10, i));\n                z.domain.unshift(v)\n\n            });\n\n            scale = d3.scaleLog()\n        } else {\n            range.forEach((c, i)=> {\n                var v = z.min + (extent * (i / (range.length - 1)));\n                z.domain.push(v)\n            });\n            scale = Utils.createScale(config.color.scale);\n\n        }\n\n\n        z.domain[0] = z.min; //removing unnecessary floating points\n        z.domain[z.domain.length - 1] = z.max; //removing unnecessary floating points\n        // console.log(z.domain);\n\n        if (config.color.reverseScale) {\n            z.domain.reverse();\n        }\n\n        var plot = this.plot;\n\n        // console.log(range);\n\n        plot.z.color.scale = scale.domain(z.domain).range(range);\n        var shape = plot.z.shape = {};\n\n        var cellConf = this.config.cell;\n        shape.type = \"rect\";\n\n        plot.z.shape.width = plot.cellWidth - cellConf.padding * 2;\n        plot.z.shape.height = plot.cellHeight - cellConf.padding * 2;\n    }\n\n\n    update(newData) {\n        super.update(newData);\n        if (this.plot.groupByY) {\n            this.drawGroupsY(this.plot.y.groups, this.svgG);\n        }\n        if (this.plot.groupByX) {\n            this.drawGroupsX(this.plot.x.groups, this.svgG);\n        }\n\n        this.updateCells();\n\n        // this.updateVariableLabels();\n\n        this.updateAxisX();\n        this.updateAxisY();\n\n        if (this.config.showLegend) {\n            this.updateLegend();\n        }\n\n        this.updateAxisTitles();\n    };\n\n    updateAxisTitles() {\n        var self = this;\n        var plot = self.plot;\n\n\n    }\n\n\n    updateAxisX() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelXClass = labelClass + \"-x\";\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n        var offsetX = {\n            x: 0,\n            y: 0\n        };\n        let gapSize = Heatmap.computeGapSize(0);\n        if (plot.groupByX) {\n            let overlap = self.config.x.groups.overlap;\n\n            offsetX.x = gapSize / 2;\n            offsetX.y = overlap.bottom + gapSize / 2 + 6;\n        } else if (plot.groupByY) {\n            offsetX.y = gapSize;\n        }\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelXClass)\n            .data(plot.x.allValuesList, (d, i)=>i);\n\n        var labelsMerge = labels.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i).merge(labels);\n\n        labelsMerge\n            .attr(\"x\", (d, i) => (i * plot.cellWidth + plot.cellWidth / 2) + (d.group.gapsSize) + offsetX.x)\n            .attr(\"y\", plot.height + offsetX.y)\n            .attr(\"dy\", 10)\n\n            .attr(\"text-anchor\", \"middle\")\n            .text(d=>self.formatValueX(d.val));\n\n\n\n        var maxWidth = self.computeXAxisLabelsWidth(offsetX);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueX(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.x.rotateLabels) {\n            labelsMerge.attr(\"transform\", (d, i) => \"rotate(-45, \" + ((i * plot.cellWidth + plot.cellWidth / 2) + d.group.gapsSize + offsetX.x ) + \", \" + ( plot.height + offsetX.y) + \")\")\n                .attr(\"dx\", -2)\n                .attr(\"dy\", 8)\n                .attr(\"text-anchor\", \"end\");\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x'))\n            .attr(\"transform\", \"translate(\" + (plot.width / 2) + \",\" + (plot.height + plot.margin.bottom) + \")\")\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n\n            .attr(\"dy\", \"-0.5em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.x.title);\n    }\n\n    updateAxisY() {\n        var self = this;\n        var plot = self.plot;\n        var labelClass = self.prefixClass(\"label\");\n        var labelYClass = labelClass + \"-y\";\n        plot.labelClass = labelClass;\n\n\n        var labels = self.svgG.selectAll(\"text.\" + labelYClass)\n            .data(plot.y.allValuesList);\n\n        var labelsEnter = labels.enter().append(\"text\");\n        var labelsMerge = labelsEnter.merge(labels);\n\n        var offsetY = {\n            x: 0,\n            y: 0\n        };\n        if (plot.groupByY) {\n            let overlap = self.config.y.groups.overlap;\n            let gapSize = Heatmap.computeGapSize(0);\n            offsetY.x = -overlap.left;\n\n            offsetY.y = gapSize / 2;\n        }\n        labelsMerge\n            .attr(\"x\", offsetY.x)\n            .attr(\"y\", (d, i) => (i * plot.cellHeight + plot.cellHeight / 2) + d.group.gapsSize + offsetY.y)\n            .attr(\"dx\", -2)\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i)\n\n            .text(function (d) {\n                var formatted = self.formatValueY(d.val);\n                return formatted\n            });\n\n        var maxWidth = self.computeYAxisLabelsWidth(offsetY);\n\n        labelsMerge.each(function (label) {\n            var elem = d3.select(this),\n                text = self.formatValueY(label.val);\n            Utils.placeTextWithEllipsisAndTooltip(elem, text, maxWidth, self.config.showTooltip ? self.plot.tooltip : false);\n        });\n\n        if (self.config.y.rotateLabels) {\n            labelsMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + (offsetY.x  ) + \", \" + (d.group.gapsSize + (i * plot.cellHeight + plot.cellHeight / 2) + offsetY.y) + \")\")\n                .attr(\"text-anchor\", \"end\");\n            // .attr(\"dx\", -7);\n        } else {\n            labelsMerge.attr(\"dominant-baseline\", \"middle\")\n        }\n\n\n        labels.exit().remove();\n\n\n        self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y'))\n            .selectOrAppend(\"text.\" + self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\" + -plot.margin.left + \",\" + (plot.height / 2) + \")rotate(-90)\")\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(self.config.y.title);\n\n    }\n\n\n    drawGroupsY(parentGroup, container, availableWidth) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupYClass = groupClass + \"-y\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupYClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupYClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n\n        var titleRectWidth = Heatmap.groupTitleRectHeight;\n        var depth = self.config.y.groups.keys.length - parentGroup.level;\n        var overlap = {\n            left: 0,\n            right: 0\n        };\n\n        if (!availableWidth) {\n            overlap.right = plot.y.overlap.left;\n            overlap.left = plot.y.overlap.left;\n            availableWidth = plot.width + gapSize + overlap.left + overlap.right;\n        }\n\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + (padding - overlap.left) + \",\" + ((plot.cellHeight * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n\n        var groupWidth = availableWidth - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(\" + (groupWidth - titleRectWidth) + \", 0)\");\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"width\", titleRectWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"width\", groupWidth)\n            .attr(\"height\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellHeight * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\")\n\n\n        groupsMerge.each(function (group) {\n\n            self.drawGroupsY.call(self, group, d3.select(this), groupWidth - titleRectWidth);\n        });\n\n        groups.exit().remove();\n    }\n\n    drawGroupsX(parentGroup, container, availableHeight) {\n\n        var self = this;\n        var plot = self.plot;\n\n        var groupClass = self.prefixClass(\"group\");\n        var groupXClass = groupClass + \"-x\";\n        var groups = container.selectAll(\"g.\" + groupClass + \".\" + groupXClass)\n            .data(parentGroup.childrenList);\n\n        var valuesBeforeCount = 0;\n        var gapsBeforeSize = 0;\n\n        var groupsEnter = groups.enter().append(\"g\");\n        groupsEnter\n            .classed(groupClass, true)\n            .classed(groupXClass, true)\n            .append(\"rect\").classed(\"group-rect\", true);\n\n        var titleGroupEnter = groupsEnter.appendSelector(\"g.title\");\n        titleGroupEnter.append(\"rect\");\n        titleGroupEnter.append(\"text\");\n\n        var gapSize = Heatmap.computeGapSize(parentGroup.level);\n        var padding = gapSize / 4;\n        var titleRectHeight = Heatmap.groupTitleRectHeight;\n\n        var depth = self.config.x.groups.keys.length - parentGroup.level;\n\n        var overlap = {\n            top: 0,\n            bottom: 0\n        };\n\n        if (!availableHeight) {\n            overlap.bottom = plot.x.overlap.bottom;\n            overlap.top = plot.x.overlap.top;\n            availableHeight = plot.height + gapSize + overlap.top + overlap.bottom;\n\n        } else {\n            overlap.top = -titleRectHeight;\n        }\n        // console.log('parentGroup',parentGroup, 'gapSize', gapSize, plot.x.overlap);\n\n        var groupsMerge = groupsEnter.merge(groups);\n\n        groupsMerge\n            .attr(\"transform\", (d, i) => {\n                var translate = \"translate(\" + ((plot.cellWidth * valuesBeforeCount) + i * gapSize + gapsBeforeSize + padding) + \", \" + (padding - overlap.top) + \")\";\n                gapsBeforeSize += (d.gapsInsideSize || 0);\n                valuesBeforeCount += d.allValuesCount || 0;\n                return translate\n            });\n\n        var groupHeight = availableHeight - padding * 2;\n\n        var titleGroups = groupsMerge.selectAll(\"g.title\")\n            .attr(\"transform\", (d, i) => \"translate(0, \" + (0) + \")\");\n\n\n        var tileRects = titleGroups.selectAll(\"rect\")\n            .attr(\"height\", titleRectHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            // .attr(\"fill\", \"lightgrey\")\n            .attr(\"stroke-width\", 0);\n\n        this.setGroupMouseCallbacks(parentGroup, tileRects);\n\n\n        groupsMerge.selectAll(\"rect.group-rect\")\n            .attr(\"class\", d=> \"group-rect group-rect-\" + d.index)\n            .attr(\"height\", groupHeight)\n            .attr(\"width\", d=> {\n                return (d.gapsInsideSize || 0) + plot.cellWidth * d.allValuesCount + padding * 2\n            })\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"fill\", \"white\")\n            .attr(\"fill-opacity\", 0)\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"stroke\", \"black\");\n\n        groupsMerge.each(function (group) {\n            self.drawGroupsX.call(self, group, d3.select(this), groupHeight - titleRectHeight);\n        });\n\n        groups.exit().remove();\n\n    }\n\n    setGroupMouseCallbacks(parentGroup, tileRects) {\n        var plot = this.plot;\n        var self = this;\n        var mouseoverCallbacks = [];\n        mouseoverCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', true);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', true);\n        });\n\n        var mouseoutCallbacks = [];\n        mouseoutCallbacks.push(function (d) {\n            d3.select(this).classed('highlighted', false);\n            d3.select(this.parentNode.parentNode).selectAll(\"rect.group-rect-\" + d.index).classed('highlighted', false);\n        });\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(d=> {\n                var html = parentGroup.label + \": \" + d.groupingValue;\n                self.showTooltip(html);\n            });\n\n            mouseoutCallbacks.push(d=> {\n                self.hideTooltip();\n            });\n\n\n        }\n        tileRects.on(\"mouseover\", function (d) {\n            var self = this;\n            mouseoverCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n        tileRects.on(\"mouseout\", function (d) {\n            var self = this;\n            mouseoutCallbacks.forEach(function (callback) {\n                callback.call(self, d)\n            });\n        });\n    }\n\n    updateCells() {\n\n        var self = this;\n        var plot = self.plot;\n        var cellContainerClass = self.prefixClass(\"cells\");\n        var gapSize = Heatmap.computeGapSize(0);\n        var paddingX = plot.x.groups.childrenList.length ? gapSize / 2 : 0;\n        var paddingY = plot.y.groups.childrenList.length ? gapSize / 2 : 0;\n        var cellContainer = self.svgG.selectOrAppend(\"g.\" + cellContainerClass);\n        cellContainer.attr(\"transform\", \"translate(\" + paddingX + \", \" + paddingY + \")\");\n\n        var cellClass = self.prefixClass(\"cell\");\n        var cellShape = plot.z.shape.type;\n\n        var cells = cellContainer.selectAll(\"g.\" + cellClass)\n            .data(self.plot.cells);\n\n        var cellEnter = cells.enter().append(\"g\")\n            .classed(cellClass, true);\n\n        var cellsMerge = cellEnter.merge(cells);\n        cellsMerge.attr(\"transform\", c=> \"translate(\" + ((plot.cellWidth * c.col + plot.cellWidth / 2) + c.colVar.group.gapsSize) + \",\" + ((plot.cellHeight * c.row + plot.cellHeight / 2) + c.rowVar.group.gapsSize) + \")\");\n\n        var shapes = cellsMerge.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n        shapes\n            .attr(\"width\", plot.z.shape.width)\n            .attr(\"height\", plot.z.shape.height)\n            .attr(\"x\", -plot.cellWidth / 2)\n            .attr(\"y\", -plot.cellHeight / 2);\n\n        shapes.style(\"fill\", c=> c.value === undefined ? self.config.color.noDataColor : plot.z.color.scale(c.value));\n        shapes.attr(\"fill-opacity\", d=> d.value === undefined ? 0 : 1);\n\n        var mouseoverCallbacks = [];\n        var mouseoutCallbacks = [];\n\n        if (plot.tooltip) {\n\n            mouseoverCallbacks.push(c=> {\n                var html = c.value === undefined ? self.config.tooltip.noDataText : self.formatValueZ(c.value);\n                self.showTooltip(html);\n\n            });\n\n            mouseoutCallbacks.push(c=> {\n                self.hideTooltip();\n            });\n        }\n\n        if (self.config.highlightLabels) {\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\n\n\n            mouseoverCallbacks.push(c=> {\n\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n            });\n            mouseoutCallbacks.push(c=> {\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n            });\n        }\n\n\n        cellsMerge.on(\"mouseover\", c => {\n            mouseoverCallbacks.forEach(callback=>callback(c));\n        })\n            .on(\"mouseout\", c => {\n                mouseoutCallbacks.forEach(callback=>callback(c));\n            });\n\n        cellsMerge.on(\"click\", c=> {\n            self.trigger(\"cell-selected\", c);\n        });\n\n\n        cells.exit().remove();\n    }\n\n    formatValueX(value) {\n        if (!this.config.x.formatter) return value;\n\n        return this.config.x.formatter.call(this.config, value);\n    }\n\n    formatValueY(value) {\n        if (!this.config.y.formatter) return value;\n\n        return this.config.y.formatter.call(this.config, value);\n    }\n\n    formatValueZ(value) {\n        if (!this.config.z.formatter) return value;\n\n        return this.config.z.formatter.call(this.config, value);\n    }\n\n    formatLegendValue(value) {\n        if (!this.config.legend.formatter) return value;\n\n        return this.config.legend.formatter.call(this.config, value);\n    }\n\n    updateLegend() {\n        var self = this;\n        var plot = this.plot;\n        var legendX = this.plot.width + 10;\n        var gapSize = Heatmap.computeGapSize(0);\n        if (this.plot.groupByY) {\n            legendX += gapSize / 2 + plot.y.overlap.right;\n        } else if (this.plot.groupByX) {\n            legendX += gapSize;\n        }\n        var legendY = 0;\n        if (this.plot.groupByX || this.plot.groupByY) {\n            legendY += gapSize / 2;\n        }\n\n        var barWidth = 10;\n        var barHeight = this.plot.height - 2;\n        var scale = plot.z.color.scale;\n\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY, v => self.formatLegendValue(v)).setRotateLabels(self.config.legend.rotateLabels).linearGradientBar(barWidth, barHeight);\n    }\n\n\n}\n","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class HistogramConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'histogram';\n    showLegend=true;\n    showTooltip =true;\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => Utils.isNumber(d) ? d : parseFloat(d[key]), // x value accessor\n        scale: \"linear\",\n        orient: \"bottom\",\n        ticks: undefined,\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    frequency=true;\n    groups={\n        key: 1\n    };\n    transition= true;\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Histogram extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new HistogramConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new HistogramConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.bar={\n            color: null//color scale mapping function\n        };\n        \n        this.computePlotSize();\n        \n        this.setupX();\n        this.setupHistogram();\n        this.setupGroupStacks();\n        this.setupY();\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n\n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        if(conf.ticks){\n            x.axis.ticks(conf.ticks);\n        }\n        var data = this.plot.groupedData;\n        plot.x.scale.domain([d3.min(data, s=>d3.min(s.values, plot.x.value)), d3.max(data, s=>d3.max(s.values, plot.x.value))]);\n        \n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n        var data = this.plot.data;\n        var yStackMax = d3.max(plot.stackedHistograms, layer => d3.max(layer.histogramBins, d => d.y0 + d.y));\n        plot.y.scale.domain([0, yStackMax]);\n\n    };\n\n\n    setupHistogram() {\n        var plot = this.plot;\n        var x = plot.x;\n        var y = plot.y;\n        var ticks = this.config.x.ticks ? x.scale.ticks(this.config.x.ticks) : x.scale.ticks();\n\n        plot.histogram = d3.histogram()\n            .domain(x.scale.domain())\n            .value(x.value)\n            .thresholds(ticks);\n    }\n\n    setupGroupStacks() {\n        var self=this;\n        var y0s = [];\n        this.plot.groupedData.forEach(d=>{\n            d.histogramBins = this.plot.histogram(d.values);\n\n                d.histogramBins.forEach((b,i) => {\n                    b.x =b.x0;\n                    b.dx = b.x1-b.x0;\n                    b.y = b.length;\n                    var prevY0 = y0s[i];\n                    if(!prevY0) prevY0 = 0;\n                    b.y0 = prevY0;\n\n                    if(!this.config.frequency){\n                        b.y/=this.plot.dataLength\n                    }\n                    y0s[i] = b.y+prevY0;\n                });\n\n\n        });\n        var keys = this.plot.groupedData.map(d=>d.key);\n        // console.log(this.plot.groupedData);\n\n        this.plot.stack = d3.stack().keys(keys).value(d=>d.histogramBins);\n        this.plot.stackedHistograms = this.plot.groupedData;\n    }\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.config.transition) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n\n    drawHistogram() {\n        var self = this;\n        var plot = self.plot;\n        \n        var layerClass = this.prefixClass(\"layer\");\n\n        var barClass = this.prefixClass(\"bar\");\n        var layer = self.svgG.selectAll(\".\"+layerClass)\n            .data(plot.stackedHistograms);\n\n        var layerMerge = layer.enter().append(\"g\")\n            .attr(\"class\", layerClass).merge(layer);\n\n\n        var bar = layerMerge.selectAll(\".\"+barClass)\n            .data(d => d.histogramBins);\n\n        var barEnter = bar.enter().append(\"g\");\n        barEnter\n            .attr(\"class\", barClass)\n            .append(\"rect\")\n            .attr(\"x\", 1);\n\n        var barMerge = barEnter.merge(bar);\n        var barRect = barMerge.select(\"rect\");\n\n        var barRectT = barRect;\n        var barT = barMerge;\n        var layerT = layerMerge;\n        if (this.transitionEnabled()) {\n            barRectT = barRect.transition();\n            barT = barMerge.transition();\n            layerT= layerMerge.transition();\n        }\n\n        barT.attr(\"transform\", function(d) { return \"translate(\" + plot.x.scale(d.x) + \",\" + (plot.y.scale(d.y0 +d.y)) + \")\"; });\n        var rectWidth = plot.stackedHistograms.length ? (plot.stackedHistograms[0].histogramBins.length ?  plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x1)-plot.x.scale(plot.stackedHistograms[0].histogramBins[0].x0)-1 : 0) : 0;\n\n\n        barRectT\n            .attr(\"width\",  d=>  Math.max(0, plot.x.scale(d.x1)-plot.x.scale(d.x0)-1) )\n            .attr(\"height\", d =>   plot.height - plot.y.scale(d.y));\n\n        if(this.plot.color){\n            layerT\n                .attr(\"fill\", this.plot.seriesColor);\n        }\n\n        if (plot.tooltip) {\n            barMerge.on(\"mouseover\", d => {\n                self.showTooltip(d.y);\n            }).on(\"mouseout\", d => {\n                self.hideTooltip();\n            });\n        }\n        layer.exit().remove();\n        bar.exit().remove();\n    }\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.drawHistogram();\n        return this;\n    };\n}\n","import {D3Extensions} from './d3-extensions'\nD3Extensions.extend();\n\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\nexport {Regression, RegressionConfig} from './regression'\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\nexport {Heatmap, HeatmapConfig} from './heatmap'\nexport {HeatmapTimeSeries, HeatmapTimeSeriesConfig} from './heatmap-timeseries'\nexport {Histogram, HistogramConfig} from './histogram'\nexport {BarChart, BarChartConfig} from './bar-chart'\nexport {BoxPlotBase, BoxPlotBaseConfig} from './box-plot-base'\nexport {BoxPlot, BoxPlotConfig} from './box-plot'\nexport {DivergingStackedBarChart, DivergingStackedBarChartConfig} from './diverging-stacked-bar-chart'\nexport {LineChart, LineChartConfig} from './line-chart'\nexport {StatisticsUtils} from './statistics-utils'\nexport {Utils} from './utils'\nexport {Legend} from './legend'\n\n\n\n\n\n","import {Utils} from \"./utils\";\n\nimport {legendColor, legendSize, legendSymbol} from 'd3-svg-legend'\n\n\n/*var d3 = require('../bower_components/d3');\n*/\n// var legend = require('../bower_components/d3-legend/no-extend');\n//\n// module.exports.legend = legend;\n\nexport class Legend {\n\n    cssClassPrefix=\"odc-\";\n    legendClass=this.cssClassPrefix+\"legend\";\n    container;\n    scale;\n    color= legendColor;\n    size = legendSize;\n    symbol= legendSymbol;\n    guid;\n\n    labelFormat = undefined;\n\n    constructor(svg, legendParent, scale, legendX, legendY, labelFormat){\n        this.scale=scale;\n        this.svg = svg;\n        this.guid = Utils.guid();\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\n            .classed(this.legendClass, true);\n\n        this.labelFormat = labelFormat;\n    }\n\n\n\n    linearGradientBar(barWidth, barHeight, title){\n        var gradientId = this.cssClassPrefix+\"linear-gradient\"+\"-\"+this.guid;\n        var scale= this.scale;\n        var self = this;\n\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n        this.container.selectOrAppend(\"rect\")\n            .attr(\"width\", barWidth)\n            .attr(\"height\", barHeight)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\n\n\n        var ticks = this.container.selectAll(\"text\")\n            .data( scale.domain() );\n        var ticksNumber =scale.domain().length-1;\n        var ticksMerge = ticks.enter().append(\"text\").merge(ticks);\n\n        ticksMerge.attr(\"x\", barWidth)\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\n            .attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(d=> self.labelFormat ? self.labelFormat(d) : d);\n        ticksMerge.attr(\"dominant-baseline\", \"middle\")\n        if(this.rotateLabels){\n            ticksMerge\n                .attr(\"transform\", (d, i) => \"rotate(-45, \" + barWidth + \", \" + (barHeight -(i*barHeight/ticksNumber)) + \")\")\n                .attr(\"text-anchor\", \"start\")\n                .attr(\"dx\", 5)\n                .attr(\"dy\", 5);\n\n        }else{\n\n        }\n\n        ticks.exit().remove();\n\n        return this;\n    }\n\n    setRotateLabels(rotateLabels) {\n        this.rotateLabels = rotateLabels;\n        return this;\n    }\n\n    \n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class LineChartConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'line-chart';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n    lineId = (d, i)=> undefined;\n    transition= true;\n    onLineHover = (d, i) => {};\n    onLineHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class LineChart extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new LineChartConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new LineChartConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n        this.updateLines();\n    };\n\n    updateLines() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var lineClass = this.lineClass = self.prefixClass('line');\n        self.linesContainerClass = self.prefixClass('lines-container');\n\n        var linesContainer = self.svgG.selectOrAppend(\"g.\" + self.linesContainerClass);\n\n        var layer = linesContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n        var linePathEnter = layerEnter.append(\"path\")\n            .attr(\"class\", lineClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var linePath = layerMerge.select('.' + lineClass)\n            .datum(d=>d.values);\n\n        var linePathMerge = linePathEnter.merge(linePath);\n\n        var linePathT = linePathMerge;\n        if (self.transitionEnabled()) {\n            linePathT = linePathMerge.transition();\n        }\n\n        var line = d3.line()\n            .x(plot.x.map)\n            .y(plot.y.map);\n\n        linePathT\n            .attr(\"fill\", \"none\")\n            // .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-linejoin\", \"round\")\n            .attr(\"stroke-linecap\", \"round\")\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"id\", this.config.lineId)\n            .attr(\"d\", line);\n\n\n        //TODO add tooltip\n\n        linePathMerge.on(\"mouseover.onLineHover\", this.config.onLineHover);\n        linePathMerge.on(\"mouseout.onLineHoverOut\", this.config.onLineHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"stroke\", plot.seriesColor)\n        }else if(plot.color){\n            linePathMerge.style(\"stroke\", plot.color)\n        }\n\n        linePath.exit().remove();\n        var dotClass = this.dotClass = self.prefixClass('dot');\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values);\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n\n\n\n        layer.exit().remove();\n    }\n}\n","import {Chart, ChartConfig} from \"./chart\";\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {StatisticsUtils} from './statistics-utils'\nimport * as d3 from './d3'\n\nexport class RegressionConfig extends ScatterPlotConfig{\n\n    mainRegression = true;\n    groupRegression = true;\n    confidence={\n        level: 0.95,\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\n        marginOfError: undefined, //custom  margin Of Error function (x, points)\n        areaCurve: d3.curveNatural\n    };\n\n    constructor(custom){\n        super();\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class Regression extends ScatterPlot{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new RegressionConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new RegressionConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        this.initRegressionLines();\n    }\n\n    initRegressionLines(){\n\n        var self = this;\n        var groupsAvailable = self.plot.groupingEnabled;\n\n        self.plot.regressions= [];\n\n\n        if(groupsAvailable && self.config.mainRegression){\n            var regression = this.initRegression(this.plot.data, false);\n            self.plot.regressions.push(regression);\n        }\n\n        if(self.config.groupRegression){\n            this.initGroupRegression();\n        }\n\n    }\n\n    initGroupRegression() {\n        var self = this;\n\n        self.plot.groupedData.forEach(group=>{\n            if(group.values.length<2){\n                return;\n            }\n\n            var regression = this.initRegression(group.values, group.key);\n            self.plot.regressions.push(regression);\n        });\n    }\n\n    initRegression(values, groupVal){\n        var self = this;\n\n        var points = values.map(d=>{\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n        });\n\n        // points.sort((a,b) => a[0]-b[0]);\n\n        var linearRegression =  StatisticsUtils.linearRegression(points);\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\n\n\n        var extentX = d3.extent(points, d=>d[0]);\n\n\n        var linePoints = [\n            {\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            },\n            {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }\n        ];\n\n        var line = d3.line()\n            .curve(d3.curveBasis)\n            .x(d => self.plot.x.scale(d.x))\n            .y(d => self.plot.y.scale(d.y));\n\n        var color = self.plot.color;\n\n        var defaultColor = \"black\";\n        if(Utils.isFunction(color)){\n            if(values.length && groupVal!==false){\n                if(self.config.series){\n                    color =self.plot.colorCategory(groupVal);\n                }else{\n                    color = color(values[0]);\n                }\n\n            }else{\n                color = defaultColor;\n            }\n        }else if(!color && groupVal===false){\n            color = defaultColor;\n        }\n\n\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\n        return {\n            group: groupVal || false,\n            line: line,\n            linePoints: linePoints,\n            color: color,\n            confidence: confidence\n        };\n    }\n\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\n        var self = this;\n        var slope = linearRegression.m;\n        var n = points.length;\n        var degreesOfFreedom = Math.max(0, n-2);\n\n        var alpha = 1 - self.config.confidence.level;\n        var criticalProbability  = 1 - alpha/2;\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\n\n        var xValues = points.map(d=>d[0]);\n        var meanX = StatisticsUtils.mean(xValues);\n        var xMySum=0;\n        var xSum=0;\n        var xPowSum=0;\n        var ySum=0;\n        var yPowSum=0;\n        points.forEach(p=>{\n            var x = p[0];\n            var y = p[1];\n\n            xMySum += x*y;\n            xSum+=x;\n            ySum+=y;\n            xPowSum+= x*x;\n            yPowSum+= y*y;\n        });\n        var a = linearRegression.m;\n        var b = linearRegression.b;\n\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\n\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n        var marginOfError =  x=> criticalValue* errorFn(x);\n\n\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n\n        var computeConfidenceAreaPoint = x=>{\n            var linearRegression = linearRegressionLine(x);\n            var moe = marginOfError(x);\n            var confDown = linearRegression - moe;\n            var confUp = linearRegression + moe;\n            return {\n                x: x,\n                y0: confDown,\n                y1: confUp\n            }\n\n        };\n\n        var centerX = (extentX[1]+extentX[0])/2;\n\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n\n        var fitInPlot = y => y;\n\n        var confidenceArea =  d3.area()\n        .curve(self.config.confidence.areaCurve)\n            .x(d => self.plot.x.scale(d.x))\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\n\n        return {\n            area:confidenceArea,\n            points:confidenceAreaPoints\n        };\n    }\n\n    update(newData){\n        super.update(newData);\n        this.updateRegressionLines();\n\n    };\n\n    updateRegressionLines() {\n        var self = this;\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\n\n        var clipPathId = self.prefixClass(\"clip\");\n\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\n            .attr(\"id\", clipPathId);\n\n\n        regressionContainerClip.selectOrAppend('rect')\n            .attr('width', self.plot.width)\n            .attr('height', self.plot.height)\n            .attr('x', 0)\n            .attr('y', 0);\n\n        regressionContainer.attr(\"clip-path\", (d,i) => \"url(#\"+clipPathId+\")\");\n\n        var regressionClass = this.prefixClass(\"regression\");\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\n        var regressionSelector = \"g.\"+regressionClass;\n        var regression = regressionContainer.selectAll(regressionSelector)\n            .data(self.plot.regressions, (d,i)=> d.group);\n\n\n        var regressionEnter = regression.enter().appendSelector(regressionSelector);\n        var regressionMerge = regressionEnter.merge(regression);\n        var lineClass = self.prefixClass(\"line\");\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", lineClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\");\n\n        var line = regressionMerge.select(\"path.\"+lineClass)\n            .style(\"stroke\", r => r.color);\n        \n        var lineT = line;\n        if (self.transitionEnabled()) {\n            lineT = line.transition();\n        }\n\n        lineT.attr(\"d\", r => r.line(r.linePoints))\n\n\n        regressionEnter\n            .append(\"path\")\n            .attr(\"class\", confidenceAreaClass)\n            .attr(\"shape-rendering\", \"optimizeQuality\")\n            .style(\"opacity\", \"0.4\");\n\n\n\n        var area = regressionMerge.select(\"path.\"+confidenceAreaClass);\n\n        var areaT = area;\n        if (self.transitionEnabled()) {\n            areaT = area.transition();\n        }\n        areaT.attr(\"d\", r => r.confidence.area(r.confidence.points));\n        areaT.style(\"fill\", r => r.color)\n        regression.exit().remove();\n\n    }\n\n\n\n}\n\n","import {ChartWithColorGroups} from \"./chart-with-color-groups\";\nimport {ScatterPlotConfig} from \"./scatterplot\";\nimport {Utils} from './utils'\nimport {Legend} from \"./legend\";\nimport * as d3 from './d3'\n\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\n    size= undefined; //scatter plot cell size\n    minCellSize = 50;\n    maxCellSize = 1000;\n    padding= 20; //scatter plot cell padding\n    brush= true;\n    guides= true; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n    ticks= undefined; //ticks number, (default: computed using cell size)\n    x={// X axis config\n        orient: \"bottom\",\n        scale: \"linear\"\n    };\n    y={// Y axis config\n        orient: \"left\",\n        scale: \"linear\"\n    };\n    groups={\n        key: undefined, //object property name or array index with grouping variable\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\n    };\n    variables= {\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\n        keys: [], //optional array of variable keys\n        value: (d, variableKey) => d[variableKey] // variable value accessor\n    };\n\n    constructor(custom){\n        super();\n        Utils.deepExtend(this, custom);\n    }\n\n\n}\n\nexport class ScatterPlotMatrix extends ChartWithColorGroups {\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\n    }\n\n    setConfig(config) {\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\n\n    }\n\n    initPlot() {\n        super.initPlot();\n\n        var self = this;\n        var margin = this.plot.margin;\n        var conf = this.config;\n        this.plot.x={};\n        this.plot.y={};\n        this.plot.dot={\n            color: null//color scale mapping function\n        };\n        \n        this.setupVariables();\n\n        this.plot.size = conf.size;\n\n\n        var width = conf.width;\n        var availableWidth = Utils.availableWidth(this.config.width, this.getBaseContainer(), margin);\n        var availableHeight = Utils.availableHeight(this.config.height, this.getBaseContainer(), margin);\n        if (!width) {\n            if(!this.plot.size){\n                this.plot.size =  Math.min(conf.maxCellSize, Math.max(conf.minCellSize, availableWidth/this.plot.variables.length));\n            }\n            width = margin.left + margin.right + this.plot.variables.length*this.plot.size;\n        }\n        if(!this.plot.size){\n            this.plot.size = (width - (margin.left + margin.right)) / this.plot.variables.length;\n        }\n\n        var height = width;\n        if (!height) {\n            height = availableHeight;\n        }\n\n        this.plot.width = width - margin.left - margin.right;\n        this.plot.height = height - margin.top - margin.bottom;\n\n\n        this.plot.ticks = conf.ticks;\n\n        if(this.plot.ticks===undefined){\n            this.plot.ticks = this.plot.size / 40;\n        }\n\n        this.setupX();\n        this.setupY();\n\n        return this;\n\n    };\n\n    setupVariables() {\n        var variablesConf = this.config.variables;\n\n        var data = this.plot.groupedData;\n        var plot = this.plot;\n        plot.domainByVariable = {};\n        plot.variables = variablesConf.keys;\n        if(!plot.variables || !plot.variables.length){\n\n            plot.variables = data.length ? Utils.inferVariables(data[0].values, this.config.groups.key, this.config.includeInPlot) : [];\n        }\n\n        plot.labels = [];\n        plot.labelByVariable = {};\n        plot.variables.forEach((variableKey, index) => {\n            var min = d3.min(data, s=>d3.min(s.values, d=>variablesConf.value(d, variableKey)));\n            var max = d3.max(data, s=>d3.max(s.values, d=>variablesConf.value(d, variableKey)));\n            plot.domainByVariable[variableKey] = [min,max];\n            var label = variableKey;\n            if(variablesConf.labels && variablesConf.labels.length>index){\n\n                label = variablesConf.labels[index];\n            }\n            plot.labels.push(label);\n            plot.labelByVariable[variableKey] = label;\n        });\n\n        plot.subplots = [];\n    };\n\n    setupX() {\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config;\n\n        \n        x.value = conf.variables.value;\n        x.scale = Utils.createScale(conf.x.scale).range([conf.padding / 2, plot.size - conf.padding / 2]);\n        x.map = (d, variable) => x.scale(x.value(d, variable));\n\n        x.axis = Utils.createAxis(conf.x.orient, x.scale).ticks(plot.ticks);\n        x.axis.tickSize(plot.size * plot.variables.length);\n\n    };\n\n    setupY() {\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config;\n\n        y.value = conf.variables.value;\n        y.scale = Utils.createScale(conf.y.scale).range([ plot.size - conf.padding / 2, conf.padding / 2]);\n\n        y.map = (d, variable) => y.scale(y.value(d, variable));\n        y.axis = Utils.createAxis(conf.y.orient, y.scale).ticks(plot.ticks);\n        y.axis.tickSize(-plot.size * plot.variables.length);\n    };\n\n    update( newData) {\n        super.update(newData);\n\n        var self =this;\n        var n = self.plot.variables.length;\n        var conf = this.config;\n\n        var axisClass = self.prefixClass(\"axis\");\n        var axisXClass = axisClass+\"-x\";\n        var axisYClass = axisClass+\"-y\";\n\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\n\n        var noGuidesClass = self.prefixClass(\"no-guides\");\n        var xAxis = self.svgG.selectAll(xAxisSelector)\n            .data(self.plot.variables);\n\n        var xAxisMerge = xAxis.enter().appendSelector(xAxisSelector)\n            .classed(noGuidesClass, !conf.guides).merge(xAxis);\n\n\n        xAxisMerge.attr(\"transform\", (d, i) => \"translate(\" + (n - i - 1) * self.plot.size + \",0)\")\n            .each(function(d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);\n                var axis = d3.select(this);\n                if (self.transitionEnabled()) {\n                    axis = axis.transition();\n                }\n                axis.call(self.plot.x.axis);\n\n            });\n\n        xAxis.exit().remove();\n\n        var yAxis = self.svgG.selectAll(yAxisSelector)\n            .data(self.plot.variables);\n        var yAxisMerge = yAxis.enter().appendSelector(yAxisSelector).merge(yAxis);\n        yAxisMerge.classed(noGuidesClass, !conf.guides)\n            .attr(\"transform\", (d, i) => \"translate(0,\" + i * self.plot.size + \")\");\n        yAxisMerge.each(function(d) {\n            self.plot.y.scale.domain(self.plot.domainByVariable[d]);\n            var axis = d3.select(this);\n            if (self.transitionEnabled()) {\n                axis = axis.transition();\n            }\n            axis.call(self.plot.y.axis);\n\n        });\n\n        yAxis.exit().remove();\n\n        var cellClass =  self.prefixClass(\"cell\");\n        var cell = self.svgG.selectAll(\".\"+cellClass)\n            .data(self.utils.cross(self.plot.variables, self.plot.variables));\n\n        var cellEnter =  cell.enter().appendSelector(\"g.\"+cellClass);\n        cellEnter.filter(d => d.i === d.j).append(\"text\");\n\n        var cellMerge = cellEnter.merge(cell);\n        cellMerge.attr(\"transform\", d => \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\");\n\n        if(conf.brush){\n            this.drawBrush(cellMerge);\n        }\n\n\n        cellMerge.each(plotSubplot);\n\n        //Labels\n        cellMerge.select(\"text\")\n            .attr(\"x\", conf.padding)\n            .attr(\"y\", conf.padding)\n            .attr(\"dy\", \".71em\")\n            .text( d => self.plot.labelByVariable[d.x]);\n\n        cell.exit().remove();\n\n        function plotSubplot(p) {\n            var plot = self.plot;\n            plot.subplots.push(p);\n            var cell = d3.select(this);\n\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n            var frameClass =  self.prefixClass(\"frame\");\n            cell.selectOrAppend(\"rect.\"+frameClass)\n                .attr(\"class\", frameClass)\n                .attr(\"x\", conf.padding / 2)\n                .attr(\"y\", conf.padding / 2)\n                .attr(\"width\", plot.size - conf.padding)\n                .attr(\"height\", plot.size - conf.padding);\n            \n            p.update = function() {\n\n                var subplot = this;\n                var layerClass = self.prefixClass('layer');\n\n\n                var layer = cell.selectAll(\"g.\"+layerClass).data(self.plot.groupedData);\n\n                var layerMerge = layer.enter().appendSelector(\"g.\"+layerClass).merge(layer);\n\n                var dots = layerMerge.selectAll(\"circle\")\n                    .data(d=>d.values);\n\n                var dotsMerge = dots.enter().append(\"circle\").merge(dots);\n\n                var dotsT = dotsMerge;\n                if (self.transitionEnabled()) {\n                    dotsT = dotsMerge.transition();\n                }\n\n                dotsT.attr(\"cx\", (d) => plot.x.map(d, subplot.x))\n                    .attr(\"cy\", (d) => plot.y.map(d, subplot.y))\n                    .attr(\"r\", self.config.dotRadius);\n\n\n                if (plot.seriesColor) {\n                    layerMerge.style(\"fill\", plot.seriesColor)\n                }else if(plot.color){\n                    dotsMerge.style(\"fill\", plot.color)\n                }\n\n\n                if (plot.tooltip) {\n                    dotsMerge.on(\"mouseover\", (d) => {\n\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                        var group = self.config.groups ? self.config.groups.value.call(self.config, d) : null;\n                        if (group || group === 0) {\n                            group = plot.groupToLabel[group];\n                            html += \"<br/>\";\n                            var label = self.config.groups.label;\n                            if (label) {\n                                html += label + \": \";\n                            }\n                            html += group\n                        }\n                        self.showTooltip(html);\n                    })\n                        .on(\"mouseout\", (d)=> {\n                            self.hideTooltip();\n                        });\n                }\n\n                dots.exit().remove();\n                layer.exit().remove();\n            };\n            p.update();\n\n        }\n    };\n\n    drawBrush(cell) {\n        var self = this;\n        var hiddenClass = self.plot.hiddenClass =  self.prefixClass(\"hidden\");\n        var brush = d3.brush()\n            // .x(self.plot.x.scale)\n            // .y(self.plot.y.scale)\n            .on(\"start\", brushstart)\n            .on(\"brush\", brushmove)\n            .on(\"end\", brushend);\n\n        brush.extent([[0, 0], [self.plot.size, self.plot.size]]);\n        cell.selectOrAppend(\"g.brush-container\").call(brush);\n\n        self.clearBrush();\n\n        // Clear the previously-active brush, if any.\n        function brushstart(p) {\n            if (self.plot.brushCell !== this) {\n                self.clearBrush();\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                self.plot.brushCell = this;\n                self.plot.brush = brush;\n            }\n        }\n\n        // Highlight the selected circles.\n        function brushmove(p) {\n            var s = d3.event.selection;\n            if(!s)return;\n            var e = s.map(_=> [self.plot.x.scale.invert(_[0]), self.plot.y.scale.invert(_[1])]);\n            // console.log(e);\n\n            self.svgG.selectAll(\"circle\").classed(hiddenClass, function (d) {\n                var x = parseFloat(d[p.x]),\n                    y = parseFloat(d[p.y]);\n\n                return e[0][0] > x || x > e[1][0]\n                    || e[1][1] > y || y > e[0][1];\n            });\n        }\n        // If the brush is empty, select all circles.\n        function brushend() {\n            if (!d3.event.selection) self.svgG.selectAll(\".\"+hiddenClass).classed(hiddenClass, false);\n        }\n    };\n\n    clearBrush(){\n        var self = this;\n        if(!self.plot.brushCell){\n            return;\n        }\n        \n        self.plot.brush.move(d3.select(self.plot.brushCell), null);\n        self.svgG.selectAll(\".\"+self.plot.hiddenClass).classed(self.plot.hiddenClass, false);\n        self.plot.brushCell=null;\n\n    }\n}","import {ChartWithColorGroups, ChartWithColorGroupsConfig} from \"./chart-with-color-groups\";\nimport {Utils} from './utils'\nimport * as d3 from './d3'\n\nexport class ScatterPlotConfig extends ChartWithColorGroupsConfig{\n\n    svgClass= this.cssClassPrefix+'scatterplot';\n    guides= false; //show axis guides\n    showTooltip= true; //show tooltip on dot hover\n\n    x={// X axis config\n        title: '', // axis label\n        key: 0,\n        value: (d, key) => d[key], // x value accessor\n        orient: \"bottom\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    y={// Y axis config\n        title: '', // axis label,\n        key: 1,\n        value: (d, key) => d[key], // y value accessor\n        orient: \"left\",\n        scale: \"linear\",\n        domainMargin: 0.05\n    };\n    groups={\n        key: 2\n    };\n    dotRadius = 2;\n    dotId = (d, i)=> undefined;\n    transition= true;\n    onDotHover = (d, i) => {};\n    onDotHoverOut = (d, i) => {};\n\n    constructor(custom){\n        super();\n\n\n\n        if(custom){\n            Utils.deepExtend(this, custom);\n        }\n\n    }\n}\n\nexport class ScatterPlot extends ChartWithColorGroups{\n    constructor(placeholderSelector, data, config) {\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\n    }\n\n    setConfig(config){\n        return super.setConfig(new ScatterPlotConfig(config));\n    }\n\n    initPlot(){\n        super.initPlot();\n        var self=this;\n\n        var conf = this.config;\n\n        this.plot.x={};\n        this.plot.y={};\n\n        this.computePlotSize();\n        this.setupX();\n        this.setupY();\n\n        return this;\n    }\n\n    setupX(){\n\n        var plot = this.plot;\n        var x = plot.x;\n        var conf = this.config.x;\n\n        /* *\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         **/\n        x.value = d => conf.value(d, conf.key);\n        \n        x.scale = Utils.createScale(conf.scale).range([0, plot.width]);\n        x.map = d => x.scale(x.value(d));\n        \n        x.axis = Utils.createAxis(conf.orient, x.scale);\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.x.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.x.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.x.scale.domain(domain);\n        if(this.config.guides) {\n            x.axis.tickSize(-plot.height);\n        }\n\n    };\n\n    setupY (){\n\n        var plot = this.plot;\n        var y = plot.y;\n        var conf = this.config.y;\n\n        /*\n         * value accessor - returns the value to encode for a given data object.\n         * scale - maps value to a visual display encoding, such as a pixel position.\n         * map function - maps from data value to display value\n         * axis - sets up axis\n         */\n        y.value = d => conf.value(d, conf.key);\n\n        y.scale = Utils.createScale(conf.scale).range([plot.height, 0]);\n\n        y.map = d => y.scale(y.value(d));\n\n        y.axis = Utils.createAxis(conf.orient, y.scale);\n\n        if(this.config.guides){\n            y.axis.tickSize(-plot.width);\n        }\n\n\n        var data = this.plot.groupedData;\n\n        var domain = [parseFloat(d3.min(data, s=>d3.min(s.values, plot.y.value))), parseFloat(d3.max(data, s=>d3.max(s.values, plot.y.value)))];\n        var extent = (domain[1]-domain[0]) || 1;\n        var margin = (extent)* conf.domainMargin;\n\n        domain[0]-=margin;\n        domain[1]+=margin;\n        plot.y.scale.domain(domain);\n        // plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\n    };\n\n    drawAxisX(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.x;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\");\n        \n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.x.axis);\n        \n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (plot.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    drawAxisY(){\n        var self = this;\n        var plot = self.plot;\n        var axisConf = this.config.y;\n        var axis = self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')));\n\n        var axisT = axis;\n        if (self.transitionEnabled()) {\n            axisT = axis.transition().ease(d3.easeSinInOut);\n        }\n\n        axisT.call(plot.y.axis);\n\n        axis.selectOrAppend(\"text.\"+self.prefixClass('label'))\n            .attr(\"transform\", \"translate(\"+ -plot.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(axisConf.title);\n    };\n\n    update(newData){\n        super.update(newData);\n        this.drawAxisX();\n        this.drawAxisY();\n\n        this.updateDots();\n    };\n\n    updateDots() {\n        var self = this;\n        var plot = self.plot;\n        var data = plot.data;\n        var layerClass = self.prefixClass('layer');\n        var dotClass = this.dotClass = self.prefixClass('dot');\n        self.dotsContainerClass = self.prefixClass('dots-container');\n\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n        var layer = dotsContainer.selectAll(\"g.\"+layerClass).data(plot.groupedData);\n\n        var layerEnter = layer.enter().appendSelector(\"g.\"+layerClass);\n\n        var layerMerge = layerEnter.merge(layer);\n\n        var dots = layerMerge.selectAll('.' + dotClass)\n            .data(d=>d.values)\n\n        var dotsEnter = dots.enter().append(\"circle\")\n            .attr(\"class\", dotClass);\n\n        var dotsMerge = dotsEnter.merge(dots);\n\n        var dotsT = dotsMerge;\n        if (self.transitionEnabled()) {\n            dotsT = dotsMerge.transition();\n        }\n\n        dotsT.attr(\"r\", self.config.dotRadius)\n            .attr(\"cx\", plot.x.map)\n            .attr(\"cy\", plot.y.map)\n            .attr(\"id\", this.config.dotId);\n\n        if (plot.tooltip) {\n            dotsMerge.on(\"mouseover\", d => {\n                var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                var group = self.config.groups ?  self.config.groups.value.call(self.config,d) : null;\n                if (group || group === 0) {\n                    group = plot.groupToLabel[group];\n                    html += \"<br/>\";\n                    var label = self.config.groups.label;\n                    if (label) {\n                        html += label + \": \";\n                    }\n                    html += group\n                }\n                self.showTooltip(html);\n            })\n                .on(\"mouseout\", d => {\n                    self.hideTooltip();\n                });\n        }\n\n        dotsMerge.on(\"mouseover.onDotHover\", this.config.onDotHover);\n        dotsMerge.on(\"mouseout.onDotHoverOut\", this.config.onDotHoverOut);\n\n        if (plot.seriesColor) {\n            layerMerge.style(\"fill\", plot.seriesColor)\n        }else if(plot.color){\n            dotsMerge.style(\"fill\", plot.color)\n        }\n\n        dots.exit().remove();\n        layer.exit().remove();\n    }\n}\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\n\nvar su = module.exports.StatisticsUtils ={};\nsu.sampleCorrelation = require('simple-statistics/src/sample_correlation');\nsu.linearRegression = require('simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('simple-statistics/src/error_function');\nsu.standardDeviation = require('simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('simple-statistics/src/sample_standard_deviation');\nsu.variance = require('simple-statistics/src/variance');\nsu.mean = require('simple-statistics/src/mean');\nsu.zScore = require('simple-statistics/src/z_score');\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\nsu.quantile = require('simple-statistics/src/quantile');\n\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return tdistr(degreesOfFreedom, criticalProbability);\n};","import * as d3 from './d3'\n\nexport class Utils {\n    static SQRT_2 = 1.41421356237;\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n    static deepExtend(out) {\n\n        var utils = this;\n        var emptyOut = {};\n\n\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n            out = [];\n        }\n        out = out || {};\n\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            if (!source)\n                continue;\n\n            for (var key in source) {\n                if (!source.hasOwnProperty(key)) {\n                    continue;\n                }\n                var isArray = Array.isArray(out[key]);\n                var isObject = utils.isObject(out[key]);\n                var srcObj = utils.isObject(source[key]);\n\n                if (isObject && !isArray && srcObj) {\n                    utils.deepExtend(out[key], source[key]);\n                } else {\n                    out[key] = source[key];\n                }\n            }\n        }\n\n        return out;\n    };\n\n    static mergeDeep(target, source) {\n        let output = Object.assign({}, target);\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n            Object.keys(source).forEach(key => {\n                if (Utils.isObjectNotArray(source[key])) {\n                    if (!(key in target))\n                        Object.assign(output, {[key]: source[key]});\n                    else\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\n                } else {\n                    Object.assign(output, {[key]: source[key]});\n                }\n            });\n        }\n        return output;\n    }\n\n    static cross(a, b) {\n        var c = [], n = a.length, m = b.length, i, j;\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\n        return c;\n    };\n\n    static inferVariables(data, groupKey, includeGroup) {\n        var res = [];\n        if(!data){\n            return res;\n        }\n\n        if (data.length) {\n            var d = data[0];\n            if (d instanceof Array) {\n                res = d.map(function (v, i) {\n                    return i;\n                });\n            } else if (typeof d === 'object') {\n\n                for (var prop in d) {\n                    if (!d.hasOwnProperty(prop)) continue;\n\n                    res.push(prop);\n                }\n            }\n        }\n        if (groupKey !== null && groupKey !== undefined && !includeGroup) {\n            var index = res.indexOf(groupKey);\n            if (index > -1) {\n                res.splice(index, 1);\n            }\n        }\n        return res\n    };\n\n    static isObjectNotArray(item) {\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\n    };\n\n    static isArray(item) {\n        return Array.isArray(item);\n    };\n\n    static isObject(a) {\n        return a !== null && typeof a === 'object';\n    };\n\n    static isNumber(a) {\n        return !isNaN(a) && typeof a === 'number';\n    };\n\n    static isFunction(a) {\n        return typeof a === 'function';\n    };\n\n    static isDate(a){\n        return Object.prototype.toString.call(a) === '[object Date]'\n    }\n\n    static isString(a){\n        return typeof a === 'string' || a instanceof String\n    }\n\n    static insertOrAppendSelector(parent, selector, operation, before) {\n\n        var selectorParts = selector.split(/([\\.\\#])/);\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\n        \n        while (selectorParts.length > 1) {\n            var selectorModifier = selectorParts.shift();\n            var selectorItem = selectorParts.shift();\n            if (selectorModifier === \".\") {\n                element = element.classed(selectorItem, true);\n            } else if (selectorModifier === \"#\") {\n                element = element.attr('id', selectorItem);\n            }\n        }\n        return element;\n    }\n\n    static insertSelector(parent, selector, before) {\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n    }\n\n    static appendSelector(parent, selector) {\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\n    }\n\n    static selectOrAppend(parent, selector, element) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            if (element) {\n                return parent.append(element);\n            }\n            return Utils.appendSelector(parent, selector);\n\n        }\n        return selection;\n    };\n\n    static selectOrInsert(parent, selector, before) {\n        var selection = parent.select(selector);\n        if (selection.empty()) {\n            return Utils.insertSelector(parent, selector, before);\n        }\n        return selection;\n    };\n\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n        var defs = Utils.selectOrAppend(svg, \"defs\");\n        var linearGradient = defs.append(\"linearGradient\")\n            .attr(\"id\", gradientId);\n\n        linearGradient\n            .attr(\"x1\", x1 + \"%\")\n            .attr(\"y1\", y1 + \"%\")\n            .attr(\"x2\", x2 + \"%\")\n            .attr(\"y2\", y2 + \"%\");\n\n        //Append multiple color stops by using D3's data/enter step\n        var stops = linearGradient.selectAll(\"stop\")\n            .data(range);\n\n        var stopsMerge = stops.enter().append(\"stop\").merge(stops);\n\n        stopsMerge.attr(\"offset\", (d, i) => i / (range.length - 1))\n            .attr(\"stop-color\", d => d);\n\n        stops.exit().remove();\n    }\n\n    static sanitizeHeight = function (height, container) {\n        return (height || parseInt(container.style('height'), 10) || 400);\n    };\n\n    static sanitizeWidth = function (width, container) {\n        return (width || parseInt(container.style('width'), 10) || 960);\n    };\n\n    static availableHeight = function (height, container, margin) {\n        return Math.max(0, Utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n    };\n\n    static availableWidth = function (width, container, margin) {\n        return Math.max(0, Utils.sanitizeWidth(width, container) - margin.left - margin.right);\n    };\n\n    static guid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    //places textString in textObj, adds an ellipsis if text can't fit in width\n    static placeTextWithEllipsis(textD3Obj, textString, width){\n        var textObj = textD3Obj.node();\n        textObj.textContent=textString;\n\n        var margin = 0;\n        var ellipsisLength = 9;\n        //ellipsis is needed\n        if (textObj.getComputedTextLength()>width+margin){\n            for (var x=textString.length-3;x>0;x-=1){\n                if (textObj.getSubStringLength(0,x)+ellipsisLength<=width+margin){\n                    textObj.textContent=textString.substring(0,x)+\"...\";\n                    return true;\n                }\n            }\n            textObj.textContent=\"...\"; //can't place at all\n            return true;\n        }\n        return false;\n    }\n\n    static placeTextWithEllipsisAndTooltip(textD3Obj, textString, width, tooltip){\n        var ellipsisPlaced = Utils.placeTextWithEllipsis(textD3Obj, textString, width);\n        if(ellipsisPlaced && tooltip){\n            textD3Obj.on(\"mouseover\", function (d) {\n                tooltip.transition()\n                    .duration(200)\n                    .style(\"opacity\", .9);\n                tooltip.html(textString)\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\n            });\n\n            textD3Obj.on(\"mouseout\", function (d) {\n                tooltip.transition()\n                    .duration(500)\n                    .style(\"opacity\", 0);\n            });\n        }\n\n    }\n\n    static getFontSize(element){\n        return window.getComputedStyle(element, null).getPropertyValue(\"font-size\");\n    }\n\n    static capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    static createScale(scaleName) {\n        var scaleFunctionName = 'scale'+Utils.capitalizeFirstLetter(scaleName);\n        try{\n            return d3[scaleFunctionName]();\n        }catch (e){\n            throw 'ODC-D3 - scale not supported: '+scaleName+ ' ('+scaleFunctionName+')';\n        }\n    }\n\n    static createAxis(orient, scale){\n        var axisFnName = 'axis'+Utils.capitalizeFirstLetter(orient);\n        try{\n            return d3[axisFnName](scale)\n        }catch (e){\n            throw 'ODC-D3 - axis orient not supported: '+orient;\n        }\n    }\n}\n"]}