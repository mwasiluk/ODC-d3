{"version":3,"sources":["node_modules/browser-pack/_prelude.js","bower_components/simple-statistics/src/error_function.js","odc-d3.js","bower_components/simple-statistics/src/linear_regression.js","bower_components/simple-statistics/src/linear_regression_line.js","bower_components/simple-statistics/src/mean.js","bower_components/simple-statistics/src/sample_correlation.js","bower_components/simple-statistics/src/sample_covariance.js","bower_components/simple-statistics/src/sample_standard_deviation.js","bower_components/simple-statistics/src/sample_variance.js","bower_components/simple-statistics/src/standard_deviation.js","bower_components/simple-statistics/src/sum.js","bower_components/simple-statistics/src/sum_nth_power_deviations.js","bower_components/simple-statistics/src/variance.js","bower_components/simple-statistics/src/z_score.js","src/chart.js","src/correlation-matrix.js","src/d3-extensions.js","src/index.js","src/legend.js","src/regression.js","src/scatterplot-matrix.js","src/scatterplot.js","src/statistics-distributions.js","src/statistics-utils.js","src/utils.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ODCD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","errorFunction","x","Math","abs","tau","exp","pow","2","linearRegression","data","m","b","dataLength","point","y","sumX","sumY","sumXX","sumXY","3","linearRegressionLine","mb","4","mean","NaN","sum","./sum","5","sampleCorrelation","cov","sampleCovariance","xstd","sampleStandardDeviation","ystd","./sample_covariance","./sample_standard_deviation","6","xmean","ymean","besselsCorrection","./mean","7","sampleVarianceX","sampleVariance","isNaN","sqrt","./sample_variance","8","sumSquaredDeviationsValue","sumNthPowerDeviations","./sum_nth_power_deviations","9","standardDeviation","v","variance","./variance","10","correctedCurrentValue","nextSum","errorCompensation","11","meanValue","12","13","zScore","14","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","Chart","ChartConfig","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","custom","cssClassPrefix","svgClass","width","height","margin","left","right","top","bottom","tooltip","Utils","deepExtend","base","config","utils","plot","_attached","_layers","_events","_isInitialized","_isAttached","baseContainer","setConfig","setData","init","postInit","initPlot","initSvg","initTooltip","draw","svg","svgG","selectOrAppend","d3","select","remove","attr","on","style","attachmentData","attachmentName","update","chart","arguments","name","callback","context","events","push","_chart","once","off","apply","names","event","j","keys","splice","ev","args","Array","slice","node","clazz","addDot","./utils","15","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","CorrelationMatrix","CorrelationMatrixConfig","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_statisticsUtils","_legend","_scatterplot","_ChartConfig","_this","guides","legend","highlightLabels","variables","labels","d","variableKey","scale","correlation","domain","range","xValues","yValues","StatisticsUtils","cell","shape","size","sizeMin","sizeMax","padding","_Chart","placeholderSelector","conf","matrix","cells","color","setupVariables","placeholderNode","getBaseContainerNode","parentWidth","getBoundingClientRect","cellSize","max","min","setupVariablesScales","setupCorrelationScales","setupCorrelationMatrix","rangeBands","map","corrConf","cellConf","type","shapeSize","radiusMax","radiusScale","linear","radius","c","radiusX","radiusY","rotateVal","variablesConf","domainByVariable","inferVariables","groups","includeInPlot","labelByVariable","forEach","index","extent","label","matrixCells","variableToValues","v1","row","v2","corr","rowVar","colVar","col","newData","updateCells","updateVariableLabels","updateLegend","labelClass","prefixClass","labelXClass","labelYClass","labelsX","selectAll","enter","append","text","exit","labelsY","cellClass","cellShape","classed","scatterPlot","selector","wrongShapes","shapes","mouseoverCallbacks","mouseoutCallbacks","transition","duration","html","pageX","pageY","highlightClass","xLabelClass","yLabelClass","trigger","legendX","legendY","barWidth","barHeight","Legend","linearGradientBar","containerSelector","_this3","scatterPlotConfig","ScatterPlot","attach","./chart","./legend","./scatterplot","./statistics-utils","16","D3Extensions","selection","insertSelector","before","appendSelector","selectOrInsert","17","RegressionConfig","Regression","ScatterPlotMatrixConfig","ScatterPlotMatrix","ScatterPlotConfig","_scatterplotMatrix","_correlationMatrix","_regression","_d3Extensions","extend","./correlation-matrix","./d3-extensions","./regression","./scatterplot-matrix","18","legendParent","legendClass","container","gradientId","linearGradient","ticks","ticksNumber","19","_ScatterPlotConfig","mainRegression","groupRegression","confidence","level","criticalValue","degreesOfFreedom","criticalProbability","tValue","marginOfError","_ScatterPlot","initRegressionLines","groupsAvailable","regressions","regression","initRegression","initGroupRegression","dataByGroup","groupVal","hasOwnProperty","values","points","parseFloat","extentX","linePoints","line","interpolate","dot","defaultColor","isFunction","computeConfidence","group","alpha","meanX","xMySum","xSum","xPowSum","ySum","yPowSum","p","Sa2","Sy2","errorFn","computeConfidenceAreaPoint","moe","confDown","confUp","y0","y1","centerX","confidenceAreaPoints","fitInPlot","confidenceArea","area","updateRegressionLines","regressionContainerClass","regressionContainerSelector","clipPathId","regressionContainer","dotsContainerClass","regressionContainerClip","regressionClass","confidenceAreaClass","regressionSelector","20","brush","orient","boundingClientRect","maxWidth","setupX","setupY","d3ColorCategory","colorCategory","colorValue","String","subplots","variable","axis","tickSize","plotSubplot","frameClass","subplot","dots","axisClass","axisXClass","axisYClass","xAxisSelector","yAxisSelector","noGuidesClass","each","cross","drawBrush","filter","brushstart","brushCell","clear","brushmove","brushend","empty","21","drawAxisX","drawAxisY","axisConf","dotClass","dotsContainer","dotsT","22","tdistr","$n","$p","integer","precision_string","_subt","_subu","$y","log","$x","$u","$u2","$a","$b","$c","$d","$e","log10","$round","$p1","_subtprob","$n1","$delta","PI","round_to_precision","$w","atan2","$z","cos","$i","sin","$max","precision","SIGNIFICANT","round","floor","ceil","23","_statisticsDistributions","su","standardError","arr","../bower_components/simple-statistics/src/error_function","../bower_components/simple-statistics/src/linear_regression","../bower_components/simple-statistics/src/linear_regression_line","../bower_components/simple-statistics/src/mean","../bower_components/simple-statistics/src/sample_correlation","../bower_components/simple-statistics/src/sample_standard_deviation","../bower_components/simple-statistics/src/standard_deviation","../bower_components/simple-statistics/src/variance","../bower_components/simple-statistics/src/z_score","./statistics-distributions","24","_defineProperty","obj","_typeof","Symbol","iterator","out","isArray","source","isObject","srcObj","output","assign","isObjectNotArray","mergeDeep","groupKey","includeGroup","res","prop","indexOf","item","operation","selectorParts","split","element","shift","selectorModifier","selectorItem","insertOrAppendSelector","x1","x2","y2","defs","stops"],"mappings":"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","file":"odc-d3.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\r\n *\r\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\r\n * normal distribution with standard deviation sd is within x of the mean.\r\n *\r\n * This function returns a numerical approximation to the exact value.\r\n *\r\n * @param {number} x input\r\n * @return {number} error estimation\r\n * @example\r\n * errorFunction(1); //= 0.8427\r\n */\r\nfunction errorFunction(x/*: number */)/*: number */ {\r\n    var t = 1 / (1 + 0.5 * Math.abs(x));\r\n    var tau = t * Math.exp(-Math.pow(x, 2) -\r\n        1.26551223 +\r\n        1.00002368 * t +\r\n        0.37409196 * Math.pow(t, 2) +\r\n        0.09678418 * Math.pow(t, 3) -\r\n        0.18628806 * Math.pow(t, 4) +\r\n        0.27886807 * Math.pow(t, 5) -\r\n        1.13520398 * Math.pow(t, 6) +\r\n        1.48851587 * Math.pow(t, 7) -\r\n        0.82215223 * Math.pow(t, 8) +\r\n        0.17087277 * Math.pow(t, 9));\r\n    if (x >= 0) {\r\n        return 1 - tau;\r\n    } else {\r\n        return tau - 1;\r\n    }\r\n}\r\n\r\nmodule.exports = errorFunction;\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ODCD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * **[Gaussian error function](http://en.wikipedia.org/wiki/Error_function)**\r\n *\r\n * The `errorFunction(x/(sd * Math.sqrt(2)))` is the probability that a value in a\r\n * normal distribution with standard deviation sd is within x of the mean.\r\n *\r\n * This function returns a numerical approximation to the exact value.\r\n *\r\n * @param {number} x input\r\n * @return {number} error estimation\r\n * @example\r\n * errorFunction(1); //= 0.8427\r\n */\n\nfunction errorFunction(x /*: number */) /*: number */{\n    var t = 1 / (1 + 0.5 * Math.abs(x));\n    var tau = t * Math.exp(-Math.pow(x, 2) - 1.26551223 + 1.00002368 * t + 0.37409196 * Math.pow(t, 2) + 0.09678418 * Math.pow(t, 3) - 0.18628806 * Math.pow(t, 4) + 0.27886807 * Math.pow(t, 5) - 1.13520398 * Math.pow(t, 6) + 1.48851587 * Math.pow(t, 7) - 0.82215223 * Math.pow(t, 8) + 0.17087277 * Math.pow(t, 9));\n    if (x >= 0) {\n        return 1 - tau;\n    } else {\n        return tau - 1;\n    }\n}\n\nmodule.exports = errorFunction;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\r\n * is a simple way to find a fitted line\r\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\r\n * using the least sum of squares.\r\n *\r\n * @param {Array<Array<number>>} data an array of two-element of arrays,\r\n * like `[[0, 1], [2, 3]]`\r\n * @returns {Object} object containing slope and intersect of regression line\r\n * @example\r\n * linearRegression([[0, 0], [1, 1]]); // { m: 1, b: 0 }\r\n */\n\nfunction linearRegression(data /*: Array<Array<number>> */) /*: { m: number, b: number } */{\n\n    var m, b;\n\n    // Store data length in a local variable to reduce\n    // repeated object property lookups\n    var dataLength = data.length;\n\n    //if there's only one point, arbitrarily choose a slope of 0\n    //and a y-intercept of whatever the y of the initial point is\n    if (dataLength === 1) {\n        m = 0;\n        b = data[0][1];\n    } else {\n        // Initialize our sums and scope the `m` and `b`\n        // variables that define the line.\n        var sumX = 0,\n            sumY = 0,\n            sumXX = 0,\n            sumXY = 0;\n\n        // Use local variables to grab point values\n        // with minimal object property lookups\n        var point, x, y;\n\n        // Gather the sum of all x values, the sum of all\n        // y values, and the sum of x^2 and (x*y) for each\n        // value.\n        //\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\n        for (var i = 0; i < dataLength; i++) {\n            point = data[i];\n            x = point[0];\n            y = point[1];\n\n            sumX += x;\n            sumY += y;\n\n            sumXX += x * x;\n            sumXY += x * y;\n        }\n\n        // `m` is the slope of the regression line\n        m = (dataLength * sumXY - sumX * sumY) / (dataLength * sumXX - sumX * sumX);\n\n        // `b` is the y-intercept of the line.\n        b = sumY / dataLength - m * sumX / dataLength;\n    }\n\n    // Return both values as an object.\n    return {\n        m: m,\n        b: b\n    };\n}\n\nmodule.exports = linearRegression;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Given the output of `linearRegression`: an object\r\n * with `m` and `b` values indicating slope and intercept,\r\n * respectively, generate a line function that translates\r\n * x values into y values.\r\n *\r\n * @param {Object} mb object with `m` and `b` members, representing\r\n * slope and intersect of desired line\r\n * @returns {Function} method that computes y-value at any given\r\n * x-value on the line.\r\n * @example\r\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\r\n * l(0) //= 0\r\n * l(2) //= 2\r\n */\n\nfunction linearRegressionLine(mb /*: { b: number, m: number }*/) /*: Function */{\n    // Return a function that computes a `y` value for each\n    // x value it is given, based on the values of `b` and `a`\n    // that we just computed.\n    return function (x) {\n        return mb.b + mb.m * x;\n    };\n}\n\nmodule.exports = linearRegressionLine;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sum = require('./sum');\n\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\nfunction mean(x /*: Array<number> */) /*:number*/{\n    // The mean of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    return sum(x) / x.length;\n}\n\nmodule.exports = mean;\n\n},{\"./sum\":10}],5:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleCovariance = require('./sample_covariance');\nvar sampleStandardDeviation = require('./sample_standard_deviation');\n\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\nfunction sampleCorrelation(x /*: Array<number> */, y /*: Array<number> */) /*:number*/{\n    var cov = sampleCovariance(x, y),\n        xstd = sampleStandardDeviation(x),\n        ystd = sampleStandardDeviation(y);\n\n    return cov / xstd / ystd;\n}\n\nmodule.exports = sampleCorrelation;\n\n},{\"./sample_covariance\":6,\"./sample_standard_deviation\":7}],6:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/) /*:number*/{\n\n    // The two datasets must have the same length which must be more than 1\n    if (x.length <= 1 || x.length !== y.length) {\n        return NaN;\n    }\n\n    // determine the mean of each dataset so that we can judge each\n    // value of the dataset fairly as the difference from the mean. this\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\n    // does not suffer because of the difference in absolute values\n    var xmean = mean(x),\n        ymean = mean(y),\n        sum = 0;\n\n    // for each pair of values, the covariance increases when their\n    // difference from the mean is associated - if both are well above\n    // or if both are well below\n    // the mean, the covariance increases significantly.\n    for (var i = 0; i < x.length; i++) {\n        sum += (x[i] - xmean) * (y[i] - ymean);\n    }\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // the covariance is weighted by the length of the datasets.\n    return sum / besselsCorrection;\n}\n\nmodule.exports = sampleCovariance;\n\n},{\"./mean\":4}],7:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sampleVariance = require('./sample_variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\nfunction sampleStandardDeviation(x /*:Array<number>*/) /*:number*/{\n  // The standard deviation of no numbers is null\n  var sampleVarianceX = sampleVariance(x);\n  if (isNaN(sampleVarianceX)) {\n    return NaN;\n  }\n  return Math.sqrt(sampleVarianceX);\n}\n\nmodule.exports = sampleStandardDeviation;\n\n},{\"./sample_variance\":8}],8:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\nfunction sampleVariance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length <= 1) {\n        return NaN;\n    }\n\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\n\n    // this is Bessels' Correction: an adjustment made to sample statistics\n    // that allows for the reduced degree of freedom entailed in calculating\n    // values from samples rather than complete populations.\n    var besselsCorrection = x.length - 1;\n\n    // Find the mean value of that list\n    return sumSquaredDeviationsValue / besselsCorrection;\n}\n\nmodule.exports = sampleVariance;\n\n},{\"./sum_nth_power_deviations\":11}],9:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar variance = require('./variance');\n\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance. It's useful for measuring the amount\r\n * of variation or dispersion in a set of values.\r\n *\r\n * Standard deviation is only appropriate for full-population knowledge: for\r\n * samples of a population, {@link sampleStandardDeviation} is\r\n * more appropriate.\r\n *\r\n * @param {Array<number>} x input\r\n * @returns {number} standard deviation\r\n * @example\r\n * var scores = [2, 4, 4, 4, 5, 5, 7, 9];\r\n * variance(scores); //= 4\r\n * standardDeviation(scores); //= 2\r\n */\nfunction standardDeviation(x /*: Array<number> */) /*:number*/{\n  // The standard deviation of no numbers is null\n  var v = variance(x);\n  if (isNaN(v)) {\n    return 0;\n  }\n  return Math.sqrt(v);\n}\n\nmodule.exports = standardDeviation;\n\n},{\"./variance\":12}],10:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\n\nfunction sum(x /*: Array<number> */) /*: number */{\n\n    // like the traditional sum algorithm, we keep a running\n    // count of the current sum.\n    var sum = 0;\n\n    // but we also keep three extra variables as bookkeeping:\n    // most importantly, an error correction value. This will be a very\n    // small number that is the opposite of the floating point precision loss.\n    var errorCompensation = 0;\n\n    // this will be each number in the list corrected with the compensation value.\n    var correctedCurrentValue;\n\n    // and this will be the next sum\n    var nextSum;\n\n    for (var i = 0; i < x.length; i++) {\n        // first correct the value that we're going to add to the sum\n        correctedCurrentValue = x[i] - errorCompensation;\n\n        // compute the next sum. sum is likely a much larger number\n        // than correctedCurrentValue, so we'll lose precision here,\n        // and measure how much precision is lost in the next step\n        nextSum = sum + correctedCurrentValue;\n\n        // we intentionally didn't assign sum immediately, but stored\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\n        // not equal to 0? ideally it would be, but in practice it won't:\n        // it will be some very small number. that's what we record\n        // as errorCompensation.\n        errorCompensation = nextSum - sum - correctedCurrentValue;\n\n        // now that we've computed how much we'll correct for in the next\n        // loop, start treating the nextSum as the current sum.\n        sum = nextSum;\n    }\n\n    return sum;\n}\n\nmodule.exports = sum;\n\n},{}],11:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar mean = require('./mean');\n\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\nfunction sumNthPowerDeviations(x /*: Array<number> */, n /*: number */) /*:number*/{\n    var meanValue = mean(x),\n        sum = 0;\n\n    for (var i = 0; i < x.length; i++) {\n        sum += Math.pow(x[i] - meanValue, n);\n    }\n\n    return sum;\n}\n\nmodule.exports = sumNthPowerDeviations;\n\n},{\"./mean\":4}],12:[function(require,module,exports){\n'use strict';\n/* @flow */\n\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\n\n/**\r\n * The [variance](http://en.wikipedia.org/wiki/Variance)\r\n * is the sum of squared deviations from the mean.\r\n *\r\n * This is an implementation of variance, not sample variance:\r\n * see the `sampleVariance` method if you want a sample measure.\r\n *\r\n * @param {Array<number>} x a population\r\n * @returns {number} variance: a value greater than or equal to zero.\r\n * zero indicates that all values are identical.\r\n * @example\r\n * ss.variance([1, 2, 3, 4, 5, 6]); //= 2.917\r\n */\nfunction variance(x /*: Array<number> */) /*:number*/{\n    // The variance of no numbers is null\n    if (x.length === 0) {\n        return NaN;\n    }\n\n    // Find the mean of squared deviations between the\n    // mean value and each value.\n    return sumNthPowerDeviations(x, 2) / x.length;\n}\n\nmodule.exports = variance;\n\n},{\"./sum_nth_power_deviations\":11}],13:[function(require,module,exports){\n'use strict';\n/* @flow */\n\n/**\r\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\r\n *\r\n * The standard score is the number of standard deviations an observation\r\n * or datum is above or below the mean. Thus, a positive standard score\r\n * represents a datum above the mean, while a negative standard score\r\n * represents a datum below the mean. It is a dimensionless quantity\r\n * obtained by subtracting the population mean from an individual raw\r\n * score and then dividing the difference by the population standard\r\n * deviation.\r\n *\r\n * The z-score is only defined if one knows the population parameters;\r\n * if one only has a sample set, then the analogous computation with\r\n * sample mean and sample standard deviation yields the\r\n * Student's t-statistic.\r\n *\r\n * @param {number} x\r\n * @param {number} mean\r\n * @param {number} standardDeviation\r\n * @return {number} z score\r\n * @example\r\n * ss.zScore(78, 80, 5); //= -0.4\r\n */\n\nfunction zScore(x /*:number*/, mean /*:number*/, standardDeviation /*:number*/) /*:number*/{\n  return (x - mean) / standardDeviation;\n}\n\nmodule.exports = zScore;\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Chart = exports.ChartConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ChartConfig = exports.ChartConfig = function ChartConfig(custom) {\n    _classCallCheck(this, ChartConfig);\n\n    this.cssClassPrefix = \"odc-\";\n    this.svgClass = this.cssClassPrefix + 'mw-d3-chart';\n    this.width = undefined;\n    this.height = undefined;\n    this.margin = {\n        left: 50,\n        right: 30,\n        top: 30,\n        bottom: 50\n    };\n    this.tooltip = false;\n\n    if (custom) {\n        _utils.Utils.deepExtend(this, custom);\n    }\n};\n\nvar Chart = exports.Chart = function () {\n    function Chart(base, data, config) {\n        _classCallCheck(this, Chart);\n\n        this.utils = _utils.Utils;\n        this.plot = {\n            margin: {}\n        };\n        this._attached = {};\n        this._layers = {};\n        this._events = {};\n        this._isInitialized = false;\n\n\n        this._isAttached = base instanceof Chart;\n\n        this.baseContainer = base;\n\n        this.setConfig(config);\n\n        if (data) {\n            this.setData(data);\n        }\n\n        this.init();\n        this.postInit();\n    }\n\n    _createClass(Chart, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            if (!config) {\n                this.config = new ChartConfig();\n            } else {\n                this.config = config;\n            }\n\n            return this;\n        }\n    }, {\n        key: 'setData',\n        value: function setData(data) {\n            this.data = data;\n            return this;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n\n            self.initPlot();\n            self.initSvg();\n\n            self.initTooltip();\n            self.draw();\n            this._isInitialized = true;\n            return this;\n        }\n    }, {\n        key: 'postInit',\n        value: function postInit() {}\n    }, {\n        key: 'initSvg',\n        value: function initSvg() {\n            var self = this;\n            var config = this.config;\n            void 0;\n\n            var width = self.plot.width + config.margin.left + config.margin.right;\n            var height = self.plot.height + config.margin.top + config.margin.bottom;\n            var aspect = width / height;\n            if (!self._isAttached) {\n                if (!this._isInitialized) {\n                    d3.select(self.baseContainer).select(\"svg\").remove();\n                }\n                self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\n\n                self.svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height).attr(\"preserveAspectRatio\", \"xMidYMid meet\").attr(\"class\", config.svgClass);\n                self.svgG = self.svg.selectOrAppend(\"g.main-group\");\n            } else {\n                void 0;\n                self.svg = self.baseContainer.svg;\n                self.svgG = self.svg.selectOrAppend(\"g.main-group.\" + config.svgClass);\n            }\n\n            self.svgG.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\n\n            if (!config.width || config.height) {\n                d3.select(window).on(\"resize\", function () {\n                    //TODO add responsiveness if width/height not specified\n                });\n            }\n        }\n    }, {\n        key: 'initTooltip',\n        value: function initTooltip() {\n            var self = this;\n            if (self.config.tooltip) {\n                if (!self._isAttached) {\n                    self.plot.tooltip = d3.select(self.baseContainer).selectOrAppend('div.' + self.config.cssClassPrefix + 'tooltip').style(\"opacity\", 0);\n                } else {\n                    self.plot.tooltip = self.baseContainer.plot.tooltip;\n                }\n            }\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {}\n    }, {\n        key: 'update',\n        value: function update(data) {\n            if (data) {\n                this.setData(data);\n            }\n            var layerName, attachmentData;\n            for (var attachmentName in this._attached) {\n\n                attachmentData = data;\n\n                this._attached[attachmentName].update(attachmentData);\n            }\n            void 0;\n            return this;\n        }\n    }, {\n        key: 'draw',\n        value: function draw(data) {\n            this.update(data);\n\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n         * method will be invoked whenever the containing chart's `draw` method is\r\n         * invoked.\r\n         *\r\n         * @externalExample chart-attach\r\n         *\r\n         * @param {String} attachmentName Name of the attachment\r\n         * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n         *        unspecified, this method will return the attachment previously\r\n         *        registered with the specified `attachmentName` (if any).\r\n         *\r\n         * @returns {Chart} Reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'attach',\n        value: function attach(attachmentName, chart) {\n            if (arguments.length === 1) {\n                return this._attached[attachmentName];\n            }\n\n            this._attached[attachmentName] = chart;\n            return chart;\n        }\n    }, {\n        key: 'on',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Subscribe a callback function to an event triggered on the chart. See {@link\r\n            * Chart#once} to subscribe a callback function to an event for one occurence.\r\n         *\r\n         * @externalExample {runnable} chart-on\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function on(name, callback, context) {\n            var events = this._events[name] || (this._events[name] = []);\n            events.push({\n                callback: callback,\n                context: context || this,\n                _chart: this\n            });\n            return this;\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         *\r\n         * Subscribe a callback function to an event triggered on the chart. This\r\n         * function will be invoked at the next occurance of the event and immediately\r\n         * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n         * event indefinitely.\r\n         *\r\n         * @externalExample {runnable} chart-once\r\n         *\r\n         * @param {String} name Name of the event\r\n         * @param {ChartEventHandler} callback Function to be invoked when the event\r\n         *        occurs\r\n         * @param {Object} [context] Value to set as `this` when invoking the\r\n         *        `callback`. Defaults to the chart instance\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable)\r\n         */\n\n    }, {\n        key: 'once',\n        value: function once(name, callback, context) {\n            var self = this;\n            var once = function once() {\n                self.off(name, once);\n                callback.apply(this, arguments);\n            };\n            return this.on(name, once, context);\n        }\n\n        //Borrowed from d3.chart\n        /**\r\n         * Unsubscribe one or more callback functions from an event triggered on the\r\n         * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n         * When only a `name` is specified, all handlers subscribed to that event will\r\n         * be unsubscribed. When a `name` and `callback` are specified, only that\r\n         * function will be unsubscribed from that event. When a `name` and `context`\r\n         * are specified (but `callback` is omitted), all events bound to the given\r\n         * event with the given context will be unsubscribed.\r\n         *\r\n         * @externalExample {runnable} chart-off\r\n         *\r\n         * @param {String} [name] Name of the event to be unsubscribed\r\n         * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n         * @param {Object} [context] Contexts to be unsubscribe\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n\n    }, {\n        key: 'off',\n        value: function off(name, callback, context) {\n            var names, n, events, event, i, j;\n\n            // remove all events\n            if (arguments.length === 0) {\n                for (name in this._events) {\n                    this._events[name].length = 0;\n                }\n                return this;\n            }\n\n            // remove all events for a specific name\n            if (arguments.length === 1) {\n                events = this._events[name];\n                if (events) {\n                    events.length = 0;\n                }\n                return this;\n            }\n\n            // remove all events that match whatever combination of name, context\n            // and callback.\n            names = name ? [name] : Object.keys(this._events);\n            for (i = 0; i < names.length; i++) {\n                n = names[i];\n                events = this._events[n];\n                j = events.length;\n                while (j--) {\n                    event = events[j];\n                    if (callback && callback === event.callback || context && context === event.context) {\n                        events.splice(j, 1);\n                    }\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'trigger',\n\n\n        //Borrowed from d3.chart\n        /**\r\n         * Publish an event on this chart with the given `name`.\r\n         *\r\n         * @externalExample {runnable} chart-trigger\r\n         *\r\n         * @param {String} name Name of the event to publish\r\n         * @param {...*} arguments Values with which to invoke the registered\r\n         *        callbacks.\r\n         *\r\n         * @returns {Chart} A reference to this chart (chainable).\r\n         */\n        value: function trigger(name) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            var events = this._events[name];\n            var i, ev;\n\n            if (events !== undefined) {\n                for (i = 0; i < events.length; i++) {\n                    ev = events[i];\n                    ev.callback.apply(ev.context, args);\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: 'getBaseContainerNode',\n        value: function getBaseContainerNode() {\n            if (this._isAttached) {\n                return this.baseContainer.svg.node();\n            }\n            return d3.select(this.baseContainer).node();\n        }\n    }, {\n        key: 'prefixClass',\n        value: function prefixClass(clazz, addDot) {\n            return addDot ? '.' : '' + this.config.cssClassPrefix + clazz;\n        }\n    }]);\n\n    return Chart;\n}();\n\n},{\"./utils\":24}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.CorrelationMatrix = exports.CorrelationMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nvar _statisticsUtils = require('./statistics-utils');\n\nvar _legend = require('./legend');\n\nvar _scatterplot = require('./scatterplot');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CorrelationMatrixConfig = exports.CorrelationMatrixConfig = function (_ChartConfig) {\n    _inherits(CorrelationMatrixConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function CorrelationMatrixConfig(custom) {\n        _classCallCheck(this, CorrelationMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrixConfig).call(this));\n\n        _this.svgClass = 'odc-correlation-matrix';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.legend = true;\n        _this.highlightLabels = true;\n        _this.variables = {\n            labels: undefined,\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                return d[variableKey];\n            }, // variable value accessor\n            scale: \"ordinal\"\n        };\n        _this.correlation = {\n            scale: \"linear\",\n            domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\n            range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\n            value: function value(xValues, yValues) {\n                return _statisticsUtils.StatisticsUtils.sampleCorrelation(xValues, yValues);\n            }\n\n        };\n        _this.cell = {\n            shape: \"ellipse\", //possible values: rect, circle, ellipse\n            size: undefined,\n            sizeMin: 5,\n            sizeMax: 250,\n            padding: 1\n        };\n        _this.margin = {\n            left: 60,\n            right: 50,\n            top: 30,\n            bottom: 60\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n        return _this;\n    } //show axis guides\n\n\n    return CorrelationMatrixConfig;\n}(_chart.ChartConfig);\n\nvar CorrelationMatrix = exports.CorrelationMatrix = function (_Chart) {\n    _inherits(CorrelationMatrix, _Chart);\n\n    function CorrelationMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, CorrelationMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(CorrelationMatrix).call(this, placeholderSelector, data, new CorrelationMatrixConfig(config)));\n    }\n\n    _createClass(CorrelationMatrix, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'setConfig', this).call(this, new CorrelationMatrixConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                correlation: {\n                    matrix: undefined,\n                    cells: undefined,\n                    color: {},\n                    shape: {}\n                }\n\n            };\n            this.setupVariables();\n            var width = conf.width;\n            var placeholderNode = this.getBaseContainerNode();\n            this.plot.placeholderNode = placeholderNode;\n\n            var parentWidth = placeholderNode.getBoundingClientRect().width;\n            if (width) {\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\n                }\n            } else {\n                this.plot.cellSize = this.config.cell.size;\n\n                if (!this.plot.cellSize) {\n                    this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth - margin.left - margin.right) / this.plot.variables.length));\n                }\n\n                width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\n            }\n\n            var height = width;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = this.plot.width;\n\n            this.setupVariablesScales();\n            this.setupCorrelationScales();\n            this.setupCorrelationMatrix();\n\n            return this;\n        }\n    }, {\n        key: 'setupVariablesScales',\n        value: function setupVariablesScales() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.variables;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = conf.value;\n            x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n        }\n    }, {\n        key: 'setupCorrelationScales',\n        value: function setupCorrelationScales() {\n            var plot = this.plot;\n            var corrConf = this.config.correlation;\n\n            plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\n            var shape = plot.correlation.shape = {};\n\n            var cellConf = this.config.cell;\n            shape.type = cellConf.shape;\n\n            var shapeSize = plot.cellSize - cellConf.padding * 2;\n            if (shape.type == 'circle') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\n                shape.radius = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n            } else if (shape.type == 'ellipse') {\n                var radiusMax = shapeSize / 2;\n                shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\n                shape.radiusX = function (c) {\n                    return shape.radiusScale(Math.abs(c.value));\n                };\n                shape.radiusY = radiusMax;\n\n                shape.rotateVal = function (v) {\n                    if (v == 0) return \"0\";\n                    if (v < 0) return \"-45\";\n                    return \"45\";\n                };\n            } else if (shape.type == 'rect') {\n                shape.size = shapeSize;\n            }\n        }\n    }, {\n        key: 'setupVariables',\n        value: function setupVariables() {\n\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n        }\n    }, {\n        key: 'setupCorrelationMatrix',\n        value: function setupCorrelationMatrix() {\n            var self = this;\n            var data = this.data;\n            var matrix = this.plot.correlation.matrix = [];\n            var matrixCells = this.plot.correlation.matrix.cells = [];\n            var plot = this.plot;\n\n            var variableToValues = {};\n            plot.variables.forEach(function (v, i) {\n\n                variableToValues[v] = data.map(function (d) {\n                    return plot.x.value(d, v);\n                });\n            });\n\n            plot.variables.forEach(function (v1, i) {\n                var row = [];\n                matrix.push(row);\n\n                plot.variables.forEach(function (v2, j) {\n                    var corr = 1;\n                    if (v1 != v2) {\n                        corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\n                    }\n                    var cell = {\n                        rowVar: v1,\n                        colVar: v2,\n                        row: i,\n                        col: j,\n                        value: corr\n                    };\n                    row.push(cell);\n\n                    matrixCells.push(cell);\n                });\n            });\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(CorrelationMatrix.prototype), 'update', this).call(this, newData);\n            // this.update\n            this.updateCells();\n            this.updateVariableLabels();\n\n            if (this.config.legend) {\n                this.updateLegend();\n            }\n        }\n    }, {\n        key: 'updateVariableLabels',\n        value: function updateVariableLabels() {\n            var self = this;\n            var plot = self.plot;\n            var labelClass = self.prefixClass(\"label\");\n            var labelXClass = labelClass + \"-x\";\n            var labelYClass = labelClass + \"-y\";\n            plot.labelClass = labelClass;\n\n            var labelsX = self.svgG.selectAll(\"text.\" + labelXClass).data(plot.variables, function (d, i) {\n                return i;\n            });\n\n            labelsX.enter().append(\"text\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelXClass + \" \" + labelXClass + \"-\" + i;\n            });\n\n            labelsX.attr(\"x\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"y\", plot.height).attr(\"dx\", -2).attr(\"transform\", function (d, i) {\n                return \"rotate(-90, \" + (i * plot.cellSize + plot.cellSize / 2) + \", \" + plot.height + \")\";\n            }).attr(\"text-anchor\", \"end\")\n\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            labelsX.exit().remove();\n\n            //////\n\n            var labelsY = self.svgG.selectAll(\"text.\" + labelYClass).data(plot.variables);\n\n            labelsY.enter().append(\"text\");\n\n            labelsY.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                return i * plot.cellSize + plot.cellSize / 2;\n            }).attr(\"dx\", -2).attr(\"text-anchor\", \"end\").attr(\"class\", function (d, i) {\n                return labelClass + \" \" + labelYClass + \" \" + labelYClass + \"-\" + i;\n            })\n            // .attr(\"dominant-baseline\", \"hanging\")\n            .text(function (v) {\n                return plot.labelByVariable[v];\n            });\n\n            labelsY.exit().remove();\n        }\n    }, {\n        key: 'updateCells',\n        value: function updateCells() {\n\n            var self = this;\n            var plot = self.plot;\n            var cellClass = self.prefixClass(\"cell\");\n            var cellShape = plot.correlation.shape.type;\n\n            var cells = self.svgG.selectAll(\"g.\" + cellClass).data(plot.correlation.matrix.cells);\n\n            var cellEnterG = cells.enter().append(\"g\").classed(cellClass, true);\n            cells.attr(\"transform\", function (c) {\n                return \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\";\n            });\n\n            cells.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\n\n            var selector = \"*:not(.cell-shape-\" + cellShape + \")\";\n\n            var wrongShapes = cells.selectAll(selector);\n            wrongShapes.remove();\n\n            var shapes = cells.selectOrAppend(cellShape + \".cell-shape-\" + cellShape);\n\n            if (plot.correlation.shape.type == 'circle') {\n\n                shapes.attr(\"r\", plot.correlation.shape.radius).attr(\"cx\", 0).attr(\"cy\", 0);\n            }\n\n            if (plot.correlation.shape.type == 'ellipse') {\n                // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\n                shapes.attr(\"rx\", plot.correlation.shape.radiusX).attr(\"ry\", plot.correlation.shape.radiusY).attr(\"cx\", 0).attr(\"cy\", 0).attr(\"transform\", function (c) {\n                    return \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\";\n                });\n            }\n\n            if (plot.correlation.shape.type == 'rect') {\n                shapes.attr(\"width\", plot.correlation.shape.size).attr(\"height\", plot.correlation.shape.size).attr(\"x\", -plot.cellSize / 2).attr(\"y\", -plot.cellSize / 2);\n            }\n            shapes.style(\"fill\", function (c) {\n                return plot.correlation.color.scale(c.value);\n            });\n\n            var mouseoverCallbacks = [];\n            var mouseoutCallbacks = [];\n\n            if (plot.tooltip) {\n\n                mouseoverCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = c.value;\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                });\n\n                mouseoutCallbacks.push(function (c) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (self.config.highlightLabels) {\n                var highlightClass = self.config.cssClassPrefix + \"highlight\";\n                var xLabelClass = function xLabelClass(c) {\n                    return plot.labelClass + \"-x-\" + c.col;\n                };\n                var yLabelClass = function yLabelClass(c) {\n                    return plot.labelClass + \"-y-\" + c.row;\n                };\n\n                mouseoverCallbacks.push(function (c) {\n\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\n                });\n                mouseoutCallbacks.push(function (c) {\n                    self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\n                    self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\n                });\n            }\n\n            cells.on(\"mouseover\", function (c) {\n                mouseoverCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            }).on(\"mouseout\", function (c) {\n                mouseoutCallbacks.forEach(function (callback) {\n                    return callback(c);\n                });\n            });\n\n            cells.on(\"click\", function (c) {\n                self.trigger(\"cell-selected\", c);\n            });\n\n            cells.exit().remove();\n        }\n    }, {\n        key: 'updateLegend',\n        value: function updateLegend() {\n\n            var plot = this.plot;\n            var legendX = this.plot.width + 10;\n            var legendY = 0;\n            var barWidth = 10;\n            var barHeight = this.plot.height - 2;\n            var scale = plot.correlation.color.scale;\n\n            plot.legend = new _legend.Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\n        }\n    }, {\n        key: 'attachScatterPlot',\n        value: function attachScatterPlot(containerSelector, config) {\n            var _this3 = this;\n\n            var self = this;\n\n            config = config || {};\n\n            var scatterPlotConfig = {\n                height: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                width: self.plot.height + self.config.margin.top + self.config.margin.bottom,\n                groups: {\n                    key: self.config.groups.key,\n                    label: self.config.groups.label\n                },\n                guides: true\n            };\n\n            self.scatterPlot = true;\n\n            scatterPlotConfig = _utils.Utils.deepExtend(scatterPlotConfig, config);\n            this.update();\n\n            this.on(\"cell-selected\", function (c) {\n\n                scatterPlotConfig.x = {\n                    key: c.rowVar,\n                    label: self.plot.labelByVariable[c.rowVar]\n                };\n                scatterPlotConfig.y = {\n                    key: c.colVar,\n                    label: self.plot.labelByVariable[c.colVar]\n                };\n                if (self.scatterPlot && self.scatterPlot !== true) {\n                    self.scatterPlot.setConfig(scatterPlotConfig).init();\n                } else {\n                    self.scatterPlot = new _scatterplot.ScatterPlot(containerSelector, self.data, scatterPlotConfig);\n                    _this3.attach(\"ScatterPlot\", self.scatterPlot);\n                }\n            });\n        }\n    }]);\n\n    return CorrelationMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":14,\"./legend\":18,\"./scatterplot\":21,\"./statistics-utils\":23,\"./utils\":24}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.D3Extensions = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar D3Extensions = exports.D3Extensions = function () {\n    function D3Extensions() {\n        _classCallCheck(this, D3Extensions);\n    }\n\n    _createClass(D3Extensions, null, [{\n        key: 'extend',\n        value: function extend() {\n\n            d3.selection.enter.prototype.insertSelector = d3.selection.prototype.insertSelector = function (selector, before) {\n                return _utils.Utils.insertSelector(this, selector, before);\n            };\n\n            d3.selection.enter.prototype.appendSelector = d3.selection.prototype.appendSelector = function (selector) {\n                return _utils.Utils.appendSelector(this, selector);\n            };\n\n            d3.selection.enter.prototype.selectOrAppend = d3.selection.prototype.selectOrAppend = function (selector) {\n                return _utils.Utils.selectOrAppend(this, selector);\n            };\n\n            d3.selection.enter.prototype.selectOrInsert = d3.selection.prototype.selectOrInsert = function (selector, before) {\n                return _utils.Utils.selectOrInsert(this, selector, before);\n            };\n        }\n    }]);\n\n    return D3Extensions;\n}();\n\n},{\"./utils\":24}],17:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatisticsUtils = exports.RegressionConfig = exports.Regression = exports.CorrelationMatrixConfig = exports.CorrelationMatrix = exports.ScatterPlotMatrixConfig = exports.ScatterPlotMatrix = exports.ScatterPlotConfig = exports.ScatterPlot = undefined;\n\nvar _scatterplot = require(\"./scatterplot\");\n\nObject.defineProperty(exports, \"ScatterPlot\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlot;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplot.ScatterPlotConfig;\n  }\n});\n\nvar _scatterplotMatrix = require(\"./scatterplot-matrix\");\n\nObject.defineProperty(exports, \"ScatterPlotMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrix;\n  }\n});\nObject.defineProperty(exports, \"ScatterPlotMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _scatterplotMatrix.ScatterPlotMatrixConfig;\n  }\n});\n\nvar _correlationMatrix = require(\"./correlation-matrix\");\n\nObject.defineProperty(exports, \"CorrelationMatrix\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrix;\n  }\n});\nObject.defineProperty(exports, \"CorrelationMatrixConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _correlationMatrix.CorrelationMatrixConfig;\n  }\n});\n\nvar _regression = require(\"./regression\");\n\nObject.defineProperty(exports, \"Regression\", {\n  enumerable: true,\n  get: function get() {\n    return _regression.Regression;\n  }\n});\nObject.defineProperty(exports, \"RegressionConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _regression.RegressionConfig;\n  }\n});\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nObject.defineProperty(exports, \"StatisticsUtils\", {\n  enumerable: true,\n  get: function get() {\n    return _statisticsUtils.StatisticsUtils;\n  }\n});\n\nvar _d3Extensions = require(\"./d3-extensions\");\n\n_d3Extensions.D3Extensions.extend();\n\n},{\"./correlation-matrix\":15,\"./d3-extensions\":16,\"./regression\":19,\"./scatterplot\":21,\"./scatterplot-matrix\":20,\"./statistics-utils\":23}],18:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Legend = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*var d3 = require('../bower_components/d3');\r\nvar legend = require('../bower_components/d3-legend/no-extend');*/\n\nvar Legend = exports.Legend = function () {\n    function Legend(svg, legendParent, scale, legendX, legendY) {\n        _classCallCheck(this, Legend);\n\n        this.cssClassPrefix = \"odc-\";\n        this.legendClass = this.cssClassPrefix + \"legend\";\n\n        this.scale = scale;\n        this.svg = svg;\n\n        this.container = _utils.Utils.selectOrAppend(legendParent, \"g.\" + this.legendClass, \"g\").attr(\"transform\", \"translate(\" + legendX + \",\" + legendY + \")\").classed(this.legendClass, true);\n    }\n\n    _createClass(Legend, [{\n        key: \"linearGradientBar\",\n        value: function linearGradientBar(barWidth, barHeight) {\n            var gradientId = this.cssClassPrefix + \"linear-gradient\";\n            var scale = this.scale;\n\n            this.linearGradient = _utils.Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\n\n            this.container.append(\"rect\").attr(\"width\", barWidth).attr(\"height\", barHeight).attr(\"x\", 0).attr(\"y\", 0).style(\"fill\", \"url(#\" + gradientId + \")\");\n\n            var ticks = this.container.selectAll(\"text\").data(scale.domain());\n            var ticksNumber = scale.domain().length - 1;\n            ticks.enter().append(\"text\").attr(\"x\", barWidth).attr(\"y\", function (d, i) {\n                return barHeight - i * barHeight / ticksNumber;\n            }).attr(\"dx\", 3)\n            // .attr(\"dy\", 1)\n            .attr(\"alignment-baseline\", \"middle\").text(function (d) {\n                return d;\n            });\n\n            ticks.exit().remove();\n\n            return this;\n        }\n    }]);\n\n    return Legend;\n}();\n\n},{\"./utils\":24}],19:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Regression = exports.RegressionConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nvar _statisticsUtils = require(\"./statistics-utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RegressionConfig = exports.RegressionConfig = function (_ScatterPlotConfig) {\n    _inherits(RegressionConfig, _ScatterPlotConfig);\n\n    function RegressionConfig(custom) {\n        _classCallCheck(this, RegressionConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RegressionConfig).call(this));\n\n        _this.mainRegression = true;\n        _this.groupRegression = true;\n        _this.confidence = {\n            level: 0.95,\n            criticalValue: function criticalValue(degreesOfFreedom, criticalProbability) {\n                return _statisticsUtils.StatisticsUtils.tValue(degreesOfFreedom, criticalProbability);\n            },\n            marginOfError: undefined //custom  margin Of Error function (x, points)\n        };\n\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    }\n\n    return RegressionConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar Regression = exports.Regression = function (_ScatterPlot) {\n    _inherits(Regression, _ScatterPlot);\n\n    function Regression(placeholderSelector, data, config) {\n        _classCallCheck(this, Regression);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(Regression).call(this, placeholderSelector, data, new RegressionConfig(config)));\n    }\n\n    _createClass(Regression, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(Regression.prototype), \"setConfig\", this).call(this, new RegressionConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n            _get(Object.getPrototypeOf(Regression.prototype), \"initPlot\", this).call(this);\n            this.initRegressionLines();\n        }\n    }, {\n        key: \"initRegressionLines\",\n        value: function initRegressionLines() {\n\n            var self = this;\n            var groupsAvailable = self.config.groups && self.config.groups.value;\n\n            self.plot.regressions = [];\n\n            if (groupsAvailable && self.config.mainRegression) {\n                var regression = this.initRegression(this.data, false);\n                self.plot.regressions.push(regression);\n            }\n\n            if (self.config.groupRegression) {\n                this.initGroupRegression();\n            }\n        }\n    }, {\n        key: \"initGroupRegression\",\n        value: function initGroupRegression() {\n            var self = this;\n            var dataByGroup = {};\n            self.data.forEach(function (d) {\n                var groupVal = self.config.groups.value(d, self.config.groups.key);\n\n                if (!groupVal && groupVal !== 0) {\n                    return;\n                }\n\n                if (!dataByGroup[groupVal]) {\n                    dataByGroup[groupVal] = [];\n                }\n                dataByGroup[groupVal].push(d);\n            });\n\n            for (var key in dataByGroup) {\n                if (!dataByGroup.hasOwnProperty(key)) {\n                    continue;\n                }\n\n                var regression = this.initRegression(dataByGroup[key], key);\n                self.plot.regressions.push(regression);\n            }\n        }\n    }, {\n        key: \"initRegression\",\n        value: function initRegression(values, groupVal) {\n            var self = this;\n\n            var points = values.map(function (d) {\n                return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\n            });\n\n            // points.sort((a,b) => a[0]-b[0]);\n\n            var linearRegression = _statisticsUtils.StatisticsUtils.linearRegression(points);\n            var linearRegressionLine = _statisticsUtils.StatisticsUtils.linearRegressionLine(linearRegression);\n\n            var extentX = d3.extent(points, function (d) {\n                return d[0];\n            });\n\n            var linePoints = [{\n                x: extentX[0],\n                y: linearRegressionLine(extentX[0])\n            }, {\n                x: extentX[1],\n                y: linearRegressionLine(extentX[1])\n            }];\n\n            var line = d3.svg.line().interpolate(\"basis\").x(function (d) {\n                return self.plot.x.scale(d.x);\n            }).y(function (d) {\n                return self.plot.y.scale(d.y);\n            });\n\n            var color = self.plot.dot.color;\n\n            var defaultColor = \"black\";\n            if (_utils.Utils.isFunction(color)) {\n                if (values.length && groupVal !== false) {\n                    color = color(values[0]);\n                } else {\n                    color = defaultColor;\n                }\n            } else if (!color && groupVal === false) {\n                color = defaultColor;\n            }\n\n            var confidence = this.computeConfidence(points, extentX, linearRegression, linearRegressionLine);\n            return {\n                group: groupVal || false,\n                line: line,\n                linePoints: linePoints,\n                color: color,\n                confidence: confidence\n            };\n        }\n    }, {\n        key: \"computeConfidence\",\n        value: function computeConfidence(points, extentX, linearRegression, linearRegressionLine) {\n            var self = this;\n            var slope = linearRegression.m;\n            var n = points.length;\n            var degreesOfFreedom = Math.max(0, n - 2);\n\n            var alpha = 1 - self.config.confidence.level;\n            var criticalProbability = 1 - alpha / 2;\n            var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom, criticalProbability);\n\n            var xValues = points.map(function (d) {\n                return d[0];\n            });\n            var meanX = _statisticsUtils.StatisticsUtils.mean(xValues);\n            var xMySum = 0;\n            var xSum = 0;\n            var xPowSum = 0;\n            var ySum = 0;\n            var yPowSum = 0;\n            points.forEach(function (p) {\n                var x = p[0];\n                var y = p[1];\n\n                xMySum += x * y;\n                xSum += x;\n                ySum += y;\n                xPowSum += x * x;\n                yPowSum += y * y;\n            });\n            var a = linearRegression.m;\n            var b = linearRegression.b;\n\n            var Sa2 = n / (n + 2) * ((yPowSum - a * xMySum - b * ySum) / (n * xPowSum - xSum * xSum)); //Wariancja współczynnika kierunkowego regresji liniowej a\n            var Sy2 = (yPowSum - a * xMySum - b * ySum) / (n * (n - 2)); //Sa2 //Mean y value variance\n\n            var errorFn = function errorFn(x) {\n                return Math.sqrt(Sy2 + Math.pow(x - meanX, 2) * Sa2);\n            }; //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\n            var marginOfError = function marginOfError(x) {\n                return criticalValue * errorFn(x);\n            };\n\n            // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\n            // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\n            // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\n\n            var computeConfidenceAreaPoint = function computeConfidenceAreaPoint(x) {\n                var linearRegression = linearRegressionLine(x);\n                var moe = marginOfError(x);\n                var confDown = linearRegression - moe;\n                var confUp = linearRegression + moe;\n                return {\n                    x: x,\n                    y0: confDown,\n                    y1: confUp\n                };\n            };\n\n            var centerX = (extentX[1] + extentX[0]) / 2;\n\n            // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\n            var confidenceAreaPoints = [extentX[0], centerX, extentX[1]].map(computeConfidenceAreaPoint);\n\n            var fitInPlot = function fitInPlot(y) {\n                return y;\n            };\n\n            var confidenceArea = d3.svg.area().interpolate(\"monotone\").x(function (d) {\n                return self.plot.x.scale(d.x);\n            }).y0(function (d) {\n                return fitInPlot(self.plot.y.scale(d.y0));\n            }).y1(function (d) {\n                return fitInPlot(self.plot.y.scale(d.y1));\n            });\n\n            return {\n                area: confidenceArea,\n                points: confidenceAreaPoints\n            };\n        }\n    }, {\n        key: \"update\",\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(Regression.prototype), \"update\", this).call(this, newData);\n            this.updateRegressionLines();\n        }\n    }, {\n        key: \"updateRegressionLines\",\n        value: function updateRegressionLines() {\n            var self = this;\n            var regressionContainerClass = this.prefixClass(\"regression-container\");\n            var regressionContainerSelector = \"g.\" + regressionContainerClass;\n\n            var clipPathId = self.prefixClass(\"clip\");\n\n            var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\" + self.dotsContainerClass);\n            var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\").attr(\"id\", clipPathId);\n\n            regressionContainerClip.selectOrAppend('rect').attr('width', self.plot.width).attr('height', self.plot.height).attr('x', 0).attr('y', 0);\n\n            regressionContainer.attr(\"clip-path\", function (d, i) {\n                return \"url(#\" + clipPathId + \")\";\n            });\n\n            var regressionClass = this.prefixClass(\"regression\");\n            var confidenceAreaClass = self.prefixClass(\"confidence\");\n            var regressionSelector = \"g.\" + regressionClass;\n            var regression = regressionContainer.selectAll(regressionSelector).data(self.plot.regressions);\n\n            var line = regression.enter().insertSelector(regressionSelector).append(\"path\").attr(\"class\", self.prefixClass(\"line\")).attr(\"shape-rendering\", \"optimizeQuality\");\n            // .append(\"line\")\n            // .attr(\"class\", \"line\")\n            // .attr(\"shape-rendering\", \"optimizeQuality\");\n\n            line\n            // .attr(\"x1\", r=> self.plot.x.scale(r.linePoints[0].x))\n            // .attr(\"y1\", r=> self.plot.y.scale(r.linePoints[0].y))\n            // .attr(\"x2\", r=> self.plot.x.scale(r.linePoints[1].x))\n            // .attr(\"y2\", r=> self.plot.y.scale(r.linePoints[1].y))\n            .attr(\"d\", function (r) {\n                return r.line(r.linePoints);\n            }).style(\"stroke\", function (r) {\n                return r.color;\n            });\n\n            var area = regression.enter().appendSelector(regressionSelector).append(\"path\").attr(\"class\", confidenceAreaClass).attr(\"shape-rendering\", \"optimizeQuality\");\n\n            area.attr(\"d\", function (r) {\n                return r.confidence.area(r.confidence.points);\n            }).style(\"fill\", function (r) {\n                return r.color;\n            }).style(\"opacity\", \"0.4\");\n        }\n    }]);\n\n    return Regression;\n}(_scatterplot.ScatterPlot);\n\n},{\"./chart\":14,\"./scatterplot\":21,\"./statistics-utils\":23,\"./utils\":24}],20:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlotMatrix = exports.ScatterPlotMatrixConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require(\"./chart\");\n\nvar _scatterplot = require(\"./scatterplot\");\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotMatrixConfig = exports.ScatterPlotMatrixConfig = function (_ScatterPlotConfig) {\n    _inherits(ScatterPlotMatrixConfig, _ScatterPlotConfig);\n\n    //ticks number, (default: computed using cell size)\n    //show axis guides\n    //scatter plot cell padding\n\n    function ScatterPlotMatrixConfig(custom) {\n        _classCallCheck(this, ScatterPlotMatrixConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrixConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'scatterplot-matrix';\n        _this.size = 200;\n        _this.padding = 20;\n        _this.brush = true;\n        _this.guides = true;\n        _this.tooltip = true;\n        _this.ticks = undefined;\n        _this.x = { // X axis config\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: undefined, //object property name or array index with grouping variable\n            includeInPlot: false, //include group as variable in plot, boolean (default: false)\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.variables = {\n            labels: [], //optional array of variable labels (for the diagonal of the plot).\n            keys: [], //optional array of variable keys\n            value: function value(d, variableKey) {\n                // variable value accessor\n                return d[variableKey];\n            }\n        };\n\n        _utils.Utils.deepExtend(_this, custom);\n        return _this;\n    } //show tooltip on dot hover\n    //scatter plot cell size\n\n\n    return ScatterPlotMatrixConfig;\n}(_scatterplot.ScatterPlotConfig);\n\nvar ScatterPlotMatrix = exports.ScatterPlotMatrix = function (_Chart) {\n    _inherits(ScatterPlotMatrix, _Chart);\n\n    function ScatterPlotMatrix(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlotMatrix);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotMatrix).call(this, placeholderSelector, data, new ScatterPlotMatrixConfig(config)));\n    }\n\n    _createClass(ScatterPlotMatrix, [{\n        key: \"setConfig\",\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlotMatrix.prototype), \"setConfig\", this).call(this, new ScatterPlotMatrixConfig(config));\n        }\n    }, {\n        key: \"initPlot\",\n        value: function initPlot() {\n\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            this.setupVariables();\n\n            this.plot.size = conf.size;\n\n            var width = conf.width;\n            var boundingClientRect = this.getBaseContainerNode().getBoundingClientRect();\n            if (!width) {\n                var maxWidth = margin.left + margin.right + this.plot.variables.length * this.plot.size;\n                width = Math.min(boundingClientRect.width, maxWidth);\n            }\n            var height = width;\n            if (!height) {\n                height = boundingClientRect.height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            if (conf.ticks === undefined) {\n                conf.ticks = this.plot.size / 40;\n            }\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            }\n\n            return this;\n        }\n    }, {\n        key: \"setupVariables\",\n        value: function setupVariables() {\n            var variablesConf = this.config.variables;\n\n            var data = this.data;\n            var plot = this.plot;\n            plot.domainByVariable = {};\n            plot.variables = variablesConf.keys;\n            if (!plot.variables || !plot.variables.length) {\n                plot.variables = _utils.Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\n            }\n\n            plot.labels = [];\n            plot.labelByVariable = {};\n            plot.variables.forEach(function (variableKey, index) {\n                plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\n                    return variablesConf.value(d, variableKey);\n                });\n                var label = variableKey;\n                if (variablesConf.labels && variablesConf.labels.length > index) {\n\n                    label = variablesConf.labels[index];\n                }\n                plot.labels.push(label);\n                plot.labelByVariable[variableKey] = label;\n            });\n\n            void 0;\n\n            plot.subplots = [];\n        }\n    }, {\n        key: \"setupX\",\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config;\n\n            x.value = conf.variables.value;\n            x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\n            x.map = function (d, variable) {\n                return x.scale(x.value(d, variable));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\n            x.axis.tickSize(plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"setupY\",\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config;\n\n            y.value = conf.variables.value;\n            y.scale = d3.scale[conf.y.scale]().range([plot.size - conf.padding / 2, conf.padding / 2]);\n            y.map = function (d, variable) {\n                return y.scale(y.value(d, variable));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\n            y.axis.tickSize(-plot.size * plot.variables.length);\n        }\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            var self = this;\n            var n = self.plot.variables.length;\n            var conf = this.config;\n\n            var axisClass = self.prefixClass(\"axis\");\n            var axisXClass = axisClass + \"-x\";\n            var axisYClass = axisClass + \"-y\";\n\n            var xAxisSelector = \"g.\" + axisXClass + \".\" + axisClass;\n            var yAxisSelector = \"g.\" + axisYClass + \".\" + axisClass;\n\n            var noGuidesClass = self.prefixClass(\"no-guides\");\n            self.svgG.selectAll(xAxisSelector).data(self.plot.variables).enter().appendSelector(xAxisSelector).classed(noGuidesClass, !conf.guides).attr(\"transform\", function (d, i) {\n                return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\";\n            }).each(function (d) {\n                self.plot.x.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.x.axis);\n            });\n\n            self.svgG.selectAll(yAxisSelector).data(self.plot.variables).enter().appendSelector(yAxisSelector).classed(noGuidesClass, !conf.guides).attr(\"transform\", function (d, i) {\n                return \"translate(0,\" + i * self.plot.size + \")\";\n            }).each(function (d) {\n                self.plot.y.scale.domain(self.plot.domainByVariable[d]);d3.select(this).call(self.plot.y.axis);\n            });\n\n            var cellClass = self.prefixClass(\"cell\");\n            var cell = self.svgG.selectAll(\".\" + cellClass).data(self.utils.cross(self.plot.variables, self.plot.variables)).enter().appendSelector(\"g.\" + cellClass).attr(\"transform\", function (d) {\n                return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\";\n            });\n\n            if (conf.brush) {\n                this.drawBrush(cell);\n            }\n\n            cell.each(plotSubplot);\n\n            //Labels\n            cell.filter(function (d) {\n                return d.i === d.j;\n            }).append(\"text\").attr(\"x\", conf.padding).attr(\"y\", conf.padding).attr(\"dy\", \".71em\").text(function (d) {\n                return self.plot.labelByVariable[d.x];\n            });\n\n            function plotSubplot(p) {\n                var plot = self.plot;\n                plot.subplots.push(p);\n                var cell = d3.select(this);\n\n                plot.x.scale.domain(plot.domainByVariable[p.x]);\n                plot.y.scale.domain(plot.domainByVariable[p.y]);\n\n                var frameClass = self.prefixClass(\"frame\");\n                cell.append(\"rect\").attr(\"class\", frameClass).attr(\"x\", conf.padding / 2).attr(\"y\", conf.padding / 2).attr(\"width\", conf.size - conf.padding).attr(\"height\", conf.size - conf.padding);\n\n                p.update = function () {\n                    var subplot = this;\n                    var dots = cell.selectAll(\"circle\").data(self.data);\n\n                    dots.enter().append(\"circle\");\n\n                    dots.attr(\"cx\", function (d) {\n                        return plot.x.map(d, subplot.x);\n                    }).attr(\"cy\", function (d) {\n                        return plot.y.map(d, subplot.y);\n                    }).attr(\"r\", self.config.dot.radius);\n\n                    if (plot.dot.color) {\n                        dots.style(\"fill\", plot.dot.color);\n                    }\n\n                    if (plot.tooltip) {\n                        dots.on(\"mouseover\", function (d) {\n                            plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                            var html = \"(\" + plot.x.value(d, subplot.x) + \", \" + plot.y.value(d, subplot.y) + \")\";\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n\n                            var group = self.config.groups.value(d);\n                            if (group || group === 0) {\n                                html += \"<br/>\";\n                                var label = self.config.groups.label;\n                                if (label) {\n                                    html += label + \": \";\n                                }\n                                html += group;\n                            }\n                            plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                        }).on(\"mouseout\", function (d) {\n                            plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                        });\n                    }\n\n                    dots.exit().remove();\n                };\n\n                p.update();\n            }\n        }\n    }, {\n        key: \"update\",\n        value: function update() {\n            this.plot.subplots.forEach(function (p) {\n                p.update();\n            });\n        }\n    }, {\n        key: \"drawBrush\",\n        value: function drawBrush(cell) {\n            var self = this;\n            var brush = d3.svg.brush().x(self.plot.x.scale).y(self.plot.y.scale).on(\"brushstart\", brushstart).on(\"brush\", brushmove).on(\"brushend\", brushend);\n\n            cell.append(\"g\").call(brush);\n\n            var brushCell;\n\n            // Clear the previously-active brush, if any.\n            function brushstart(p) {\n                if (brushCell !== this) {\n                    d3.select(brushCell).call(brush.clear());\n                    self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\n                    self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\n                    brushCell = this;\n                }\n            }\n\n            // Highlight the selected circles.\n            function brushmove(p) {\n                var e = brush.extent();\n                self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\n                    return e[0][0] > d[p.x] || d[p.x] > e[1][0] || e[0][1] > d[p.y] || d[p.y] > e[1][1];\n                });\n            }\n            // If the brush is empty, select all circles.\n            function brushend() {\n                if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\n            }\n        }\n    }]);\n\n    return ScatterPlotMatrix;\n}(_chart.Chart);\n\n},{\"./chart\":14,\"./scatterplot\":21,\"./utils\":24}],21:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ScatterPlot = exports.ScatterPlotConfig = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _chart = require('./chart');\n\nvar _utils = require('./utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ScatterPlotConfig = exports.ScatterPlotConfig = function (_ChartConfig) {\n    _inherits(ScatterPlotConfig, _ChartConfig);\n\n    //show tooltip on dot hover\n\n    function ScatterPlotConfig(custom) {\n        _classCallCheck(this, ScatterPlotConfig);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlotConfig).call(this));\n\n        _this.svgClass = _this.cssClassPrefix + 'scatterplot';\n        _this.guides = false;\n        _this.tooltip = true;\n        _this.x = { // X axis config\n            label: 'X', // axis label\n            key: 0,\n            value: function value(d, key) {\n                return d[key];\n            }, // x value accessor\n            orient: \"bottom\",\n            scale: \"linear\"\n        };\n        _this.y = { // Y axis config\n            label: 'Y', // axis label,\n            key: 1,\n            value: function value(d, key) {\n                return d[key];\n            }, // y value accessor\n            orient: \"left\",\n            scale: \"linear\"\n        };\n        _this.groups = {\n            key: 2,\n            value: function value(d, key) {\n                return d[key];\n            }, // grouping value accessor,\n            label: \"\"\n        };\n        _this.transition = true;\n\n        var config = _this;\n        _this.dot = {\n            radius: 2,\n            color: function color(d) {\n                return config.groups.value(d, config.groups.key);\n            }, // string or function returning color's value for color scale\n            d3ColorCategory: 'category10'\n        };\n\n        if (custom) {\n            _utils.Utils.deepExtend(_this, custom);\n        }\n\n        return _this;\n    } //show axis guides\n\n\n    return ScatterPlotConfig;\n}(_chart.ChartConfig);\n\nvar ScatterPlot = exports.ScatterPlot = function (_Chart) {\n    _inherits(ScatterPlot, _Chart);\n\n    function ScatterPlot(placeholderSelector, data, config) {\n        _classCallCheck(this, ScatterPlot);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterPlot).call(this, placeholderSelector, data, new ScatterPlotConfig(config)));\n    }\n\n    _createClass(ScatterPlot, [{\n        key: 'setConfig',\n        value: function setConfig(config) {\n            return _get(Object.getPrototypeOf(ScatterPlot.prototype), 'setConfig', this).call(this, new ScatterPlotConfig(config));\n        }\n    }, {\n        key: 'initPlot',\n        value: function initPlot() {\n            var self = this;\n            var margin = this.config.margin;\n            var conf = this.config;\n            this.plot = {\n                x: {},\n                y: {},\n                dot: {\n                    color: null //color scale mapping function\n                }\n            };\n\n            var width = conf.width;\n            var placeholderNode = this.getBaseContainerNode();\n\n            if (!width) {\n                width = placeholderNode.getBoundingClientRect().width;\n            }\n            var height = conf.height;\n            if (!height) {\n                height = placeholderNode.getBoundingClientRect().height;\n            }\n\n            this.plot.width = width - margin.left - margin.right;\n            this.plot.height = height - margin.top - margin.bottom;\n\n            this.setupX();\n            this.setupY();\n\n            if (conf.dot.d3ColorCategory) {\n                this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\n            }\n            var colorValue = conf.dot.color;\n            if (colorValue) {\n                this.plot.dot.colorValue = colorValue;\n\n                if (typeof colorValue === 'string' || colorValue instanceof String) {\n                    this.plot.dot.color = colorValue;\n                } else if (this.plot.dot.colorCategory) {\n                    this.plot.dot.color = function (d) {\n                        return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\n                    };\n                }\n            } else {}\n\n            return this;\n        }\n    }, {\n        key: 'setupX',\n        value: function setupX() {\n\n            var plot = this.plot;\n            var x = plot.x;\n            var conf = this.config.x;\n\n            /* *\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             **/\n            x.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            x.scale = d3.scale[conf.scale]().range([0, plot.width]);\n            x.map = function (d) {\n                return x.scale(x.value(d));\n            };\n            x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\n            var data = this.data;\n            plot.x.scale.domain([d3.min(data, plot.x.value) - 1, d3.max(data, plot.x.value) + 1]);\n            if (this.config.guides) {\n                x.axis.tickSize(-plot.height);\n            }\n        }\n    }, {\n        key: 'setupY',\n        value: function setupY() {\n\n            var plot = this.plot;\n            var y = plot.y;\n            var conf = this.config.y;\n\n            /*\r\n             * value accessor - returns the value to encode for a given data object.\r\n             * scale - maps value to a visual display encoding, such as a pixel position.\r\n             * map function - maps from data value to display value\r\n             * axis - sets up axis\r\n             */\n            y.value = function (d) {\n                return conf.value(d, conf.key);\n            };\n            y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\n            y.map = function (d) {\n                return y.scale(y.value(d));\n            };\n            y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\n\n            if (this.config.guides) {\n                y.axis.tickSize(-plot.width);\n            }\n\n            var data = this.data;\n            plot.y.scale.domain([d3.min(data, plot.y.value) - 1, d3.max(data, plot.y.value) + 1]);\n        }\n    }, {\n        key: 'draw',\n        value: function draw() {\n            this.drawAxisX();\n            this.drawAxisY();\n            this.update();\n        }\n    }, {\n        key: 'drawAxisX',\n        value: function drawAxisX() {\n\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.x;\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-x') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).attr(\"transform\", \"translate(0,\" + plot.height + \")\").call(plot.x.axis).selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + plot.width / 2 + \",\" + self.config.margin.bottom + \")\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"-1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'drawAxisY',\n        value: function drawAxisY() {\n            var self = this;\n            var plot = self.plot;\n            var axisConf = this.config.y;\n            self.svgG.selectOrAppend(\"g.\" + self.prefixClass('axis-y') + \".\" + self.prefixClass('axis') + (self.config.guides ? '' : '.' + self.prefixClass('no-guides'))).call(plot.y.axis).selectOrAppend(\"text.\" + self.prefixClass('label')).attr(\"transform\", \"translate(\" + -self.config.margin.left + \",\" + plot.height / 2 + \")rotate(-90)\") // text is drawn off the screen top left, move down and out and rotate\n            .attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(axisConf.label);\n        }\n    }, {\n        key: 'update',\n        value: function update(newData) {\n            _get(Object.getPrototypeOf(ScatterPlot.prototype), 'update', this).call(this, newData);\n\n            var self = this;\n            var plot = self.plot;\n            var data = this.data;\n            var dotClass = self.prefixClass('dot');\n            self.dotsContainerClass = self.prefixClass('dots-container');\n\n            var dotsContainer = self.svgG.selectOrAppend(\"g.\" + self.dotsContainerClass);\n\n            var dots = dotsContainer.selectAll('.' + dotClass).data(data);\n\n            dots.enter().append(\"circle\").attr(\"class\", dotClass);\n\n            var dotsT = dots;\n            if (self.config.transition) {\n                dotsT = dots.transition();\n            }\n\n            dotsT.attr(\"r\", self.config.dot.radius).attr(\"cx\", plot.x.map).attr(\"cy\", plot.y.map);\n\n            if (plot.tooltip) {\n                dots.on(\"mouseover\", function (d) {\n                    plot.tooltip.transition().duration(200).style(\"opacity\", .9);\n                    var html = \"(\" + plot.x.value(d) + \", \" + plot.y.value(d) + \")\";\n                    var group = self.config.groups.value(d, self.config.groups.key);\n                    if (group || group === 0) {\n                        html += \"<br/>\";\n                        var label = self.config.groups.label;\n                        if (label) {\n                            html += label + \": \";\n                        }\n                        html += group;\n                    }\n                    plot.tooltip.html(html).style(\"left\", d3.event.pageX + 5 + \"px\").style(\"top\", d3.event.pageY - 28 + \"px\");\n                }).on(\"mouseout\", function (d) {\n                    plot.tooltip.transition().duration(500).style(\"opacity\", 0);\n                });\n            }\n\n            if (plot.dot.color) {\n                dots.style(\"fill\", plot.dot.color);\n            }\n\n            dots.exit().remove();\n        }\n    }]);\n\n    return ScatterPlot;\n}(_chart.Chart);\n\n},{\"./chart\":14,\"./utils\":24}],22:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.tdistr = tdistr;\n/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subchisqr($n - 0, $p - 0));\n}\n\nfunction udistr($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subu($p - 0));\n}\n\nfunction tdistr($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\";\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subt($n - 0, $p - 0));\n}\n\nfunction fdistr($n, $m, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* first degree of freedom */\n\t}\n\tif ($m <= 0 || Math.abs($m) - Math.abs(integer($m)) != 0) {\n\t\tthrow \"Invalid m: $m\\n\"; /* second degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\treturn precision_string(_subf($n - 0, $m - 0, $p - 0));\n}\n\nfunction uprob($x) {\n\treturn precision_string(_subuprob($x - 0));\n}\n\nfunction chisqrprob($n, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n - 0, $x - 0));\n}\n\nfunction tprob($n, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n - 0, $x - 0));\n}\n\nfunction fprob($n, $m, $x) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow \"Invalid n: $n\\n\"; /* first degree of freedom */\n\t}\n\tif ($m <= 0 || Math.abs($m) - Math.abs(integer($m)) != 0) {\n\t\tthrow \"Invalid m: $m\\n\"; /* second degree of freedom */\n\t}\n\treturn precision_string(_subfprob($n - 0, $m - 0, $x - 0));\n}\n\nfunction _subfprob($n, $m, $x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow(1 - $z, $n / 2 * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow(1 - $z, $m / 2) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = $n == 1 ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = $m == 1 ? 0 : 1;\n\t\tfor (var $i = $m - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI - 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\nfunction _subchisqrprob($n, $x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow($x / $n, 1 / 3) - (1 - 2 / 9 / $n)) / Math.sqrt(2 / 9 / $n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {\n\t\tvar $a;\n\t\tvar $i;\n\t\tvar $i1;\n\t\tif ($n % 2 != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2 / Math.PI) * Math.exp(-$x / 2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x / 2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= $n - 2; $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt($y * (1.570796288 + $y * (.03706987906 + $y * (-.8364353589E-3 + $y * (-.2250947176E-3 + $y * (.6841218299E-5 + $y * (0.5824238515E-5 + $y * (-.104527497E-5 + $y * (.8360937017E-7 + $y * (-.3231081277E-8 + $y * (.3657763036E-10 + $y * .6936233982E-12)))))))))));\n\tif ($p > .5) $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow(1 + $absx * (.049867347 + $absx * (.0211410061 + $absx * (.0032776263 + $absx * (.0000380036 + $absx * (.0000488906 + $absx * .000005383))))), -16) / 2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) / Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x < 0) $p = 1 - $p;\n\treturn $p;\n}\n\nfunction _subt($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn -_subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) / 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2 + 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo {\n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) / Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) + Math.log($n / $n1 / 2 / Math.PI) - 1 + (1 / $n1 - 1 / $n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x)) - 4)));\n\t\t} while ($x && $round != 0);\n\t}\n\treturn $x;\n}\n\nfunction _subtprob($n, $x) {\n\n\tvar $a;\n\tvar $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i - 1) / $i * $z * $y;\n\t}\n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w) / 2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = $n == 1 ? 0 : Math.sin($w) * Math.cos($w) / Math.PI;\n\t\t$b = .5 + $w / Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p / 2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 + (($u - $a) / 2 + (((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 + (((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u - $a * $a * (9 * $m - 6)) / 48 / $n) / $n) / $n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p);\n\t} else {\n\t\t$x = _subf2($n, $m, $p);\n\t}\n\treturn $x;\n}\n\nfunction _subf2($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * (1 + (($u - $n2) / 2 + (((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + (((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u - $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp((($n + $m) * Math.log(($n + $m) / ($n * $x + $m)) + ($n - 2) * Math.log($x) + Math.log($n * $m / ($n + $m)) - Math.log(4 * Math.PI) - (1 / $n + 1 / $m - 1 / ($n + $m)) / 6) / 2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta) > 3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr($n, $p) {\n\tvar $x;\n\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow \"Invalid p: $p\\n\";\n\t} else if ($p == 1) {\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u + 2 / 3 * ($u2 - 1) + $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n) - 2 / 405 / $n * ($u2 * (3 * $u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n\t\t\tvar $p1;\n\t\t\tvar $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n > 100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow($x / $n, 1 / 3) - (1 - 2 / 9 / $n)) / Math.sqrt(2 / 9 / $n));\n\t\t\t\t} else if ($x > 400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0;\n\t\t\t\t\tvar $a;\n\t\t\t\t\tif ($n % 2 != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2 / Math.PI) * Math.exp(-$x / 2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x / 2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n - 2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n - 1) * Math.log($x / $n) - Math.log(4 * Math.PI * $x) + $n - $x - 1 / $n / 6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while ($n < 31 && Math.abs($x0 - $x) > 1e-4);\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n\nfunction max() {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n\t\tif ($max < arguments[$i]) $max = arguments[$i];\n\t}\n\treturn $max;\n}\n\nfunction min() {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n\t\tif ($min > arguments[$i]) $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision($x, $p) {\n\t$x = $x * Math.pow(10, $p);\n\t$x = Math.round($x);\n\treturn $x / Math.pow(10, $p);\n}\n\nfunction integer($i) {\n\tif ($i > 0) return Math.floor($i);else return Math.ceil($i);\n}\n\n},{}],23:[function(require,module,exports){\n'use strict';\n\nvar _statisticsDistributions = require('./statistics-distributions');\n\nvar su = module.exports.StatisticsUtils = {};\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\nsu.linearRegression = require('../bower_components/simple-statistics/src/linear_regression');\nsu.linearRegressionLine = require('../bower_components/simple-statistics/src/linear_regression_line');\nsu.errorFunction = require('../bower_components/simple-statistics/src/error_function');\nsu.standardDeviation = require('../bower_components/simple-statistics/src/standard_deviation');\nsu.sampleStandardDeviation = require('../bower_components/simple-statistics/src/sample_standard_deviation');\nsu.variance = require('../bower_components/simple-statistics/src/variance');\nsu.mean = require('../bower_components/simple-statistics/src/mean');\nsu.zScore = require('../bower_components/simple-statistics/src/z_score');\nsu.standardError = function (arr) {\n    return Math.sqrt(su.variance(arr) / (arr.length - 1));\n};\n\nsu.tValue = function (degreesOfFreedom, criticalProbability) {\n    //as in http://stattrek.com/online-calculator/t-distribution.aspx\n    return (0, _statisticsDistributions.tdistr)(degreesOfFreedom, criticalProbability);\n};\n\n},{\"../bower_components/simple-statistics/src/error_function\":1,\"../bower_components/simple-statistics/src/linear_regression\":2,\"../bower_components/simple-statistics/src/linear_regression_line\":3,\"../bower_components/simple-statistics/src/mean\":4,\"../bower_components/simple-statistics/src/sample_correlation\":5,\"../bower_components/simple-statistics/src/sample_standard_deviation\":7,\"../bower_components/simple-statistics/src/standard_deviation\":9,\"../bower_components/simple-statistics/src/variance\":12,\"../bower_components/simple-statistics/src/z_score\":13,\"./statistics-distributions\":22}],24:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'deepExtend',\n\n        // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\n        value: function deepExtend(out) {\n\n            var utils = this;\n            var emptyOut = {};\n\n            if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\n                out = [];\n            }\n            out = out || {};\n\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                if (!source) continue;\n\n                for (var key in source) {\n                    if (!source.hasOwnProperty(key)) {\n                        continue;\n                    }\n                    var isArray = Array.isArray(out[key]);\n                    var isObject = utils.isObject(out[key]);\n                    var srcObj = utils.isObject(source[key]);\n\n                    if (isObject && !isArray && srcObj) {\n                        utils.deepExtend(out[key], source[key]);\n                    } else {\n                        out[key] = source[key];\n                    }\n                }\n            }\n\n            return out;\n        }\n    }, {\n        key: 'mergeDeep',\n        value: function mergeDeep(target, source) {\n            var output = Object.assign({}, target);\n            if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\n                Object.keys(source).forEach(function (key) {\n                    if (Utils.isObjectNotArray(source[key])) {\n                        if (!(key in target)) Object.assign(output, _defineProperty({}, key, source[key]));else output[key] = Utils.mergeDeep(target[key], source[key]);\n                    } else {\n                        Object.assign(output, _defineProperty({}, key, source[key]));\n                    }\n                });\n            }\n            return output;\n        }\n    }, {\n        key: 'cross',\n        value: function cross(a, b) {\n            var c = [],\n                n = a.length,\n                m = b.length,\n                i,\n                j;\n            for (i = -1; ++i < n;) {\n                for (j = -1; ++j < m;) {\n                    c.push({ x: a[i], i: i, y: b[j], j: j });\n                }\n            }return c;\n        }\n    }, {\n        key: 'inferVariables',\n        value: function inferVariables(data, groupKey, includeGroup) {\n            var res = [];\n            if (data.length) {\n                var d = data[0];\n                if (d instanceof Array) {\n                    res = d.map(function (v, i) {\n                        return i;\n                    });\n                } else if ((typeof d === 'undefined' ? 'undefined' : _typeof(d)) === 'object') {\n\n                    for (var prop in d) {\n                        if (!d.hasOwnProperty(prop)) continue;\n\n                        res.push(prop);\n                    }\n                }\n            }\n            if (!includeGroup) {\n                var index = res.indexOf(groupKey);\n                if (index > -1) {\n                    res.splice(index, 1);\n                }\n            }\n            return res;\n        }\n    }, {\n        key: 'isObjectNotArray',\n        value: function isObjectNotArray(item) {\n            return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item) && item !== null;\n        }\n    }, {\n        key: 'isObject',\n        value: function isObject(a) {\n            return a !== null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object';\n        }\n    }, {\n        key: 'isNumber',\n        value: function isNumber(a) {\n            return !isNaN(a) && typeof a === 'number';\n        }\n    }, {\n        key: 'isFunction',\n        value: function isFunction(a) {\n            return typeof a === 'function';\n        }\n    }, {\n        key: 'insertOrAppendSelector',\n        value: function insertOrAppendSelector(parent, selector, operation, before) {\n            var selectorParts = selector.split(/([\\.\\#])/);\n            var element = parent[operation](selectorParts.shift(), before); //\":first-child\"\n            while (selectorParts.length > 1) {\n                var selectorModifier = selectorParts.shift();\n                var selectorItem = selectorParts.shift();\n                if (selectorModifier === \".\") {\n                    element = element.classed(selectorItem, true);\n                } else if (selectorModifier === \"#\") {\n                    element = element.attr('id', selectorItem);\n                }\n            }\n            return element;\n        }\n    }, {\n        key: 'insertSelector',\n        value: function insertSelector(parent, selector, before) {\n            return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\n        }\n    }, {\n        key: 'appendSelector',\n        value: function appendSelector(parent, selector) {\n            return Utils.insertOrAppendSelector(parent, selector, \"append\");\n        }\n    }, {\n        key: 'selectOrAppend',\n        value: function selectOrAppend(parent, selector, element) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                if (element) {\n                    return parent.append(element);\n                }\n                return Utils.appendSelector(parent, selector);\n            }\n            return selection;\n        }\n    }, {\n        key: 'selectOrInsert',\n        value: function selectOrInsert(parent, selector, before) {\n            var selection = parent.select(selector);\n            if (selection.empty()) {\n                return Utils.insertSelector(parent, selector, before);\n            }\n            return selection;\n        }\n    }, {\n        key: 'linearGradient',\n        value: function linearGradient(svg, gradientId, range, x1, y1, x2, y2) {\n            var defs = Utils.selectOrAppend(svg, \"defs\");\n            var linearGradient = defs.append(\"linearGradient\").attr(\"id\", gradientId);\n\n            linearGradient.attr(\"x1\", x1 + \"%\").attr(\"y1\", y1 + \"%\").attr(\"x2\", x2 + \"%\").attr(\"y2\", y2 + \"%\");\n\n            //Append multiple color stops by using D3's data/enter step\n            var stops = linearGradient.selectAll(\"stop\").data(range);\n\n            stops.enter().append(\"stop\");\n\n            stops.attr(\"offset\", function (d, i) {\n                return i / (range.length - 1);\n            }).attr(\"stop-color\", function (d) {\n                return d;\n            });\n\n            stops.exit().remove();\n        }\n    }]);\n\n    return Utils;\n}();\n\n},{}]},{},[17])(17)\n});\n\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * [Simple linear regression](http://en.wikipedia.org/wiki/Simple_linear_regression)\r\n * is a simple way to find a fitted line\r\n * between a set of coordinates. This algorithm finds the slope and y-intercept of a regression line\r\n * using the least sum of squares.\r\n *\r\n * @param {Array<Array<number>>} data an array of two-element of arrays,\r\n * like `[[0, 1], [2, 3]]`\r\n * @returns {Object} object containing slope and intersect of regression line\r\n * @example\r\n * linearRegression([[0, 0], [1, 1]]); // { m: 1, b: 0 }\r\n */\r\nfunction linearRegression(data/*: Array<Array<number>> */)/*: { m: number, b: number } */ {\r\n\r\n    var m, b;\r\n\r\n    // Store data length in a local variable to reduce\r\n    // repeated object property lookups\r\n    var dataLength = data.length;\r\n\r\n    //if there's only one point, arbitrarily choose a slope of 0\r\n    //and a y-intercept of whatever the y of the initial point is\r\n    if (dataLength === 1) {\r\n        m = 0;\r\n        b = data[0][1];\r\n    } else {\r\n        // Initialize our sums and scope the `m` and `b`\r\n        // variables that define the line.\r\n        var sumX = 0, sumY = 0,\r\n            sumXX = 0, sumXY = 0;\r\n\r\n        // Use local variables to grab point values\r\n        // with minimal object property lookups\r\n        var point, x, y;\r\n\r\n        // Gather the sum of all x values, the sum of all\r\n        // y values, and the sum of x^2 and (x*y) for each\r\n        // value.\r\n        //\r\n        // In math notation, these would be SS_x, SS_y, SS_xx, and SS_xy\r\n        for (var i = 0; i < dataLength; i++) {\r\n            point = data[i];\r\n            x = point[0];\r\n            y = point[1];\r\n\r\n            sumX += x;\r\n            sumY += y;\r\n\r\n            sumXX += x * x;\r\n            sumXY += x * y;\r\n        }\r\n\r\n        // `m` is the slope of the regression line\r\n        m = ((dataLength * sumXY) - (sumX * sumY)) /\r\n            ((dataLength * sumXX) - (sumX * sumX));\r\n\r\n        // `b` is the y-intercept of the line.\r\n        b = (sumY / dataLength) - ((m * sumX) / dataLength);\r\n    }\r\n\r\n    // Return both values as an object.\r\n    return {\r\n        m: m,\r\n        b: b\r\n    };\r\n}\r\n\r\n\r\nmodule.exports = linearRegression;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Given the output of `linearRegression`: an object\r\n * with `m` and `b` values indicating slope and intercept,\r\n * respectively, generate a line function that translates\r\n * x values into y values.\r\n *\r\n * @param {Object} mb object with `m` and `b` members, representing\r\n * slope and intersect of desired line\r\n * @returns {Function} method that computes y-value at any given\r\n * x-value on the line.\r\n * @example\r\n * var l = linearRegressionLine(linearRegression([[0, 0], [1, 1]]));\r\n * l(0) //= 0\r\n * l(2) //= 2\r\n */\r\nfunction linearRegressionLine(mb/*: { b: number, m: number }*/)/*: Function */ {\r\n    // Return a function that computes a `y` value for each\r\n    // x value it is given, based on the values of `b` and `a`\r\n    // that we just computed.\r\n    return function(x) {\r\n        return mb.b + (mb.m * x);\r\n    };\r\n}\r\n\r\nmodule.exports = linearRegressionLine;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sum = require('./sum');\r\n\r\n/**\r\n * The mean, _also known as average_,\r\n * is the sum of all values over the number of values.\r\n * This is a [measure of central tendency](https://en.wikipedia.org/wiki/Central_tendency):\r\n * a method of finding a typical or central value of a set of numbers.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input values\r\n * @returns {number} mean\r\n * @example\r\n * console.log(mean([0, 10])); // 5\r\n */\r\nfunction mean(x /*: Array<number> */)/*:number*/ {\r\n    // The mean of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    return sum(x) / x.length;\r\n}\r\n\r\nmodule.exports = mean;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleCovariance = require('./sample_covariance');\r\nvar sampleStandardDeviation = require('./sample_standard_deviation');\r\n\r\n/**\r\n * The [correlation](http://en.wikipedia.org/wiki/Correlation_and_dependence) is\r\n * a measure of how correlated two datasets are, between -1 and 1\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample correlation\r\n * @example\r\n * var a = [1, 2, 3, 4, 5, 6];\r\n * var b = [2, 2, 3, 4, 5, 60];\r\n * sampleCorrelation(a, b); //= 0.691\r\n */\r\nfunction sampleCorrelation(x/*: Array<number> */, y/*: Array<number> */)/*:number*/ {\r\n    var cov = sampleCovariance(x, y),\r\n        xstd = sampleStandardDeviation(x),\r\n        ystd = sampleStandardDeviation(y);\r\n\r\n    return cov / xstd / ystd;\r\n}\r\n\r\nmodule.exports = sampleCorrelation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * [Sample covariance](https://en.wikipedia.org/wiki/Sample_mean_and_sampleCovariance) of two datasets:\r\n * how much do the two datasets move together?\r\n * x and y are two datasets, represented as arrays of numbers.\r\n *\r\n * @param {Array<number>} x first input\r\n * @param {Array<number>} y second input\r\n * @returns {number} sample covariance\r\n * @example\r\n * var x = [1, 2, 3, 4, 5, 6];\r\n * var y = [6, 5, 4, 3, 2, 1];\r\n * sampleCovariance(x, y); //= -3.5\r\n */\r\nfunction sampleCovariance(x /*:Array<number>*/, y /*:Array<number>*/)/*:number*/ {\r\n\r\n    // The two datasets must have the same length which must be more than 1\r\n    if (x.length <= 1 || x.length !== y.length) {\r\n        return NaN;\r\n    }\r\n\r\n    // determine the mean of each dataset so that we can judge each\r\n    // value of the dataset fairly as the difference from the mean. this\r\n    // way, if one dataset is [1, 2, 3] and [2, 3, 4], their covariance\r\n    // does not suffer because of the difference in absolute values\r\n    var xmean = mean(x),\r\n        ymean = mean(y),\r\n        sum = 0;\r\n\r\n    // for each pair of values, the covariance increases when their\r\n    // difference from the mean is associated - if both are well above\r\n    // or if both are well below\r\n    // the mean, the covariance increases significantly.\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += (x[i] - xmean) * (y[i] - ymean);\r\n    }\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // the covariance is weighted by the length of the datasets.\r\n    return sum / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleCovariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sampleVariance = require('./sample_variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance.\r\n *\r\n * @param {Array<number>} x input array\r\n * @returns {number} sample standard deviation\r\n * @example\r\n * ss.sampleStandardDeviation([2, 4, 4, 4, 5, 5, 7, 9]);\r\n * //= 2.138\r\n */\r\nfunction sampleStandardDeviation(x/*:Array<number>*/)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var sampleVarianceX = sampleVariance(x);\r\n    if (isNaN(sampleVarianceX)) { return NaN; }\r\n    return Math.sqrt(sampleVarianceX);\r\n}\r\n\r\nmodule.exports = sampleStandardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/*\r\n * The [sample variance](https://en.wikipedia.org/wiki/Variance#Sample_variance)\r\n * is the sum of squared deviations from the mean. The sample variance\r\n * is distinguished from the variance by the usage of [Bessel's Correction](https://en.wikipedia.org/wiki/Bessel's_correction):\r\n * instead of dividing the sum of squared deviations by the length of the input,\r\n * it is divided by the length minus one. This corrects the bias in estimating\r\n * a value from a set that you don't know if full.\r\n *\r\n * References:\r\n * * [Wolfram MathWorld on Sample Variance](http://mathworld.wolfram.com/SampleVariance.html)\r\n *\r\n * @param {Array<number>} x input array\r\n * @return {number} sample variance\r\n * @example\r\n * sampleVariance([1, 2, 3, 4, 5]); //= 2.5\r\n */\r\nfunction sampleVariance(x /*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length <= 1) { return NaN; }\r\n\r\n    var sumSquaredDeviationsValue = sumNthPowerDeviations(x, 2);\r\n\r\n    // this is Bessels' Correction: an adjustment made to sample statistics\r\n    // that allows for the reduced degree of freedom entailed in calculating\r\n    // values from samples rather than complete populations.\r\n    var besselsCorrection = x.length - 1;\r\n\r\n    // Find the mean value of that list\r\n    return sumSquaredDeviationsValue / besselsCorrection;\r\n}\r\n\r\nmodule.exports = sampleVariance;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar variance = require('./variance');\r\n\r\n/**\r\n * The [standard deviation](http://en.wikipedia.org/wiki/Standard_deviation)\r\n * is the square root of the variance. It's useful for measuring the amount\r\n * of variation or dispersion in a set of values.\r\n *\r\n * Standard deviation is only appropriate for full-population knowledge: for\r\n * samples of a population, {@link sampleStandardDeviation} is\r\n * more appropriate.\r\n *\r\n * @param {Array<number>} x input\r\n * @returns {number} standard deviation\r\n * @example\r\n * var scores = [2, 4, 4, 4, 5, 5, 7, 9];\r\n * variance(scores); //= 4\r\n * standardDeviation(scores); //= 2\r\n */\r\nfunction standardDeviation(x /*: Array<number> */)/*:number*/ {\r\n    // The standard deviation of no numbers is null\r\n    var v = variance(x);\r\n    if (isNaN(v)) { return 0; }\r\n    return Math.sqrt(v);\r\n}\r\n\r\nmodule.exports = standardDeviation;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * Our default sum is the [Kahan summation algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) is\r\n * a method for computing the sum of a list of numbers while correcting\r\n * for floating-point errors. Traditionally, sums are calculated as many\r\n * successive additions, each one with its own floating-point roundoff. These\r\n * losses in precision add up as the number of numbers increases. This alternative\r\n * algorithm is more accurate than the simple way of calculating sums by simple\r\n * addition.\r\n *\r\n * This runs on `O(n)`, linear time in respect to the array\r\n *\r\n * @param {Array<number>} x input\r\n * @return {number} sum of all input numbers\r\n * @example\r\n * console.log(sum([1, 2, 3])); // 6\r\n */\r\nfunction sum(x/*: Array<number> */)/*: number */ {\r\n\r\n    // like the traditional sum algorithm, we keep a running\r\n    // count of the current sum.\r\n    var sum = 0;\r\n\r\n    // but we also keep three extra variables as bookkeeping:\r\n    // most importantly, an error correction value. This will be a very\r\n    // small number that is the opposite of the floating point precision loss.\r\n    var errorCompensation = 0;\r\n\r\n    // this will be each number in the list corrected with the compensation value.\r\n    var correctedCurrentValue;\r\n\r\n    // and this will be the next sum\r\n    var nextSum;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        // first correct the value that we're going to add to the sum\r\n        correctedCurrentValue = x[i] - errorCompensation;\r\n\r\n        // compute the next sum. sum is likely a much larger number\r\n        // than correctedCurrentValue, so we'll lose precision here,\r\n        // and measure how much precision is lost in the next step\r\n        nextSum = sum + correctedCurrentValue;\r\n\r\n        // we intentionally didn't assign sum immediately, but stored\r\n        // it for now so we can figure out this: is (sum + nextValue) - nextValue\r\n        // not equal to 0? ideally it would be, but in practice it won't:\r\n        // it will be some very small number. that's what we record\r\n        // as errorCompensation.\r\n        errorCompensation = nextSum - sum - correctedCurrentValue;\r\n\r\n        // now that we've computed how much we'll correct for in the next\r\n        // loop, start treating the nextSum as the current sum.\r\n        sum = nextSum;\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sum;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar mean = require('./mean');\r\n\r\n/**\r\n * The sum of deviations to the Nth power.\r\n * When n=2 it's the sum of squared deviations.\r\n * When n=3 it's the sum of cubed deviations.\r\n *\r\n * @param {Array<number>} x\r\n * @param {number} n power\r\n * @returns {number} sum of nth power deviations\r\n * @example\r\n * var input = [1, 2, 3];\r\n * // since the variance of a set is the mean squared\r\n * // deviations, we can calculate that with sumNthPowerDeviations:\r\n * var variance = sumNthPowerDeviations(input) / input.length;\r\n */\r\nfunction sumNthPowerDeviations(x/*: Array<number> */, n/*: number */)/*:number*/ {\r\n    var meanValue = mean(x),\r\n        sum = 0;\r\n\r\n    for (var i = 0; i < x.length; i++) {\r\n        sum += Math.pow(x[i] - meanValue, n);\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\nmodule.exports = sumNthPowerDeviations;\r\n","'use strict';\r\n/* @flow */\r\n\r\nvar sumNthPowerDeviations = require('./sum_nth_power_deviations');\r\n\r\n/**\r\n * The [variance](http://en.wikipedia.org/wiki/Variance)\r\n * is the sum of squared deviations from the mean.\r\n *\r\n * This is an implementation of variance, not sample variance:\r\n * see the `sampleVariance` method if you want a sample measure.\r\n *\r\n * @param {Array<number>} x a population\r\n * @returns {number} variance: a value greater than or equal to zero.\r\n * zero indicates that all values are identical.\r\n * @example\r\n * ss.variance([1, 2, 3, 4, 5, 6]); //= 2.917\r\n */\r\nfunction variance(x/*: Array<number> */)/*:number*/ {\r\n    // The variance of no numbers is null\r\n    if (x.length === 0) { return NaN; }\r\n\r\n    // Find the mean of squared deviations between the\r\n    // mean value and each value.\r\n    return sumNthPowerDeviations(x, 2) / x.length;\r\n}\r\n\r\nmodule.exports = variance;\r\n","'use strict';\r\n/* @flow */\r\n\r\n/**\r\n * The [Z-Score, or Standard Score](http://en.wikipedia.org/wiki/Standard_score).\r\n *\r\n * The standard score is the number of standard deviations an observation\r\n * or datum is above or below the mean. Thus, a positive standard score\r\n * represents a datum above the mean, while a negative standard score\r\n * represents a datum below the mean. It is a dimensionless quantity\r\n * obtained by subtracting the population mean from an individual raw\r\n * score and then dividing the difference by the population standard\r\n * deviation.\r\n *\r\n * The z-score is only defined if one knows the population parameters;\r\n * if one only has a sample set, then the analogous computation with\r\n * sample mean and sample standard deviation yields the\r\n * Student's t-statistic.\r\n *\r\n * @param {number} x\r\n * @param {number} mean\r\n * @param {number} standardDeviation\r\n * @return {number} z score\r\n * @example\r\n * ss.zScore(78, 80, 5); //= -0.4\r\n */\r\nfunction zScore(x/*:number*/, mean/*:number*/, standardDeviation/*:number*/)/*:number*/ {\r\n    return (x - mean) / standardDeviation;\r\n}\r\n\r\nmodule.exports = zScore;\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class ChartConfig {\r\n    cssClassPrefix = \"odc-\";\r\n    svgClass = this.cssClassPrefix + 'mw-d3-chart';\r\n    width = undefined;\r\n    height = undefined;\r\n    margin = {\r\n        left: 50,\r\n        right: 30,\r\n        top: 30,\r\n        bottom: 50\r\n    };\r\n    tooltip = false;\r\n\r\n    constructor(custom) {\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Chart {\r\n    utils = Utils;\r\n    baseContainer;\r\n    svg;\r\n    config;\r\n    plot = {\r\n        margin: {}\r\n    };\r\n    _attached = {};\r\n    _layers = {};\r\n    _events = {};\r\n    _isAttached;\r\n    _isInitialized=false;\r\n\r\n\r\n    constructor(base, data, config) {\r\n        \r\n        this._isAttached = base instanceof Chart;\r\n\r\n        this.baseContainer = base;\r\n\r\n        this.setConfig(config);\r\n\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n\r\n        this.init();\r\n        this.postInit();\r\n    }\r\n\r\n    setConfig(config) {\r\n        if (!config) {\r\n            this.config = new ChartConfig();\r\n        } else {\r\n            this.config = config;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setData(data) {\r\n        this.data = data;\r\n        return this;\r\n    }\r\n\r\n    init() {\r\n        var self = this;\r\n\r\n\r\n        self.initPlot();\r\n        self.initSvg();\r\n\r\n        self.initTooltip();\r\n        self.draw();\r\n        this._isInitialized=true;\r\n        return this;\r\n    }\r\n\r\n    postInit(){\r\n\r\n    }\r\n\r\n    initSvg() {\r\n        var self = this;\r\n        var config = this.config;\r\n        console.log(config.svgClass);\r\n\r\n        var width = self.plot.width + config.margin.left + config.margin.right;\r\n        var height = self.plot.height + config.margin.top + config.margin.bottom;\r\n        var aspect = width / height;\r\n        if(!self._isAttached){\r\n            if(!this._isInitialized){\r\n                d3.select(self.baseContainer).select(\"svg\").remove();\r\n            }\r\n            self.svg = d3.select(self.baseContainer).selectOrAppend(\"svg\");\r\n\r\n            self.svg\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .attr(\"viewBox\", \"0 0 \" + \" \" + width + \" \" + height)\r\n                .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n                .attr(\"class\", config.svgClass);\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group\");\r\n        }else{\r\n            console.log(self.baseContainer);\r\n            self.svg = self.baseContainer.svg;\r\n            self.svgG = self.svg.selectOrAppend(\"g.main-group.\"+config.svgClass)\r\n        }\r\n\r\n        self.svgG.attr(\"transform\", \"translate(\" + config.margin.left + \",\" + config.margin.top + \")\");\r\n\r\n        if (!config.width || config.height) {\r\n            d3.select(window)\r\n                .on(\"resize\", function () {\r\n                    //TODO add responsiveness if width/height not specified\r\n                });\r\n        }\r\n    }\r\n\r\n    initTooltip(){\r\n        var self = this;\r\n        if (self.config.tooltip) {\r\n            if(!self._isAttached ){\r\n                self.plot.tooltip = d3.select(self.baseContainer).selectOrAppend('div.'+self.config.cssClassPrefix+'tooltip')\r\n                    .style(\"opacity\", 0);\r\n            }else{\r\n                self.plot.tooltip= self.baseContainer.plot.tooltip;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    initPlot() {\r\n\r\n    }\r\n\r\n    update(data) {\r\n        if (data) {\r\n            this.setData(data);\r\n        }\r\n        var layerName, attachmentData;\r\n        for (var attachmentName in this._attached) {\r\n\r\n            attachmentData = data;\r\n\r\n            this._attached[attachmentName].update(attachmentData);\r\n        }\r\n        console.log('base uppdate');\r\n        return this;\r\n    }\r\n\r\n    draw(data) {\r\n        this.update(data);\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Register or retrieve an \"attachment\" Chart. The \"attachment\" chart's `draw`\r\n     * method will be invoked whenever the containing chart's `draw` method is\r\n     * invoked.\r\n     *\r\n     * @externalExample chart-attach\r\n     *\r\n     * @param {String} attachmentName Name of the attachment\r\n     * @param {Chart} [chart] Chart to register as a mix in of this chart. When\r\n     *        unspecified, this method will return the attachment previously\r\n     *        registered with the specified `attachmentName` (if any).\r\n     *\r\n     * @returns {Chart} Reference to this chart (chainable).\r\n     */\r\n    attach(attachmentName, chart) {\r\n        if (arguments.length === 1) {\r\n            return this._attached[attachmentName];\r\n        }\r\n\r\n        this._attached[attachmentName] = chart;\r\n        return chart;\r\n    };\r\n\r\n    \r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Subscribe a callback function to an event triggered on the chart. See {@link\r\n        * Chart#once} to subscribe a callback function to an event for one occurence.\r\n     *\r\n     * @externalExample {runnable} chart-on\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    on(name, callback, context) {\r\n        var events = this._events[name] || (this._events[name] = []);\r\n        events.push({\r\n            callback: callback,\r\n            context: context || this,\r\n            _chart: this\r\n        });\r\n        return this;\r\n    }\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     *\r\n     * Subscribe a callback function to an event triggered on the chart. This\r\n     * function will be invoked at the next occurance of the event and immediately\r\n     * unsubscribed. See {@link Chart#on} to subscribe a callback function to an\r\n     * event indefinitely.\r\n     *\r\n     * @externalExample {runnable} chart-once\r\n     *\r\n     * @param {String} name Name of the event\r\n     * @param {ChartEventHandler} callback Function to be invoked when the event\r\n     *        occurs\r\n     * @param {Object} [context] Value to set as `this` when invoking the\r\n     *        `callback`. Defaults to the chart instance\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable)\r\n     */\r\n    once(name, callback, context) {\r\n        var self = this;\r\n        var once = function () {\r\n            self.off(name, once);\r\n            callback.apply(this, arguments);\r\n        };\r\n        return this.on(name, once, context);\r\n    }\r\n\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Unsubscribe one or more callback functions from an event triggered on the\r\n     * chart. When no arguments are specified, *all* handlers will be unsubscribed.\r\n     * When only a `name` is specified, all handlers subscribed to that event will\r\n     * be unsubscribed. When a `name` and `callback` are specified, only that\r\n     * function will be unsubscribed from that event. When a `name` and `context`\r\n     * are specified (but `callback` is omitted), all events bound to the given\r\n     * event with the given context will be unsubscribed.\r\n     *\r\n     * @externalExample {runnable} chart-off\r\n     *\r\n     * @param {String} [name] Name of the event to be unsubscribed\r\n     * @param {ChartEventHandler} [callback] Function to be unsubscribed\r\n     * @param {Object} [context] Contexts to be unsubscribe\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n\r\n    off(name, callback, context) {\r\n        var names, n, events, event, i, j;\r\n\r\n        // remove all events\r\n        if (arguments.length === 0) {\r\n            for (name in this._events) {\r\n                this._events[name].length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events for a specific name\r\n        if (arguments.length === 1) {\r\n            events = this._events[name];\r\n            if (events) {\r\n                events.length = 0;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // remove all events that match whatever combination of name, context\r\n        // and callback.\r\n        names = name ? [name] : Object.keys(this._events);\r\n        for (i = 0; i < names.length; i++) {\r\n            n = names[i];\r\n            events = this._events[n];\r\n            j = events.length;\r\n            while (j--) {\r\n                event = events[j];\r\n                if ((callback && callback === event.callback) ||\r\n                    (context && context === event.context)) {\r\n                    events.splice(j, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    //Borrowed from d3.chart\r\n    /**\r\n     * Publish an event on this chart with the given `name`.\r\n     *\r\n     * @externalExample {runnable} chart-trigger\r\n     *\r\n     * @param {String} name Name of the event to publish\r\n     * @param {...*} arguments Values with which to invoke the registered\r\n     *        callbacks.\r\n     *\r\n     * @returns {Chart} A reference to this chart (chainable).\r\n     */\r\n    trigger(name) {\r\n        var args = Array.prototype.slice.call(arguments, 1);\r\n        var events = this._events[name];\r\n        var i, ev;\r\n\r\n        if (events !== undefined) {\r\n            for (i = 0; i < events.length; i++) {\r\n                ev = events[i];\r\n                ev.callback.apply(ev.context, args);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    getBaseContainerNode(){\r\n        if(this._isAttached){\r\n            return this.baseContainer.svg.node();\r\n        }\r\n        return d3.select(this.baseContainer).node();\r\n    }\r\n\r\n    prefixClass(clazz, addDot){\r\n        return addDot? '.': ''+this.config.cssClassPrefix+clazz;\r\n    }\r\n}\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\nimport {Legend} from './legend'\r\nimport {ScatterPlot} from './scatterplot'\r\n\r\nexport class CorrelationMatrixConfig extends ChartConfig {\r\n\r\n    svgClass = 'odc-correlation-matrix';\r\n    guides = false; //show axis guides\r\n    tooltip = true; //show tooltip on dot hover\r\n    legend = true;\r\n    highlightLabels = true;\r\n    variables = {\r\n        labels: undefined,\r\n        keys: [], //optional array of variable keys\r\n        value: (d, variableKey) => d[variableKey], // variable value accessor\r\n        scale: \"ordinal\"\r\n    };\r\n    correlation = {\r\n        scale: \"linear\",\r\n        domain: [-1, -0.75, -0.5, 0, 0.5, 0.75, 1],\r\n        range: [\"darkblue\", \"blue\", \"lightskyblue\", \"white\", \"orangered\", \"crimson\", \"darkred\"],\r\n        value: (xValues, yValues) => StatisticsUtils.sampleCorrelation(xValues, yValues)\r\n\r\n    };\r\n    cell = {\r\n        shape: \"ellipse\", //possible values: rect, circle, ellipse\r\n        size: undefined,\r\n        sizeMin: 5,\r\n        sizeMax: 250,\r\n        padding: 1\r\n    };\r\n    margin = {\r\n        left: 60,\r\n        right: 50,\r\n        top: 30,\r\n        bottom: 60\r\n    };\r\n\r\n    constructor(custom) {\r\n        super();\r\n        if (custom) {\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n    }\r\n}\r\n\r\nexport class CorrelationMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new CorrelationMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new CorrelationMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot = {\r\n            x: {},\r\n            correlation: {\r\n                matrix: undefined,\r\n                cells: undefined,\r\n                color: {},\r\n                shape: {}\r\n            }\r\n\r\n\r\n        };\r\n        this.setupVariables();\r\n        var width = conf.width;\r\n        var placeholderNode = this.getBaseContainerNode();\r\n        this.plot.placeholderNode = placeholderNode;\r\n\r\n        var parentWidth = placeholderNode.getBoundingClientRect().width;\r\n        if (width) {\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (width - margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n        } else {\r\n            this.plot.cellSize = this.config.cell.size;\r\n\r\n            if (!this.plot.cellSize) {\r\n                this.plot.cellSize = Math.max(conf.cell.sizeMin, Math.min(conf.cell.sizeMax, (parentWidth- margin.left - margin.right) / this.plot.variables.length));\r\n            }\r\n\r\n            width = this.plot.cellSize * this.plot.variables.length + margin.left + margin.right;\r\n\r\n        }\r\n\r\n        var height = width;\r\n        if (!height) {\r\n            height = placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = this.plot.width;\r\n\r\n        this.setupVariablesScales();\r\n        this.setupCorrelationScales();\r\n        this.setupCorrelationMatrix();\r\n\r\n\r\n        return this;\r\n    }\r\n\r\n    setupVariablesScales() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.variables;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = conf.value;\r\n        x.scale = d3.scale[conf.scale]().rangeBands([plot.width, 0]);\r\n        x.map = d => x.scale(x.value(d));\r\n\r\n    };\r\n\r\n    setupCorrelationScales() {\r\n        var plot = this.plot;\r\n        var corrConf = this.config.correlation;\r\n\r\n        plot.correlation.color.scale = d3.scale[corrConf.scale]().domain(corrConf.domain).range(corrConf.range);\r\n        var shape = plot.correlation.shape = {};\r\n\r\n        var cellConf = this.config.cell;\r\n        shape.type = cellConf.shape;\r\n\r\n        var shapeSize = plot.cellSize - cellConf.padding * 2;\r\n        if (shape.type == 'circle') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([2, radiusMax]);\r\n            shape.radius = c=> shape.radiusScale(Math.abs(c.value));\r\n        } else if (shape.type == 'ellipse') {\r\n            var radiusMax = shapeSize / 2;\r\n            shape.radiusScale = d3.scale.linear().domain([0, 1]).range([radiusMax, 2]);\r\n            shape.radiusX = c=> shape.radiusScale(Math.abs(c.value));\r\n            shape.radiusY = radiusMax;\r\n\r\n            shape.rotateVal = v => {\r\n                if (v == 0) return \"0\";\r\n                if (v < 0) return \"-45\";\r\n                return \"45\"\r\n            }\r\n        } else if (shape.type == 'rect') {\r\n            shape.size = shapeSize;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupVariables() {\r\n\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if (!plot.variables || !plot.variables.length) {\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach((variableKey, index) => {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function (d) {\r\n                return variablesConf.value(d, variableKey)\r\n            });\r\n            var label = variableKey;\r\n            if (variablesConf.labels && variablesConf.labels.length > index) {\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n    };\r\n\r\n\r\n    setupCorrelationMatrix() {\r\n        var self = this;\r\n        var data = this.data;\r\n        var matrix = this.plot.correlation.matrix = [];\r\n        var matrixCells = this.plot.correlation.matrix.cells = [];\r\n        var plot = this.plot;\r\n\r\n        var variableToValues = {};\r\n        plot.variables.forEach((v, i) => {\r\n\r\n            variableToValues[v] = data.map(d=>plot.x.value(d, v));\r\n        });\r\n\r\n        plot.variables.forEach((v1, i) => {\r\n            var row = [];\r\n            matrix.push(row);\r\n\r\n            plot.variables.forEach((v2, j) => {\r\n                var corr = 1;\r\n                if (v1 != v2) {\r\n                    corr = self.config.correlation.value(variableToValues[v1], variableToValues[v2]);\r\n                }\r\n                var cell = {\r\n                    rowVar: v1,\r\n                    colVar: v2,\r\n                    row: i,\r\n                    col: j,\r\n                    value: corr\r\n                };\r\n                row.push(cell);\r\n\r\n                matrixCells.push(cell);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    update(newData) {\r\n        super.update(newData);\r\n        // this.update\r\n        this.updateCells();\r\n        this.updateVariableLabels();\r\n\r\n        if (this.config.legend) {\r\n            this.updateLegend();\r\n        }\r\n    };\r\n\r\n    updateVariableLabels() {\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var labelClass = self.prefixClass(\"label\");\r\n        var labelXClass = labelClass + \"-x\";\r\n        var labelYClass = labelClass + \"-y\";\r\n        plot.labelClass = labelClass;\r\n\r\n\r\n        var labelsX = self.svgG.selectAll(\"text.\"+labelXClass)\r\n            .data(plot.variables, (d, i)=>i);\r\n\r\n        labelsX.enter().append(\"text\").attr(\"class\", (d, i) => labelClass + \" \" +labelXClass+\" \"+ labelXClass + \"-\" + i);\r\n\r\n\r\n        labelsX\r\n            .attr(\"x\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"y\", plot.height)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"transform\", (d, i) => \"rotate(-90, \" + (i * plot.cellSize + plot.cellSize / 2  ) + \", \" + plot.height + \")\")\r\n            .attr(\"text-anchor\", \"end\")\r\n\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        labelsX.exit().remove();\r\n\r\n        //////\r\n\r\n        var labelsY = self.svgG.selectAll(\"text.\"+labelYClass)\r\n            .data(plot.variables);\r\n\r\n        labelsY.enter().append(\"text\");\r\n\r\n\r\n        labelsY\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", (d, i) => i * plot.cellSize + plot.cellSize / 2)\r\n            .attr(\"dx\", -2)\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"class\", (d, i) => labelClass + \" \" + labelYClass +\" \" + labelYClass + \"-\" + i)\r\n            // .attr(\"dominant-baseline\", \"hanging\")\r\n            .text(v=>plot.labelByVariable[v]);\r\n\r\n        labelsY.exit().remove();\r\n\r\n\r\n    }\r\n\r\n    updateCells() {\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var cellClass = self.prefixClass(\"cell\");\r\n        var cellShape = plot.correlation.shape.type;\r\n\r\n        var cells = self.svgG.selectAll(\"g.\"+cellClass)\r\n            .data(plot.correlation.matrix.cells);\r\n\r\n        var cellEnterG = cells.enter().append(\"g\")\r\n            .classed(cellClass, true);\r\n        cells.attr(\"transform\", c=> \"translate(\" + (plot.cellSize * c.col + plot.cellSize / 2) + \",\" + (plot.cellSize * c.row + plot.cellSize / 2) + \")\");\r\n\r\n        cells.classed(self.config.cssClassPrefix + \"selectable\", !!self.scatterPlot);\r\n\r\n        var selector = \"*:not(.cell-shape-\"+cellShape+\")\";\r\n       \r\n        var wrongShapes = cells.selectAll(selector);\r\n        wrongShapes.remove();\r\n        \r\n        var shapes = cells.selectOrAppend(cellShape+\".cell-shape-\"+cellShape);\r\n\r\n        if (plot.correlation.shape.type == 'circle') {\r\n\r\n            shapes\r\n                .attr(\"r\", plot.correlation.shape.radius)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0);\r\n        }\r\n\r\n        if (plot.correlation.shape.type == 'ellipse') {\r\n            // cells.attr(\"transform\", c=> \"translate(300,150) rotate(\"+plot.correlation.shape.rotateVal(c.value)+\")\");\r\n            shapes\r\n                .attr(\"rx\", plot.correlation.shape.radiusX)\r\n                .attr(\"ry\", plot.correlation.shape.radiusY)\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", 0)\r\n\r\n                .attr(\"transform\", c=> \"rotate(\" + plot.correlation.shape.rotateVal(c.value) + \")\");\r\n        }\r\n\r\n\r\n        if (plot.correlation.shape.type == 'rect') {\r\n            shapes\r\n                .attr(\"width\", plot.correlation.shape.size)\r\n                .attr(\"height\", plot.correlation.shape.size)\r\n                .attr(\"x\", -plot.cellSize / 2)\r\n                .attr(\"y\", -plot.cellSize / 2);\r\n        }\r\n        shapes.style(\"fill\", c=> plot.correlation.color.scale(c.value));\r\n\r\n        var mouseoverCallbacks = [];\r\n        var mouseoutCallbacks = [];\r\n\r\n        if (plot.tooltip) {\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = c.value;\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            });\r\n\r\n            mouseoutCallbacks.push(c=> {\r\n                plot.tooltip.transition()\r\n                    .duration(500)\r\n                    .style(\"opacity\", 0);\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (self.config.highlightLabels) {\r\n            var highlightClass = self.config.cssClassPrefix + \"highlight\";\r\n            var xLabelClass = c=>plot.labelClass + \"-x-\" + c.col;\r\n            var yLabelClass = c=>plot.labelClass + \"-y-\" + c.row;\r\n\r\n\r\n            mouseoverCallbacks.push(c=> {\r\n\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, true);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, true);\r\n            });\r\n            mouseoutCallbacks.push(c=> {\r\n                self.svgG.selectAll(\"text.\" + xLabelClass(c)).classed(highlightClass, false);\r\n                self.svgG.selectAll(\"text.\" + yLabelClass(c)).classed(highlightClass, false);\r\n            });\r\n        }\r\n\r\n\r\n        cells.on(\"mouseover\", c => {\r\n            mouseoverCallbacks.forEach(callback=>callback(c));\r\n        })\r\n            .on(\"mouseout\", c => {\r\n                mouseoutCallbacks.forEach(callback=>callback(c));\r\n            });\r\n\r\n        cells.on(\"click\", c=>{\r\n           self.trigger(\"cell-selected\", c);\r\n        });\r\n\r\n\r\n\r\n        cells.exit().remove();\r\n    }\r\n\r\n\r\n    updateLegend() {\r\n\r\n        var plot = this.plot;\r\n        var legendX = this.plot.width + 10;\r\n        var legendY = 0;\r\n        var barWidth = 10;\r\n        var barHeight = this.plot.height - 2;\r\n        var scale = plot.correlation.color.scale;\r\n\r\n        plot.legend = new Legend(this.svg, this.svgG, scale, legendX, legendY).linearGradientBar(barWidth, barHeight);\r\n\r\n\r\n    }\r\n\r\n    attachScatterPlot(containerSelector, config) {\r\n        var self = this;\r\n\r\n        config = config || {};\r\n\r\n\r\n        var scatterPlotConfig = {\r\n            height: self.plot.height+self.config.margin.top+ self.config.margin.bottom,\r\n            width: self.plot.height+self.config.margin.top+ self.config.margin.bottom,\r\n            groups:{\r\n                key: self.config.groups.key,\r\n                label: self.config.groups.label\r\n            },\r\n            guides: true\r\n        };\r\n\r\n        self.scatterPlot=true;\r\n\r\n        scatterPlotConfig = Utils.deepExtend(scatterPlotConfig, config);\r\n        this.update();\r\n\r\n        this.on(\"cell-selected\", c=>{\r\n\r\n\r\n\r\n            scatterPlotConfig.x={\r\n                key: c.rowVar,\r\n                label: self.plot.labelByVariable[c.rowVar]\r\n            };\r\n            scatterPlotConfig.y={\r\n                key: c.colVar,\r\n                label: self.plot.labelByVariable[c.colVar]\r\n            };\r\n            if(self.scatterPlot && self.scatterPlot !==true){\r\n                self.scatterPlot.setConfig(scatterPlotConfig).init();\r\n            }else{\r\n                self.scatterPlot = new ScatterPlot(containerSelector, self.data, scatterPlotConfig);\r\n                this.attach(\"ScatterPlot\", self.scatterPlot);\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n}\r\n","import {Utils} from './utils'\r\n\r\n\r\nexport class D3Extensions{\r\n\r\n    static extend(){\r\n\r\n        d3.selection.enter.prototype.insertSelector =\r\n            d3.selection.prototype.insertSelector = function(selector, before) {\r\n                return Utils.insertSelector(this, selector, before);\r\n            };\r\n\r\n\r\n        d3.selection.enter.prototype.appendSelector =\r\n            d3.selection.prototype.appendSelector = function(selector) {\r\n                return Utils.appendSelector(this, selector);\r\n            };\r\n\r\n        d3.selection.enter.prototype.selectOrAppend =\r\n            d3.selection.prototype.selectOrAppend = function(selector) {\r\n                return Utils.selectOrAppend(this, selector);\r\n            };\r\n\r\n        d3.selection.enter.prototype.selectOrInsert =\r\n            d3.selection.prototype.selectOrInsert = function(selector, before) {\r\n                return Utils.selectOrInsert(this, selector, before);\r\n            };\r\n\r\n\r\n\r\n    }\r\n}\r\n","import {D3Extensions} from './d3-extensions'\r\nD3Extensions.extend();\r\n\r\nexport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nexport {ScatterPlotMatrix, ScatterPlotMatrixConfig} from \"./scatterplot-matrix\";\r\nexport {CorrelationMatrix, CorrelationMatrixConfig} from './correlation-matrix'\r\nexport {Regression, RegressionConfig} from './regression'\r\nexport {StatisticsUtils} from './statistics-utils'\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Utils} from \"./utils\";\r\n\r\n/*var d3 = require('../bower_components/d3');\r\nvar legend = require('../bower_components/d3-legend/no-extend');*/\r\n\r\nexport class Legend {\r\n\r\n    cssClassPrefix=\"odc-\";\r\n    legendClass=this.cssClassPrefix+\"legend\";\r\n    container;\r\n    scale;\r\n\r\n\r\n    constructor(svg, legendParent, scale, legendX, legendY){\r\n        this.scale=scale;\r\n        this.svg = svg;\r\n\r\n        this.container =  Utils.selectOrAppend(legendParent, \"g.\"+this.legendClass, \"g\")\r\n            .attr(\"transform\", \"translate(\"+legendX+\",\"+legendY+\")\")\r\n            .classed(this.legendClass, true);\r\n\r\n    }\r\n\r\n    linearGradientBar(barWidth, barHeight){\r\n        var gradientId = this.cssClassPrefix+\"linear-gradient\";\r\n        var scale= this.scale;\r\n\r\n        this.linearGradient = Utils.linearGradient(this.svg, gradientId, this.scale.range(), 0, 100, 0, 0);\r\n\r\n        this.container.append(\"rect\")\r\n            .attr(\"width\", barWidth)\r\n            .attr(\"height\", barHeight)\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .style(\"fill\", \"url(#\"+gradientId+\")\");\r\n\r\n\r\n        var ticks = this.container.selectAll(\"text\")\r\n            .data( scale.domain() );\r\n        var ticksNumber =scale.domain().length-1;\r\n        ticks.enter().append(\"text\")\r\n            .attr(\"x\", barWidth)\r\n            .attr(\"y\",  (d, i) =>  barHeight -(i*barHeight/ticksNumber))\r\n            .attr(\"dx\", 3)\r\n            // .attr(\"dy\", 1)\r\n            .attr(\"alignment-baseline\", \"middle\")\r\n            .text(d=>d);\r\n\r\n        ticks.exit().remove();\r\n\r\n        return this;\r\n    }\r\n\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlot, ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\nimport {StatisticsUtils} from './statistics-utils'\r\n\r\nexport class RegressionConfig extends ScatterPlotConfig{\r\n\r\n    mainRegression = true;\r\n    groupRegression = true;\r\n    confidence={\r\n        level: 0.95,\r\n        criticalValue: (degreesOfFreedom, criticalProbability) => StatisticsUtils.tValue(degreesOfFreedom, criticalProbability),\r\n        marginOfError: undefined //custom  margin Of Error function (x, points)\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class Regression extends ScatterPlot{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new RegressionConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new RegressionConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        super.initPlot();\r\n        this.initRegressionLines();\r\n    }\r\n\r\n    initRegressionLines(){\r\n\r\n        var self = this;\r\n        var groupsAvailable = self.config.groups && self.config.groups.value;\r\n\r\n        self.plot.regressions= [];\r\n\r\n\r\n        if(groupsAvailable && self.config.mainRegression){\r\n            var regression = this.initRegression(this.data, false);\r\n            self.plot.regressions.push(regression);\r\n        }\r\n\r\n        if(self.config.groupRegression){\r\n            this.initGroupRegression();\r\n        }\r\n\r\n    }\r\n\r\n    initGroupRegression() {\r\n        var self = this;\r\n        var dataByGroup = {};\r\n        self.data.forEach (d=>{\r\n            var groupVal = self.config.groups.value(d, self.config.groups.key);\r\n\r\n            if(!groupVal && groupVal!==0){\r\n                return;\r\n            }\r\n\r\n            if(!dataByGroup[groupVal]){\r\n                dataByGroup[groupVal] = [];\r\n            }\r\n            dataByGroup[groupVal].push(d);\r\n        });\r\n\r\n        for(var key in dataByGroup){\r\n            if (!dataByGroup.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            var regression = this.initRegression(dataByGroup[key], key);\r\n            self.plot.regressions.push(regression);\r\n        }\r\n    }\r\n\r\n    initRegression(values, groupVal){\r\n        var self = this;\r\n\r\n        var points = values.map(d=>{\r\n            return [parseFloat(self.plot.x.value(d)), parseFloat(self.plot.y.value(d))];\r\n        });\r\n\r\n        // points.sort((a,b) => a[0]-b[0]);\r\n\r\n        var linearRegression =  StatisticsUtils.linearRegression(points);\r\n        var linearRegressionLine = StatisticsUtils.linearRegressionLine(linearRegression);\r\n\r\n\r\n        var extentX = d3.extent(points, d=>d[0]);\r\n\r\n\r\n        var linePoints = [\r\n            {\r\n                x: extentX[0],\r\n                y: linearRegressionLine(extentX[0])\r\n            },\r\n            {\r\n                x: extentX[1],\r\n                y: linearRegressionLine(extentX[1])\r\n            }\r\n        ];\r\n\r\n        var line = d3.svg.line()\r\n            .interpolate(\"basis\")\r\n            .x(d => self.plot.x.scale(d.x))\r\n            .y(d => self.plot.y.scale(d.y));\r\n        \r\n\r\n        var color = self.plot.dot.color;\r\n\r\n        var defaultColor = \"black\";\r\n        if(Utils.isFunction(color)){\r\n            if(values.length && groupVal!==false){\r\n                color = color(values[0]);\r\n            }else{\r\n                color = defaultColor;\r\n            }\r\n        }else if(!color && groupVal===false){\r\n            color = defaultColor;\r\n        }\r\n\r\n\r\n        var confidence = this.computeConfidence(points, extentX,  linearRegression,linearRegressionLine);\r\n        return {\r\n            group: groupVal || false,\r\n            line: line,\r\n            linePoints: linePoints,\r\n            color: color,\r\n            confidence: confidence\r\n        };\r\n    }\r\n\r\n    computeConfidence(points, extentX, linearRegression,linearRegressionLine){\r\n        var self = this;\r\n        var slope = linearRegression.m;\r\n        var n = points.length;\r\n        var degreesOfFreedom = Math.max(0, n-2);\r\n\r\n        var alpha = 1 - self.config.confidence.level;\r\n        var criticalProbability  = 1 - alpha/2;\r\n        var criticalValue = self.config.confidence.criticalValue(degreesOfFreedom,criticalProbability);\r\n\r\n        var xValues = points.map(d=>d[0]);\r\n        var meanX = StatisticsUtils.mean(xValues);\r\n        var xMySum=0;\r\n        var xSum=0;\r\n        var xPowSum=0;\r\n        var ySum=0;\r\n        var yPowSum=0;\r\n        points.forEach(p=>{\r\n            var x = p[0];\r\n            var y = p[1];\r\n\r\n            xMySum += x*y;\r\n            xSum+=x;\r\n            ySum+=y;\r\n            xPowSum+= x*x;\r\n            yPowSum+= y*y;\r\n        });\r\n        var a = linearRegression.m;\r\n        var b = linearRegression.b;\r\n\r\n        var Sa2 = n/(n+2) * ((yPowSum-a*xMySum-b*ySum)/(n*xPowSum-(xSum*xSum))); //Wariancja współczynnika kierunkowego regresji liniowej a\r\n        var Sy2 = (yPowSum - a*xMySum-b*ySum)/(n*(n-2)); //Sa2 //Mean y value variance\r\n\r\n        var errorFn = x=> Math.sqrt(Sy2 + Math.pow(x-meanX,2)*Sa2); //pierwiastek kwadratowy z wariancji dowolnego punktu prostej\r\n        var marginOfError =  x=> criticalValue* errorFn(x);\r\n\r\n\r\n        // console.log('n', n, 'degreesOfFreedom', degreesOfFreedom, 'criticalProbability',criticalProbability);\r\n        // var confidenceDown = x => linearRegressionLine(x) -  marginOfError(x);\r\n        // var confidenceUp = x => linearRegressionLine(x) +  marginOfError(x);\r\n\r\n\r\n        var computeConfidenceAreaPoint = x=>{\r\n            var linearRegression = linearRegressionLine(x);\r\n            var moe = marginOfError(x);\r\n            var confDown = linearRegression - moe;\r\n            var confUp = linearRegression + moe;\r\n            return {\r\n                x: x,\r\n                y0: confDown,\r\n                y1: confUp\r\n            }\r\n\r\n        };\r\n\r\n        var centerX = (extentX[1]+extentX[0])/2;\r\n\r\n        // var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\r\n        var confidenceAreaPoints = [extentX[0], centerX,  extentX[1]].map(computeConfidenceAreaPoint);\r\n\r\n        var fitInPlot = y => y;\r\n\r\n        var confidenceArea =  d3.svg.area()\r\n        .interpolate(\"monotone\")\r\n            .x(d => self.plot.x.scale(d.x))\r\n            .y0(d => fitInPlot(self.plot.y.scale(d.y0)))\r\n            .y1(d => fitInPlot(self.plot.y.scale(d.y1)));\r\n\r\n        return {\r\n            area:confidenceArea,\r\n            points:confidenceAreaPoints\r\n        };\r\n    }\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n        this.updateRegressionLines();\r\n    };\r\n\r\n    updateRegressionLines() {\r\n        var self = this;\r\n        var regressionContainerClass = this.prefixClass(\"regression-container\");\r\n        var regressionContainerSelector = \"g.\"+regressionContainerClass;\r\n\r\n        var clipPathId = self.prefixClass(\"clip\");\r\n\r\n        var regressionContainer = self.svgG.selectOrInsert(regressionContainerSelector, \".\"+self.dotsContainerClass);\r\n        var regressionContainerClip = regressionContainer.selectOrAppend(\"clipPath\")\r\n            .attr(\"id\", clipPathId);\r\n\r\n\r\n        regressionContainerClip.selectOrAppend('rect')\r\n            .attr('width', self.plot.width)\r\n            .attr('height', self.plot.height)\r\n            .attr('x', 0)\r\n            .attr('y', 0);\r\n\r\n        regressionContainer.attr(\"clip-path\", function(d,i) { return \"url(#\"+clipPathId+\")\"; });\r\n\r\n        var regressionClass = this.prefixClass(\"regression\");\r\n        var confidenceAreaClass = self.prefixClass(\"confidence\");\r\n        var regressionSelector = \"g.\"+regressionClass;\r\n        var regression = regressionContainer.selectAll(regressionSelector)\r\n            .data(self.plot.regressions);\r\n\r\n        var line = regression.enter()\r\n            .insertSelector(regressionSelector)\r\n            .append(\"path\")\r\n            .attr(\"class\", self.prefixClass(\"line\"))\r\n            .attr(\"shape-rendering\", \"optimizeQuality\");\r\n            // .append(\"line\")\r\n            // .attr(\"class\", \"line\")\r\n            // .attr(\"shape-rendering\", \"optimizeQuality\");\r\n\r\n        line\r\n            // .attr(\"x1\", r=> self.plot.x.scale(r.linePoints[0].x))\r\n            // .attr(\"y1\", r=> self.plot.y.scale(r.linePoints[0].y))\r\n            // .attr(\"x2\", r=> self.plot.x.scale(r.linePoints[1].x))\r\n            // .attr(\"y2\", r=> self.plot.y.scale(r.linePoints[1].y))\r\n            .attr(\"d\", function(r) { return r.line(r.linePoints); })\r\n            .style(\"stroke\", function(r) { return r.color; });\r\n\r\n\r\n        var area = regression.enter()\r\n            .appendSelector(regressionSelector)\r\n            .append(\"path\")\r\n            .attr(\"class\", confidenceAreaClass)\r\n            .attr(\"shape-rendering\", \"optimizeQuality\");\r\n\r\n\r\n        area\r\n            .attr(\"d\", r => r.confidence.area(r.confidence.points))\r\n            .style(\"fill\", r => r.color)\r\n            .style(\"opacity\", \"0.4\");\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import {Chart, ChartConfig} from \"./chart\";\r\nimport {ScatterPlotConfig} from \"./scatterplot\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotMatrixConfig extends ScatterPlotConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'scatterplot-matrix';\r\n    size= 200; //scatter plot cell size\r\n    padding= 20; //scatter plot cell padding\r\n    brush= true;\r\n    guides= true; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    ticks= undefined; //ticks number, (default: computed using cell size)\r\n    x={// X axis config\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: undefined, //object property name or array index with grouping variable\r\n        includeInPlot: false, //include group as variable in plot, boolean (default: false)\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    variables= {\r\n        labels: [], //optional array of variable labels (for the diagonal of the plot).\r\n        keys: [], //optional array of variable keys\r\n        value: function (d, variableKey) {// variable value accessor\r\n            return d[variableKey];\r\n        }\r\n    };\r\n\r\n    constructor(custom){\r\n        super();\r\n        Utils.deepExtend(this, custom);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ScatterPlotMatrix extends Chart {\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotMatrixConfig(config));\r\n    }\r\n\r\n    setConfig(config) {\r\n        return super.setConfig(new ScatterPlotMatrixConfig(config));\r\n\r\n    }\r\n\r\n    initPlot() {\r\n\r\n\r\n        var self = this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot = {\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        this.setupVariables();\r\n\r\n        this.plot.size = conf.size;\r\n\r\n\r\n        var width = conf.width;\r\n        var boundingClientRect = this.getBaseContainerNode().getBoundingClientRect();\r\n        if (!width) {\r\n            var maxWidth = margin.left + margin.right + this.plot.variables.length*this.plot.size;\r\n            width = Math.min(boundingClientRect.width, maxWidth);\r\n\r\n        }\r\n        var height = width;\r\n        if (!height) {\r\n            height = boundingClientRect.height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n\r\n\r\n\r\n        if(conf.ticks===undefined){\r\n            conf.ticks = this.plot.size / 40;\r\n        }\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if (conf.dot.d3ColorCategory) {\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if (colorValue) {\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String) {\r\n                this.plot.dot.color = colorValue;\r\n            } else if (this.plot.dot.colorCategory) {\r\n                this.plot.dot.color = function (d) {\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return this;\r\n\r\n    };\r\n\r\n    setupVariables() {\r\n        var variablesConf = this.config.variables;\r\n\r\n        var data = this.data;\r\n        var plot = this.plot;\r\n        plot.domainByVariable = {};\r\n        plot.variables = variablesConf.keys;\r\n        if(!plot.variables || !plot.variables.length){\r\n            plot.variables = Utils.inferVariables(data, this.config.groups.key, this.config.includeInPlot);\r\n        }\r\n\r\n        plot.labels = [];\r\n        plot.labelByVariable = {};\r\n        plot.variables.forEach(function(variableKey, index) {\r\n            plot.domainByVariable[variableKey] = d3.extent(data, function(d) { return variablesConf.value(d, variableKey) });\r\n            var label = variableKey;\r\n            if(variablesConf.labels && variablesConf.labels.length>index){\r\n\r\n                label = variablesConf.labels[index];\r\n            }\r\n            plot.labels.push(label);\r\n            plot.labelByVariable[variableKey] = label;\r\n        });\r\n\r\n        console.log(plot.labelByVariable);\r\n\r\n        plot.subplots = [];\r\n    };\r\n\r\n    setupX() {\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config;\r\n\r\n        x.value = conf.variables.value;\r\n        x.scale = d3.scale[conf.x.scale]().range([conf.padding / 2, plot.size - conf.padding / 2]);\r\n        x.map = function (d, variable) {\r\n            return x.scale(x.value(d, variable));\r\n        };\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.x.orient).ticks(conf.ticks);\r\n        x.axis.tickSize(plot.size * plot.variables.length);\r\n\r\n    };\r\n\r\n    setupY() {\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config;\r\n\r\n        y.value = conf.variables.value;\r\n        y.scale = d3.scale[conf.y.scale]().range([ plot.size - conf.padding / 2, conf.padding / 2]);\r\n        y.map = function (d, variable) {\r\n            return y.scale(y.value(d, variable));\r\n        };\r\n        y.axis= d3.svg.axis().scale(y.scale).orient(conf.y.orient).ticks(conf.ticks);\r\n        y.axis.tickSize(-plot.size * plot.variables.length);\r\n    };\r\n\r\n    draw() {\r\n        var self =this;\r\n        var n = self.plot.variables.length;\r\n        var conf = this.config;\r\n\r\n        var axisClass = self.prefixClass(\"axis\");\r\n        var axisXClass = axisClass+\"-x\";\r\n        var axisYClass = axisClass+\"-y\";\r\n\r\n        var xAxisSelector = \"g.\"+axisXClass+\".\"+axisClass;\r\n        var yAxisSelector = \"g.\"+axisYClass+\".\"+axisClass;\r\n\r\n        var noGuidesClass = self.prefixClass(\"no-guides\");\r\n        self.svgG.selectAll(xAxisSelector)\r\n            .data(self.plot.variables)\r\n            .enter().appendSelector(xAxisSelector)\r\n            .classed(noGuidesClass, !conf.guides)\r\n            .attr(\"transform\", function(d, i) { return \"translate(\" + (n - i - 1) * self.plot.size + \",0)\"; })\r\n            .each(function(d) { self.plot.x.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.x.axis); });\r\n\r\n        self.svgG.selectAll(yAxisSelector)\r\n            .data(self.plot.variables)\r\n            .enter().appendSelector(yAxisSelector)\r\n            .classed(noGuidesClass, !conf.guides)\r\n            .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * self.plot.size + \")\"; })\r\n            .each(function(d) { self.plot.y.scale.domain(self.plot.domainByVariable[d]); d3.select(this).call(self.plot.y.axis); });\r\n\r\n        var cellClass =  self.prefixClass(\"cell\");\r\n        var cell = self.svgG.selectAll(\".\"+cellClass)\r\n            .data(self.utils.cross(self.plot.variables, self.plot.variables))\r\n            .enter().appendSelector(\"g.\"+cellClass)\r\n            .attr(\"transform\", function(d) { return \"translate(\" + (n - d.i - 1) * self.plot.size + \",\" + d.j * self.plot.size + \")\"; });\r\n\r\n        if(conf.brush){\r\n            this.drawBrush(cell);\r\n        }\r\n\r\n        cell.each(plotSubplot);\r\n\r\n\r\n\r\n        //Labels\r\n        cell.filter(function(d) { return d.i === d.j; }).append(\"text\")\r\n            .attr(\"x\", conf.padding)\r\n            .attr(\"y\", conf.padding)\r\n            .attr(\"dy\", \".71em\")\r\n            .text(function(d) { return self.plot.labelByVariable[d.x]; });\r\n\r\n\r\n\r\n\r\n        function plotSubplot(p) {\r\n            var plot = self.plot;\r\n            plot.subplots.push(p);\r\n            var cell = d3.select(this);\r\n\r\n            plot.x.scale.domain(plot.domainByVariable[p.x]);\r\n            plot.y.scale.domain(plot.domainByVariable[p.y]);\r\n\r\n            var frameClass =  self.prefixClass(\"frame\");\r\n            cell.append(\"rect\")\r\n                .attr(\"class\", frameClass)\r\n                .attr(\"x\", conf.padding / 2)\r\n                .attr(\"y\", conf.padding / 2)\r\n                .attr(\"width\", conf.size - conf.padding)\r\n                .attr(\"height\", conf.size - conf.padding);\r\n\r\n\r\n            p.update = function(){\r\n                var subplot = this;\r\n                var dots = cell.selectAll(\"circle\")\r\n                    .data(self.data);\r\n\r\n                dots.enter().append(\"circle\");\r\n\r\n                dots.attr(\"cx\", function(d){return plot.x.map(d, subplot.x)})\r\n                    .attr(\"cy\", function(d){return plot.y.map(d, subplot.y)})\r\n                    .attr(\"r\", self.config.dot.radius);\r\n\r\n                if (plot.dot.color) {\r\n                    dots.style(\"fill\", plot.dot.color)\r\n                }\r\n\r\n                if(plot.tooltip){\r\n                    dots.on(\"mouseover\", function(d) {\r\n                        plot.tooltip.transition()\r\n                            .duration(200)\r\n                            .style(\"opacity\", .9);\r\n                        var html = \"(\" + plot.x.value(d, subplot.x) + \", \" +plot.y.value(d, subplot.y) + \")\";\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n\r\n                        var group = self.config.groups.value(d);\r\n                        if(group || group===0 ){\r\n                            html+=\"<br/>\";\r\n                            var label = self.config.groups.label;\r\n                            if(label){\r\n                                html+=label+\": \";\r\n                            }\r\n                            html+=group\r\n                        }\r\n                        plot.tooltip.html(html)\r\n                            .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                            .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                        .on(\"mouseout\", function(d) {\r\n                            plot.tooltip.transition()\r\n                                .duration(500)\r\n                                .style(\"opacity\", 0);\r\n                        });\r\n                }\r\n\r\n                dots.exit().remove();\r\n            };\r\n\r\n            p.update();\r\n        }\r\n\r\n\r\n    };\r\n\r\n    update() {\r\n        this.plot.subplots.forEach(function(p){p.update()});\r\n    };\r\n\r\n    drawBrush(cell) {\r\n        var self = this;\r\n        var brush = d3.svg.brush()\r\n            .x(self.plot.x.scale)\r\n            .y(self.plot.y.scale)\r\n            .on(\"brushstart\", brushstart)\r\n            .on(\"brush\", brushmove)\r\n            .on(\"brushend\", brushend);\r\n\r\n        cell.append(\"g\").call(brush);\r\n\r\n\r\n        var brushCell;\r\n\r\n        // Clear the previously-active brush, if any.\r\n        function brushstart(p) {\r\n            if (brushCell !== this) {\r\n                d3.select(brushCell).call(brush.clear());\r\n                self.plot.x.scale.domain(self.plot.domainByVariable[p.x]);\r\n                self.plot.y.scale.domain(self.plot.domainByVariable[p.y]);\r\n                brushCell = this;\r\n            }\r\n        }\r\n\r\n        // Highlight the selected circles.\r\n        function brushmove(p) {\r\n            var e = brush.extent();\r\n            self.svgG.selectAll(\"circle\").classed(\"hidden\", function (d) {\r\n                return e[0][0] > d[p.x] || d[p.x] > e[1][0]\r\n                    || e[0][1] > d[p.y] || d[p.y] > e[1][1];\r\n            });\r\n        }\r\n        // If the brush is empty, select all circles.\r\n        function brushend() {\r\n            if (brush.empty()) self.svgG.selectAll(\".hidden\").classed(\"hidden\", false);\r\n        }\r\n    };\r\n}","import {Chart, ChartConfig} from \"./chart\";\r\nimport {Utils} from './utils'\r\n\r\nexport class ScatterPlotConfig extends ChartConfig{\r\n\r\n    svgClass= this.cssClassPrefix+'scatterplot';\r\n    guides= false; //show axis guides\r\n    tooltip= true; //show tooltip on dot hover\r\n    x={// X axis config\r\n        label: 'X', // axis label\r\n        key: 0,\r\n        value: function(d, key) { return d[key] }, // x value accessor\r\n        orient: \"bottom\",\r\n        scale: \"linear\"\r\n    };\r\n    y={// Y axis config\r\n        label: 'Y', // axis label,\r\n        key: 1,\r\n        value: function(d, key) { return d[key] }, // y value accessor\r\n        orient: \"left\",\r\n        scale: \"linear\"\r\n    };\r\n    groups={\r\n        key: 2,\r\n        value: function(d, key) { return d[key] }, // grouping value accessor,\r\n        label: \"\"\r\n    };\r\n    transition= true;\r\n\r\n    constructor(custom){\r\n        super();\r\n        var config = this;\r\n        this.dot={\r\n            radius: 2,\r\n            color: function(d) { return config.groups.value(d, config.groups.key) }, // string or function returning color's value for color scale\r\n            d3ColorCategory: 'category10'\r\n        };\r\n\r\n        if(custom){\r\n            Utils.deepExtend(this, custom);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class ScatterPlot extends Chart{\r\n    constructor(placeholderSelector, data, config) {\r\n        super(placeholderSelector, data, new ScatterPlotConfig(config));\r\n    }\r\n\r\n    setConfig(config){\r\n        return super.setConfig(new ScatterPlotConfig(config));\r\n    }\r\n\r\n    initPlot(){\r\n        var self=this;\r\n        var margin = this.config.margin;\r\n        var conf = this.config;\r\n        this.plot={\r\n            x: {},\r\n            y: {},\r\n            dot: {\r\n                color: null//color scale mapping function\r\n            }\r\n        };\r\n\r\n        var width = conf.width;\r\n        var placeholderNode = this.getBaseContainerNode();\r\n\r\n        if(!width){\r\n            width =placeholderNode.getBoundingClientRect().width;\r\n        }\r\n        var height = conf.height;\r\n        if(!height){\r\n            height =placeholderNode.getBoundingClientRect().height;\r\n        }\r\n\r\n        this.plot.width = width - margin.left - margin.right;\r\n        this.plot.height = height - margin.top - margin.bottom;\r\n\r\n        this.setupX();\r\n        this.setupY();\r\n\r\n        if(conf.dot.d3ColorCategory){\r\n            this.plot.dot.colorCategory = d3.scale[conf.dot.d3ColorCategory]();\r\n        }\r\n        var colorValue = conf.dot.color;\r\n        if(colorValue){\r\n            this.plot.dot.colorValue = colorValue;\r\n\r\n            if (typeof colorValue === 'string' || colorValue instanceof String){\r\n                this.plot.dot.color = colorValue;\r\n            }else if(this.plot.dot.colorCategory){\r\n                this.plot.dot.color = function(d){\r\n                    return self.plot.dot.colorCategory(self.plot.dot.colorValue(d));\r\n                }\r\n            }\r\n\r\n\r\n        }else{\r\n\r\n\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    setupX(){\r\n\r\n        var plot = this.plot;\r\n        var x = plot.x;\r\n        var conf = this.config.x;\r\n\r\n        /* *\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         **/\r\n        x.value = d => conf.value(d, conf.key);\r\n        x.scale = d3.scale[conf.scale]().range([0, plot.width]);\r\n        x.map = function(d) { return x.scale(x.value(d));};\r\n        x.axis = d3.svg.axis().scale(x.scale).orient(conf.orient);\r\n        var data = this.data;\r\n        plot.x.scale.domain([d3.min(data, plot.x.value)-1, d3.max(data, plot.x.value)+1]);\r\n        if(this.config.guides) {\r\n            x.axis.tickSize(-plot.height);\r\n        }\r\n\r\n    };\r\n\r\n    setupY (){\r\n\r\n        var plot = this.plot;\r\n        var y = plot.y;\r\n        var conf = this.config.y;\r\n\r\n        /*\r\n         * value accessor - returns the value to encode for a given data object.\r\n         * scale - maps value to a visual display encoding, such as a pixel position.\r\n         * map function - maps from data value to display value\r\n         * axis - sets up axis\r\n         */\r\n        y.value = d => conf.value(d, conf.key);\r\n        y.scale = d3.scale[conf.scale]().range([plot.height, 0]);\r\n        y.map = function(d) { return y.scale(y.value(d));};\r\n        y.axis = d3.svg.axis().scale(y.scale).orient(conf.orient);\r\n\r\n        if(this.config.guides){\r\n            y.axis.tickSize(-plot.width);\r\n        }\r\n\r\n\r\n        var data = this.data;\r\n        plot.y.scale.domain([d3.min(data, plot.y.value)-1, d3.max(data, plot.y.value)+1]);\r\n    };\r\n\r\n    draw(){\r\n        this.drawAxisX();\r\n        this.drawAxisY();\r\n        this.update();\r\n    };\r\n\r\n    drawAxisX(){\r\n\r\n        \r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.x;\r\n        self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-x')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\r\n            .attr(\"transform\", \"translate(0,\" + plot.height + \")\")\r\n            .call(plot.x.axis)\r\n            .selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ (plot.width/2) +\",\"+ (self.config.margin.bottom) +\")\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"-1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    drawAxisY(){\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var axisConf = this.config.y;\r\n        self.svgG.selectOrAppend(\"g.\"+self.prefixClass('axis-y')+\".\"+self.prefixClass('axis')+(self.config.guides ? '' : '.'+self.prefixClass('no-guides')))\r\n            .call(plot.y.axis)\r\n            .selectOrAppend(\"text.\"+self.prefixClass('label'))\r\n            .attr(\"transform\", \"translate(\"+ -self.config.margin.left +\",\"+(plot.height/2)+\")rotate(-90)\")  // text is drawn off the screen top left, move down and out and rotate\r\n            .attr(\"dy\", \"1em\")\r\n            .style(\"text-anchor\", \"middle\")\r\n            .text(axisConf.label);\r\n    };\r\n\r\n    update(newData){\r\n        super.update(newData);\r\n\r\n        var self = this;\r\n        var plot = self.plot;\r\n        var data = this.data;\r\n        var dotClass = self.prefixClass('dot');\r\n        self.dotsContainerClass = self.prefixClass('dots-container');\r\n\r\n\r\n        var dotsContainer = self.svgG.selectOrAppend(\"g.\"+self.dotsContainerClass);\r\n\r\n        var dots = dotsContainer.selectAll('.'+dotClass)\r\n            .data(data);\r\n\r\n        dots.enter().append(\"circle\")\r\n            .attr(\"class\", dotClass);\r\n\r\n        var dotsT = dots;\r\n        if(self.config.transition){\r\n            dotsT = dots.transition();\r\n        }\r\n\r\n        dotsT.attr(\"r\", self.config.dot.radius)\r\n            .attr(\"cx\", plot.x.map)\r\n            .attr(\"cy\", plot.y.map);\r\n\r\n        if(plot.tooltip){\r\n            dots.on(\"mouseover\", function(d) {\r\n                plot.tooltip.transition()\r\n                    .duration(200)\r\n                    .style(\"opacity\", .9);\r\n                var html = \"(\" + plot.x.value(d) + \", \" +plot.y.value(d) + \")\";\r\n                var group = self.config.groups.value(d, self.config.groups.key);\r\n                if(group || group===0 ){\r\n                    html+=\"<br/>\";\r\n                    var label = self.config.groups.label;\r\n                    if(label){\r\n                        html+=label+\": \";\r\n                    }\r\n                    html+=group\r\n                }\r\n                plot.tooltip.html(html)\r\n                    .style(\"left\", (d3.event.pageX + 5) + \"px\")\r\n                    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n            })\r\n                .on(\"mouseout\", function(d) {\r\n                    plot.tooltip.transition()\r\n                        .duration(500)\r\n                        .style(\"opacity\", 0);\r\n                });\r\n        }\r\n\r\n        if(plot.dot.color){\r\n            dots.style(\"fill\", plot.dot.color)\r\n        }\r\n\r\n        dots.exit().remove();\r\n\r\n    };\r\n}\r\n","/*\n * https://gist.github.com/benrasmusen/1261977\n * NAME\n * \n * statistics-distributions.js - JavaScript library for calculating\n *   critical values and upper probabilities of common statistical\n *   distributions\n * \n * SYNOPSIS\n * \n * \n *   // Chi-squared-crit (2 degrees of freedom, 95th percentile = 0.05 level\n *   chisqrdistr(2, .05)\n *   \n *   // u-crit (95th percentile = 0.05 level)\n *   udistr(.05);\n *   \n *   // t-crit (1 degree of freedom, 99.5th percentile = 0.005 level) \n *   tdistr(1,.005);\n *   \n *   // F-crit (1 degree of freedom in numerator, 3 degrees of freedom \n *   //         in denominator, 99th percentile = 0.01 level)\n *   fdistr(1,3,.01);\n *   \n *   // upper probability of the u distribution (u = -0.85): Q(u) = 1-G(u)\n *   uprob(-0.85);\n *   \n *   // upper probability of the chi-square distribution\n *   // (3 degrees of freedom, chi-squared = 6.25): Q = 1-G\n *   chisqrprob(3,6.25);\n *   \n *   // upper probability of the t distribution\n *   // (3 degrees of freedom, t = 6.251): Q = 1-G\n *   tprob(3,6.251);\n *   \n *   // upper probability of the F distribution\n *   // (3 degrees of freedom in numerator, 5 degrees of freedom in\n *   //  denominator, F = 6.25): Q = 1-G\n *   fprob(3,5,.625);\n * \n * \n *  DESCRIPTION\n * \n * This library calculates percentage points (5 significant digits) of the u\n * (standard normal) distribution, the student's t distribution, the\n * chi-square distribution and the F distribution. It can also calculate the\n * upper probability (5 significant digits) of the u (standard normal), the\n * chi-square, the t and the F distribution.\n * \n * These critical values are needed to perform statistical tests, like the u\n * test, the t test, the F test and the chi-squared test, and to calculate\n * confidence intervals.\n * \n * If you are interested in more precise algorithms you could look at:\n *   StatLib: http://lib.stat.cmu.edu/apstat/ ; \n *   Applied Statistics Algorithms by Griffiths, P. and Hill, I.D.\n *   , Ellis Horwood: Chichester (1985)\n * \n * BUGS \n * \n * This port was produced from the Perl module Statistics::Distributions\n * that has had no bug reports in several years.  If you find a bug then\n * please double-check that JavaScript does not thing the numbers you are\n * passing in are strings.  (You can subtract 0 from them as you pass them\n * in so that \"5\" is properly understood to be 5.)  If you have passed in a\n * number then please contact the author\n * \n * AUTHOR\n * \n * Ben Tilly <btilly@gmail.com>\n * \n * Originl Perl version by Michael Kospach <mike.perl@gmx.at>\n * \n * Nice formating, simplification and bug repair by Matthias Trautner Kromann\n * <mtk@id.cbs.dk>\n * \n * COPYRIGHT \n * \n * Copyright 2008 Ben Tilly.\n * \n * This library is free software; you can redistribute it and/or modify it\n * under the same terms as Perl itself.  This means under either the Perl\n * Artistic License or the GPL v1 or later.\n */\n\nvar SIGNIFICANT = 5; // number of significant digits to be returned\n\nfunction chisqrdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\tif ($p <= 0 || $p > 1) {\n\t\tthrow(\"Invalid p: $p\\n\"); \n\t}\n\treturn precision_string(_subchisqr($n-0, $p-0));\n}\n\nfunction udistr ($p) {\n\tif ($p > 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subu($p-0));\n}\n\nexport function tdistr ($n, $p) {\n\tif ($n <= 0 || Math.abs($n) - Math.abs(integer($n)) != 0) {\n\t\tthrow(\"Invalid n: $n\\n\");\n\t}\n\tif ($p <= 0 || $p >= 1) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subt($n-0, $p-0));\n}\n\nfunction fdistr ($n, $m, $p) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t}\n\tif (($p<=0) || ($p>1)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\treturn precision_string(_subf($n-0, $m-0, $p-0));\n}\n\nfunction uprob ($x) {\n\treturn precision_string(_subuprob($x-0));\n}\n\nfunction chisqrprob ($n,$x) {\n\tif (($n <= 0) || ((Math.abs($n) - (Math.abs(integer($n)))) != 0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subchisqrprob($n-0, $x-0));\n}\n\nfunction tprob ($n, $x) {\n\tif (($n <= 0) || ((Math.abs($n) - Math.abs(integer($n))) !=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* degree of freedom */\n\t}\n\treturn precision_string(_subtprob($n-0, $x-0));\n}\n\nfunction fprob ($n, $m, $x) {\n\tif (($n<=0) || ((Math.abs($n)-(Math.abs(integer($n))))!=0)) {\n\t\tthrow(\"Invalid n: $n\\n\"); /* first degree of freedom */\n\t}\n\tif (($m<=0) || ((Math.abs($m)-(Math.abs(integer($m))))!=0)) {\n\t\tthrow(\"Invalid m: $m\\n\"); /* second degree of freedom */\n\t} \n\treturn precision_string(_subfprob($n-0, $m-0, $x-0));\n}\n\n\nfunction _subfprob ($n, $m, $x) {\n\tvar $p;\n\n\tif ($x<=0) {\n\t\t$p=1;\n\t} else if ($m % 2 == 0) {\n\t\tvar $z = $m / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $m - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($n + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = 1 - Math.pow((1 - $z), ($n / 2) * $a);\n\t} else if ($n % 2 == 0) {\n\t\tvar $z = $n * $x / ($m + $n * $x);\n\t\tvar $a = 1;\n\t\tfor (var $i = $n - 2; $i >= 2; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t}\n\t\t$p = Math.pow((1 - $z), ($m / 2)) * $a;\n\t} else {\n\t\tvar $y = Math.atan2(Math.sqrt($n * $x / $m), 1);\n\t\tvar $z = Math.pow(Math.sin($y), 2);\n\t\tvar $a = ($n == 1) ? 0 : 1;\n\t\tfor (var $i = $n - 2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($m + $i - 2) / $i * $z * $a;\n\t\t} \n\t\tvar $b = Math.PI;\n\t\tfor (var $i = 2; $i <= $m - 1; $i += 2) {\n\t\t\t$b *= ($i - 1) / $i;\n\t\t}\n\t\tvar $p1 = 2 / $b * Math.sin($y) * Math.pow(Math.cos($y), $m) * $a;\n\n\t\t$z = Math.pow(Math.cos($y), 2);\n\t\t$a = ($m == 1) ? 0 : 1;\n\t\tfor (var $i = $m-2; $i >= 3; $i -= 2) {\n\t\t\t$a = 1 + ($i - 1) / $i * $z * $a;\n\t\t}\n\t\t$p = max(0, $p1 + 1 - 2 * $y / Math.PI\n\t\t\t- 2 / Math.PI * Math.sin($y) * Math.cos($y) * $a);\n\t}\n\treturn $p;\n}\n\n\nfunction _subchisqrprob ($n,$x) {\n\tvar $p;\n\n\tif ($x <= 0) {\n\t\t$p = 1;\n\t} else if ($n > 100) {\n\t\t$p = _subuprob((Math.pow(($x / $n), 1/3)\n\t\t\t\t- (1 - 2/9/$n)) / Math.sqrt(2/9/$n));\n\t} else if ($x > 400) {\n\t\t$p = 0;\n\t} else {   \n\t\tvar $a;\n                var $i;\n                var $i1;\n\t\tif (($n % 2) != 0) {\n\t\t\t$p = 2 * _subuprob(Math.sqrt($x));\n\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t$i1 = 1;\n\t\t} else {\n\t\t\t$p = $a = Math.exp(-$x/2);\n\t\t\t$i1 = 2;\n\t\t}\n\n\t\tfor ($i = $i1; $i <= ($n-2); $i += 2) {\n\t\t\t$a *= $x / $i;\n\t\t\t$p += $a;\n\t\t}\n\t}\n\treturn $p;\n}\n\nfunction _subu ($p) {\n\tvar $y = -Math.log(4 * $p * (1 - $p));\n\tvar $x = Math.sqrt(\n\t\t$y * (1.570796288\n\t\t  + $y * (.03706987906\n\t\t  \t+ $y * (-.8364353589E-3\n\t\t\t  + $y *(-.2250947176E-3\n\t\t\t  \t+ $y * (.6841218299E-5\n\t\t\t\t  + $y * (0.5824238515E-5\n\t\t\t\t\t+ $y * (-.104527497E-5\n\t\t\t\t\t  + $y * (.8360937017E-7\n\t\t\t\t\t\t+ $y * (-.3231081277E-8\n\t\t\t\t\t\t  + $y * (.3657763036E-10\n\t\t\t\t\t\t\t+ $y *.6936233982E-12)))))))))));\n\tif ($p>.5)\n                $x = -$x;\n\treturn $x;\n}\n\nfunction _subuprob ($x) {\n\tvar $p = 0; /* if ($absx > 100) */\n\tvar $absx = Math.abs($x);\n\n\tif ($absx < 1.9) {\n\t\t$p = Math.pow((1 +\n\t\t\t$absx * (.049867347\n\t\t\t  + $absx * (.0211410061\n\t\t\t  \t+ $absx * (.0032776263\n\t\t\t\t  + $absx * (.0000380036\n\t\t\t\t\t+ $absx * (.0000488906\n\t\t\t\t\t  + $absx * .000005383)))))), -16)/2;\n\t} else if ($absx <= 100) {\n\t\tfor (var $i = 18; $i >= 1; $i--) {\n\t\t\t$p = $i / ($absx + $p);\n\t\t}\n\t\t$p = Math.exp(-.5 * $absx * $absx) \n\t\t\t/ Math.sqrt(2 * Math.PI) / ($absx + $p);\n\t}\n\n\tif ($x<0)\n        \t$p = 1 - $p;\n\treturn $p;\n}\n\n   \nfunction _subt ($n, $p) {\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 0.5) {\n\t\treturn 0;\n\t} else if ($p < 0.5) {\n\t\treturn - _subt($n, 1 - $p);\n\t}\n\n\tvar $u = _subu($p);\n\tvar $u2 = Math.pow($u, 2);\n\n\tvar $a = ($u2 + 1) / 4;\n\tvar $b = ((5 * $u2 + 16) * $u2 + 3) / 96;\n\tvar $c = (((3 * $u2 + 19) * $u2 + 17) * $u2 - 15) / 384;\n\tvar $d = ((((79 * $u2 + 776) * $u2 + 1482) * $u2 - 1920) * $u2 - 945) \n\t\t\t\t/ 92160;\n\tvar $e = (((((27 * $u2 + 339) * $u2 + 930) * $u2 - 1782) * $u2 - 765) * $u2\n\t\t\t+ 17955) / 368640;\n\n\tvar $x = $u * (1 + ($a + ($b + ($c + ($d + $e / $n) / $n) / $n) / $n) / $n);\n\n\tif ($n <= Math.pow(log10($p), 2) + 3) {\n\t\tvar $round;\n\t\tdo { \n\t\t\tvar $p1 = _subtprob($n, $x);\n\t\t\tvar $n1 = $n + 1;\n\t\t\tvar $delta = ($p1 - $p) \n\t\t\t\t/ Math.exp(($n1 * Math.log($n1 / ($n + $x * $x)) \n\t\t\t\t\t+ Math.log($n/$n1/2/Math.PI) - 1 \n\t\t\t\t\t+ (1/$n1 - 1/$n) / 6) / 2);\n\t\t\t$x += $delta;\n\t\t\t$round = round_to_precision($delta, Math.abs(integer(log10(Math.abs($x))-4)));\n\t\t} while (($x) && ($round != 0));\n\t}\n\treturn $x;\n}\n\nfunction _subtprob ($n, $x) {\n\n\tvar $a;\n        var $b;\n\tvar $w = Math.atan2($x / Math.sqrt($n), 1);\n\tvar $z = Math.pow(Math.cos($w), 2);\n\tvar $y = 1;\n\n\tfor (var $i = $n-2; $i >= 2; $i -= 2) {\n\t\t$y = 1 + ($i-1) / $i * $z * $y;\n\t} \n\n\tif ($n % 2 == 0) {\n\t\t$a = Math.sin($w)/2;\n\t\t$b = .5;\n\t} else {\n\t\t$a = ($n == 1) ? 0 : Math.sin($w)*Math.cos($w)/Math.PI;\n\t\t$b= .5 + $w/Math.PI;\n\t}\n\treturn max(0, 1 - $b - $a * $y);\n}\n\nfunction _subf ($n, $m, $p) {\n\tvar $x;\n\n\tif ($p >= 1 || $p <= 0) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t}\n\n\tif ($p == 1) {\n\t\t$x = 0;\n\t} else if ($m == 1) {\n\t\t$x = 1 / Math.pow(_subt($n, 0.5 - $p / 2), 2);\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subt($m, $p/2), 2);\n\t} else if ($m == 2) {\n\t\tvar $u = _subchisqr($m, 1 - $p);\n\t\tvar $a = $m - 2;\n\t\t$x = 1 / ($u / $m * (1 +\n\t\t\t(($u - $a) / 2 +\n\t\t\t\t(((4 * $u - 11 * $a) * $u + $a * (7 * $m - 10)) / 24 +\n\t\t\t\t\t(((2 * $u - 10 * $a) * $u + $a * (17 * $m - 26)) * $u\n\t\t\t\t\t\t- $a * $a * (9 * $m - 6)\n\t\t\t\t\t)/48/$n\n\t\t\t\t)/$n\n\t\t\t)/$n));\n\t} else if ($n > $m) {\n\t\t$x = 1 / _subf2($m, $n, 1 - $p)\n\t} else {\n\t\t$x = _subf2($n, $m, $p)\n\t}\n\treturn $x;\n}\n\nfunction _subf2 ($n, $m, $p) {\n\tvar $u = _subchisqr($n, $p);\n\tvar $n2 = $n - 2;\n\tvar $x = $u / $n * \n\t\t(1 + \n\t\t\t(($u - $n2) / 2 + \n\t\t\t\t(((4 * $u - 11 * $n2) * $u + $n2 * (7 * $n - 10)) / 24 + \n\t\t\t\t\t(((2 * $u - 10 * $n2) * $u + $n2 * (17 * $n - 26)) * $u \n\t\t\t\t\t\t- $n2 * $n2 * (9 * $n - 6)) / 48 / $m) / $m) / $m);\n\tvar $delta;\n\tdo {\n\t\tvar $z = Math.exp(\n\t\t\t(($n+$m) * Math.log(($n+$m) / ($n * $x + $m)) \n\t\t\t\t+ ($n - 2) * Math.log($x)\n\t\t\t\t+ Math.log($n * $m / ($n+$m))\n\t\t\t\t- Math.log(4 * Math.PI)\n\t\t\t\t- (1/$n  + 1/$m - 1/($n+$m))/6\n\t\t\t)/2);\n\t\t$delta = (_subfprob($n, $m, $x) - $p) / $z;\n\t\t$x += $delta;\n\t} while (Math.abs($delta)>3e-4);\n\treturn $x;\n}\n\nfunction _subchisqr ($n, $p) {\n\tvar $x;\n\n\tif (($p > 1) || ($p <= 0)) {\n\t\tthrow(\"Invalid p: $p\\n\");\n\t} else if ($p == 1){\n\t\t$x = 0;\n\t} else if ($n == 1) {\n\t\t$x = Math.pow(_subu($p / 2), 2);\n\t} else if ($n == 2) {\n\t\t$x = -2 * Math.log($p);\n\t} else {\n\t\tvar $u = _subu($p);\n\t\tvar $u2 = $u * $u;\n\n\t\t$x = max(0, $n + Math.sqrt(2 * $n) * $u \n\t\t\t+ 2/3 * ($u2 - 1)\n\t\t\t+ $u * ($u2 - 7) / 9 / Math.sqrt(2 * $n)\n\t\t\t- 2/405 / $n * ($u2 * (3 *$u2 + 7) - 16));\n\n\t\tif ($n <= 100) {\n\t\t\tvar $x0;\n                        var $p1;\n                        var $z;\n\t\t\tdo {\n\t\t\t\t$x0 = $x;\n\t\t\t\tif ($x < 0) {\n\t\t\t\t\t$p1 = 1;\n\t\t\t\t} else if ($n>100) {\n\t\t\t\t\t$p1 = _subuprob((Math.pow(($x / $n), (1/3)) - (1 - 2/9/$n))\n\t\t\t\t\t\t/ Math.sqrt(2/9/$n));\n\t\t\t\t} else if ($x>400) {\n\t\t\t\t\t$p1 = 0;\n\t\t\t\t} else {\n\t\t\t\t\tvar $i0\n                                        var $a;\n\t\t\t\t\tif (($n % 2) != 0) {\n\t\t\t\t\t\t$p1 = 2 * _subuprob(Math.sqrt($x));\n\t\t\t\t\t\t$a = Math.sqrt(2/Math.PI) * Math.exp(-$x/2) / Math.sqrt($x);\n\t\t\t\t\t\t$i0 = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$p1 = $a = Math.exp(-$x/2);\n\t\t\t\t\t\t$i0 = 2;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var $i = $i0; $i <= $n-2; $i += 2) {\n\t\t\t\t\t\t$a *= $x / $i;\n\t\t\t\t\t\t$p1 += $a;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$z = Math.exp((($n-1) * Math.log($x/$n) - Math.log(4*Math.PI*$x) \n\t\t\t\t\t+ $n - $x - 1/$n/6) / 2);\n\t\t\t\t$x += ($p1 - $p) / $z;\n\t\t\t\t$x = round_to_precision($x, 5);\n\t\t\t} while (($n < 31) && (Math.abs($x0 - $x) > 1e-4));\n\t\t}\n\t}\n\treturn $x;\n}\n\nfunction log10 ($n) {\n\treturn Math.log($n) / Math.log(10);\n}\n \nfunction max () {\n\tvar $max = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($max < arguments[$i])\n                        $max = arguments[$i];\n\t}\t\n\treturn $max;\n}\n\nfunction min () {\n\tvar $min = arguments[0];\n\tfor (var $i = 0; i < arguments.length; i++) {\n                if ($min > arguments[$i])\n                        $min = arguments[$i];\n\t}\n\treturn $min;\n}\n\nfunction precision ($x) {\n\treturn Math.abs(integer(log10(Math.abs($x)) - SIGNIFICANT));\n}\n\nfunction precision_string ($x) {\n\tif ($x) {\n\t\treturn round_to_precision($x, precision($x));\n\t} else {\n\t\treturn \"0\";\n\t}\n}\n\nfunction round_to_precision ($x, $p) {\n        $x = $x * Math.pow(10, $p);\n        $x = Math.round($x);\n        return $x / Math.pow(10, $p);\n}\n\nfunction integer ($i) {\n        if ($i > 0)\n                return Math.floor($i);\n        else\n                return Math.ceil($i);\n}","import {tdistr} from \"./statistics-distributions\"\r\n\r\nvar su = module.exports.StatisticsUtils ={};\r\nsu.sampleCorrelation = require('../bower_components/simple-statistics/src/sample_correlation');\r\nsu.linearRegression = require('../bower_components/simple-statistics/src/linear_regression');\r\nsu.linearRegressionLine = require('../bower_components/simple-statistics/src/linear_regression_line');\r\nsu.errorFunction = require('../bower_components/simple-statistics/src/error_function');\r\nsu.standardDeviation = require('../bower_components/simple-statistics/src/standard_deviation');\r\nsu.sampleStandardDeviation = require('../bower_components/simple-statistics/src/sample_standard_deviation');\r\nsu.variance = require('../bower_components/simple-statistics/src/variance');\r\nsu.mean = require('../bower_components/simple-statistics/src/mean');\r\nsu.zScore = require('../bower_components/simple-statistics/src/z_score');\r\nsu.standardError= arr => Math.sqrt(su.variance(arr)/(arr.length-1));\r\n\r\n\r\nsu.tValue= (degreesOfFreedom, criticalProbability) => { //as in http://stattrek.com/online-calculator/t-distribution.aspx\r\n    return tdistr(degreesOfFreedom, criticalProbability);\r\n};","export class Utils {\r\n    // usage example deepExtend({}, objA, objB); => should work similar to $.extend(true, {}, objA, objB);\r\n    static deepExtend(out) {\r\n\r\n        var utils = this;\r\n        var emptyOut = {};\r\n\r\n\r\n        if (!out && arguments.length > 1 && Array.isArray(arguments[1])) {\r\n            out = [];\r\n        }\r\n        out = out || {};\r\n\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var source = arguments[i];\r\n            if (!source)\r\n                continue;\r\n\r\n            for (var key in source) {\r\n                if (!source.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                var isArray = Array.isArray(out[key]);\r\n                var isObject = utils.isObject(out[key]);\r\n                var srcObj = utils.isObject(source[key]);\r\n\r\n                if (isObject && !isArray && srcObj) {\r\n                    utils.deepExtend(out[key], source[key]);\r\n                } else {\r\n                    out[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    static mergeDeep(target, source) {\r\n        let output = Object.assign({}, target);\r\n        if (Utils.isObjectNotArray(target) && Utils.isObjectNotArray(source)) {\r\n            Object.keys(source).forEach(key => {\r\n                if (Utils.isObjectNotArray(source[key])) {\r\n                    if (!(key in target))\r\n                        Object.assign(output, { [key]: source[key] });\r\n                    else\r\n                        output[key] = Utils.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n            });\r\n        }\r\n        return output;\r\n    }\r\n\r\n    static cross(a, b) {\r\n        var c = [], n = a.length, m = b.length, i, j;\r\n        for (i = -1; ++i < n;) for (j = -1; ++j < m;) c.push({x: a[i], i: i, y: b[j], j: j});\r\n        return c;\r\n    };\r\n\r\n    static inferVariables(data, groupKey, includeGroup) {\r\n        var res = [];\r\n        if (data.length) {\r\n            var d = data[0];\r\n            if (d instanceof Array) {\r\n                res=  d.map(function (v, i) {\r\n                    return i;\r\n                });\r\n            }else if (typeof d === 'object'){\r\n\r\n                for (var prop in d) {\r\n                    if(!d.hasOwnProperty(prop)) continue;\r\n\r\n                    res.push(prop);\r\n                }\r\n            }\r\n        }\r\n        if(!includeGroup){\r\n            var index = res.indexOf(groupKey);\r\n            if (index > -1) {\r\n                res.splice(index, 1);\r\n            }\r\n        }\r\n        return res\r\n    };\r\n    static isObjectNotArray(item) {\r\n        return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n    };\r\n    static isObject(a) {\r\n        return a !== null && typeof a === 'object';\r\n    };\r\n\r\n    static isNumber(a) {\r\n        return !isNaN(a) && typeof a === 'number';\r\n    };\r\n\r\n    static isFunction(a) {\r\n        return typeof a === 'function';\r\n    };\r\n\r\n    static insertOrAppendSelector(parent, selector, operation, before ) {\r\n        var selectorParts = selector.split(/([\\.\\#])/);\r\n        var element = parent[operation](selectorParts.shift(), before);//\":first-child\"\r\n        while (selectorParts.length > 1) {\r\n            var selectorModifier = selectorParts.shift();\r\n            var selectorItem = selectorParts.shift();\r\n            if (selectorModifier === \".\") {\r\n                element = element.classed(selectorItem, true);\r\n            } else if (selectorModifier === \"#\") {\r\n                element = element.attr('id', selectorItem);\r\n            }\r\n        }\r\n        return element;\r\n    }\r\n\r\n    static insertSelector(parent, selector, before) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"insert\", before);\r\n    }\r\n\r\n    static appendSelector(parent, selector) {\r\n        return Utils.insertOrAppendSelector(parent, selector, \"append\");\r\n    }\r\n\r\n    static selectOrAppend(parent, selector, element) {\r\n        var selection = parent.select(selector);\r\n        if(selection.empty()){\r\n            if(element){\r\n                return parent.append(element);\r\n            }\r\n            return Utils.appendSelector(parent, selector);\r\n\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static selectOrInsert(parent, selector, before) {\r\n        var selection = parent.select(selector);\r\n        if(selection.empty()){\r\n            return Utils.insertSelector(parent, selector, before);\r\n        }\r\n        return selection;\r\n    };\r\n\r\n    static linearGradient(svg, gradientId, range, x1, y1, x2, y2){\r\n        var defs = Utils.selectOrAppend(svg, \"defs\");\r\n        var linearGradient = defs.append(\"linearGradient\")\r\n            .attr(\"id\", gradientId);\r\n\r\n        linearGradient\r\n            .attr(\"x1\", x1+\"%\")\r\n            .attr(\"y1\", y1+\"%\")\r\n            .attr(\"x2\", x2+\"%\")\r\n            .attr(\"y2\", y2+\"%\");\r\n\r\n        //Append multiple color stops by using D3's data/enter step\r\n        var stops = linearGradient.selectAll(\"stop\")\r\n            .data( range );\r\n\r\n        stops.enter().append(\"stop\");\r\n\r\n        stops.attr(\"offset\", (d,i) => i/(range.length-1) )\r\n            .attr(\"stop-color\", d => d );\r\n\r\n        stops.exit().remove();\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}